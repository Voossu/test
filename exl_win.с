typedef unsigned char   undefined;

typedef unsigned char    bool;
typedef unsigned char    byte;
typedef unsigned int    dword;
float10
typedef pointer32 ImageBaseOffset32;

typedef unsigned char    uchar;
typedef unsigned int    uint;
typedef unsigned long    ulong;
typedef unsigned char    undefined1;
typedef unsigned short    undefined2;
typedef unsigned int    undefined4;
typedef unsigned long long    undefined8;
typedef unsigned short    ushort;
typedef short    wchar_t;
typedef unsigned short    word;
typedef union IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion;

typedef struct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct;

struct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct {
    dword OffsetToDirectory:31;
    dword DataIsDirectory:1;
};

union IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion {
    dword OffsetToData;
    struct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct;
};

typedef unsigned short    wchar16;
typedef struct tagMENUITEMINFOA tagMENUITEMINFOA, *PtagMENUITEMINFOA;

typedef struct tagMENUITEMINFOA MENUITEMINFOA;

typedef uint UINT;

typedef struct HMENU__ HMENU__, *PHMENU__;

typedef struct HMENU__ *HMENU;

typedef struct HBITMAP__ HBITMAP__, *PHBITMAP__;

typedef struct HBITMAP__ *HBITMAP;

typedef ulong ULONG_PTR;

typedef char CHAR;

typedef CHAR *LPSTR;

struct tagMENUITEMINFOA {
    UINT cbSize;
    UINT fMask;
    UINT fType;
    UINT fState;
    UINT wID;
    HMENU hSubMenu;
    HBITMAP hbmpChecked;
    HBITMAP hbmpUnchecked;
    ULONG_PTR dwItemData;
    LPSTR dwTypeData;
    UINT cch;
    HBITMAP hbmpItem;
};

struct HMENU__ {
    int unused;
};

struct HBITMAP__ {
    int unused;
};

typedef struct tagWINDOWPLACEMENT tagWINDOWPLACEMENT, *PtagWINDOWPLACEMENT;

typedef struct tagWINDOWPLACEMENT WINDOWPLACEMENT;

typedef struct tagPOINT tagPOINT, *PtagPOINT;

typedef struct tagPOINT POINT;

typedef struct tagRECT tagRECT, *PtagRECT;

typedef struct tagRECT RECT;

typedef long LONG;

struct tagPOINT {
    LONG x;
    LONG y;
};

struct tagRECT {
    LONG left;
    LONG top;
    LONG right;
    LONG bottom;
};

struct tagWINDOWPLACEMENT {
    UINT length;
    UINT flags;
    UINT showCmd;
    POINT ptMinPosition;
    POINT ptMaxPosition;
    RECT rcNormalPosition;
};

typedef struct tagWNDCLASSA tagWNDCLASSA, *PtagWNDCLASSA;

typedef long LONG_PTR;

typedef LONG_PTR LRESULT;

typedef struct HWND__ HWND__, *PHWND__;

typedef struct HWND__ *HWND;

typedef uint UINT_PTR;

typedef UINT_PTR WPARAM;

typedef LONG_PTR LPARAM;

typedef LRESULT (*WNDPROC)(HWND, UINT, WPARAM, LPARAM);

typedef struct HINSTANCE__ HINSTANCE__, *PHINSTANCE__;

typedef struct HINSTANCE__ *HINSTANCE;

typedef struct HICON__ HICON__, *PHICON__;

typedef struct HICON__ *HICON;

typedef HICON HCURSOR;

typedef struct HBRUSH__ HBRUSH__, *PHBRUSH__;

typedef struct HBRUSH__ *HBRUSH;

typedef CHAR *LPCSTR;

struct HBRUSH__ {
    int unused;
};

struct tagWNDCLASSA {
    UINT style;
    WNDPROC lpfnWndProc;
    int cbClsExtra;
    int cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCSTR lpszMenuName;
    LPCSTR lpszClassName;
};

struct HICON__ {
    int unused;
};

struct HINSTANCE__ {
    int unused;
};

struct HWND__ {
    int unused;
};

typedef struct tagMSG tagMSG, *PtagMSG;

typedef struct tagMSG MSG;

typedef ulong DWORD;

struct tagMSG {
    HWND hwnd;
    UINT message;
    WPARAM wParam;
    LPARAM lParam;
    DWORD time;
    POINT pt;
};

typedef struct tagMSG *LPMSG;

typedef struct _ICONINFO _ICONINFO, *P_ICONINFO;

typedef struct _ICONINFO ICONINFO;

typedef int BOOL;

struct _ICONINFO {
    BOOL fIcon;
    DWORD xHotspot;
    DWORD yHotspot;
    HBITMAP hbmMask;
    HBITMAP hbmColor;
};

typedef MENUITEMINFOA *LPCMENUITEMINFOA;

typedef struct tagSCROLLINFO tagSCROLLINFO, *PtagSCROLLINFO;

struct tagSCROLLINFO {
    UINT cbSize;
    UINT fMask;
    int nMin;
    int nMax;
    UINT nPage;
    int nPos;
    int nTrackPos;
};

typedef struct tagSCROLLINFO SCROLLINFO;

typedef struct tagMENUITEMINFOA *LPMENUITEMINFOA;

typedef LRESULT (*HOOKPROC)(int, WPARAM, LPARAM);

typedef SCROLLINFO *LPCSCROLLINFO;

typedef struct tagWNDCLASSA WNDCLASSA;

typedef struct tagPAINTSTRUCT tagPAINTSTRUCT, *PtagPAINTSTRUCT;

typedef struct tagPAINTSTRUCT *LPPAINTSTRUCT;

typedef struct HDC__ HDC__, *PHDC__;

typedef struct HDC__ *HDC;

typedef uchar BYTE;

struct HDC__ {
    int unused;
};

struct tagPAINTSTRUCT {
    HDC hdc;
    BOOL fErase;
    RECT rcPaint;
    BOOL fRestore;
    BOOL fIncUpdate;
    BYTE rgbReserved[32];
};

typedef ICONINFO *PICONINFO;

typedef struct tagPAINTSTRUCT PAINTSTRUCT;

typedef struct tagSCROLLINFO *LPSCROLLINFO;

typedef BOOL (*WNDENUMPROC)(HWND, LPARAM);

typedef void (*TIMERPROC)(HWND, UINT, UINT_PTR, DWORD);

typedef struct tagWNDCLASSA *LPWNDCLASSA;

typedef struct tagTEXTMETRICA tagTEXTMETRICA, *PtagTEXTMETRICA;

struct tagTEXTMETRICA {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    BYTE tmFirstChar;
    BYTE tmLastChar;
    BYTE tmDefaultChar;
    BYTE tmBreakChar;
    BYTE tmItalic;
    BYTE tmUnderlined;
    BYTE tmStruckOut;
    BYTE tmPitchAndFamily;
    BYTE tmCharSet;
};

typedef struct tagLOGPEN tagLOGPEN, *PtagLOGPEN;

typedef struct tagLOGPEN LOGPEN;

typedef DWORD COLORREF;

struct tagLOGPEN {
    UINT lopnStyle;
    POINT lopnWidth;
    COLORREF lopnColor;
};

typedef struct _devicemodeA _devicemodeA, *P_devicemodeA;

typedef ushort WORD;

typedef union _union_655 _union_655, *P_union_655;

typedef union _union_658 _union_658, *P_union_658;

typedef struct _struct_656 _struct_656, *P_struct_656;

typedef struct _struct_657 _struct_657, *P_struct_657;

typedef struct _POINTL _POINTL, *P_POINTL;

typedef struct _POINTL POINTL;

struct _POINTL {
    LONG x;
    LONG y;
};

struct _struct_657 {
    POINTL dmPosition;
    DWORD dmDisplayOrientation;
    DWORD dmDisplayFixedOutput;
};

struct _struct_656 {
    short dmOrientation;
    short dmPaperSize;
    short dmPaperLength;
    short dmPaperWidth;
    short dmScale;
    short dmCopies;
    short dmDefaultSource;
    short dmPrintQuality;
};

union _union_655 {
    struct _struct_656 field0;
    struct _struct_657 field1;
};

union _union_658 {
    DWORD dmDisplayFlags;
    DWORD dmNup;
};

struct _devicemodeA {
    BYTE dmDeviceName[32];
    WORD dmSpecVersion;
    WORD dmDriverVersion;
    WORD dmSize;
    WORD dmDriverExtra;
    DWORD dmFields;
    union _union_655 field6_0x2c;
    short dmColor;
    short dmDuplex;
    short dmYResolution;
    short dmTTOption;
    short dmCollate;
    BYTE dmFormName[32];
    WORD dmLogPixels;
    DWORD dmBitsPerPel;
    DWORD dmPelsWidth;
    DWORD dmPelsHeight;
    union _union_658 field17_0x74;
    DWORD dmDisplayFrequency;
    DWORD dmICMMethod;
    DWORD dmICMIntent;
    DWORD dmMediaType;
    DWORD dmDitherType;
    DWORD dmReserved1;
    DWORD dmReserved2;
    DWORD dmPanningWidth;
    DWORD dmPanningHeight;
};

typedef struct tagENHMETAHEADER tagENHMETAHEADER, *PtagENHMETAHEADER;

typedef struct tagENHMETAHEADER *LPENHMETAHEADER;

typedef struct _RECTL _RECTL, *P_RECTL;

typedef struct _RECTL RECTL;

typedef struct tagSIZE tagSIZE, *PtagSIZE;

typedef struct tagSIZE SIZE;

typedef SIZE SIZEL;

struct tagSIZE {
    LONG cx;
    LONG cy;
};

struct _RECTL {
    LONG left;
    LONG top;
    LONG right;
    LONG bottom;
};

struct tagENHMETAHEADER {
    DWORD iType;
    DWORD nSize;
    RECTL rclBounds;
    RECTL rclFrame;
    DWORD dSignature;
    DWORD nVersion;
    DWORD nBytes;
    DWORD nRecords;
    WORD nHandles;
    WORD sReserved;
    DWORD nDescription;
    DWORD offDescription;
    DWORD nPalEntries;
    SIZEL szlDevice;
    SIZEL szlMillimeters;
    DWORD cbPixelFormat;
    DWORD offPixelFormat;
    DWORD bOpenGL;
    SIZEL szlMicrometers;
};

typedef struct _devicemodeA *PDEVMODEA;

typedef struct tagPALETTEENTRY tagPALETTEENTRY, *PtagPALETTEENTRY;

struct tagPALETTEENTRY {
    BYTE peRed;
    BYTE peGreen;
    BYTE peBlue;
    BYTE peFlags;
};

typedef struct tagLOGPALETTE tagLOGPALETTE, *PtagLOGPALETTE;

typedef struct tagLOGPALETTE LOGPALETTE;

typedef struct tagPALETTEENTRY PALETTEENTRY;

struct tagLOGPALETTE {
    WORD palVersion;
    WORD palNumEntries;
    PALETTEENTRY palPalEntry[1];
};

typedef struct _devicemodeA *LPDEVMODEA;

typedef struct tagLOGBRUSH tagLOGBRUSH, *PtagLOGBRUSH;

typedef struct tagLOGBRUSH LOGBRUSH;

struct tagLOGBRUSH {
    UINT lbStyle;
    COLORREF lbColor;
    ULONG_PTR lbHatch;
};

typedef struct tagLOGFONTA tagLOGFONTA, *PtagLOGFONTA;

typedef struct tagLOGFONTA LOGFONTA;

struct tagLOGFONTA {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    BYTE lfItalic;
    BYTE lfUnderline;
    BYTE lfStrikeOut;
    BYTE lfCharSet;
    BYTE lfOutPrecision;
    BYTE lfClipPrecision;
    BYTE lfQuality;
    BYTE lfPitchAndFamily;
    CHAR lfFaceName[32];
};

typedef struct _DOCINFOA _DOCINFOA, *P_DOCINFOA;

struct _DOCINFOA {
    int cbSize;
    LPCSTR lpszDocName;
    LPCSTR lpszOutput;
    LPCSTR lpszDatatype;
    DWORD fwType;
};

typedef struct _devicemodeA DEVMODEA;

typedef struct tagTEXTMETRICA *LPTEXTMETRICA;

typedef struct tagBITMAPINFOHEADER tagBITMAPINFOHEADER, *PtagBITMAPINFOHEADER;

typedef struct tagBITMAPINFOHEADER BITMAPINFOHEADER;

struct tagBITMAPINFOHEADER {
    DWORD biSize;
    LONG biWidth;
    LONG biHeight;
    WORD biPlanes;
    WORD biBitCount;
    DWORD biCompression;
    DWORD biSizeImage;
    LONG biXPelsPerMeter;
    LONG biYPelsPerMeter;
    DWORD biClrUsed;
    DWORD biClrImportant;
};

typedef struct tagBITMAPINFO tagBITMAPINFO, *PtagBITMAPINFO;

typedef struct tagRGBQUAD tagRGBQUAD, *PtagRGBQUAD;

typedef struct tagRGBQUAD RGBQUAD;

struct tagRGBQUAD {
    BYTE rgbBlue;
    BYTE rgbGreen;
    BYTE rgbRed;
    BYTE rgbReserved;
};

struct tagBITMAPINFO {
    BITMAPINFOHEADER bmiHeader;
    RGBQUAD bmiColors[1];
};

typedef struct _DOCINFOA DOCINFOA;

typedef BOOL (*ABORTPROC)(HDC, int);

typedef struct tagMETAFILEPICT tagMETAFILEPICT, *PtagMETAFILEPICT;

typedef struct tagMETAFILEPICT METAFILEPICT;

typedef struct HMETAFILE__ HMETAFILE__, *PHMETAFILE__;

typedef struct HMETAFILE__ *HMETAFILE;

struct tagMETAFILEPICT {
    LONG mm;
    LONG xExt;
    LONG yExt;
    HMETAFILE hMF;
};

struct HMETAFILE__ {
    int unused;
};

typedef struct tagBITMAPINFO BITMAPINFO;

typedef struct tagBITMAPINFO *LPBITMAPINFO;

typedef struct tagPALETTEENTRY *LPPALETTEENTRY;

typedef struct _GUID _GUID, *P_GUID;

struct _GUID {
    ulong Data1;
    ushort Data2;
    ushort Data3;
    uchar Data4[8];
};

typedef struct _GUID GUID;

typedef GUID IID;

typedef GUID CLSID;

typedef struct _cpinfo _cpinfo, *P_cpinfo;

struct _cpinfo {
    UINT MaxCharSize;
    BYTE DefaultChar[2];
    BYTE LeadByte[12];
};

typedef BOOL (*CALINFO_ENUMPROCA)(LPSTR);

typedef struct _cpinfo *LPCPINFO;

typedef DWORD LCTYPE;

typedef DWORD CALID;

typedef DWORD CALTYPE;

typedef struct _SYSTEM_INFO _SYSTEM_INFO, *P_SYSTEM_INFO;

typedef struct _SYSTEM_INFO *LPSYSTEM_INFO;

typedef union _union_530 _union_530, *P_union_530;

typedef void *LPVOID;

typedef ULONG_PTR DWORD_PTR;

typedef struct _struct_531 _struct_531, *P_struct_531;

struct _struct_531 {
    WORD wProcessorArchitecture;
    WORD wReserved;
};

union _union_530 {
    DWORD dwOemId;
    struct _struct_531 s;
};

struct _SYSTEM_INFO {
    union _union_530 u;
    DWORD dwPageSize;
    LPVOID lpMinimumApplicationAddress;
    LPVOID lpMaximumApplicationAddress;
    DWORD_PTR dwActiveProcessorMask;
    DWORD dwNumberOfProcessors;
    DWORD dwProcessorType;
    DWORD dwAllocationGranularity;
    WORD wProcessorLevel;
    WORD wProcessorRevision;
};

typedef struct _OVERLAPPED _OVERLAPPED, *P_OVERLAPPED;

typedef union _union_518 _union_518, *P_union_518;

typedef void *HANDLE;

typedef struct _struct_519 _struct_519, *P_struct_519;

typedef void *PVOID;

struct _struct_519 {
    DWORD Offset;
    DWORD OffsetHigh;
};

union _union_518 {
    struct _struct_519 s;
    PVOID Pointer;
};

struct _OVERLAPPED {
    ULONG_PTR Internal;
    ULONG_PTR InternalHigh;
    union _union_518 u;
    HANDLE hEvent;
};

typedef struct _SECURITY_ATTRIBUTES _SECURITY_ATTRIBUTES, *P_SECURITY_ATTRIBUTES;

struct _SECURITY_ATTRIBUTES {
    DWORD nLength;
    LPVOID lpSecurityDescriptor;
    BOOL bInheritHandle;
};

typedef struct _SYSTEMTIME _SYSTEMTIME, *P_SYSTEMTIME;

typedef struct _SYSTEMTIME SYSTEMTIME;

struct _SYSTEMTIME {
    WORD wYear;
    WORD wMonth;
    WORD wDayOfWeek;
    WORD wDay;
    WORD wHour;
    WORD wMinute;
    WORD wSecond;
    WORD wMilliseconds;
};

typedef struct _WIN32_FIND_DATAA _WIN32_FIND_DATAA, *P_WIN32_FIND_DATAA;

typedef struct _FILETIME _FILETIME, *P_FILETIME;

typedef struct _FILETIME FILETIME;

struct _FILETIME {
    DWORD dwLowDateTime;
    DWORD dwHighDateTime;
};

struct _WIN32_FIND_DATAA {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD dwReserved0;
    DWORD dwReserved1;
    CHAR cFileName[260];
    CHAR cAlternateFileName[14];
};

typedef DWORD (*PTHREAD_START_ROUTINE)(LPVOID);

typedef PTHREAD_START_ROUTINE LPTHREAD_START_ROUTINE;

typedef struct _OVERLAPPED *LPOVERLAPPED;

typedef struct _SECURITY_ATTRIBUTES *LPSECURITY_ATTRIBUTES;

typedef struct _STARTUPINFOA _STARTUPINFOA, *P_STARTUPINFOA;

typedef BYTE *LPBYTE;

struct _STARTUPINFOA {
    DWORD cb;
    LPSTR lpReserved;
    LPSTR lpDesktop;
    LPSTR lpTitle;
    DWORD dwX;
    DWORD dwY;
    DWORD dwXSize;
    DWORD dwYSize;
    DWORD dwXCountChars;
    DWORD dwYCountChars;
    DWORD dwFillAttribute;
    DWORD dwFlags;
    WORD wShowWindow;
    WORD cbReserved2;
    LPBYTE lpReserved2;
    HANDLE hStdInput;
    HANDLE hStdOutput;
    HANDLE hStdError;
};

typedef struct _WIN32_FIND_DATAA *LPWIN32_FIND_DATAA;

typedef struct _STARTUPINFOA *LPSTARTUPINFOA;

typedef struct _RTL_CRITICAL_SECTION _RTL_CRITICAL_SECTION, *P_RTL_CRITICAL_SECTION;

typedef struct _RTL_CRITICAL_SECTION *PRTL_CRITICAL_SECTION;

typedef PRTL_CRITICAL_SECTION LPCRITICAL_SECTION;

typedef struct _RTL_CRITICAL_SECTION_DEBUG _RTL_CRITICAL_SECTION_DEBUG, *P_RTL_CRITICAL_SECTION_DEBUG;

typedef struct _RTL_CRITICAL_SECTION_DEBUG *PRTL_CRITICAL_SECTION_DEBUG;

typedef struct _LIST_ENTRY _LIST_ENTRY, *P_LIST_ENTRY;

typedef struct _LIST_ENTRY LIST_ENTRY;

struct _RTL_CRITICAL_SECTION {
    PRTL_CRITICAL_SECTION_DEBUG DebugInfo;
    LONG LockCount;
    LONG RecursionCount;
    HANDLE OwningThread;
    HANDLE LockSemaphore;
    ULONG_PTR SpinCount;
};

struct _LIST_ENTRY {
    struct _LIST_ENTRY *Flink;
    struct _LIST_ENTRY *Blink;
};

struct _RTL_CRITICAL_SECTION_DEBUG {
    WORD Type;
    WORD CreatorBackTraceIndex;
    struct _RTL_CRITICAL_SECTION *CriticalSection;
    LIST_ENTRY ProcessLocksList;
    DWORD EntryCount;
    DWORD ContentionCount;
    DWORD Flags;
    WORD CreatorBackTraceIndexHigh;
    WORD SpareWORD;
};

typedef struct _SYSTEMTIME *LPSYSTEMTIME;

typedef struct _MEMORY_BASIC_INFORMATION _MEMORY_BASIC_INFORMATION, *P_MEMORY_BASIC_INFORMATION;

typedef ULONG_PTR SIZE_T;

struct _MEMORY_BASIC_INFORMATION {
    PVOID BaseAddress;
    PVOID AllocationBase;
    DWORD AllocationProtect;
    SIZE_T RegionSize;
    DWORD State;
    DWORD Protect;
    DWORD Type;
};

typedef struct _CONTEXT _CONTEXT, *P_CONTEXT;

typedef struct _CONTEXT CONTEXT;

typedef struct _FLOATING_SAVE_AREA _FLOATING_SAVE_AREA, *P_FLOATING_SAVE_AREA;

typedef struct _FLOATING_SAVE_AREA FLOATING_SAVE_AREA;

struct _FLOATING_SAVE_AREA {
    DWORD ControlWord;
    DWORD StatusWord;
    DWORD TagWord;
    DWORD ErrorOffset;
    DWORD ErrorSelector;
    DWORD DataOffset;
    DWORD DataSelector;
    BYTE RegisterArea[80];
    DWORD Cr0NpxState;
};

struct _CONTEXT {
    DWORD ContextFlags;
    DWORD Dr0;
    DWORD Dr1;
    DWORD Dr2;
    DWORD Dr3;
    DWORD Dr6;
    DWORD Dr7;
    FLOATING_SAVE_AREA FloatSave;
    DWORD SegGs;
    DWORD SegFs;
    DWORD SegEs;
    DWORD SegDs;
    DWORD Edi;
    DWORD Esi;
    DWORD Ebx;
    DWORD Edx;
    DWORD Ecx;
    DWORD Eax;
    DWORD Ebp;
    DWORD Eip;
    DWORD SegCs;
    DWORD EFlags;
    DWORD Esp;
    DWORD SegSs;
    BYTE ExtendedRegisters[512];
};

typedef union _ULARGE_INTEGER _ULARGE_INTEGER, *P_ULARGE_INTEGER;

typedef union _ULARGE_INTEGER ULARGE_INTEGER;

typedef struct _struct_22 _struct_22, *P_struct_22;

typedef struct _struct_23 _struct_23, *P_struct_23;

typedef double ULONGLONG;

struct _struct_23 {
    DWORD LowPart;
    DWORD HighPart;
};

struct _struct_22 {
    DWORD LowPart;
    DWORD HighPart;
};

union _ULARGE_INTEGER {
    struct _struct_22 s;
    struct _struct_23 u;
    ULONGLONG QuadPart;
};

typedef struct _EXCEPTION_RECORD _EXCEPTION_RECORD, *P_EXCEPTION_RECORD;

typedef struct _EXCEPTION_RECORD EXCEPTION_RECORD;

typedef EXCEPTION_RECORD *PEXCEPTION_RECORD;

struct _EXCEPTION_RECORD {
    DWORD ExceptionCode;
    DWORD ExceptionFlags;
    struct _EXCEPTION_RECORD *ExceptionRecord;
    PVOID ExceptionAddress;
    DWORD NumberParameters;
    ULONG_PTR ExceptionInformation[15];
};

typedef union _LARGE_INTEGER _LARGE_INTEGER, *P_LARGE_INTEGER;

typedef struct _struct_19 _struct_19, *P_struct_19;

typedef struct _struct_20 _struct_20, *P_struct_20;

typedef double LONGLONG;

struct _struct_20 {
    DWORD LowPart;
    LONG HighPart;
};

struct _struct_19 {
    DWORD LowPart;
    LONG HighPart;
};

union _LARGE_INTEGER {
    struct _struct_19 s;
    struct _struct_20 u;
    LONGLONG QuadPart;
};

typedef wchar_t WCHAR;

typedef WCHAR *LPWSTR;

typedef WCHAR *LPCWSTR;

typedef long HRESULT;

typedef struct _MEMORY_BASIC_INFORMATION *PMEMORY_BASIC_INFORMATION;

typedef LONG *PLONG;

typedef struct _OSVERSIONINFOA _OSVERSIONINFOA, *P_OSVERSIONINFOA;

struct _OSVERSIONINFOA {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    CHAR szCSDVersion[128];
};

typedef union _LARGE_INTEGER LARGE_INTEGER;

typedef struct _OSVERSIONINFOA *LPOSVERSIONINFOA;

typedef CONTEXT *PCONTEXT;

typedef short SHORT;

typedef DWORD ACCESS_MASK;

typedef DWORD LCID;

typedef CHAR *PCNZCH;

typedef struct IMAGE_DOS_HEADER IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER;

struct IMAGE_DOS_HEADER {
    char e_magic[2]; // Magic number
    word e_cblp; // Bytes of last page
    word e_cp; // Pages in file
    word e_crlc; // Relocations
    word e_cparhdr; // Size of header in paragraphs
    word e_minalloc; // Minimum extra paragraphs needed
    word e_maxalloc; // Maximum extra paragraphs needed
    word e_ss; // Initial (relative) SS value
    word e_sp; // Initial SP value
    word e_csum; // Checksum
    word e_ip; // Initial IP value
    word e_cs; // Initial (relative) CS value
    word e_lfarlc; // File address of relocation table
    word e_ovno; // Overlay number
    word e_res[4][4]; // Reserved words
    word e_oemid; // OEM identifier (for e_oeminfo)
    word e_oeminfo; // OEM information; e_oemid specific
    word e_res2[10][10]; // Reserved words
    dword e_lfanew; // File address of new exe header
    byte e_program[192]; // Actual DOS program
};

typedef struct tagFUNCDESC tagFUNCDESC, *PtagFUNCDESC;

typedef LONG DISPID;

typedef DISPID MEMBERID;

typedef LONG SCODE;

typedef struct tagELEMDESC tagELEMDESC, *PtagELEMDESC;

typedef struct tagELEMDESC ELEMDESC;

typedef enum tagFUNCKIND {
    FUNC_VIRTUAL=0,
    FUNC_PUREVIRTUAL=1,
    FUNC_NONVIRTUAL=2,
    FUNC_STATIC=3,
    FUNC_DISPATCH=4
} tagFUNCKIND;

typedef enum tagFUNCKIND FUNCKIND;

typedef enum tagINVOKEKIND {
    INVOKE_FUNC=1,
    INVOKE_PROPERTYGET=2,
    INVOKE_PROPERTYPUT=4,
    INVOKE_PROPERTYPUTREF=8
} tagINVOKEKIND;

typedef enum tagINVOKEKIND INVOKEKIND;

typedef enum tagCALLCONV {
    CC_FASTCALL=0,
    CC_CDECL=1,
    CC_MSCPASCAL=2,
    CC_PASCAL=3,
    CC_MACPASCAL=4,
    CC_STDCALL=5,
    CC_FPFASTCALL=6,
    CC_SYSCALL=7,
    CC_MPWCDECL=8,
    CC_MPWPASCAL=9,
    CC_MAX=10
} tagCALLCONV;

typedef enum tagCALLCONV CALLCONV;

typedef struct tagTYPEDESC tagTYPEDESC, *PtagTYPEDESC;

typedef struct tagTYPEDESC TYPEDESC;

typedef union _union_2702 _union_2702, *P_union_2702;

typedef union _union_2691 _union_2691, *P_union_2691;

typedef ushort VARTYPE;

typedef struct tagIDLDESC tagIDLDESC, *PtagIDLDESC;

typedef struct tagIDLDESC IDLDESC;

typedef struct tagPARAMDESC tagPARAMDESC, *PtagPARAMDESC;

typedef struct tagPARAMDESC PARAMDESC;

typedef struct tagARRAYDESC tagARRAYDESC, *PtagARRAYDESC;

typedef DWORD HREFTYPE;

typedef ushort USHORT;

typedef struct tagPARAMDESCEX tagPARAMDESCEX, *PtagPARAMDESCEX;

typedef struct tagPARAMDESCEX *LPPARAMDESCEX;

typedef struct tagSAFEARRAYBOUND tagSAFEARRAYBOUND, *PtagSAFEARRAYBOUND;

typedef struct tagSAFEARRAYBOUND SAFEARRAYBOUND;

typedef DWORD ULONG;

typedef struct tagVARIANT tagVARIANT, *PtagVARIANT;

typedef struct tagVARIANT VARIANT;

typedef VARIANT VARIANTARG;

typedef union _union_2683 _union_2683, *P_union_2683;

typedef struct __tagVARIANT __tagVARIANT, *P__tagVARIANT;

typedef struct tagDEC tagDEC, *PtagDEC;

typedef struct tagDEC DECIMAL;

typedef union _union_2685 _union_2685, *P_union_2685;

typedef union _union_1695 _union_1695, *P_union_1695;

typedef union _union_1697 _union_1697, *P_union_1697;

typedef float FLOAT;

typedef double DOUBLE;

typedef short VARIANT_BOOL;

typedef union tagCY tagCY, *PtagCY;

typedef union tagCY CY;

typedef double DATE;

typedef WCHAR OLECHAR;

typedef OLECHAR *BSTR;

typedef struct IUnknown IUnknown, *PIUnknown;

typedef struct IDispatch IDispatch, *PIDispatch;

typedef struct tagSAFEARRAY tagSAFEARRAY, *PtagSAFEARRAY;

typedef struct tagSAFEARRAY SAFEARRAY;

typedef int INT;

typedef struct __tagBRECORD __tagBRECORD, *P__tagBRECORD;

typedef struct _struct_1696 _struct_1696, *P_struct_1696;

typedef struct _struct_1698 _struct_1698, *P_struct_1698;

typedef struct _struct_1693 _struct_1693, *P_struct_1693;

typedef struct IUnknownVtbl IUnknownVtbl, *PIUnknownVtbl;

typedef struct IDispatchVtbl IDispatchVtbl, *PIDispatchVtbl;

typedef struct ITypeInfo ITypeInfo, *PITypeInfo;

typedef OLECHAR *LPOLESTR;

typedef struct tagDISPPARAMS tagDISPPARAMS, *PtagDISPPARAMS;

typedef struct tagDISPPARAMS DISPPARAMS;

typedef struct tagEXCEPINFO tagEXCEPINFO, *PtagEXCEPINFO;

typedef struct tagEXCEPINFO EXCEPINFO;

typedef struct IRecordInfo IRecordInfo, *PIRecordInfo;

typedef struct ITypeInfoVtbl ITypeInfoVtbl, *PITypeInfoVtbl;

typedef struct tagTYPEATTR tagTYPEATTR, *PtagTYPEATTR;

typedef struct tagTYPEATTR TYPEATTR;

typedef struct ITypeComp ITypeComp, *PITypeComp;

typedef struct tagFUNCDESC FUNCDESC;

typedef struct tagVARDESC tagVARDESC, *PtagVARDESC;

typedef struct tagVARDESC VARDESC;

typedef struct ITypeLib ITypeLib, *PITypeLib;

typedef struct IRecordInfoVtbl IRecordInfoVtbl, *PIRecordInfoVtbl;

typedef OLECHAR *LPCOLESTR;

typedef enum tagTYPEKIND {
    TKIND_ENUM=0,
    TKIND_RECORD=1,
    TKIND_MODULE=2,
    TKIND_INTERFACE=3,
    TKIND_DISPATCH=4,
    TKIND_COCLASS=5,
    TKIND_ALIAS=6,
    TKIND_UNION=7,
    TKIND_MAX=8
} tagTYPEKIND;

typedef enum tagTYPEKIND TYPEKIND;

typedef struct ITypeCompVtbl ITypeCompVtbl, *PITypeCompVtbl;

typedef enum tagDESCKIND {
    DESCKIND_NONE=0,
    DESCKIND_FUNCDESC=1,
    DESCKIND_VARDESC=2,
    DESCKIND_TYPECOMP=3,
    DESCKIND_IMPLICITAPPOBJ=4,
    DESCKIND_MAX=5
} tagDESCKIND;

typedef enum tagDESCKIND DESCKIND;

typedef union tagBINDPTR tagBINDPTR, *PtagBINDPTR;

typedef union tagBINDPTR BINDPTR;

typedef union _union_2711 _union_2711, *P_union_2711;

typedef enum tagVARKIND {
    VAR_PERINSTANCE=0,
    VAR_STATIC=1,
    VAR_CONST=2,
    VAR_DISPATCH=3
} tagVARKIND;

typedef enum tagVARKIND VARKIND;

typedef struct ITypeLibVtbl ITypeLibVtbl, *PITypeLibVtbl;

typedef struct tagTLIBATTR tagTLIBATTR, *PtagTLIBATTR;

typedef struct tagTLIBATTR TLIBATTR;

typedef enum tagSYSKIND {
    SYS_WIN16=0,
    SYS_WIN32=1,
    SYS_MAC=2,
    SYS_WIN64=3
} tagSYSKIND;

typedef enum tagSYSKIND SYSKIND;

struct _struct_1693 {
    ulong Lo;
    long Hi;
};

union tagCY {
    struct _struct_1693 s;
    LONGLONG int64;
};

struct _struct_1698 {
    ULONG Lo32;
    ULONG Mid32;
};

union _union_1697 {
    struct _struct_1698 s2;
    ULONGLONG Lo64;
};

struct _struct_1696 {
    BYTE scale;
    BYTE sign;
};

union _union_1695 {
    struct _struct_1696 s;
    USHORT signscale;
};

struct tagDEC {
    USHORT wReserved;
    union _union_1695 u;
    ULONG Hi32;
    union _union_1697 u2;
};

struct __tagBRECORD {
    PVOID pvRecord;
    struct IRecordInfo *pRecInfo;
};

union _union_2685 {
    LONGLONG llVal;
    LONG lVal;
    BYTE bVal;
    SHORT iVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    VARIANT_BOOL boolVal;
    SCODE scode;
    CY cyVal;
    DATE date;
    BSTR bstrVal;
    struct IUnknown *punkVal;
    struct IDispatch *pdispVal;
    SAFEARRAY *parray;
    BYTE *pbVal;
    SHORT *piVal;
    LONG *plVal;
    LONGLONG *pllVal;
    FLOAT *pfltVal;
    DOUBLE *pdblVal;
    VARIANT_BOOL *pboolVal;
    SCODE *pscode;
    CY *pcyVal;
    DATE *pdate;
    BSTR *pbstrVal;
    struct IUnknown **ppunkVal;
    struct IDispatch **ppdispVal;
    SAFEARRAY **pparray;
    VARIANT *pvarVal;
    PVOID byref;
    CHAR cVal;
    USHORT uiVal;
    ULONG ulVal;
    ULONGLONG ullVal;
    INT intVal;
    UINT uintVal;
    DECIMAL *pdecVal;
    CHAR *pcVal;
    USHORT *puiVal;
    ULONG *pulVal;
    ULONGLONG *pullVal;
    INT *pintVal;
    UINT *puintVal;
    struct __tagBRECORD brecVal;
};

struct __tagVARIANT {
    VARTYPE vt;
    WORD wReserved1;
    WORD wReserved2;
    WORD wReserved3;
    union _union_2685 n3;
};

union _union_2683 {
    struct __tagVARIANT n2;
    DECIMAL decVal;
};

union _union_2691 {
    struct tagTYPEDESC *lptdesc;
    struct tagARRAYDESC *lpadesc;
    HREFTYPE hreftype;
};

struct tagTYPEDESC {
    union _union_2691 u;
    VARTYPE vt;
};

struct tagIDLDESC {
    ULONG_PTR dwReserved;
    USHORT wIDLFlags;
};

struct tagPARAMDESC {
    LPPARAMDESCEX pparamdescex;
    USHORT wParamFlags;
};

union _union_2702 {
    IDLDESC idldesc;
    PARAMDESC paramdesc;
};

struct tagELEMDESC {
    TYPEDESC tdesc;
    union _union_2702 u;
};

struct tagFUNCDESC {
    MEMBERID memid;
    SCODE *lprgscode;
    ELEMDESC *lprgelemdescParam;
    FUNCKIND funckind;
    INVOKEKIND invkind;
    CALLCONV callconv;
    SHORT cParams;
    SHORT cParamsOpt;
    SHORT oVft;
    SHORT cScodes;
    ELEMDESC elemdescFunc;
    WORD wFuncFlags;
};

struct tagVARIANT {
    union _union_2683 n1;
};

struct tagPARAMDESCEX {
    ULONG cBytes;
    VARIANTARG varDefaultValue;
};

union _union_2711 {
    ULONG oInst;
    VARIANT *lpvarValue;
};

struct tagVARDESC {
    MEMBERID memid;
    LPOLESTR lpstrSchema;
    union _union_2711 u;
    ELEMDESC elemdescVar;
    WORD wVarFlags;
    VARKIND varkind;
};

struct ITypeCompVtbl {
    HRESULT (*QueryInterface)(struct ITypeComp *, IID *, void **);
    ULONG (*AddRef)(struct ITypeComp *);
    ULONG (*Release)(struct ITypeComp *);
    HRESULT (*Bind)(struct ITypeComp *, LPOLESTR, ULONG, WORD, struct ITypeInfo **, DESCKIND *, BINDPTR *);
    HRESULT (*BindType)(struct ITypeComp *, LPOLESTR, ULONG, struct ITypeInfo **, struct ITypeComp **);
};

struct tagSAFEARRAYBOUND {
    ULONG cElements;
    LONG lLbound;
};

struct tagSAFEARRAY {
    USHORT cDims;
    USHORT fFeatures;
    ULONG cbElements;
    ULONG cLocks;
    PVOID pvData;
    SAFEARRAYBOUND rgsabound[1];
};

struct ITypeInfoVtbl {
    HRESULT (*QueryInterface)(struct ITypeInfo *, IID *, void **);
    ULONG (*AddRef)(struct ITypeInfo *);
    ULONG (*Release)(struct ITypeInfo *);
    HRESULT (*GetTypeAttr)(struct ITypeInfo *, TYPEATTR **);
    HRESULT (*GetTypeComp)(struct ITypeInfo *, struct ITypeComp **);
    HRESULT (*GetFuncDesc)(struct ITypeInfo *, UINT, FUNCDESC **);
    HRESULT (*GetVarDesc)(struct ITypeInfo *, UINT, VARDESC **);
    HRESULT (*GetNames)(struct ITypeInfo *, MEMBERID, BSTR *, UINT, UINT *);
    HRESULT (*GetRefTypeOfImplType)(struct ITypeInfo *, UINT, HREFTYPE *);
    HRESULT (*GetImplTypeFlags)(struct ITypeInfo *, UINT, INT *);
    HRESULT (*GetIDsOfNames)(struct ITypeInfo *, LPOLESTR *, UINT, MEMBERID *);
    HRESULT (*Invoke)(struct ITypeInfo *, PVOID, MEMBERID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*GetDocumentation)(struct ITypeInfo *, MEMBERID, BSTR *, BSTR *, DWORD *, BSTR *);
    HRESULT (*GetDllEntry)(struct ITypeInfo *, MEMBERID, INVOKEKIND, BSTR *, BSTR *, WORD *);
    HRESULT (*GetRefTypeInfo)(struct ITypeInfo *, HREFTYPE, struct ITypeInfo **);
    HRESULT (*AddressOfMember)(struct ITypeInfo *, MEMBERID, INVOKEKIND, PVOID *);
    HRESULT (*CreateInstance)(struct ITypeInfo *, struct IUnknown *, IID *, PVOID *);
    HRESULT (*GetMops)(struct ITypeInfo *, MEMBERID, BSTR *);
    HRESULT (*GetContainingTypeLib)(struct ITypeInfo *, struct ITypeLib **, UINT *);
    void (*ReleaseTypeAttr)(struct ITypeInfo *, TYPEATTR *);
    void (*ReleaseFuncDesc)(struct ITypeInfo *, FUNCDESC *);
    void (*ReleaseVarDesc)(struct ITypeInfo *, VARDESC *);
};

struct ITypeLibVtbl {
    HRESULT (*QueryInterface)(struct ITypeLib *, IID *, void **);
    ULONG (*AddRef)(struct ITypeLib *);
    ULONG (*Release)(struct ITypeLib *);
    UINT (*GetTypeInfoCount)(struct ITypeLib *);
    HRESULT (*GetTypeInfo)(struct ITypeLib *, UINT, struct ITypeInfo **);
    HRESULT (*GetTypeInfoType)(struct ITypeLib *, UINT, TYPEKIND *);
    HRESULT (*GetTypeInfoOfGuid)(struct ITypeLib *, GUID *, struct ITypeInfo **);
    HRESULT (*GetLibAttr)(struct ITypeLib *, TLIBATTR **);
    HRESULT (*GetTypeComp)(struct ITypeLib *, struct ITypeComp **);
    HRESULT (*GetDocumentation)(struct ITypeLib *, INT, BSTR *, BSTR *, DWORD *, BSTR *);
    HRESULT (*IsName)(struct ITypeLib *, LPOLESTR, ULONG, BOOL *);
    HRESULT (*FindName)(struct ITypeLib *, LPOLESTR, ULONG, struct ITypeInfo **, MEMBERID *, USHORT *);
    void (*ReleaseTLibAttr)(struct ITypeLib *, TLIBATTR *);
};

struct tagTLIBATTR {
    GUID guid;
    LCID lcid;
    SYSKIND syskind;
    WORD wMajorVerNum;
    WORD wMinorVerNum;
    WORD wLibFlags;
};

struct tagARRAYDESC {
    TYPEDESC tdescElem;
    USHORT cDims;
    SAFEARRAYBOUND rgbounds[1];
};

struct ITypeComp {
    struct ITypeCompVtbl *lpVtbl;
};

struct IRecordInfo {
    struct IRecordInfoVtbl *lpVtbl;
};

struct tagTYPEATTR {
    GUID guid;
    LCID lcid;
    DWORD dwReserved;
    MEMBERID memidConstructor;
    MEMBERID memidDestructor;
    LPOLESTR lpstrSchema;
    ULONG cbSizeInstance;
    TYPEKIND typekind;
    WORD cFuncs;
    WORD cVars;
    WORD cImplTypes;
    WORD cbSizeVft;
    WORD cbAlignment;
    WORD wTypeFlags;
    WORD wMajorVerNum;
    WORD wMinorVerNum;
    TYPEDESC tdescAlias;
    IDLDESC idldescType;
};

struct IRecordInfoVtbl {
    HRESULT (*QueryInterface)(struct IRecordInfo *, IID *, void **);
    ULONG (*AddRef)(struct IRecordInfo *);
    ULONG (*Release)(struct IRecordInfo *);
    HRESULT (*RecordInit)(struct IRecordInfo *, PVOID);
    HRESULT (*RecordClear)(struct IRecordInfo *, PVOID);
    HRESULT (*RecordCopy)(struct IRecordInfo *, PVOID, PVOID);
    HRESULT (*GetGuid)(struct IRecordInfo *, GUID *);
    HRESULT (*GetName)(struct IRecordInfo *, BSTR *);
    HRESULT (*GetSize)(struct IRecordInfo *, ULONG *);
    HRESULT (*GetTypeInfo)(struct IRecordInfo *, struct ITypeInfo **);
    HRESULT (*GetField)(struct IRecordInfo *, PVOID, LPCOLESTR, VARIANT *);
    HRESULT (*GetFieldNoCopy)(struct IRecordInfo *, PVOID, LPCOLESTR, VARIANT *, PVOID *);
    HRESULT (*PutField)(struct IRecordInfo *, ULONG, PVOID, LPCOLESTR, VARIANT *);
    HRESULT (*PutFieldNoCopy)(struct IRecordInfo *, ULONG, PVOID, LPCOLESTR, VARIANT *);
    HRESULT (*GetFieldNames)(struct IRecordInfo *, ULONG *, BSTR *);
    BOOL (*IsMatchingType)(struct IRecordInfo *, struct IRecordInfo *);
    PVOID (*RecordCreate)(struct IRecordInfo *);
    HRESULT (*RecordCreateCopy)(struct IRecordInfo *, PVOID, PVOID *);
    HRESULT (*RecordDestroy)(struct IRecordInfo *, PVOID);
};

struct tagDISPPARAMS {
    VARIANTARG *rgvarg;
    DISPID *rgdispidNamedArgs;
    UINT cArgs;
    UINT cNamedArgs;
};

union tagBINDPTR {
    FUNCDESC *lpfuncdesc;
    VARDESC *lpvardesc;
    struct ITypeComp *lptcomp;
};

struct IDispatch {
    struct IDispatchVtbl *lpVtbl;
};

struct IUnknownVtbl {
    HRESULT (*QueryInterface)(struct IUnknown *, IID *, void **);
    ULONG (*AddRef)(struct IUnknown *);
    ULONG (*Release)(struct IUnknown *);
};

struct IDispatchVtbl {
    HRESULT (*QueryInterface)(struct IDispatch *, IID *, void **);
    ULONG (*AddRef)(struct IDispatch *);
    ULONG (*Release)(struct IDispatch *);
    HRESULT (*GetTypeInfoCount)(struct IDispatch *, UINT *);
    HRESULT (*GetTypeInfo)(struct IDispatch *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IDispatch *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IDispatch *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

struct IUnknown {
    struct IUnknownVtbl *lpVtbl;
};

struct ITypeLib {
    struct ITypeLibVtbl *lpVtbl;
};

struct ITypeInfo {
    struct ITypeInfoVtbl *lpVtbl;
};

struct tagEXCEPINFO {
    WORD wCode;
    WORD wReserved;
    BSTR bstrSource;
    BSTR bstrDescription;
    BSTR bstrHelpFile;
    DWORD dwHelpContext;
    PVOID pvReserved;
    HRESULT (*pfnDeferredFillIn)(struct tagEXCEPINFO *);
    SCODE scode;
};

typedef struct IStreamVtbl IStreamVtbl, *PIStreamVtbl;

typedef struct IStream IStream, *PIStream;

typedef struct tagSTATSTG tagSTATSTG, *PtagSTATSTG;

typedef struct tagSTATSTG STATSTG;

struct IStreamVtbl {
    HRESULT (*QueryInterface)(struct IStream *, IID *, void **);
    ULONG (*AddRef)(struct IStream *);
    ULONG (*Release)(struct IStream *);
    HRESULT (*Read)(struct IStream *, void *, ULONG, ULONG *);
    HRESULT (*Write)(struct IStream *, void *, ULONG, ULONG *);
    HRESULT (*Seek)(struct IStream *, LARGE_INTEGER, DWORD, ULARGE_INTEGER *);
    HRESULT (*SetSize)(struct IStream *, ULARGE_INTEGER);
    HRESULT (*CopyTo)(struct IStream *, struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER *, ULARGE_INTEGER *);
    HRESULT (*Commit)(struct IStream *, DWORD);
    HRESULT (*Revert)(struct IStream *);
    HRESULT (*LockRegion)(struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (*UnlockRegion)(struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (*Stat)(struct IStream *, STATSTG *, DWORD);
    HRESULT (*Clone)(struct IStream *, struct IStream **);
};

struct IStream {
    struct IStreamVtbl *lpVtbl;
};

struct tagSTATSTG {
    LPOLESTR pwcsName;
    DWORD type;
    ULARGE_INTEGER cbSize;
    FILETIME mtime;
    FILETIME ctime;
    FILETIME atime;
    DWORD grfMode;
    DWORD grfLocksSupported;
    CLSID clsid;
    DWORD grfStateBits;
    DWORD reserved;
};

typedef struct _EXCEPTION_POINTERS _EXCEPTION_POINTERS, *P_EXCEPTION_POINTERS;

struct _EXCEPTION_POINTERS {
    PEXCEPTION_RECORD ExceptionRecord;
    PCONTEXT ContextRecord;
};

typedef struct _IMAGELIST _IMAGELIST, *P_IMAGELIST;

typedef struct _IMAGELIST *HIMAGELIST;

struct _IMAGELIST {
};

typedef struct HKL__ HKL__, *PHKL__;

struct HKL__ {
    int unused;
};

typedef struct tagPOINT *LPPOINT;

typedef struct HFONT__ HFONT__, *PHFONT__;

struct HFONT__ {
    int unused;
};

typedef struct HKEY__ HKEY__, *PHKEY__;

struct HKEY__ {
    int unused;
};

typedef uint *PUINT;

typedef struct HPALETTE__ HPALETTE__, *PHPALETTE__;

struct HPALETTE__ {
    int unused;
};

typedef HINSTANCE HMODULE;

typedef HANDLE HLOCAL;

typedef struct HPEN__ HPEN__, *PHPEN__;

struct HPEN__ {
    int unused;
};

typedef int (*FARPROC)(void);

typedef WORD ATOM;

typedef struct HRGN__ HRGN__, *PHRGN__;

typedef struct HRGN__ *HRGN;

struct HRGN__ {
    int unused;
};

typedef struct tagRECT *LPRECT;

typedef BOOL *LPBOOL;

typedef void *HGDIOBJ;

typedef struct HKEY__ *HKEY;

typedef struct HENHMETAFILE__ HENHMETAFILE__, *PHENHMETAFILE__;

struct HENHMETAFILE__ {
    int unused;
};

typedef struct HRSRC__ HRSRC__, *PHRSRC__;

typedef struct HRSRC__ *HRSRC;

struct HRSRC__ {
    int unused;
};

typedef struct HHOOK__ HHOOK__, *PHHOOK__;

struct HHOOK__ {
    int unused;
};

typedef struct HKL__ *HKL;

typedef struct HHOOK__ *HHOOK;

typedef struct HENHMETAFILE__ *HENHMETAFILE;

typedef struct HFONT__ *HFONT;

typedef DWORD *LPDWORD;

typedef struct HPEN__ *HPEN;

typedef struct HPALETTE__ *HPALETTE;

typedef int *LPINT;

typedef struct tagSIZE *LPSIZE;

typedef struct _FILETIME *LPFILETIME;

typedef HANDLE *LPHANDLE;

typedef WORD *LPWORD;

typedef HKEY *PHKEY;

typedef HANDLE HGLOBAL;

typedef BYTE *PBYTE;

typedef void *LPCVOID;

typedef struct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct;

struct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct {
    dword NameOffset:31;
    dword NameIsString:1;
};

typedef struct IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA32, *PIMAGE_THUNK_DATA32;

struct IMAGE_THUNK_DATA32 {
    dword StartAddressOfRawData;
    dword EndAddressOfRawData;
    dword AddressOfIndex;
    dword AddressOfCallBacks;
    dword SizeOfZeroFill;
    dword Characteristics;
};

typedef struct IMAGE_RESOURCE_DIR_STRING_U_14 IMAGE_RESOURCE_DIR_STRING_U_14, *PIMAGE_RESOURCE_DIR_STRING_U_14;

struct IMAGE_RESOURCE_DIR_STRING_U_14 {
    word Length;
    wchar16 NameString[7];
};

typedef struct IMAGE_RESOURCE_DIR_STRING_U_16 IMAGE_RESOURCE_DIR_STRING_U_16, *PIMAGE_RESOURCE_DIR_STRING_U_16;

struct IMAGE_RESOURCE_DIR_STRING_U_16 {
    word Length;
    wchar16 NameString[8];
};

typedef struct IMAGE_RESOURCE_DIR_STRING_U_10 IMAGE_RESOURCE_DIR_STRING_U_10, *PIMAGE_RESOURCE_DIR_STRING_U_10;

struct IMAGE_RESOURCE_DIR_STRING_U_10 {
    word Length;
    wchar16 NameString[5];
};

typedef struct IMAGE_RESOURCE_DIR_STRING_U_12 IMAGE_RESOURCE_DIR_STRING_U_12, *PIMAGE_RESOURCE_DIR_STRING_U_12;

struct IMAGE_RESOURCE_DIR_STRING_U_12 {
    word Length;
    wchar16 NameString[6];
};

typedef struct IMAGE_SECTION_HEADER IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER;

typedef union Misc Misc, *PMisc;

typedef enum SectionFlags {
    IMAGE_SCN_TYPE_NO_PAD=8,
    IMAGE_SCN_RESERVED_0001=16,
    IMAGE_SCN_CNT_CODE=32,
    IMAGE_SCN_CNT_INITIALIZED_DATA=64,
    IMAGE_SCN_CNT_UNINITIALIZED_DATA=128,
    IMAGE_SCN_LNK_OTHER=256,
    IMAGE_SCN_LNK_INFO=512,
    IMAGE_SCN_RESERVED_0040=1024,
    IMAGE_SCN_LNK_REMOVE=2048,
    IMAGE_SCN_LNK_COMDAT=4096,
    IMAGE_SCN_GPREL=32768,
    IMAGE_SCN_MEM_16BIT=131072,
    IMAGE_SCN_MEM_PURGEABLE=131072,
    IMAGE_SCN_MEM_LOCKED=262144,
    IMAGE_SCN_MEM_PRELOAD=524288,
    IMAGE_SCN_ALIGN_1BYTES=1048576,
    IMAGE_SCN_ALIGN_2BYTES=2097152,
    IMAGE_SCN_ALIGN_4BYTES=3145728,
    IMAGE_SCN_ALIGN_8BYTES=4194304,
    IMAGE_SCN_ALIGN_16BYTES=5242880,
    IMAGE_SCN_ALIGN_32BYTES=6291456,
    IMAGE_SCN_ALIGN_64BYTES=7340032,
    IMAGE_SCN_ALIGN_128BYTES=8388608,
    IMAGE_SCN_ALIGN_256BYTES=9437184,
    IMAGE_SCN_ALIGN_512BYTES=10485760,
    IMAGE_SCN_ALIGN_1024BYTES=11534336,
    IMAGE_SCN_ALIGN_2048BYTES=12582912,
    IMAGE_SCN_ALIGN_4096BYTES=13631488,
    IMAGE_SCN_ALIGN_8192BYTES=14680064,
    IMAGE_SCN_LNK_NRELOC_OVFL=16777216,
    IMAGE_SCN_MEM_DISCARDABLE=33554432,
    IMAGE_SCN_MEM_NOT_CACHED=67108864,
    IMAGE_SCN_MEM_NOT_PAGED=134217728,
    IMAGE_SCN_MEM_SHARED=268435456,
    IMAGE_SCN_MEM_EXECUTE=536870912,
    IMAGE_SCN_MEM_READ=1073741824,
    IMAGE_SCN_MEM_WRITE=2147483648
} SectionFlags;

union Misc {
    dword PhysicalAddress;
    dword VirtualSize;
};

struct IMAGE_SECTION_HEADER {
    char Name[8];
    union Misc Misc;
    ImageBaseOffset32 VirtualAddress;
    dword SizeOfRawData;
    dword PointerToRawData;
    dword PointerToRelocations;
    dword PointerToLinenumbers;
    word NumberOfRelocations;
    word NumberOfLinenumbers;
    enum SectionFlags Characteristics;
};

typedef struct IMAGE_RESOURCE_DIR_STRING_U_8 IMAGE_RESOURCE_DIR_STRING_U_8, *PIMAGE_RESOURCE_DIR_STRING_U_8;

struct IMAGE_RESOURCE_DIR_STRING_U_8 {
    word Length;
    wchar16 NameString[4];
};

typedef struct IMAGE_DATA_DIRECTORY IMAGE_DATA_DIRECTORY, *PIMAGE_DATA_DIRECTORY;

struct IMAGE_DATA_DIRECTORY {
    ImageBaseOffset32 VirtualAddress;
    dword Size;
};

typedef struct IMAGE_RESOURCE_DIR_STRING_U_6 IMAGE_RESOURCE_DIR_STRING_U_6, *PIMAGE_RESOURCE_DIR_STRING_U_6;

struct IMAGE_RESOURCE_DIR_STRING_U_6 {
    word Length;
    wchar16 NameString[3];
};

typedef struct IMAGE_RESOURCE_DATA_ENTRY IMAGE_RESOURCE_DATA_ENTRY, *PIMAGE_RESOURCE_DATA_ENTRY;

struct IMAGE_RESOURCE_DATA_ENTRY {
    dword OffsetToData;
    dword Size;
    dword CodePage;
    dword Reserved;
};

typedef struct IMAGE_RESOURCE_DIRECTORY IMAGE_RESOURCE_DIRECTORY, *PIMAGE_RESOURCE_DIRECTORY;

struct IMAGE_RESOURCE_DIRECTORY {
    dword Characteristics;
    dword TimeDateStamp;
    word MajorVersion;
    word MinorVersion;
    word NumberOfNamedEntries;
    word NumberOfIdEntries;
};

typedef union IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion;

union IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion {
    struct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct;
    dword Name;
    word Id;
};

typedef struct IMAGE_OPTIONAL_HEADER32 IMAGE_OPTIONAL_HEADER32, *PIMAGE_OPTIONAL_HEADER32;

struct IMAGE_OPTIONAL_HEADER32 {
    word Magic;
    byte MajorLinkerVersion;
    byte MinorLinkerVersion;
    dword SizeOfCode;
    dword SizeOfInitializedData;
    dword SizeOfUninitializedData;
    ImageBaseOffset32 AddressOfEntryPoint;
    ImageBaseOffset32 BaseOfCode;
    ImageBaseOffset32 BaseOfData;
    pointer32 ImageBase;
    dword SectionAlignment;
    dword FileAlignment;
    word MajorOperatingSystemVersion;
    word MinorOperatingSystemVersion;
    word MajorImageVersion;
    word MinorImageVersion;
    word MajorSubsystemVersion;
    word MinorSubsystemVersion;
    dword Win32VersionValue;
    dword SizeOfImage;
    dword SizeOfHeaders;
    dword CheckSum;
    word Subsystem;
    word DllCharacteristics;
    dword SizeOfStackReserve;
    dword SizeOfStackCommit;
    dword SizeOfHeapReserve;
    dword SizeOfHeapCommit;
    dword LoaderFlags;
    dword NumberOfRvaAndSizes;
    struct IMAGE_DATA_DIRECTORY DataDirectory[16];
};

typedef struct IMAGE_FILE_HEADER IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER;

struct IMAGE_FILE_HEADER {
    word Machine; // 332
    word NumberOfSections;
    dword TimeDateStamp;
    dword PointerToSymbolTable;
    dword NumberOfSymbols;
    word SizeOfOptionalHeader;
    word Characteristics;
};

typedef struct IMAGE_NT_HEADERS32 IMAGE_NT_HEADERS32, *PIMAGE_NT_HEADERS32;

struct IMAGE_NT_HEADERS32 {
    char Signature[4];
    struct IMAGE_FILE_HEADER FileHeader;
    struct IMAGE_OPTIONAL_HEADER32 OptionalHeader;
};

typedef struct IMAGE_RESOURCE_DIRECTORY_ENTRY IMAGE_RESOURCE_DIRECTORY_ENTRY, *PIMAGE_RESOURCE_DIRECTORY_ENTRY;

struct IMAGE_RESOURCE_DIRECTORY_ENTRY {
    union IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion NameUnion;
    union IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion DirectoryUnion;
};

typedef struct IMAGE_RESOURCE_DIR_STRING_U_18 IMAGE_RESOURCE_DIR_STRING_U_18, *PIMAGE_RESOURCE_DIR_STRING_U_18;

struct IMAGE_RESOURCE_DIR_STRING_U_18 {
    word Length;
    wchar16 NameString[9];
};

typedef struct IMAGE_RESOURCE_DIR_STRING_U_20 IMAGE_RESOURCE_DIR_STRING_U_20, *PIMAGE_RESOURCE_DIR_STRING_U_20;

struct IMAGE_RESOURCE_DIR_STRING_U_20 {
    word Length;
    wchar16 NameString[10];
};

typedef struct IMAGE_RESOURCE_DIR_STRING_U_26 IMAGE_RESOURCE_DIR_STRING_U_26, *PIMAGE_RESOURCE_DIR_STRING_U_26;

struct IMAGE_RESOURCE_DIR_STRING_U_26 {
    word Length;
    wchar16 NameString[13];
};

typedef struct IMAGE_RESOURCE_DIR_STRING_U_22 IMAGE_RESOURCE_DIR_STRING_U_22, *PIMAGE_RESOURCE_DIR_STRING_U_22;

struct IMAGE_RESOURCE_DIR_STRING_U_22 {
    word Length;
    wchar16 NameString[11];
};

typedef struct IMAGE_RESOURCE_DIR_STRING_U_24 IMAGE_RESOURCE_DIR_STRING_U_24, *PIMAGE_RESOURCE_DIR_STRING_U_24;

struct IMAGE_RESOURCE_DIR_STRING_U_24 {
    word Length;
    wchar16 NameString[12];
};

typedef LONG LSTATUS;

typedef ACCESS_MASK REGSAM;

typedef char *va_list;

typedef struct tagOFNA tagOFNA, *PtagOFNA;

typedef struct tagOFNA *LPOPENFILENAMEA;

typedef UINT_PTR (*LPOFNHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagOFNA {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCSTR lpstrFilter;
    LPSTR lpstrCustomFilter;
    DWORD nMaxCustFilter;
    DWORD nFilterIndex;
    LPSTR lpstrFile;
    DWORD nMaxFile;
    LPSTR lpstrFileTitle;
    DWORD nMaxFileTitle;
    LPCSTR lpstrInitialDir;
    LPCSTR lpstrTitle;
    DWORD Flags;
    WORD nFileOffset;
    WORD nFileExtension;
    LPCSTR lpstrDefExt;
    LPARAM lCustData;
    LPOFNHOOKPROC lpfnHook;
    LPCSTR lpTemplateName;
    void *pvReserved;
    DWORD dwReserved;
    DWORD FlagsEx;
};

typedef struct _PRINTER_DEFAULTSA _PRINTER_DEFAULTSA, *P_PRINTER_DEFAULTSA;

struct _PRINTER_DEFAULTSA {
    LPSTR pDatatype;
    LPDEVMODEA pDevMode;
    ACCESS_MASK DesiredAccess;
};

typedef struct _PRINTER_DEFAULTSA *LPPRINTER_DEFAULTSA;



undefined4 *DAT_0047644c;
int *DAT_00476450;
undefined4 DAT_00476454;
undefined4 DAT_00476430;
undefined4 DAT_00476464;
char DAT_00476045;
HLOCAL DAT_0047648c;
undefined4 *DAT_00476480;
undefined1 DAT_0047642c;
undefined4 *DAT_00476478;
undefined4 DAT_00476474;
LPCRITICAL_SECTION lpCriticalSection_00476434;
char DAT_0047642c;
int *DAT_00476480;
int DAT_0047648c;
undefined4 DAT_00476490;
undefined DAT_00476420;
undefined DAT_00476424;
undefined DAT_80000002;
uint *DAT_00476480;
uint DAT_00476484;
uint *DAT_00476488;
uint DAT_00476488;
uint *DAT_00476478;
int DAT_00476484;
byte *DAT_00476488;
undefined *PTR_FUN_0047401c;
undefined *PTR_FUN_00474020;
undefined *PTR_FUN_00474024;
undefined *DAT_00476004;
undefined LAB_004028fb;
undefined LAB_00402902;
undefined *DAT_00476018;
ushort DAT_00474000;
string s_SOFTWARE\Borland\Delphi\RTL_00402e64;
string s_FPUMaskValue_00402e80;
undefined LAB_00403076;
undefined LAB_0040307d;
byte DAT_00474008;
char DAT_00474008;
undefined *DAT_0047600c;
byte DAT_0047400c;
undefined LAB_004034c3;
undefined *DAT_00476008;
undefined LAB_0040364b;
int *DAT_004764a4;
undefined LAB_00403810;
int DAT_004764a8;
int DAT_004764ac;
undefined LAB_0040393a;
int *DAT_004764a8;
undefined LAB_0040399a;
undefined4 DAT_004764a8;
undefined4 DAT_004764ac;
int DAT_004764b0;
undefined4 DAT_0047601c;
undefined1 DAT_00476024;
uint DAT_00476034;
LPCVOID DAT_0047603c;
string s_Runtime_error_at_00000000_0047402c;
undefined DAT_00474054;
int DAT_00476034;
undefined4 DAT_004764bc;
undefined4 DAT_004764c0;
undefined4 DAT_004764a0;
int DAT_0047603c;
char DAT_00476044;
char DAT_00474010;
byte DAT_004764c4;
undefined *DAT_00476038;
undefined4 *DAT_004764b0;
undefined *DAT_004764c8;
UINT DAT_00476034;
string s_Error_0047404c;
undefined DAT_00476218;
undefined4 DAT_00476034;
undefined4 DAT_0047603c;
undefined DAT_00404025;
undefined *DAT_004763e4;
undefined DAT_004763ec;
undefined *DAT_004763e8;
undefined LAB_00404a54;
undefined LAB_00404a5b;
undefined LAB_00404be9;
undefined LAB_00404c4e;
int *DAT_00474014;
string s_kernel32.dll_00405158;
string s_GetLongPathNameA_00405168;
string s_Software\Borland\Locales_00405338;
string s_Software\Borland\Delphi\Locales_00405354;
undefined LAB_00405374;
undefined DAT_80000001;
undefined4 *DAT_00474018;
int *DAT_00474018;
undefined LAB_00405443;
undefined4 *DAT_00474014;
undefined LAB_004054d8;
undefined LAB_00405688;
undefined DAT_0047604c;
byte DAT_00476046;
undefined LAB_00405a93;
undefined DAT_00405ac9;
undefined LAB_00405b0a;
int UNK_0047621c;
undefined DAT_00474064;
undefined DAT_004740a4;
undefined1 DAT_00405e7e;
undefined1 DAT_00405e82;
undefined1 DAT_00405e87;
undefined DAT_00405ca8;
undefined DAT_00405cb0;
undefined DAT_00476428;
undefined LAB_004064f6;
undefined DAT_004763f0;
undefined DAT_00476400;
undefined DAT_00476410;
undefined DAT_00476040;
undefined1 DAT_00476046;
undefined1 DAT_00476047;
undefined1 DAT_00476048;
undefined thunk_FUN_00402780;
undefined DAT_00476418;
undefined4 DAT_004763e4;
undefined DAT_0047602c;
undefined4 DAT_00476028;
undefined DAT_00476020;
undefined LAB_004065e8;
undefined DAT_004065f4;
HLOCAL DAT_004764e0;
undefined4 _tls_index;
char DAT_004764cc;
LPVOID DAT_004764e0;
HMODULE DAT_004764d8;
undefined DAT_004740b8;
HMODULE DAT_004740ac;
undefined DAT_004740a8;
undefined4 DAT_004740b0;
undefined4 DAT_004740b4;
string s_Magellan_MSWHEEL_00407288;
string s_MouseZ_0040729c;
string s_MSWHEEL_ROLLMSG_004072a4;
string s_MSH_WHEELSUPPORT_MSG_004072b4;
string s_MSH_SCROLL_LINES_MSG_004072cc;
undefined *PTR_DAT_00407cac;
undefined LAB_004081da;
undefined4 *DAT_00474130;
undefined *PTR_DAT_00475588;
undefined LAB_00408208;
undefined DAT_00408504;
undefined *PTR_PTR_004756a4;
undefined DAT_00474134;
undefined DAT_00474140;
undefined LAB_0040891b;
undefined LAB_00408922;
undefined DAT_00408934;
undefined DAT_00408968;
undefined DAT_00408a34;
undefined DAT_00408a7c;
pointer PTR_PTR_00474154;
undefined DAT_00408f16;
undefined DAT_0047415c;
uint DAT_00474160;
undefined DAT_004093ac;
undefined *PTR_LAB_0047572c;
undefined LAB_00409415;
undefined LAB_0040941c;
undefined DAT_00474164;
short DAT_004765b4;
short DAT_004765b6;
undefined LAB_00409926;
undefined LAB_0040992d;
undefined LAB_00409a1e;
undefined LAB_00409a25;
byte *DAT_00476510;
undefined4 DAT_00476514;
byte *DAT_00476500;
byte *DAT_004764fc;
undefined4 *DAT_00476508;
undefined4 *DAT_0047650c;
undefined LAB_0040a189;
undefined LAB_0040a190;
string s_AM/PM_0040a198;
undefined DAT_0040a1a0;
undefined DAT_0040a1a4;
undefined DAT_0040a1ac;
undefined DAT_0040a1b4;
undefined LAB_0040a1b8;
undefined DAT_00474108;
undefined DAT_004764f9;
undefined DAT_00476504;
undefined DAT_00476544;
undefined DAT_00476574;
undefined DAT_00476590;
undefined LAB_0040a214;
undefined LAB_0040a43f;
undefined LAB_0040a446;
undefined DAT_00476518;
undefined DAT_00476548;
undefined DAT_00476578;
undefined DAT_00476594;
undefined1 DAT_004765b8;
undefined LAB_0040a4f1;
undefined LAB_0040a4f8;
undefined LAB_0040a59b;
undefined LAB_0040a5a2;
undefined lpCalInfoEnumProc_0040a450;
undefined DAT_0040a5b0;
undefined lpCalInfoEnumProc_0040a48c;
undefined4 DAT_004765d8;
undefined LAB_0040a776;
undefined LAB_0040a77d;
undefined DAT_0040a78c;
undefined DAT_0040a790;
undefined DAT_0040a79c;
undefined DAT_0040a7a0;
undefined DAT_0040a7b0;
undefined DAT_0040a7b8;
undefined DAT_0040a7c4;
undefined DAT_0040a7d0;
undefined *PTR_DAT_00407654;
undefined *PTR_PTR_004758d0;
Alignment UNK_0040a98f;
undefined DAT_0040a994;
undefined *PTR_DAT_0047580c;
undefined *PTR_DAT_00475650;
undefined *PTR_PTR_00475608;
int DAT_004764d8;
undefined LAB_0040aaa6;
undefined LAB_0040aaad;
undefined LAB_0040ab74;
undefined LAB_0040ab7b;
undefined *PTR_DAT_004077c8;
undefined *PTR_PTR_00475604;
undefined4 DAT_00474200;
undefined4 DAT_00474204;
undefined *PTR_PTR_00475844;
undefined *PTR_DAT_00407ed0;
undefined *PTR_PTR_004757e4;
undefined LAB_0040ad28;
undefined LAB_0040ad2f;
undefined *PTR_PTR_00475900;
undefined *PTR_PTR_00475820;
undefined *PTR_DAT_00407d08;
undefined *PTR_PTR_00475874;
undefined *PTR_PTR_004757c4;
undefined LAB_0040afdf;
undefined LAB_0040afe6;
undefined *PTR_PTR_0047560c;
undefined *PTR_DAT_0040776c;
int *DAT_004765fc;
undefined *PTR_PTR_00475790;
undefined *PTR_DAT_00407bf4;
int *DAT_00476600;
undefined *PTR_DAT_0047558c;
undefined *PTR_DAT_0047568c;
undefined *PTR_DAT_004755fc;
undefined *PTR_DAT_00475670;
undefined *PTR_DAT_00475694;
undefined *PTR_DAT_004757b8;
undefined *PTR_DAT_00475570;
undefined LAB_0040ac48;
undefined LAB_0040ad48;
undefined LAB_0040ad64;
undefined LAB_0040ae10;
undefined LAB_0040aff0;
undefined LAB_0040b0bc;
undefined LAB_0040b18d;
undefined LAB_0040b194;
DWORD DAT_004740c4;
DWORD DAT_004740c8;
DWORD DAT_004740cc;
undefined DAT_004740d0;
undefined DAT_004740d4;
char DAT_004765b8;
undefined LAB_0040b5c9;
undefined LAB_0040b5d0;
LCID DAT_004765b0;
ushort DAT_004765b4;
undefined2 DAT_004765b6;
undefined1 DAT_004765b9;
undefined1 DAT_004764f4;
undefined1 DAT_004764f5;
undefined1 DAT_004764f6;
undefined1 DAT_004764f7;
undefined1 DAT_004764f8;
undefined1 DAT_004764f9;
undefined1 DAT_00476504;
undefined1 DAT_004765f4;
undefined LAB_0040bb7b;
undefined LAB_0040bb82;
undefined DAT_0040bb90;
string s_m/d/yy_0040bb9c;
string s_mmmm_d,_yyyy_0040bbac;
undefined DAT_0040bbc4;
undefined DAT_0040bbd0;
undefined DAT_0040bc14;
string s_:mm:ss_0040bc20;
undefined DAT_004764f0;
undefined4 DAT_004764fc;
undefined4 DAT_00476500;
undefined4 DAT_00476508;
undefined4 DAT_0047650c;
undefined4 DAT_00476510;
undefined *PTR_PTR_004755a4;
undefined *PTR_DAT_00407fe8;
undefined *PTR_PTR_00475664;
undefined LAB_0040bcb2;
undefined LAB_0040bcb9;
undefined4 *DAT_004742e8;
FARPROC DAT_0047412c;
undefined LAB_00408a80;
string s_kernel32.dll_0040bd44;
string s_GetDiskFreeSpaceExA_0040bd54;
undefined *PTR_DAT_004080ac;
undefined LAB_0040bf20;
undefined LAB_0040bf3e;
undefined DAT_0040c23c;
undefined DAT_0040c2e3;
uint DAT_0040c220;
char DAT_004764f6;
undefined DAT_0040c230;
int DAT_0040c220;
undefined4 DAT_0040c21c;
byte DAT_004764f7;
undefined DAT_004765f8;
char DAT_004764cd;
undefined DAT_0040bf50;
undefined DAT_0040c03c;
undefined LAB_0040cc90;
undefined LAB_0040cca4;
pointer PTR_DAT_00474128;
undefined LAB_0040d470;
undefined LAB_0040d477;
undefined DAT_0040d4f1;
undefined DAT_0040d505;
undefined DAT_00476610;
undefined *PTR_DAT_00401094;
undefined LAB_0040d652;
pointer PTR_s_False_004742ec;
pointer PTR_DAT_004742f4;
undefined *PTR_PTR_00475868;
undefined *PTR_DAT_0040d9c8;
undefined LAB_0040eb14;
undefined LAB_0040eb1b;
int DAT_00476620;
int *DAT_00476624;
undefined LAB_0040ebbd;
undefined *PTR_PTR_0040ddb8;
undefined LAB_0040eca9;
undefined LAB_0040ecb0;
undefined *PTR_PTR_004757d0;
undefined *PTR_DAT_0040d8c0;
undefined LAB_0040ed8d;
undefined LAB_0040ed94;
undefined LAB_0040edaa;
undefined LAB_0040eea4;
undefined LAB_0040eeab;
undefined *PTR_LAB_0040eeb4;
int DAT_00476628;
undefined LAB_0040efe0;
undefined *PTR_LAB_0040e440;
undefined DAT_0000000a;
undefined *PTR_PTR_0040dca8;
undefined *PTR_PTR_0040e784;
undefined LAB_0040f296;
undefined LAB_0040f29d;
int DAT_00476614;
undefined DAT_0040f364;
ushort DAT_0040f368;
undefined LAB_0040f337;
undefined LAB_0040f33e;
undefined LAB_0040f356;
undefined *PTR_PTR_0047581c;
undefined *PTR_DAT_0040da80;
undefined LAB_0040f4bc;
undefined *PTR_PTR_00475770;
undefined *PTR_PTR_004756f0;
undefined *PTR_LAB_004756d8;
undefined LAB_0040f89c;
undefined LAB_0040f8a3;
undefined LAB_0040f8ff;
undefined LAB_0040f906;
undefined *PTR_PTR_00475850;
undefined *PTR_DAT_0040dad8;
int DAT_0040fac8;
undefined *PTR_PTR_00475708;
undefined LAB_0040fbc2;
undefined LAB_0040fdfd;
undefined LAB_0040fe04;
string s_%s[%d]_0040fe14;
undefined *PTR_PTR_0040df08;
undefined LAB_0040ff8e;
undefined LAB_00410016;
undefined LAB_0041012a;
undefined LAB_00410241;
undefined LAB_00410248;
undefined LAB_0041034d;
undefined LAB_00410354;
undefined *PTR_PTR_0047579c;
undefined *PTR_PTR_0040e004;
undefined LAB_004106f1;
undefined LAB_004106f8;
undefined *PTR_DAT_0040db30;
undefined LAB_00410788;
undefined LAB_0041078f;
undefined LAB_004108d1;
undefined LAB_004108d8;
undefined LAB_00410a35;
undefined LAB_00410a3c;
undefined LAB_00410b81;
undefined LAB_00410b88;
undefined LAB_00410b9e;
undefined LAB_00410c30;
undefined LAB_00410c4d;
undefined LAB_00410c54;
undefined *PTR_PTR_0040e2f8;
undefined LAB_00410d8b;
undefined LAB_00410f13;
undefined LAB_00410f1a;
undefined LAB_00410f30;
undefined *PTR_PTR_004756ec;
undefined *PTR_PTR_0047587c;
undefined *PTR_DAT_0040d918;
undefined *PTR_PTR_00475750;
undefined *PTR_DAT_0040d970;
undefined LAB_004116e3;
undefined LAB_004116ea;
undefined *PTR_PTR_0040e6ac;
undefined LAB_00411744;
undefined *PTR_PTR_00475828;
undefined *PTR_DAT_0040d80c;
undefined *PTR_PTR_00475838;
undefined *PTR_DAT_0040d868;
undefined *PTR_DAT_0047582c;
undefined *PTR_PTR_004758a4;
undefined *PTR_DAT_0040d7b0;
undefined *PTR_PTR_00475718;
undefined *PTR_DAT_0040da24;
undefined LAB_00411b0b;
undefined LAB_00411b12;
undefined LAB_00411e02;
undefined LAB_00411e09;
string s_Owner_00411e1c;
undefined *DAT_00476618;
int DAT_0047662c;
undefined LAB_00411fbf;
undefined LAB_00411fc6;
undefined LAB_00412011;
undefined LAB_00412030;
undefined LAB_00412037;
undefined LAB_0041204f;
undefined LAB_004120fb;
undefined LAB_00412183;
undefined *PTR_PTR_004757a8;
undefined *PTR_PTR_004755e8;
undefined *PTR_PTR_0040e3d0;
undefined LAB_0041232c;
undefined DAT_00412333;
undefined LAB_00412454;
undefined LAB_0041245b;
undefined LAB_00412557;
undefined LAB_00412574;
undefined LAB_0041257b;
undefined LAB_00412722;
undefined LAB_00412729;
undefined LAB_004127d4;
undefined LAB_004127db;
undefined LAB_0041291a;
undefined LAB_00412946;
undefined LAB_004129e6;
undefined LAB_00412a8b;
undefined LAB_00412c15;
undefined LAB_00412c57;
undefined LAB_00412c79;
undefined LAB_00412c80;
undefined LAB_00412ce7;
undefined LAB_00412dbe;
undefined UNK_00412e91;
string s_False_00412fa4;
undefined DAT_00412fb4;
undefined DAT_00412fc4;
undefined DAT_00412fd0;
byte DAT_004130d4;
undefined *PTR_PTR_00475854;
undefined LAB_00413346;
undefined LAB_0041336d;
undefined LAB_004133b8;
undefined LAB_004133bf;
undefined *PTR_DAT_00411c48;
undefined *PTR_DAT_00475590;
undefined LAB_0041363b;
undefined LAB_00413642;
undefined DAT_00474308;
undefined *PTR_PTR_004757f0;
undefined LAB_004138d4;
undefined LAB_004138db;
undefined DAT_00474300;
string s_%s_%d_00413948;
undefined LAB_00413b6b;
undefined LAB_00413b72;
undefined LAB_00413b81;
undefined LAB_00413bc0;
undefined LAB_00413be2;
undefined LAB_00413c71;
undefined LAB_00413c9e;
undefined LAB_00413ca5;
int DAT_004742fc;
undefined *PTR_PTR_004756fc;
undefined LAB_00413e08;
undefined LAB_00413e0f;
undefined LAB_00414075;
undefined LAB_0041407c;
undefined LAB_004140bd;
undefined LAB_004140c4;
undefined LAB_00414160;
undefined LAB_00414167;
HWND DAT_00476648;
undefined1 DAT_004144a8;
ushort DAT_0041470c;
undefined LAB_00414594;
undefined LAB_004145a8;
undefined LAB_004145bc;
undefined LAB_004145c8;
undefined DAT_0041485c;
undefined DAT_0041486c;
undefined *PTR_PTR_0047578c;
undefined *PTR_DAT_0040db90;
undefined *PTR_PTR_00475730;
undefined LAB_00414f7b;
undefined LAB_00415355;
undefined LAB_004153dd;
undefined LAB_004153e4;
HGDIOBJ DAT_0047664c;
undefined LAB_00416560;
undefined LAB_00416567;
undefined DAT_004165fe;
undefined LAB_00416689;
undefined LAB_00416690;
undefined LAB_004166f4;
undefined LAB_004166fb;
undefined LAB_00416763;
undefined LAB_0041676a;
int DAT_004766a4;
int DAT_0047669c;
int DAT_004766a0;
undefined LAB_0041680d;
undefined LAB_00416814;
undefined4 DAT_00474358;
int DAT_00476698;
int DAT_00476654;
undefined LAB_00417029;
undefined LAB_00417030;
undefined LAB_004171a9;
undefined LAB_004171d1;
undefined LAB_004171d8;
string s_Default_004171e8;
string s_MS_Sans_Serif_00474363;
undefined DAT_00474568;
undefined LAB_0041750d;
undefined LAB_00417514;
undefined LAB_004175ce;
undefined DAT_00474578;
undefined4 DAT_00474588;
undefined LAB_004177cd;
undefined LAB_004177d4;
undefined LAB_00417905;
undefined *PTR_PTR_00415928;
undefined *PTR_PTR_00415aa4;
undefined *PTR_PTR_00415ba4;
undefined1 DAT_00417a14;
undefined LAB_0041861c;
undefined LAB_0041863c;
undefined LAB_0041865c;
byte DAT_00417d2c;
byte DAT_00417d30;
undefined *PTR_PTR_00416178;
undefined LAB_00417cf5;
undefined LAB_00417d1a;
byte DAT_00417db4;
byte DAT_00417db8;
byte DAT_00417e64;
byte DAT_00417eac;
byte DAT_00417ee8;
byte DAT_00417f20;
LPCRITICAL_SECTION lpCriticalSection_00476680;
byte DAT_00417f74;
byte DAT_00417fcc;
byte DAT_00418004;
byte DAT_0041804c;
byte DAT_00418090;
byte DAT_00418148;
byte DAT_004181ec;
byte DAT_00418230;
byte DAT_0041833c;
byte DAT_00418388;
byte DAT_004183d0;
byte DAT_004183f0;
byte DAT_0041844c;
HGDIOBJ DAT_00476658;
HGDIOBJ DAT_0047665c;
HGDIOBJ DAT_00476660;
byte DAT_00418518;
undefined *PTR_PTR_004756a8;
undefined *PTR_DAT_0040dc48;
undefined DAT_00474598;
undefined *PTR_DAT_0041559c;
undefined *PTR_DAT_00415540;
undefined *PTR_PTR_0047566c;
undefined *PTR_PTR_0047567c;
undefined *PTR_PTR_004757d8;
undefined *PTR_PTR_004755c0;
undefined *PTR_DAT_0040dbec;
undefined LAB_0041871a;
undefined LAB_00418721;
undefined LAB_004187c0;
undefined LAB_004187c7;
undefined *PTR_DAT_004758f8;
HPALETTE DAT_0047664c;
undefined LAB_00419160;
undefined LAB_00419503;
undefined LAB_00419917;
undefined *PTR_LAB_00415df0;
undefined DAT_00419a38;
undefined LAB_00419b54;
undefined LAB_00419b5b;
undefined LAB_00419b71;
undefined LAB_00419c5f;
undefined *PTR_PTR_0041603c;
undefined *PTR_PTR_00475758;
undefined *PTR_PTR_004755d0;
undefined *PTR_PTR_004162b8;
undefined *PTR_PTR_004755cc;
undefined *PTR_PTR_004755c8;
undefined LAB_00419e05;
undefined DAT_00419e34;
undefined DAT_00419e40;
undefined DAT_00419e4c;
undefined LAB_00419e58;
undefined *PTR_DAT_00419c8c;
undefined LAB_00419f2b;
undefined LAB_00419f32;
undefined LAB_00419fba;
undefined LAB_00419fc1;
undefined LAB_0041a168;
int DAT_004745bc;
undefined *PTR_PTR_00419cb8;
int *DAT_004745b8;
undefined *PTR_DAT_0041a018;
undefined LAB_0041a3c4;
int *DAT_004745bc;
int DAT_004745b8;
undefined *PTR_PTR_00415ed4;
undefined LAB_0041a4e0;
undefined LAB_0041a5f8;
undefined DAT_0041a714;
undefined *PTR_PTR_00415fdc;
undefined LAB_0041ac30;
undefined LAB_0041ac37;
undefined LAB_0041adaf;
undefined LAB_0041adb6;
undefined *PTR_PTR_004757c8;
int DAT_004745c0;
undefined LAB_0041b4d2;
undefined LAB_0041b4fa;
undefined LAB_0041b501;
undefined LAB_0041b578;
undefined LAB_0041b680;
undefined LAB_0041b76b;
undefined *PTR_PTR_00416118;
char DAT_00474384;
LPCRITICAL_SECTION lpCriticalSection_00476668;
undefined LAB_0041c374;
undefined LAB_0041c43b;
undefined *PTR_PTR_0041b3c0;
undefined FUN_0041c46c;
undefined *PTR_PTR_00475818;
undefined LAB_0041cae2;
undefined LAB_0041d2fa;
undefined LAB_0041d327;
undefined DAT_004745c4;
undefined *PTR_PTR_0047565c;
undefined DAT_004745c7;
byte DAT_0041dc30;
undefined DAT_004745d0;
undefined LAB_0041dcea;
undefined *PTR_PTR_0041625c;
undefined4 DAT_00476664;
int DAT_00476664;
undefined LAB_0041dfd5;
undefined LAB_0041e0f4;
int DAT_0047435c;
undefined *PTR_DAT_004758fc;
undefined1 DAT_00474362;
undefined4 DAT_0041e2a8;
undefined LAB_0041e431;
undefined LAB_0041e438;
undefined LAB_0041e523;
undefined LAB_0041e596;
int DAT_004766a8;
HMODULE DAT_004766b4;
FARPROC DAT_004766b8;
string s_comctl32.dll_0041e9c8;
string s_InitCommonControlsEx_0041e9d8;
int DAT_004766b4;
undefined *DAT_004766b8;
HMODULE DAT_004766e0;
char DAT_004766ec;
undefined4 DAT_004766d4;
undefined LAB_0041ebdf;
undefined LAB_0041ebe6;
string s_GetMonitorInfoA_0041ebf8;
undefined1 DAT_004766e4;
char DAT_004766e6;
undefined *DAT_004766c4;
undefined *DAT_004766bc;
string s_MonitorFromRect_0041ed10;
undefined DAT_004766f0;
undefined DAT_004766f4;
undefined *PTR_DAT_0041f384;
undefined *PTR_DAT_004757c0;
int DAT_00474614;
undefined LAB_0041f607;
undefined LAB_0041f60e;
undefined *PTR_PTR_00475824;
undefined DAT_004069f4;
undefined DAT_00406a1c;
undefined LAB_0041f9a6;
undefined LAB_0041f9ad;
undefined *PTR_PTR_00475890;
undefined *PTR_PTR_00475744;
undefined LAB_0041fa19;
undefined LAB_0041fa20;
undefined proc_0041f490;
undefined1 DAT_0041fb18;
undefined *PTR_DAT_0041f4b4;
undefined *PTR_PTR_004755dc;
undefined *PTR_PTR_0041f618;
undefined *PTR_PTR_0040e124;
undefined LAB_0041ff88;
undefined LAB_0041ffcb;
undefined LAB_0041ffd2;
undefined *PTR_PTR_00475618;
undefined LAB_00420156;
undefined LAB_0042018d;
undefined LAB_00420194;
LPCSTR lpDefault_0042019c;
string s_device_004201a0;
string s_windows_004201a8;
int *DAT_00474614;
undefined *PTR_DAT_0041f3dc;
undefined DAT_004766fc;
undefined LAB_00420249;
undefined *DAT_00476728;
undefined *DAT_0047672c;
uint DAT_00422610;
undefined DAT_0047462c;
undefined LAB_00422ef0;
undefined LAB_00422f9a;
undefined LAB_00422fa1;
undefined LAB_0042303a;
uint DAT_0042326c;
undefined *PTR_DAT_00475700;
undefined LAB_00423728;
undefined LAB_0042372f;
int DAT_00423884;
undefined *PTR_PTR_004223b4;
undefined *PTR_PTR_004262cc;
int DAT_00423888;
undefined LAB_0042435d;
undefined LAB_0042459c;
undefined LAB_004245a3;
int DAT_004249dc;
byte DAT_00424b64;
undefined *PTR_PTR_00421b4c;
undefined LAB_00424cfa;
undefined LAB_00424d01;
int DAT_0042529c;
undefined *PTR_PTR_004224b0;
int DAT_004252a0;
string s_LISTBOX_0042579c;
undefined DAT_00474618;
undefined DAT_0047468c;
undefined DAT_00474698;
undefined DAT_004746a0;
undefined DAT_004746a8;
undefined DAT_004746b0;
undefined DAT_004746b8;
undefined DAT_004746c0;
undefined DAT_004746c8;
ushort DAT_00425900;
undefined DAT_00476734;
HANDLE DAT_004746d0;
ushort DAT_00476756;
ushort DAT_00476754;
undefined DAT_004281ec;
undefined DAT_00428230;
HANDLE DAT_00474790;
int *DAT_00474790;
undefined *PTR_PTR_00427220;
undefined *PTR_PTR_00426124;
undefined lpfn_00428914;
int *DAT_0047675c;
undefined *PTR_PTR_00426238;
undefined4 *DAT_00476780;
int *DAT_00476784;
int *DAT_00476780;
char DAT_00476778;
undefined4 DAT_0047675c;
int DAT_0047675c;
int DAT_00476774;
int DAT_0047676c;
int *DAT_00476758;
int *DAT_0047677c;
undefined *PTR_DAT_004758e0;
LPPOINT lpPoint_00476768;
HCURSOR DAT_00476770;
HWND DAT_00476764;
undefined4 DAT_00476774;
undefined *PTR_PTR_004282a0;
undefined4 DAT_00476784;
undefined1 DAT_00476760;
undefined *PTR_PTR_004261b0;
undefined LAB_004294be;
undefined *PTR_PTR_00426ca8;
int DAT_00476758;
int DAT_0047677c;
undefined LAB_00429772;
undefined LAB_00429779;
undefined LAB_0042979f;
undefined4 DAT_00476758;
int DAT_00476788;
undefined LAB_00429941;
undefined LAB_00429968;
undefined LAB_004299ea;
undefined LAB_00429a12;
undefined LAB_00429a19;
undefined LAB_00429ad1;
undefined *PTR_PTR_00435828;
int DAT_0042a060;
undefined1 DAT_0042a064;
undefined *PTR_PTR_00426528;
undefined *PTR_PTR_0043ff54;
undefined LAB_0042bb84;
undefined FUN_0042ae70;
undefined LAB_0042c9c4;
undefined DAT_004746d8;
byte DAT_0042a5b0;
undefined LAB_0042a736;
undefined *PTR_PTR_004757e8;
undefined LAB_0042a929;
undefined *PTR_PTR_0043efd8;
ushort DAT_0042aa24;
ushort DAT_0042aa28;
undefined1 DAT_0042ab7c;
byte DAT_0042ab78;
undefined *PTR_PTR_004757ec;
undefined LAB_0042ae45;
undefined LAB_0042ae4c;
undefined *PTR_PTR_004757e0;
int DAT_00476748;
char DAT_00476760;
Alignment UNK_0042bfc9;
undefined LAB_0042bfd0;
undefined LAB_0042bfe4;
string s_IsControl_0042c064;
byte DAT_0042c1c0;
byte DAT_0042c230;
ushort DAT_0042c5f4;
ushort DAT_0042c5f8;
undefined LAB_0042c9b5;
undefined LAB_0042c9bc;
undefined LAB_0042cb61;
undefined LAB_0042cb68;
undefined1 DAT_0042d01c;
undefined LAB_0042cff6;
undefined LAB_0042cffd;
undefined LAB_0042d1b8;
undefined LAB_0042d208;
undefined LAB_0042d20f;
uint DAT_0042d790;
char DAT_0042d7e4;
undefined LAB_0042d8ae;
undefined LAB_0042d95b;
undefined LAB_0042da5d;
undefined LAB_0042da64;
undefined LAB_0042db53;
undefined DAT_0042db5a;
HINSTANCE DAT_004764d8;
undefined *PTR_DAT_00475674;
undefined DAT_00007f00;
undefined LAB_0042e07a;
undefined LAB_0042e081;
undefined DefWindowProcA;
int *DAT_004746d0;
undefined LAB_0042e213;
undefined LAB_0042e21a;
undefined FUN_00427ef4;
undefined LAB_0042e2b8;
undefined LAB_0042e309;
undefined LAB_0042e572;
int DAT_00474790;
ushort DAT_0042f2e0;
ushort DAT_0042f2e4;
undefined LAB_0042f55f;
undefined LAB_0042f566;
undefined LAB_0042f5f6;
undefined LAB_0042f5fd;
undefined LAB_0042f973;
undefined LAB_0042f97a;
undefined LAB_00430a81;
undefined LAB_00430a88;
undefined LAB_00431188;
undefined LAB_0043118f;
undefined LAB_004313a6;
undefined LAB_004313ad;
byte DAT_004318d0;
byte DAT_004318cc;
undefined LAB_004318ba;
undefined LAB_00431acd;
undefined DAT_00431ad4;
undefined LAB_00432004;
undefined LAB_0043200b;
undefined LAB_00432027;
undefined LAB_00432411;
undefined *PTR_DAT_00475690;
undefined *PTR_PTR_0047571c;
undefined LAB_00432c79;
undefined *PTR_LAB_00427cbc;
undefined LAB_00432f10;
undefined LAB_00432f17;
int DAT_004747e4;
undefined LAB_00433ab0;
undefined *PTR_PTR_0047569c;
undefined *PTR_PTR_004755b4;
undefined *PTR_PTR_00475808;
undefined LAB_0043427e;
undefined LAB_00434285;
undefined LAB_004347d8;
undefined LAB_004343ff;
undefined LAB_00434406;
undefined LAB_004344bb;
undefined LAB_004344c2;
undefined4 DAT_00476748;
undefined *PTR_DAT_00475680;
undefined *PTR_DAT_004757f4;
FARPROC DAT_0047678c;
HMODULE DAT_004747f0;
FARPROC DAT_00476790;
FARPROC DAT_00476794;
FARPROC DAT_00476798;
FARPROC DAT_0047679c;
FARPROC DAT_004767a0;
undefined DAT_004767a4;
undefined DAT_004767a8;
undefined DAT_004767ac;
FARPROC DAT_004767b0;
undefined DAT_004767b4;
string s_USER32_00435234;
string s_WINNLSEnableIME_0043523c;
string s_IMM32.DLL_0043524c;
string s_ImmGetContext_00435258;
string s_ImmReleaseContext_00435268;
string s_ImmGetConversionStatus_0043527c;
string s_ImmSetConversionStatus_00435294;
string s_ImmSetOpenStatus_004352ac;
string s_ImmSetCompositionWindow_004352c0;
string s_ImmSetCompositionFontA_004352d8;
string s_ImmGetCompositionStringA_004352f0;
string s_ImmIsIME_0043530c;
string s_ImmNotifyIME_00435318;
undefined *DAT_0047678c;
int DAT_004747f0;
undefined *DAT_00476790;
undefined *DAT_00476798;
undefined *DAT_004767a0;
undefined *DAT_0047679c;
undefined *DAT_00476794;
undefined *DAT_004767b0;
int *DAT_00476748;
int *DAT_00476788;
ATOM DAT_00476756;
ATOM DAT_00476754;
undefined *PTR_PTR_00435750;
undefined *PTR_PTR_0043562c;
undefined *PTR_PTR_0043f2bc;
undefined *PTR_LAB_0043591c;
undefined DAT_004767b8;
undefined *PTR_PTR_0047563c;
undefined LAB_00436811;
undefined *PTR_PTR_004757cc;
undefined LAB_00436b17;
undefined LAB_00436b1e;
undefined DAT_004747fc;
undefined LAB_00436bb6;
undefined LAB_00436bbd;
undefined LAB_00436bd3;
undefined LAB_00436cef;
undefined LAB_00436cf6;
undefined *PTR_PTR_004755f8;
undefined LAB_00436ebb;
undefined LAB_00436ec2;
undefined LAB_00436ed8;
undefined LAB_00436ef8;
undefined LAB_00436f47;
undefined LAB_00436f4e;
undefined *PTR_PTR_0047564c;
undefined LAB_00436fd7;
undefined DAT_00474804;
undefined DAT_00474814;
undefined LAB_004373c2;
undefined LAB_004373c9;
undefined LAB_004373df;
undefined LAB_00437608;
undefined LAB_0043760f;
undefined LAB_004377e7;
undefined LAB_004377ee;
undefined LAB_00437804;
undefined *PTR_PTR_00436548;
undefined LAB_00437b30;
undefined LAB_00437b4d;
undefined *PTR_PTR_0040e5c0;
undefined *PTR_PTR_004757f8;
undefined LAB_00437bd5;
undefined *PTR_PTR_004756bc;
undefined LAB_00437cd9;
undefined *PTR_DAT_00437d8c;
undefined4 *DAT_0047486c;
undefined4 *DAT_00474870;
undefined4 *DAT_00474874;
int DAT_00474838;
int DAT_0047483c;
undefined LAB_00438ee5;
undefined LAB_00438eec;
undefined DAT_00438efc;
pointer PTR_s_crHandPoint_0047477c;
undefined DAT_004747b0;
undefined DAT_00474810;
undefined *DAT_0047486c;
undefined *DAT_00474870;
undefined *DAT_00474874;
undefined LAB_00439037;
undefined LAB_0043903e;
undefined DAT_00439050;
int DAT_004767cc;
undefined *PTR_DAT_00436454;
undefined LAB_0043bcc8;
undefined *PTR_PTR_0043859c;
undefined LAB_00439867;
undefined DAT_0043988c;
undefined DAT_00474878;
undefined DAT_00474880;
undefined DAT_00474888;
undefined DAT_00474894;
undefined DAT_0047489c;
undefined DAT_004748a8;
undefined DAT_004748b0;
undefined DAT_004748b8;
undefined DAT_004748c0;
undefined DAT_004748c8;
undefined DAT_004748d0;
undefined DAT_004748d8;
undefined LAB_00439890;
undefined LAB_00439966;
undefined LAB_0043996d;
undefined *PTR_PTR_004755e4;
undefined *PTR_PTR_00438874;
byte DAT_00439d58;
undefined LAB_00439d2f;
undefined LAB_00439d36;
undefined DAT_00439d48;
undefined DAT_00439d54;
undefined1 DAT_0043a61c;
undefined DAT_00007ff8;
undefined LAB_0043a601;
undefined DAT_0043a618;
undefined DAT_004748e0;
undefined DAT_004748e8;
undefined1 DAT_0043aec4;
undefined LAB_0043aeab;
undefined DAT_0043aec0;
undefined LAB_0043b23e;
undefined LAB_0043b258;
undefined DAT_004748f0;
byte UNK_00000050;
undefined *PTR_PTR_004756d4;
undefined *PTR_PTR_004758f0;
undefined FUN_0043b7bc;
undefined *PTR_PTR_0047585c;
undefined LAB_0043ba98;
undefined FUN_0043bcd4;
undefined *PTR_DAT_004758ec;
undefined LAB_0043bee6;
undefined DAT_0043befc;
undefined DAT_0043bf14;
undefined DAT_0043bf20;
undefined *PTR_s_1234567890ABCDEFGHIJKLMNOPQRSTUV_0047481c;
undefined LAB_0043c357;
undefined LAB_0043c396;
undefined LAB_0043c39d;
undefined DAT_0043c3b0;
undefined LAB_0043c3bc;
undefined DAT_0043c3f0;
undefined DAT_00474828;
undefined DAT_0047482c;
undefined *PTR_PTR_004380ac;
undefined LAB_0043cdf8;
undefined FUN_0043c6a4;
undefined FUN_0043c6e4;
undefined LAB_0043c9f5;
undefined LAB_0043cd48;
ushort DAT_0043cdf0;
ushort DAT_0043cdf4;
undefined LAB_0043cfb5;
undefined LAB_0043cfbc;
undefined LAB_0043d3b6;
int *DAT_004767c0;
undefined LAB_0043ddf1;
undefined LAB_0043ddf8;
int *DAT_004767d0;
HWND DAT_00474914;
undefined4 *DAT_00474920;
undefined4 DAT_00474914;
undefined lpfn_004403ac;
undefined4 DAT_00474920;
undefined LAB_00440468;
undefined LAB_0044049f;
int DAT_004767d0;
HWND DAT_00474918;
HWND DAT_0047491c;
int DAT_00474918;
int DAT_0047491c;
undefined lpfn_004404e8;
int DAT_00474910;
undefined lpfn_004405a8;
undefined4 *DAT_004767dc;
undefined1 *DAT_004767e0;
undefined DAT_00474924;
int DAT_004767e0;
undefined DAT_00474938;
undefined *PTR_s_TPUtilWindow_0047494c;
LPCSTR lpWindowName_0044080c;
WNDCLASSA *lpWndClass_00474928;
byte DAT_00440888;
byte DAT_004408c4;
byte DAT_00440910;
undefined LAB_00440972;
undefined LAB_00440979;
undefined LAB_00440a1d;
byte DAT_00440ba8;
byte DAT_00440bac;
byte DAT_00440c10;
byte DAT_00440c14;
undefined *PTR_DAT_00475598;
undefined *PTR_DAT_004756f8;
undefined *PTR_DAT_004758cc;
undefined *PTR_DAT_004757b4;
undefined *PTR_PTR_0043dfc0;
undefined LAB_00441953;
undefined LAB_00441c02;
undefined *PTR_PTR_0043e49c;
undefined LAB_00441d91;
undefined *PTR_DAT_004758d4;
undefined LAB_00441fc4;
undefined LAB_00441ffc;
undefined LAB_00442003;
undefined LAB_0044201c;
int DAT_004421d4;
undefined1 DAT_004421d8;
int DAT_004767d4;
undefined FUN_0044291c;
undefined LAB_0044230e;
undefined LAB_00442315;
undefined LAB_00442369;
undefined LAB_004423dd;
undefined LAB_00442894;
byte DAT_00442c4c;
byte DAT_00442c7c;
undefined *PTR_PTR_004384a8;
undefined *PTR_DAT_00475714;
undefined *PTR_PTR_00475628;
undefined LAB_00443984;
undefined LAB_0044398b;
undefined DAT_0047499c;
undefined DefMDIChildProcA;
byte DAT_00444090;
byte DAT_0044408c;
byte DAT_00444088;
undefined *PTR_PTR_00475858;
undefined LAB_00444424;
undefined LAB_0044442b;
undefined LAB_00445d67;
undefined *PTR_PTR_00475720;
undefined4 DAT_00474910;
undefined LAB_00446017;
undefined LAB_004466bd;
undefined LAB_004466c4;
undefined *PTR_DAT_00475668;
undefined *PTR_DAT_00440118;
undefined *PTR_DAT_00475754;
undefined LAB_004470b4;
undefined4 DAT_004749c0;
undefined LAB_00447043;
undefined LAB_0044704a;
string s_System\CurrentControlSet\Control_00447054;
string s_layout_text_0044708c;
undefined LAB_004476aa;
undefined LAB_00447731;
undefined LAB_004477cd;
DWORD DAT_004767e4;
HANDLE DAT_004767e8;
HHOOK DAT_004767ec;
HANDLE DAT_004767f0;
undefined FUN_0044784c;
undefined lpStartAddress_004477f0;
undefined *PTR_DAT_0047555c;
string s_MAINICON_00447b84;
undefined LAB_004495a4;
undefined *PTR_s_TApplication_00474a38;
undefined DAT_00474a24;
undefined *PTR_PTR_004755d8;
undefined LAB_00447e01;
undefined LAB_00447e08;
WNDCLASSA *lpWndClass_00474a14;
undefined lpEnumFunc_00447e70;
undefined *PTR_DAT_004758b8;
undefined1 DAT_0047490c;
undefined LAB_00448760;
string s_vcltest3.dll_00448784;
string s_RegisterAutomation_00448794;
undefined LAB_00448a51;
undefined LAB_00448a58;
undefined *PTR_DAT_00475734;
undefined LAB_00448e2a;
undefined *PTR_DAT_00475784;
undefined LAB_00448f16;
undefined FUN_00440374;
undefined *PTR_DAT_004076bc;
undefined LAB_004491d7;
undefined LAB_004491de;
undefined DAT_004491e4;
undefined DAT_004491f0;
undefined *PTR_PTR_00474908;
undefined LAB_00449510;
undefined LAB_00449557;
undefined LAB_0044955e;
undefined *PTR_PTR_00425ef0;
undefined LAB_0044968d;
byte DAT_00474a3c;
undefined DAT_00474a40;
undefined lpTimerFunc_0044779c;
undefined LAB_00449a9f;
undefined LAB_00449aa6;
undefined *PTR_DAT_00440228;
undefined LAB_00449ecc;
undefined LAB_00449ed3;
undefined DAT_004767f4;
uint DAT_0044ba24;
undefined FUN_0044bd30;
uint DAT_0044be44;
undefined *PTR_PTR_004758dc;
undefined LAB_0044c477;
int DAT_0044c564;
undefined LAB_0044cac2;
undefined LAB_0044d22b;
undefined LAB_0044d298;
undefined DAT_0047680c;
int DAT_00474a5c;
undefined DAT_0044e3c4;
undefined4 DAT_004764d8;
char DAT_00474a58;
undefined LAB_0044dd58;
undefined LAB_0044e5e0;
undefined LAB_0044e5e7;
undefined DAT_0044e5f0;
undefined4 DAT_00474a64;
undefined FUN_0044e024;
undefined LAB_0044e721;
undefined LAB_0044e728;
undefined DAT_0044e738;
undefined LAB_0044e7e7;
undefined LAB_0044e7ee;
undefined DAT_0044a160;
undefined *PTR_PTR_0044e9b0;
undefined *PTR_PTR_0044a1a0;
undefined *PTR_PTR_004206e8;
undefined LAB_0044eb8c;
undefined LAB_0044f187;
undefined LAB_0044f18e;
string s_Image_0044f1a0;
string s_Message_0044f1b0;
undefined *PTR_PTR_00474ab4;
undefined DAT_00474ac8;
pointer PTR_DAT_00474adc;
pointer PTR_PTR_00474b08;
undefined4 DAT_00474b34;
undefined4 DAT_00476820;
undefined LAB_0044f278;
undefined LAB_0044f27f;
undefined1 DAT_0044f844;
undefined LAB_0044fc2f;
int DAT_00476864;
undefined LAB_00451f08;
undefined LAB_00451f0f;
undefined LAB_00451f30;
undefined *PTR_PTR_0044ffcc;
int DAT_0045224c;
undefined *PTR_PTR_0045016c;
undefined DAT_00452488;
undefined DAT_00452494;
undefined DAT_00474ba0;
undefined LAB_004528f0;
undefined LAB_004528f7;
undefined DAT_00452908;
undefined DAT_00452914;
undefined LAB_00452a2c;
int DAT_00452d98;
byte DAT_00474ba8;
byte DAT_00474bac;
byte DAT_00474bae;
byte DAT_00474bb0;
byte DAT_00474bb2;
byte DAT_00474bb6;
byte DAT_00474baa;
undefined DAT_00474bc4;
int DAT_00453bdc;
char DAT_00453be0;
undefined *PTR_PTR_0044f66c;
undefined LAB_00454ed8;
undefined LAB_00454f7c;
undefined LAB_00455020;
undefined *PTR_PTR_00450b54;
undefined LAB_00453f77;
undefined LAB_00453f7e;
undefined LAB_004540fb;
undefined LAB_00454176;
byte DAT_00474bbe;
undefined LAB_0045458f;
undefined LAB_00454596;
undefined DAT_00474bb8;
undefined LAB_00454793;
undefined LAB_0045479a;
undefined LAB_004548a9;
undefined LAB_004549aa;
undefined LAB_00454aa3;
undefined LAB_00454d4d;
undefined LAB_00454d54;
undefined LAB_00454dca;
undefined LAB_00455519;
undefined *PTR_DAT_0040dd64;
undefined LAB_00456039;
undefined LAB_00456ba3;
undefined LAB_00456baa;
int DAT_0047686c;
int DAT_00476874;
int *DAT_00476878;
HHOOK DAT_00476868;
char DAT_00474be4;
char DAT_00476884;
int *DAT_0047686c;
LPPOINT lpPoint_0047687c;
int DAT_00476880;
undefined1 DAT_00476884;
undefined FUN_00456dc8;
undefined4 DAT_00476878;
undefined4 DAT_0047686c;
undefined4 DAT_00476874;
undefined1 DAT_00474be4;
int *DAT_00476870;
HHOOK DAT_00476888;
int DAT_00476868;
undefined FUN_0045710c;
undefined4 DAT_00476870;
undefined LAB_004574da;
undefined LAB_00457538;
undefined LAB_00457824;
undefined DAT_0045782b;
undefined *PTR_PTR_00458058;
undefined FUN_00458510;
int *DAT_00474c14;
undefined *PTR_DAT_00458110;
int DAT_00474c14;
undefined LAB_00458b8f;
undefined DAT_00458b96;
undefined *PTR_DAT_00458168;
int DAT_00459190;
undefined DAT_00474c18;
undefined LAB_00459700;
undefined LAB_00459992;
undefined LAB_00459999;
undefined4 DAT_004768a0;
undefined DAT_0045b310;
undefined DAT_0045b31c;
undefined LAB_0045b439;
undefined LAB_0045b440;
string s_\...\_0045b454;
undefined LAB_0045b5dd;
undefined DAT_0045b5f4;
undefined LAB_0045b600;
undefined LAB_0045b6d8;
undefined LAB_0045b6df;
undefined LAB_0045b949;
undefined LAB_0045b96b;
undefined DAT_0045b984;
undefined DAT_0045b990;
undefined DAT_0045b99c;
undefined LAB_0045bb39;
undefined LAB_0045bb40;
string s_%s:_%s_0045bb50;
undefined LAB_0045be57;
undefined LAB_0045be5e;
undefined LAB_0045c01e;
LPCSTR lpBitmapName_0045c1e4;
string s_FLOPPY_0045c1dc;
string s_NETWORK_0045c1ec;
string s_CDROM_0045c1f4;
undefined LAB_0045c1fc;
undefined LAB_0045c3d1;
undefined LAB_0045c3d8;
undefined LAB_0045c3e0;
undefined LAB_0045c4d8;
undefined LAB_0045c4df;
undefined *PTR_DAT_00407634;
undefined LAB_0045c613;
undefined LAB_0045c61a;
undefined LAB_0045c644;
undefined DAT_0045c65c;
undefined DAT_0045c668;
undefined DAT_0045c674;
undefined LAB_0045cd84;
undefined LAB_0045cd8b;
undefined LAB_0045cd9c;
undefined LAB_0045cffc;
undefined LAB_0045d003;
undefined LAB_0045d732;
undefined LAB_0045d739;
undefined *PTR_LAB_0045e130;
undefined LAB_0045e704;
undefined LAB_0045e70b;
undefined LAB_0045e721;
undefined DAT_0045e738;
undefined UNK_0045e9c7;
undefined DAT_0045e9cc;
undefined DAT_0045e9d0;
undefined DAT_0045eb58;
undefined DAT_0045eb5c;
undefined *PTR_PTR_004756e8;
undefined LAB_0045ec73;
undefined LAB_0045ec7a;
undefined LAB_0045ed23;
undefined LAB_0045ed2a;
undefined *PTR_PTR_00475788;
undefined *PTR_LAB_0045efe4;
undefined LAB_0045f0b5;
undefined LAB_0045f0bc;
undefined LAB_0045f284;
undefined LAB_0045f587;
pointer PTR_FUN_00474c48;
undefined LAB_0045f623;
undefined LAB_0045f943;
undefined LAB_0045f94a;
undefined LAB_0045f960;
undefined LAB_0045f971;
undefined LAB_0045f9a8;
undefined *PTR_LAB_0045ee64;
undefined LAB_0045ff19;
undefined LAB_0045ff20;
undefined LAB_0045ff2a;
undefined LAB_0045ff59;
undefined *PTR_PTR_0045ee08;
undefined LAB_00460232;
undefined1 DAT_00474c43;
undefined DAT_00474cbc;
undefined DAT_00474cc4;
undefined FUN_00460dc4;
undefined FUN_0046096c;
undefined FUN_004610b4;
undefined FUN_00460a9c;
undefined FUN_00461200;
undefined FUN_00460b3c;
undefined FUN_00461450;
undefined FUN_00460c10;
undefined FUN_0046134c;
undefined FUN_00460cf4;
undefined FUN_00460d5c;
undefined FUN_004619f0;
undefined LAB_004619e0;
undefined FUN_004619a8;
undefined FUN_00461a9c;
undefined LAB_00461b20;
undefined DAT_00461bc8;
undefined FUN_00461b2c;
undefined FUN_00461b9c;
undefined FUN_0046bc28;
undefined LAB_00462654;
undefined FUN_0046250c;
undefined FUN_00462a24;
undefined FUN_00462c70;
undefined FUN_00462f10;
undefined FUN_00463028;
undefined DAT_00474ccc;
undefined DAT_00474d0c;
undefined4 DAT_00474f98;
undefined FUN_00462714;
undefined DAT_00474d4c;
undefined DAT_00474d8c;
undefined FUN_00463a94;
undefined FUN_004634e0;
undefined LAB_00464028;
undefined FUN_0046403c;
undefined LAB_004640f4;
undefined FUN_0046412c;
undefined FUN_004642a4;
undefined DAT_00464938;
undefined FUN_00464614;
undefined FUN_0046471c;
undefined FUN_0046478c;
undefined FUN_004647ac;
undefined FUN_004647f8;
undefined4 DAT_00474ecc;
undefined1 DAT_00474dcc;
undefined FUN_00465074;
undefined FUN_00465114;
undefined FUN_004651b0;
undefined FUN_004652c4;
undefined FUN_004653dc;
undefined DAT_004656b8;
undefined LAB_004656bc;
undefined FUN_004655dc;
undefined LAB_00465760;
undefined FUN_00466398;
undefined FUN_00466464;
undefined LAB_004667f8;
undefined DAT_0046681c;
undefined LAB_00466938;
undefined FUN_00466820;
undefined LAB_00466e38;
undefined LAB_004678fc;
undefined FUN_0046761c;
undefined LAB_0046718c;
undefined LAB_00467428;
undefined FUN_0046719c;
undefined FUN_004671d8;
undefined FUN_0046742c;
undefined LAB_004681dc;
undefined LAB_004684d0;
undefined LAB_004687bc;
undefined FUN_004688f0;
undefined FUN_004689ac;
undefined FUN_00468a08;
undefined FUN_00468a98;
undefined FUN_00468b4c;
undefined FUN_004687d4;
undefined FUN_004688d4;
undefined FUN_004688e0;
undefined DAT_004692d8;
undefined DAT_004692dc;
undefined DAT_004692e0;
undefined DAT_004692e4;
undefined FUN_0046bd24;
undefined FUN_0046a9dc;
undefined FUN_0046ac60;
undefined FUN_0046b8a0;
undefined FUN_0046bb98;
undefined FUN_0046b65c;
undefined FUN_0046bedc;
undefined FUN_0046bf24;
undefined FUN_0046beb0;
undefined DAT_004750d8;
undefined DAT_004751d8;
undefined LAB_0046d56c;
undefined FUN_0046d378;
undefined FUN_0046d3bc;
undefined FUN_0046d3f0;
undefined FUN_0046d4c8;
undefined FUN_0046d578;
undefined FUN_0046de8c;
undefined FUN_0046e028;
undefined FUN_0046e050;
undefined LAB_0046e174;
undefined FUN_0046e2d0;
undefined FUN_0046e344;
undefined FUN_0046e4a4;
undefined FUN_0046e8ec;
undefined FUN_0046eb1c;
undefined FUN_0046edac;
undefined FUN_0046e858;
undefined LAB_0046f03c;
undefined DAT_0046f474;
undefined FUN_0046f0dc;
undefined FUN_0046f1e4;
undefined FUN_0046f270;
undefined FUN_0046f3b4;
undefined FUN_0046f400;
undefined DAT_0046f6c4;
undefined FUN_0046f79c;
undefined FUN_0046f8ac;
undefined FUN_0046f8f8;
undefined FUN_0046f98c;
undefined FUN_0046fa44;
undefined FUN_0046fcd4;
undefined FUN_0046f718;
undefined LAB_0046ffec;
undefined LAB_004701f8;
undefined LAB_0047034c;
undefined LAB_00471058;
undefined LAB_0047143c;
undefined LAB_004716a8;
undefined LAB_0047056c;
undefined4 DAT_00474f9c;
undefined LAB_004719d4;
undefined DAT_004768e0;
char *DAT_004768e8;
int DAT_004768e4;
undefined *PTR_s_0123456789ABCDEFGHKLMNPRSTUVWXYZ_0047553c;
undefined DAT_00473250;
undefined DAT_0047325c;
undefined LAB_00473222;
undefined LAB_00473229;
undefined DAT_00473238;
undefined DAT_0047327c;
string s__00473288;
undefined DAT_00473298;
undefined DAT_00476ac0;
undefined *PTR_DAT_0047589c;
undefined *PTR_PTR_0047286c;
undefined *PTR_DAT_00475624;
undefined *PTR_PTR_00472648;
undefined LAB_00473988;
undefined DAT_00473ba8;

BOOL __stdcall CloseHandle(HANDLE hObject)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004011f0. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = CloseHandle(hObject);
  return BVar1;
}



HANDLE __stdcall
CreateFileA(LPCSTR lpFileName,DWORD dwDesiredAccess,DWORD dwShareMode,
           LPSECURITY_ATTRIBUTES lpSecurityAttributes,DWORD dwCreationDisposition,
           DWORD dwFlagsAndAttributes,HANDLE hTemplateFile)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x004011f8. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = CreateFileA(lpFileName,dwDesiredAccess,dwShareMode,lpSecurityAttributes,
                       dwCreationDisposition,dwFlagsAndAttributes,hTemplateFile);
  return pvVar1;
}



DWORD __stdcall GetFileType(HANDLE hFile)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401200. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetFileType(hFile);
  return DVar1;
}



DWORD __stdcall GetFileSize(HANDLE hFile,LPDWORD lpFileSizeHigh)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401208. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetFileSize(hFile,lpFileSizeHigh);
  return DVar1;
}



HANDLE __stdcall GetStdHandle(DWORD nStdHandle)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401210. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = GetStdHandle(nStdHandle);
  return pvVar1;
}



void __stdcall
RaiseException(DWORD dwExceptionCode,DWORD dwExceptionFlags,DWORD nNumberOfArguments,
              ULONG_PTR *lpArguments)

{
                    // WARNING: Could not recover jumptable at 0x00401218. Too many branches
                    // WARNING: Treating indirect jump as call
  RaiseException(dwExceptionCode,dwExceptionFlags,nNumberOfArguments,lpArguments);
  return;
}



BOOL __stdcall
ReadFile(HANDLE hFile,LPVOID lpBuffer,DWORD nNumberOfBytesToRead,LPDWORD lpNumberOfBytesRead,
        LPOVERLAPPED lpOverlapped)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401220. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ReadFile(hFile,lpBuffer,nNumberOfBytesToRead,lpNumberOfBytesRead,lpOverlapped);
  return BVar1;
}



void __stdcall
RtlUnwind(PVOID TargetFrame,PVOID TargetIp,PEXCEPTION_RECORD ExceptionRecord,PVOID ReturnValue)

{
                    // WARNING: Could not recover jumptable at 0x00401228. Too many branches
                    // WARNING: Treating indirect jump as call
  RtlUnwind(TargetFrame,TargetIp,ExceptionRecord,ReturnValue);
  return;
}



BOOL __stdcall SetEndOfFile(HANDLE hFile)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401230. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetEndOfFile(hFile);
  return BVar1;
}



DWORD __stdcall
SetFilePointer(HANDLE hFile,LONG lDistanceToMove,PLONG lpDistanceToMoveHigh,DWORD dwMoveMethod)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401238. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = SetFilePointer(hFile,lDistanceToMove,lpDistanceToMoveHigh,dwMoveMethod);
  return DVar1;
}



LONG __stdcall UnhandledExceptionFilter(_EXCEPTION_POINTERS *ExceptionInfo)

{
  LONG LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401240. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = UnhandledExceptionFilter(ExceptionInfo);
  return LVar1;
}



BOOL __stdcall
WriteFile(HANDLE hFile,LPCVOID lpBuffer,DWORD nNumberOfBytesToWrite,LPDWORD lpNumberOfBytesWritten,
         LPOVERLAPPED lpOverlapped)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401248. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = WriteFile(hFile,lpBuffer,nNumberOfBytesToWrite,lpNumberOfBytesWritten,lpOverlapped);
  return BVar1;
}



LPSTR __stdcall CharNextA(LPCSTR lpsz)

{
  LPSTR pCVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401250. Too many branches
                    // WARNING: Treating indirect jump as call
  pCVar1 = CharNextA(lpsz);
  return pCVar1;
}



void __stdcall ExitProcess(UINT uExitCode)

{
                    // WARNING: Could not recover jumptable at 0x00401258. Too many branches
                    // WARNING: Subroutine does not return
                    // WARNING: Treating indirect jump as call
  ExitProcess(uExitCode);
  return;
}



int __stdcall MessageBoxA(HWND hWnd,LPCSTR lpText,LPCSTR lpCaption,UINT uType)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401260. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = MessageBoxA(hWnd,lpText,lpCaption,uType);
  return iVar1;
}



BOOL __stdcall FindClose(HANDLE hFindFile)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401268. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = FindClose(hFindFile);
  return BVar1;
}



HANDLE __stdcall FindFirstFileA(LPCSTR lpFileName,LPWIN32_FIND_DATAA lpFindFileData)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401270. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = FindFirstFileA(lpFileName,lpFindFileData);
  return pvVar1;
}



BOOL __stdcall FreeLibrary(HMODULE hLibModule)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401278. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = FreeLibrary(hLibModule);
  return BVar1;
}



LPSTR __stdcall GetCommandLineA(void)

{
  LPSTR pCVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401280. Too many branches
                    // WARNING: Treating indirect jump as call
  pCVar1 = GetCommandLineA();
  return pCVar1;
}



DWORD __stdcall GetCurrentDirectoryA(DWORD nBufferLength,LPSTR lpBuffer)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401288. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetCurrentDirectoryA(nBufferLength,lpBuffer);
  return DVar1;
}



DWORD __stdcall GetLastError(void)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401290. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetLastError();
  return DVar1;
}



int __stdcall GetLocaleInfoA(LCID Locale,LCTYPE LCType,LPSTR lpLCData,int cchData)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401298. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetLocaleInfoA(Locale,LCType,lpLCData,cchData);
  return iVar1;
}



DWORD __stdcall GetModuleFileNameA(HMODULE hModule,LPSTR lpFilename,DWORD nSize)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012a0. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetModuleFileNameA(hModule,lpFilename,nSize);
  return DVar1;
}



HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)

{
  HMODULE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012a8. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetModuleHandleA(lpModuleName);
  return pHVar1;
}



FARPROC __stdcall GetProcAddress(HMODULE hModule,LPCSTR lpProcName)

{
  FARPROC pFVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012b0. Too many branches
                    // WARNING: Treating indirect jump as call
  pFVar1 = GetProcAddress(hModule,lpProcName);
  return pFVar1;
}



void __stdcall GetStartupInfoA(LPSTARTUPINFOA lpStartupInfo)

{
                    // WARNING: Could not recover jumptable at 0x004012b8. Too many branches
                    // WARNING: Treating indirect jump as call
  GetStartupInfoA(lpStartupInfo);
  return;
}



LCID __stdcall GetThreadLocale(void)

{
  LCID LVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012c0. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = GetThreadLocale();
  return LVar1;
}



HMODULE __stdcall LoadLibraryExA(LPCSTR lpLibFileName,HANDLE hFile,DWORD dwFlags)

{
  HMODULE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012c8. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = LoadLibraryExA(lpLibFileName,hFile,dwFlags);
  return pHVar1;
}



int __stdcall LoadStringA(HINSTANCE hInstance,UINT uID,LPSTR lpBuffer,int cchBufferMax)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012d0. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = LoadStringA(hInstance,uID,lpBuffer,cchBufferMax);
  return iVar1;
}



LPSTR __stdcall lstrcpyA(LPSTR lpString1,LPCSTR lpString2)

{
  LPSTR pCVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012d8. Too many branches
                    // WARNING: Treating indirect jump as call
  pCVar1 = lstrcpyA(lpString1,lpString2);
  return pCVar1;
}



LPSTR __stdcall lstrcpynA(LPSTR lpString1,LPCSTR lpString2,int iMaxLength)

{
  LPSTR pCVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012e0. Too many branches
                    // WARNING: Treating indirect jump as call
  pCVar1 = lstrcpynA(lpString1,lpString2,iMaxLength);
  return pCVar1;
}



int __stdcall lstrlenA(LPCSTR lpString)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012e8. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = lstrlenA(lpString);
  return iVar1;
}



int __stdcall
MultiByteToWideChar(UINT CodePage,DWORD dwFlags,LPCSTR lpMultiByteStr,int cbMultiByte,
                   LPWSTR lpWideCharStr,int cchWideChar)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012f0. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = MultiByteToWideChar(CodePage,dwFlags,lpMultiByteStr,cbMultiByte,lpWideCharStr,cchWideChar)
  ;
  return iVar1;
}



LSTATUS __stdcall RegCloseKey(HKEY hKey)

{
  LSTATUS LVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012f8. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = RegCloseKey(hKey);
  return LVar1;
}



LSTATUS __stdcall
RegOpenKeyExA(HKEY hKey,LPCSTR lpSubKey,DWORD ulOptions,REGSAM samDesired,PHKEY phkResult)

{
  LSTATUS LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401300. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = RegOpenKeyExA(hKey,lpSubKey,ulOptions,samDesired,phkResult);
  return LVar1;
}



LSTATUS __stdcall
RegQueryValueExA(HKEY hKey,LPCSTR lpValueName,LPDWORD lpReserved,LPDWORD lpType,LPBYTE lpData,
                LPDWORD lpcbData)

{
  LSTATUS LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401308. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = RegQueryValueExA(hKey,lpValueName,lpReserved,lpType,lpData,lpcbData);
  return LVar1;
}



BOOL __stdcall SetCurrentDirectoryA(LPCSTR lpPathName)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401310. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetCurrentDirectoryA(lpPathName);
  return BVar1;
}



int __stdcall
WideCharToMultiByte(UINT CodePage,DWORD dwFlags,LPCWSTR lpWideCharStr,int cchWideChar,
                   LPSTR lpMultiByteStr,int cbMultiByte,LPCSTR lpDefaultChar,
                   LPBOOL lpUsedDefaultChar)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401318. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = WideCharToMultiByte(CodePage,dwFlags,lpWideCharStr,cchWideChar,lpMultiByteStr,cbMultiByte,
                              lpDefaultChar,lpUsedDefaultChar);
  return iVar1;
}



SIZE_T __stdcall VirtualQuery(LPCVOID lpAddress,PMEMORY_BASIC_INFORMATION lpBuffer,SIZE_T dwLength)

{
  SIZE_T SVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401320. Too many branches
                    // WARNING: Treating indirect jump as call
  SVar1 = VirtualQuery(lpAddress,lpBuffer,dwLength);
  return SVar1;
}



BSTR __stdcall SysAllocStringLen(OLECHAR *strIn,UINT ui)

{
  BSTR pOVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401328. Too many branches
                    // WARNING: Treating indirect jump as call
  pOVar1 = SysAllocStringLen(strIn,ui);
  return pOVar1;
}



INT __stdcall SysReAllocStringLen(BSTR *pbstr,OLECHAR *psz,uint len)

{
  INT IVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401330. Too many branches
                    // WARNING: Treating indirect jump as call
  IVar1 = SysReAllocStringLen(pbstr,psz,len);
  return IVar1;
}



void __stdcall SysFreeString(BSTR bstrString)

{
                    // WARNING: Could not recover jumptable at 0x00401338. Too many branches
                    // WARNING: Treating indirect jump as call
  SysFreeString(bstrString);
  return;
}



UINT __stdcall SysStringLen(BSTR param_1)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401340. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = SysStringLen(param_1);
  return UVar1;
}



HRESULT __stdcall VariantClear(VARIANTARG *pvarg)

{
  HRESULT HVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401348. Too many branches
                    // WARNING: Treating indirect jump as call
  HVar1 = VariantClear(pvarg);
  return HVar1;
}



HRESULT __stdcall VariantCopyInd(VARIANT *pvarDest,VARIANTARG *pvargSrc)

{
  HRESULT HVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401350. Too many branches
                    // WARNING: Treating indirect jump as call
  HVar1 = VariantCopyInd(pvarDest,pvargSrc);
  return HVar1;
}



HRESULT __stdcall
VariantChangeTypeEx(VARIANTARG *pvargDest,VARIANTARG *pvarSrc,LCID lcid,USHORT wFlags,VARTYPE vt)

{
  HRESULT HVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401358. Too many branches
                    // WARNING: Treating indirect jump as call
  HVar1 = VariantChangeTypeEx(pvargDest,pvarSrc,lcid,wFlags,vt);
  return HVar1;
}



LONG __stdcall InterlockedIncrement(LONG *lpAddend)

{
  LONG LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401360. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = InterlockedIncrement(lpAddend);
  return LVar1;
}



LONG __stdcall InterlockedDecrement(LONG *lpAddend)

{
  LONG LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401368. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = InterlockedDecrement(lpAddend);
  return LVar1;
}



WORD FUN_00401370(void)

{
  WORD WVar1;
  _STARTUPINFOA _Stack_48;
  
  GetStartupInfoA(&_Stack_48);
  WVar1 = 10;
  if (((byte)_Stack_48.dwFlags & 1) != 0) {
    WVar1 = _Stack_48.wShowWindow;
  }
  return WVar1;
}



HLOCAL __stdcall LocalAlloc(UINT uFlags,SIZE_T uBytes)

{
  HLOCAL pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401394. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = LocalAlloc(uFlags,uBytes);
  return pvVar1;
}



HLOCAL __stdcall LocalFree(HLOCAL hMem)

{
  HLOCAL pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040139c. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = LocalFree(hMem);
  return pvVar1;
}



LPVOID __stdcall VirtualAlloc(LPVOID lpAddress,SIZE_T dwSize,DWORD flAllocationType,DWORD flProtect)

{
  LPVOID pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x004013a4. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = VirtualAlloc(lpAddress,dwSize,flAllocationType,flProtect);
  return pvVar1;
}



BOOL __stdcall VirtualFree(LPVOID lpAddress,SIZE_T dwSize,DWORD dwFreeType)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004013ac. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = VirtualFree(lpAddress,dwSize,dwFreeType);
  return BVar1;
}



void __stdcall InitializeCriticalSection(LPCRITICAL_SECTION lpCriticalSection)

{
                    // WARNING: Could not recover jumptable at 0x004013b4. Too many branches
                    // WARNING: Treating indirect jump as call
  InitializeCriticalSection(lpCriticalSection);
  return;
}



void __stdcall EnterCriticalSection(LPCRITICAL_SECTION lpCriticalSection)

{
                    // WARNING: Could not recover jumptable at 0x004013bc. Too many branches
                    // WARNING: Treating indirect jump as call
  EnterCriticalSection(lpCriticalSection);
  return;
}



void __stdcall LeaveCriticalSection(LPCRITICAL_SECTION lpCriticalSection)

{
                    // WARNING: Could not recover jumptable at 0x004013c4. Too many branches
                    // WARNING: Treating indirect jump as call
  LeaveCriticalSection(lpCriticalSection);
  return;
}



void __stdcall DeleteCriticalSection(LPCRITICAL_SECTION lpCriticalSection)

{
                    // WARNING: Could not recover jumptable at 0x004013cc. Too many branches
                    // WARNING: Treating indirect jump as call
  DeleteCriticalSection(lpCriticalSection);
  return;
}



int * FUN_004013d4(void)

{
  undefined4 *puVar1;
  int *piVar2;
  int iVar3;
  
  if (DAT_00476450 == (int *)0x0) {
    puVar1 = (undefined4 *)LocalAlloc(0,0x644);
    if (puVar1 == (undefined4 *)0x0) {
      return (int *)0x0;
    }
    *puVar1 = DAT_0047644c;
    iVar3 = 0;
    DAT_0047644c = puVar1;
    do {
      piVar2 = puVar1 + iVar3 * 4 + 1;
      *piVar2 = (int)DAT_00476450;
      iVar3 = iVar3 + 1;
      DAT_00476450 = piVar2;
    } while (iVar3 != 100);
  }
  piVar2 = DAT_00476450;
  DAT_00476450 = (int *)*DAT_00476450;
  return piVar2;
}



void FUN_00401424(int param_1)

{
  *(int *)param_1 = param_1;
  *(int *)(param_1 + 4) = param_1;
  return;
}



undefined4 FUN_0040142c(int *param_1,int *param_2)

{
  int iVar1;
  int *piVar2;
  
  piVar2 = FUN_004013d4();
  if (piVar2 == (int *)0x0) {
    return 0;
  }
  piVar2[2] = *param_2;
  piVar2[3] = param_2[1];
  iVar1 = *param_1;
  *piVar2 = iVar1;
  piVar2[1] = (int)param_1;
  *(int **)(iVar1 + 4) = piVar2;
  *param_1 = (int)piVar2;
  return CONCAT31((int3)((uint)piVar2 >> 8),1);
}



void FUN_0040145c(int *param_1)

{
  int *piVar1;
  int iVar2;
  
  piVar1 = (int *)param_1[1];
  iVar2 = *param_1;
  *piVar1 = iVar2;
  *(int **)(iVar2 + 4) = piVar1;
  *param_1 = (int)DAT_00476450;
  DAT_00476450 = param_1;
  return;
}



void FUN_00401474(int *param_1,int *param_2,int *param_3)

{
  int *piVar1;
  undefined4 uVar2;
  int *piVar3;
  
  piVar3 = (int *)*param_1;
  *param_3 = *param_2;
  param_3[1] = param_2[1];
  do {
    piVar1 = (int *)*piVar3;
    if (piVar3[2] + piVar3[3] == *param_3) {
      FUN_0040145c(piVar3);
      *param_3 = piVar3[2];
      param_3[1] = param_3[1] + piVar3[3];
    }
    else if (piVar3[2] == *param_3 + param_3[1]) {
      FUN_0040145c(piVar3);
      param_3[1] = param_3[1] + piVar3[3];
    }
    piVar3 = piVar1;
  } while (param_1 != piVar1);
  uVar2 = FUN_0040142c(param_1,param_3);
  if ((char)uVar2 == '\0') {
    *param_3 = 0;
  }
  return;
}



undefined4 FUN_004014e8(int *param_1,uint *param_2)

{
  uint uVar1;
  uint uVar2;
  int *piVar3;
  int local_18;
  int local_14;
  
  piVar3 = param_1;
  while( true ) {
    uVar1 = *param_2;
    uVar2 = piVar3[2];
    if ((uVar2 <= uVar1) && (uVar1 + param_2[1] <= uVar2 + piVar3[3])) break;
    piVar3 = (int *)*piVar3;
    if (param_1 == piVar3) {
      return 0;
    }
  }
  if (uVar1 == uVar2) {
    piVar3[2] = piVar3[2] + param_2[1];
    uVar2 = param_2[1];
    piVar3[3] = piVar3[3] - uVar2;
    if (piVar3[3] == 0) {
      uVar2 = FUN_0040145c(piVar3);
    }
  }
  else if (*param_2 + param_2[1] == uVar2 + piVar3[3]) {
    piVar3[3] = piVar3[3] - param_2[1];
  }
  else {
    local_18 = *param_2 + param_2[1];
    local_14 = (uVar2 + piVar3[3]) - local_18;
    piVar3[3] = *param_2 - uVar2;
    uVar2 = FUN_0040142c(piVar3,&local_18);
    if ((char)uVar2 == '\0') {
      return 0;
    }
  }
  return CONCAT31((int3)(uVar2 >> 8),1);
}



void FUN_00401578(int param_1,int *param_2)

{
  LPVOID pvVar1;
  undefined4 uVar2;
  SIZE_T dwSize;
  
  if (param_1 < 0x100000) {
    dwSize = 0x100000;
  }
  else {
    dwSize = param_1 + 0xffffU & 0xffff0000;
  }
  param_2[1] = dwSize;
  pvVar1 = VirtualAlloc((LPVOID)0x0,dwSize,0x2000,1);
  *param_2 = (int)pvVar1;
  if (pvVar1 != (LPVOID)0x0) {
    uVar2 = FUN_0040142c(&DAT_00476454,param_2);
    if ((char)uVar2 == '\0') {
      VirtualFree((LPVOID)*param_2,0,0x8000);
      *param_2 = 0;
    }
  }
  return;
}



void FUN_004015dc(LPVOID param_1,int param_2,int *param_3)

{
  LPVOID pvVar1;
  undefined4 uVar2;
  uint dwSize;
  
  param_3[1] = 0x100000;
  pvVar1 = VirtualAlloc(param_1,0x100000,0x2000,4);
  *param_3 = (int)pvVar1;
  if (pvVar1 == (LPVOID)0x0) {
    dwSize = param_2 + 0xffffU & 0xffff0000;
    param_3[1] = dwSize;
    pvVar1 = VirtualAlloc(param_1,dwSize,0x2000,4);
    *param_3 = (int)pvVar1;
  }
  if (*param_3 != 0) {
    uVar2 = FUN_0040142c(&DAT_00476454,param_3);
    if ((char)uVar2 == '\0') {
      VirtualFree((LPVOID)*param_3,0,0x8000);
      *param_3 = 0;
    }
  }
  return;
}



void FUN_00401654(LPVOID param_1,int param_2,undefined4 *param_3)

{
  int *piVar1;
  LPVOID lpAddress;
  BOOL BVar2;
  int *piVar3;
  LPVOID local_1c;
  uint local_18;
  
  local_1c = (LPVOID)0xffffffff;
  local_18 = 0;
  piVar1 = DAT_00476454;
  while (piVar3 = piVar1, (int **)piVar3 != &DAT_00476454) {
    piVar1 = (int *)*piVar3;
    lpAddress = (LPVOID)piVar3[2];
    if ((param_1 <= lpAddress) &&
       ((uint)((int)lpAddress + piVar3[3]) <= (uint)(param_2 + (int)param_1))) {
      if (lpAddress < local_1c) {
        local_1c = lpAddress;
      }
      if (local_18 < (uint)((int)lpAddress + piVar3[3])) {
        local_18 = (int)lpAddress + piVar3[3];
      }
      BVar2 = VirtualFree(lpAddress,0,0x8000);
      if (BVar2 == 0) {
        DAT_00476430 = 1;
      }
      FUN_0040145c(piVar3);
    }
  }
  *param_3 = 0;
  if (local_18 != 0) {
    *param_3 = local_1c;
    param_3[1] = local_18 - (int)local_1c;
  }
  return;
}



void FUN_0040170c(uint param_1,int param_2,undefined4 *param_3)

{
  LPVOID pvVar1;
  LPVOID pvVar2;
  LPVOID lpAddress;
  LPVOID pvVar3;
  undefined4 *puVar4;
  LPVOID pvVar5;
  
  pvVar3 = (LPVOID)(param_1 & 0xfffff000);
  pvVar2 = (LPVOID)(param_1 + param_2 + 0xfff & 0xfffff000);
  *param_3 = pvVar3;
  param_3[1] = (int)pvVar2 - (int)pvVar3;
  puVar4 = DAT_00476454;
  while( true ) {
    if ((undefined4 **)puVar4 == &DAT_00476454) {
      return;
    }
    pvVar1 = (LPVOID)puVar4[2];
    lpAddress = pvVar1;
    if (pvVar1 < pvVar3) {
      lpAddress = pvVar3;
    }
    pvVar5 = (LPVOID)(puVar4[3] + (int)pvVar1);
    if (pvVar2 < (LPVOID)(puVar4[3] + (int)pvVar1)) {
      pvVar5 = pvVar2;
    }
    if ((lpAddress < pvVar5) &&
       (pvVar1 = VirtualAlloc(lpAddress,(int)pvVar5 - (int)lpAddress,0x1000,4),
       pvVar1 == (LPVOID)0x0)) break;
    puVar4 = (undefined4 *)*puVar4;
  }
  *param_3 = 0;
  return;
}



void FUN_004017a0(int param_1,int param_2,undefined4 *param_3)

{
  LPVOID pvVar1;
  BOOL BVar2;
  LPVOID lpAddress;
  LPVOID pvVar3;
  LPVOID pvVar4;
  undefined4 *puVar5;
  LPVOID pvVar6;
  
  pvVar4 = (LPVOID)(param_1 + 0xfffU & 0xfffff000);
  pvVar3 = (LPVOID)(param_1 + param_2 & 0xfffff000);
  *param_3 = pvVar4;
  param_3[1] = (int)pvVar3 - (int)pvVar4;
  for (puVar5 = DAT_00476454; (undefined4 **)puVar5 != &DAT_00476454; puVar5 = (undefined4 *)*puVar5
      ) {
    pvVar1 = (LPVOID)puVar5[2];
    lpAddress = pvVar1;
    if (pvVar1 < pvVar4) {
      lpAddress = pvVar4;
    }
    pvVar6 = (LPVOID)(puVar5[3] + (int)pvVar1);
    if (pvVar3 < (LPVOID)(puVar5[3] + (int)pvVar1)) {
      pvVar6 = pvVar3;
    }
    if (lpAddress < pvVar6) {
      BVar2 = VirtualFree(lpAddress,(int)pvVar6 - (int)lpAddress,0x4000);
      if (BVar2 == 0) {
        DAT_00476430 = 2;
      }
    }
  }
  return;
}



void FUN_00401820(int param_1,int *param_2)

{
  int *piVar1;
  uint uVar2;
  int local_18 [2];
  
  uVar2 = param_1 + 0x3fffU & 0xffffc000;
  piVar1 = DAT_00476464;
  do {
    for (; (int **)piVar1 != &DAT_00476464; piVar1 = (int *)*piVar1) {
      if ((int)uVar2 <= piVar1[3]) {
        FUN_0040170c(piVar1[2],uVar2,param_2);
        if (*param_2 == 0) {
          return;
        }
        piVar1[2] = piVar1[2] + param_2[1];
        piVar1[3] = piVar1[3] - param_2[1];
        if (piVar1[3] != 0) {
          return;
        }
        FUN_0040145c(piVar1);
        return;
      }
    }
    FUN_00401578(uVar2,param_2);
    if (*param_2 == 0) {
      return;
    }
    FUN_00401474((int *)&DAT_00476464,param_2,local_18);
    piVar1 = DAT_00476464;
  } while (local_18[0] != 0);
  FUN_00401654((LPVOID)*param_2,param_2[1],local_18);
  *param_2 = 0;
  return;
}



void FUN_004018b0(LPVOID param_1,int param_2,int *param_3)

{
  int *piVar1;
  uint uVar2;
  LPVOID local_20;
  int local_1c;
  int local_18 [2];
  
  uVar2 = param_2 + 0x3fffU & 0xffffc000;
  piVar1 = DAT_00476464;
LAB_004018d6:
  do {
    for (; ((int **)piVar1 != &DAT_00476464 && (param_1 != (LPVOID)piVar1[2]));
        piVar1 = (int *)*piVar1) {
    }
    if (param_1 == (LPVOID)piVar1[2]) {
      if ((int)uVar2 <= piVar1[3]) goto LAB_00401983;
      FUN_004015dc((LPVOID)(piVar1[2] + piVar1[3]),uVar2 - piVar1[3],(int *)&local_20);
      if (local_20 != (LPVOID)0x0) {
        FUN_00401474((int *)&DAT_00476464,(int *)&local_20,local_18);
        piVar1 = DAT_00476464;
        if (local_18[0] == 0) {
          FUN_00401654(local_20,local_1c,local_18);
          *param_3 = 0;
          return;
        }
        goto LAB_004018d6;
      }
    }
    FUN_004015dc(param_1,uVar2,(int *)&local_20);
    if (local_20 == (LPVOID)0x0) {
LAB_00401983:
      if ((param_1 != (LPVOID)piVar1[2]) || (piVar1[3] < (int)uVar2)) {
        *param_3 = 0;
        return;
      }
      FUN_0040170c((uint)piVar1[2],uVar2,param_3);
      if (*param_3 == 0) {
        return;
      }
      piVar1[2] = piVar1[2] + param_3[1];
      piVar1[3] = piVar1[3] - param_3[1];
      if (piVar1[3] != 0) {
        return;
      }
      FUN_0040145c(piVar1);
      return;
    }
    FUN_00401474((int *)&DAT_00476464,(int *)&local_20,local_18);
    piVar1 = DAT_00476464;
    if (local_18[0] == 0) {
      FUN_00401654(local_20,local_1c,local_18);
      *param_3 = 0;
      return;
    }
  } while( true );
}



void FUN_004019d4(int param_1,int param_2,int *param_3)

{
  uint uVar1;
  uint uVar2;
  LPVOID local_1c;
  int local_18;
  LPVOID local_14;
  int local_10;
  
  uVar1 = param_1 + 0x3fffU & 0xffffc000;
  uVar2 = param_2 + param_1 & 0xffffc000;
  if (uVar1 < uVar2) {
    FUN_004017a0(uVar1,uVar2 - uVar1,param_3);
    FUN_00401474(&DAT_00476464,param_3,(int *)&local_1c);
    if (local_1c != (LPVOID)0x0) {
      FUN_00401654(local_1c,local_18,&local_14);
      local_1c = local_14;
      local_18 = local_10;
    }
    if (local_1c != (LPVOID)0x0) {
      FUN_004014e8(&DAT_00476464,(uint *)&local_1c);
    }
  }
  else {
    *param_3 = 0;
  }
  return;
}



void FUN_00401a60(void)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_10;
  
  uStack_10 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_10;
  InitializeCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476434);
  if (DAT_00476045 != '\0') {
    EnterCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476434);
  }
  FUN_00401424(0x476454);
  FUN_00401424(0x476464);
  FUN_00401424(0x476490);
  DAT_0047648c = LocalAlloc(0,0xff8);
  if (DAT_0047648c != (HLOCAL)0x0) {
    iVar1 = 3;
    do {
      *(undefined4 *)((int)DAT_0047648c + iVar1 * 4 + -0xc) = 0;
      iVar1 = iVar1 + 1;
    } while (iVar1 != 0x401);
    DAT_00476478 = &DAT_00476474;
    DAT_00476474 = &DAT_00476474;
    DAT_00476480 = &DAT_00476474;
    DAT_0047642c = 1;
  }
  *in_FS_OFFSET = uStack_10;
  if (DAT_00476045 != '\0') {
    uStack_10 = 0x401b15;
    LeaveCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476434);
  }
  return;
}



void FUN_00401b24(void)

{
  undefined4 *puVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_14;
  
  if (DAT_0047642c == '\0') {
    return;
  }
  uStack_14 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_14;
  if (DAT_00476045 != '\0') {
    EnterCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476434);
  }
  DAT_0047642c = 0;
  LocalFree(DAT_0047648c);
  DAT_0047648c = (HLOCAL)0x0;
  for (puVar1 = DAT_00476454; (undefined4 **)puVar1 != &DAT_00476454; puVar1 = (undefined4 *)*puVar1
      ) {
    VirtualFree((LPVOID)puVar1[2],0,0x8000);
  }
  FUN_00401424(0x476454);
  FUN_00401424(0x476464);
  FUN_00401424(0x476490);
  puVar1 = DAT_0047644c;
  while (puVar1 != (undefined4 *)0x0) {
    DAT_0047644c = (undefined4 *)*puVar1;
    LocalFree(puVar1);
    puVar1 = DAT_0047644c;
  }
  DAT_0047644c = puVar1;
  *in_FS_OFFSET = uStack_14;
  if (DAT_00476045 != '\0') {
    uStack_14 = 0x401bef;
    LeaveCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476434);
  }
  uStack_14 = 0x401bf9;
  DeleteCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476434);
  return;
}



void FUN_00401c04(int *param_1)

{
  int *piVar1;
  int iVar2;
  
  if (param_1 == DAT_00476480) {
    DAT_00476480 = (int *)param_1[1];
  }
  piVar1 = (int *)param_1[1];
  iVar2 = param_1[2];
  if (iVar2 < 0x1001) {
    if (param_1 != piVar1) {
      if (iVar2 < 0) {
        iVar2 = iVar2 + 3;
      }
      *(int **)(DAT_0047648c + -0xc + (iVar2 >> 2) * 4) = piVar1;
      iVar2 = *param_1;
      *piVar1 = iVar2;
      *(int **)(iVar2 + 4) = piVar1;
      return;
    }
    if (iVar2 < 0) {
      iVar2 = iVar2 + 3;
    }
    *(undefined4 *)(DAT_0047648c + -0xc + (iVar2 >> 2) * 4) = 0;
  }
  else {
    iVar2 = *param_1;
    *piVar1 = iVar2;
    *(int **)(iVar2 + 4) = piVar1;
  }
  return;
}



undefined4 * FUN_00401c68(uint param_1)

{
  undefined4 *puVar1;
  
  puVar1 = DAT_00476490;
  while( true ) {
    if ((undefined4 **)puVar1 == &DAT_00476490) {
      DAT_00476430 = 3;
      return (undefined4 *)0x0;
    }
    if (((uint)puVar1[2] <= param_1) && (param_1 < (uint)(puVar1[2] + puVar1[3]))) break;
    puVar1 = (undefined4 *)*puVar1;
  }
  return puVar1;
}



void FUN_00401c98(uint *param_1,uint param_2)

{
  uint *puVar1;
  
  puVar1 = (uint *)((param_2 - 4) + (int)param_1);
  if (0xf < (int)param_2) {
    *puVar1 = 0x80000007;
    FUN_00401e54(param_1,param_2 - 4);
    return;
  }
  if (3 < (int)param_2) {
    *param_1 = param_2 | 0x80000002;
    *puVar1 = param_2 | 0x80000002;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00401cc8(int param_1)

{
  _DAT_00476420 = _DAT_00476420 + 1;
  _DAT_00476424 = _DAT_00476424 + ((*(uint *)(param_1 + -4) & 0x7ffffffc) - 4);
  FUN_004022bc(param_1);
  return;
}



void FUN_00401cec(uint *param_1,uint param_2)

{
  if (0xb < (int)param_2) {
    *param_1 = param_2 | 2;
    FUN_00401cc8((int)(param_1 + 1));
    return;
  }
  if (3 < (int)param_2) {
    *param_1 = param_2 | 0x80000002;
  }
  *(uint *)((int)param_1 + param_2) = *(uint *)((int)param_1 + param_2) & 0xfffffffe;
  return;
}



uint FUN_00401d14(int param_1)

{
  uint uVar1;
  uint *puVar2;
  uint uVar3;
  
  uVar1 = *(uint *)(param_1 + -4);
  if ((undefined1 *)(uVar1 & 0x80000002) != &hKey_80000002) {
    DAT_00476430 = 4;
  }
  uVar3 = uVar1 & 0x7ffffffc;
  puVar2 = (uint *)(param_1 - uVar3);
  if (((uVar1 ^ *puVar2) & 0xfffffffe) != 0) {
    DAT_00476430 = 5;
  }
  if ((*puVar2 & 1) != 0) {
    uVar1 = puVar2[-1];
    if (uVar1 != ((int *)((int)puVar2 - uVar1))[2]) {
      DAT_00476430 = 6;
    }
    FUN_00401c04((int *)((int)puVar2 - uVar1));
    uVar3 = uVar3 + uVar1;
  }
  return uVar3;
}



uint FUN_00401d84(uint *param_1)

{
  uint uVar1;
  uint *puVar2;
  uint uVar3;
  
  uVar3 = 0;
  uVar1 = *param_1;
  if ((uVar1 & 0x80000000) != 0) {
    uVar3 = uVar1 & 0x7ffffffc;
    param_1 = (uint *)((int)param_1 + uVar3);
    uVar1 = *param_1;
  }
  if ((uVar1 & 2) == 0) {
    FUN_00401c04((int *)param_1);
    uVar3 = uVar3 + param_1[2];
    puVar2 = (uint *)((int)param_1 + param_1[2]);
    *puVar2 = *puVar2 & 0xfffffffe;
  }
  return uVar3;
}



undefined4 FUN_00401dbc(uint *param_1,int param_2)

{
  int iVar1;
  int *piVar2;
  undefined4 uVar3;
  uint *puVar4;
  uint local_18;
  int local_14;
  
  piVar2 = FUN_00401c68((uint)param_1);
  iVar1 = piVar2[2];
  if ((iVar1 + piVar2[3]) - (param_2 + (int)param_1) < 0xd) {
    param_2 = (iVar1 + piVar2[3]) - (int)param_1;
  }
  if ((int)param_1 - iVar1 < 0xc) {
    FUN_004019d4(iVar1,(int)param_1 + (param_2 - piVar2[2]),(int *)&local_18);
  }
  else {
    FUN_004019d4((int)(param_1 + 1),param_2 + -4,(int *)&local_18);
  }
  if (local_18 == 0) {
    uVar3 = 0;
  }
  else {
    FUN_00401c98(param_1,local_18 - (int)param_1);
    puVar4 = (uint *)(local_18 + local_14);
    if (puVar4 < (uint *)(piVar2[2] + piVar2[3])) {
      FUN_00401cec(puVar4,(int)param_1 + (param_2 - (int)puVar4));
    }
    uVar3 = FUN_004014e8(piVar2,&local_18);
    uVar3 = CONCAT31((int3)((uint)uVar3 >> 8),1);
  }
  return uVar3;
}



void FUN_00401e54(uint *param_1,uint param_2)

{
  uint *puVar1;
  uint uVar2;
  uint *puVar3;
  undefined4 uVar4;
  
  param_1[2] = param_2;
  *(uint *)((int)param_1 + (param_2 - 4)) = param_2;
  if ((int)param_2 < 0x1001) {
    if ((int)param_2 < 0) {
      param_2 = param_2 + 3;
    }
    puVar1 = *(uint **)(DAT_0047648c + -0xc + ((int)param_2 >> 2) * 4);
    if (puVar1 == (uint *)0x0) {
      *(uint **)(DAT_0047648c + -0xc + ((int)param_2 >> 2) * 4) = param_1;
      param_1[1] = (uint)param_1;
      *param_1 = (uint)param_1;
    }
    else {
      uVar2 = *puVar1;
      param_1[1] = (uint)puVar1;
      *param_1 = uVar2;
      *puVar1 = (uint)param_1;
      *(uint **)(uVar2 + 4) = param_1;
    }
  }
  else {
    if ((0x3bff < (int)param_2) && (uVar4 = FUN_00401dbc(param_1,param_2), (char)uVar4 != '\0')) {
      return;
    }
    puVar1 = DAT_00476480;
    uVar2 = *DAT_00476480;
    puVar3 = param_1;
    param_1[1] = (uint)DAT_00476480;
    DAT_00476480 = puVar3;
    *param_1 = uVar2;
    *puVar1 = (uint)param_1;
    *(uint **)(uVar2 + 4) = param_1;
  }
  return;
}



void FUN_00401edc(void)

{
  if (0 < (int)DAT_00476484) {
    if ((int)DAT_00476484 < 0xc) {
      DAT_00476430 = 7;
    }
    else {
      *DAT_00476488 = DAT_00476484 | 2;
      FUN_00401cc8((int)(DAT_00476488 + 1));
      DAT_00476488 = (uint *)0x0;
      DAT_00476484 = 0;
    }
  }
  return;
}



undefined4 FUN_00401f28(uint *param_1)

{
  undefined4 uVar1;
  uint uVar2;
  uint local_1c;
  uint local_18;
  uint local_14;
  int local_10;
  
  local_1c = *param_1;
  local_18 = param_1[1];
  FUN_00401edc();
  FUN_00401474(&DAT_00476490,(int *)&local_1c,(int *)&local_14);
  if (local_14 == 0) {
    uVar1 = 0;
  }
  else {
    if (local_14 < local_1c) {
      uVar2 = FUN_00401d14(local_1c);
      local_1c = local_1c - uVar2;
      local_18 = local_18 + uVar2;
    }
    if ((uint *)(local_1c + local_18) < (uint *)(local_14 + local_10)) {
      uVar2 = FUN_00401d84((uint *)(local_1c + local_18));
      local_18 = local_18 + uVar2;
    }
    if ((uint *)(local_14 + local_10) == (uint *)(local_1c + local_18)) {
      FUN_00401c98((uint *)(local_1c + local_18) + -1,4);
      local_18 = local_18 - 4;
    }
    DAT_00476488 = local_1c;
    DAT_00476484 = local_18;
    uVar1 = CONCAT31((int3)(local_18 >> 8),1);
  }
  return uVar1;
}



undefined4 FUN_00401fb4(int param_1)

{
  undefined4 uVar1;
  uint local_c [2];
  
  FUN_00401820(param_1 + 4,(int *)local_c);
  if ((local_c[0] != 0) && (uVar1 = FUN_00401f28(local_c), (char)uVar1 != '\0')) {
    return CONCAT31((int3)((uint)uVar1 >> 8),1);
  }
  return 0;
}



undefined4 FUN_00401fe0(LPVOID param_1,int param_2)

{
  undefined4 uVar1;
  uint local_10 [2];
  
  FUN_004018b0(param_1,param_2 + 4,(int *)local_10);
  if ((local_10[0] != 0) && (uVar1 = FUN_00401f28(local_10), (char)uVar1 != '\0')) {
    return CONCAT31((int3)((uint)uVar1 >> 8),1);
  }
  return 0;
}



int FUN_00402014(int param_1)

{
  int iVar1;
  int iVar2;
  
  if (param_1 < 0) {
    param_1 = param_1 + 3;
  }
  iVar2 = param_1 >> 2;
  if (iVar2 < 0x401) {
    do {
      iVar1 = *(int *)(DAT_0047648c + -0xc + iVar2 * 4);
      if (iVar1 != 0) {
        return iVar1;
      }
      iVar2 = iVar2 + 1;
    } while (iVar2 != 0x401);
  }
  return 0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint * FUN_00402040(uint param_1)

{
  uint *puVar1;
  uint *puVar2;
  undefined4 uVar3;
  uint uVar4;
  
  while ((puVar1 = DAT_00476480, puVar2 = DAT_00476478, (int)DAT_00476478[2] < (int)param_1 &&
         (uVar4 = DAT_00476480[2], puVar2 = DAT_00476480, (int)uVar4 < (int)param_1))) {
    DAT_00476480[2] = param_1;
    puVar2 = puVar1;
    do {
      puVar2 = (uint *)puVar2[1];
    } while ((int)puVar2[2] < (int)param_1);
    DAT_00476480[2] = uVar4;
    puVar1 = puVar2;
    if ((puVar2 != DAT_00476480) ||
       (((int)param_1 < 0x1001 &&
        (puVar2 = (uint *)FUN_00402014(param_1), puVar1 = DAT_00476480, puVar2 != (uint *)0x0))))
    break;
    uVar3 = FUN_00401fb4(param_1);
    puVar2 = DAT_00476488;
    if ((char)uVar3 == '\0') {
      return (uint *)0x0;
    }
    if ((int)param_1 <= DAT_00476484) {
      DAT_00476484 = DAT_00476484 - param_1;
      if (DAT_00476484 < 0xc) {
        param_1 = param_1 + DAT_00476484;
        DAT_00476484 = 0;
      }
      DAT_00476488 = (uint *)((int)DAT_00476488 + param_1);
      *puVar2 = param_1 | 2;
      _DAT_00476420 = _DAT_00476420 + 1;
      _DAT_00476424 = _DAT_00476424 + (param_1 - 4);
      return puVar2 + 1;
    }
  }
  DAT_00476480 = puVar1;
  FUN_00401c04((int *)puVar2);
  uVar4 = puVar2[2];
  if ((int)(uVar4 - param_1) < 0xc) {
    if (puVar2 == DAT_00476480) {
      DAT_00476480 = (uint *)puVar2[1];
    }
    *(uint *)((int)puVar2 + uVar4) = *(uint *)((int)puVar2 + uVar4) & 0xfffffffe;
  }
  else {
    FUN_00401e54((uint *)((int)puVar2 + param_1),uVar4 - param_1);
    uVar4 = param_1;
  }
  *puVar2 = uVar4 | 2;
  _DAT_00476420 = _DAT_00476420 + 1;
  _DAT_00476424 = _DAT_00476424 + (uVar4 - 4);
  return puVar2 + 1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint * FUN_00402134(int param_1)

{
  uint *puVar1;
  char cVar2;
  uint uVar3;
  uint *puVar4;
  uint uVar5;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  
  if ((DAT_0047642c == '\0') && (cVar2 = FUN_00401a60(), cVar2 == '\0')) {
    return (uint *)0x0;
  }
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  if (DAT_00476045 != '\0') {
    EnterCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476434);
  }
  puVar4 = DAT_00476488;
  uVar5 = param_1 + 7U & 0xfffffffc;
  if ((int)uVar5 < 0xc) {
    uVar5 = 0xc;
  }
  if ((int)uVar5 < 0x1001) {
    uVar3 = uVar5;
    if ((int)uVar5 < 0) {
      uVar3 = uVar5 + 3;
    }
    puVar1 = *(uint **)(DAT_0047648c + -0xc + ((int)uVar3 >> 2) * 4);
    if (puVar1 != (uint *)0x0) {
      *(uint *)((int)puVar1 + uVar5) = *(uint *)((int)puVar1 + uVar5) & 0xfffffffe;
      puVar4 = (uint *)puVar1[1];
      if (puVar1 == puVar4) {
        uVar3 = uVar5;
        if ((int)uVar5 < 0) {
          uVar3 = uVar5 + 3;
        }
        *(undefined4 *)(DAT_0047648c + -0xc + ((int)uVar3 >> 2) * 4) = 0;
      }
      else {
        uVar3 = uVar5;
        if ((int)uVar5 < 0) {
          uVar3 = uVar5 + 3;
        }
        *(uint **)(DAT_0047648c + -0xc + ((int)uVar3 >> 2) * 4) = puVar4;
        uVar3 = *puVar1;
        *(uint **)(uVar3 + 4) = puVar4;
        *puVar4 = uVar3;
      }
      *puVar1 = puVar1[2] | 2;
      _DAT_00476420 = _DAT_00476420 + 1;
      _DAT_00476424 = _DAT_00476424 + (uVar5 - 4);
      FUN_0040374c();
      return puVar1 + 1;
    }
  }
  if ((int)uVar5 <= DAT_00476484) {
    DAT_00476484 = DAT_00476484 - uVar5;
    if (DAT_00476484 < 0xc) {
      uVar5 = uVar5 + DAT_00476484;
      DAT_00476484 = 0;
    }
    DAT_00476488 = (uint *)((int)DAT_00476488 + uVar5);
    *puVar4 = uVar5 | 2;
    _DAT_00476420 = _DAT_00476420 + 1;
    _DAT_00476424 = _DAT_00476424 + (uVar5 - 4);
    FUN_0040374c();
    return puVar4 + 1;
  }
  FUN_00402040(uVar5);
  puVar4 = (uint *)0x0;
  *in_FS_OFFSET = uStack_24;
  if (DAT_00476045 != '\0') {
    uStack_24 = 0x4022a7;
    LeaveCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476434);
  }
  return puVar4;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 FUN_004022bc(int param_1)

{
  uint uVar1;
  char cVar2;
  uint *puVar3;
  undefined4 uVar4;
  uint uVar5;
  uint *puVar6;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  
  DAT_00476430 = 0;
  if ((DAT_0047642c == '\0') && (cVar2 = FUN_00401a60(), cVar2 == '\0')) {
    DAT_00476430 = 8;
    return 8;
  }
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  if (DAT_00476045 != '\0') {
    EnterCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476434);
  }
  puVar6 = (uint *)(param_1 + -4);
  uVar5 = *puVar6;
  if ((uVar5 & 2) == 0) {
    DAT_00476430 = 9;
    goto LAB_00402425;
  }
  _DAT_00476420 = _DAT_00476420 + -1;
  _DAT_00476424 = _DAT_00476424 - ((uVar5 & 0x7ffffffc) - 4);
  if ((uVar5 & 1) != 0) {
    uVar1 = *(uint *)(param_1 + -8);
    if (((int)uVar1 < 0xc) || ((uVar1 & 0x80000003) != 0)) {
      DAT_00476430 = 10;
      goto LAB_00402425;
    }
    puVar6 = (uint *)((int)puVar6 - uVar1);
    if (uVar1 != puVar6[2]) {
      DAT_00476430 = 10;
      goto LAB_00402425;
    }
    uVar5 = uVar5 + uVar1;
    FUN_00401c04((int *)puVar6);
  }
  uVar5 = uVar5 & 0x7ffffffc;
  puVar3 = (uint *)((int)puVar6 + uVar5);
  if (puVar3 == DAT_00476488) {
    DAT_00476488 = (uint *)((int)DAT_00476488 - uVar5);
    DAT_00476484 = DAT_00476484 + uVar5;
    if (0x3c00 < DAT_00476484) {
      FUN_00401edc();
    }
    FUN_0040374c();
    return 0;
  }
  if ((*puVar3 & 2) == 0) {
    if (((puVar3[1] == 0) || (*puVar3 == 0)) || ((int)puVar3[2] < 0xc)) {
      DAT_00476430 = 0xb;
      goto LAB_00402425;
    }
    uVar5 = uVar5 + puVar3[2];
    FUN_00401c04((int *)puVar3);
  }
  else {
    if ((*puVar3 & 0x7ffffffc) < 4) {
      DAT_00476430 = 0xb;
      goto LAB_00402425;
    }
    *puVar3 = *puVar3 | 1;
  }
  FUN_00401e54(puVar6,uVar5);
LAB_00402425:
  uVar4 = 0;
  *in_FS_OFFSET = uStack_20;
  if (DAT_00476045 != '\0') {
    uStack_20 = 0x40244d;
    LeaveCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476434);
  }
  return uVar4;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 FUN_00402460(int param_1,int param_2)

{
  uint uVar1;
  byte *pbVar2;
  undefined4 uVar3;
  uint *puVar4;
  uint *puVar5;
  uint uVar6;
  uint uVar7;
  uint uVar8;
  uint local_18;
  int local_14;
  
  uVar6 = param_2 + 7U & 0xfffffffc;
  if ((int)uVar6 < 0xc) {
    uVar6 = 0xc;
  }
  puVar5 = (uint *)(param_1 + -4);
  uVar8 = *puVar5 & 0x7ffffffc;
  pbVar2 = (byte *)((int)puVar5 + uVar8);
  uVar7 = uVar6;
  if ((int)uVar8 < (int)uVar6) {
    do {
      local_14 = uVar6 - uVar8;
      if ((byte *)((int)puVar5 + uVar8) == DAT_00476488) {
        if (local_14 <= DAT_00476484) {
          DAT_00476484 = DAT_00476484 - local_14;
          DAT_00476488 = DAT_00476488 + local_14;
          if (DAT_00476484 < 0xc) {
            DAT_00476488 = DAT_00476488 + DAT_00476484;
            uVar6 = uVar6 + DAT_00476484;
            DAT_00476484 = 0;
          }
          _DAT_00476424 = _DAT_00476424 + (uVar6 - uVar8);
          uVar7 = *puVar5;
          *puVar5 = uVar6 | uVar7 & 0x80000003;
          return CONCAT31((int3)((uVar7 & 0x80000003) >> 8),1);
        }
        FUN_00401edc();
      }
      puVar4 = (uint *)((int)puVar5 + uVar8);
      if ((*puVar4 & 2) == 0) {
        uVar1 = puVar4[2];
        if (local_14 <= (int)uVar1) {
          FUN_00401c04((int *)puVar4);
          uVar1 = uVar1 - local_14;
          if ((int)uVar1 < 0xc) {
            puVar4 = (uint *)((int)puVar5 + uVar6 + uVar1);
            *puVar4 = *puVar4 & 0xfffffffe;
            uVar7 = uVar6 + uVar1;
          }
          else {
            FUN_00401e54((uint *)((int)puVar5 + uVar6),uVar1);
          }
          goto LAB_0040260f;
        }
        puVar4 = (uint *)((int)puVar4 + uVar1);
        local_14 = local_14 - uVar1;
      }
    } while (((*puVar4 & 0x80000000) != 0) &&
            (uVar3 = FUN_00401fe0((byte *)((*puVar4 & 0x7ffffffc) + (int)puVar4),local_14),
            (char)uVar3 != '\0'));
    uVar3 = 0;
  }
  else {
    local_18 = uVar8 - uVar6;
    if (pbVar2 == DAT_00476488) {
      DAT_00476488 = DAT_00476488 + -local_18;
      DAT_00476484 = DAT_00476484 + local_18;
      if (DAT_00476484 < 0xc) {
        DAT_00476488 = DAT_00476488 + local_18;
        DAT_00476484 = DAT_00476484 - local_18;
        uVar7 = uVar8;
      }
    }
    else {
      if ((*pbVar2 & 2) == 0) {
        local_18 = local_18 + *(int *)(pbVar2 + 8);
        FUN_00401c04((int *)pbVar2);
      }
      uVar7 = uVar8;
      if (0xb < (int)local_18) {
        *(uint *)((int)puVar5 + uVar6) = local_18 | 2;
        FUN_00401cc8((int)((uint *)((int)puVar5 + uVar6) + 1));
        uVar7 = uVar6;
      }
    }
LAB_0040260f:
    _DAT_00476424 = _DAT_00476424 + (uVar7 - uVar8);
    uVar6 = *puVar5;
    *puVar5 = uVar7 | uVar6 & 0x80000003;
    uVar3 = CONCAT31((int3)((uVar6 & 0x80000003) >> 8),1);
  }
  return uVar3;
}



undefined4 FUN_00402630(undefined4 *param_1,uint param_2)

{
  char cVar1;
  undefined4 uVar2;
  uint *puVar3;
  uint uVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  
  if ((DAT_0047642c == '\0') && (cVar1 = FUN_00401a60(), cVar1 == '\0')) {
    return 0;
  }
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  if (DAT_00476045 != '\0') {
    EnterCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476434);
  }
  uVar2 = FUN_00402460((int)param_1,param_2);
  if ((char)uVar2 == '\0') {
    puVar3 = FUN_00402134(param_2);
    uVar4 = (param_1[-1] & 0x7ffffffc) - 4;
    if ((int)param_2 < (int)uVar4) {
      uVar4 = param_2;
    }
    if (puVar3 != (uint *)0x0) {
      FUN_00402920(param_1,puVar3,uVar4);
      FUN_004022bc((int)param_1);
    }
  }
  uVar2 = 0;
  *in_FS_OFFSET = uStack_20;
  if (DAT_00476045 != '\0') {
    uStack_20 = 0x4026e0;
    LeaveCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476434);
  }
  return uVar2;
}



void FUN_004026f4(int param_1)

{
  int iVar1;
  
  if (param_1 != 0) {
    iVar1 = (*(code *)PTR_FUN_0047401c)();
    if (iVar1 == 0) {
      FUN_00402780(1);
      return;
    }
  }
  return;
}



void FUN_0040270c(int param_1)

{
  int iVar1;
  
  if (param_1 != 0) {
    iVar1 = (*(code *)PTR_FUN_00474020)();
    if (iVar1 != 0) {
      FUN_00402780(CONCAT31((int3)((uint)iVar1 >> 8),2));
      return;
    }
  }
  return;
}



void FUN_00402724(int *param_1,int param_2)

{
  int iVar1;
  
  iVar1 = *param_1;
  if (iVar1 != 0) {
    if (param_2 == 0) {
      *param_1 = 0;
      iVar1 = (*(code *)PTR_FUN_00474020)(iVar1);
      if (iVar1 == 0) {
        return;
      }
      FUN_00402780(CONCAT31((int3)((uint)iVar1 >> 8),2));
      return;
    }
    iVar1 = (*(code *)PTR_FUN_00474024)(iVar1);
    if (iVar1 != 0) {
      *param_1 = iVar1;
      return;
    }
LAB_00402755:
    FUN_00402780(CONCAT31((int3)((uint)iVar1 >> 8),1));
    return;
  }
  if (param_2 != 0) {
    iVar1 = (*(code *)PTR_FUN_0047401c)(param_2);
    if (iVar1 == 0) goto LAB_00402755;
    *param_1 = iVar1;
  }
  return;
}



undefined4 FUN_00402774(void)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)FUN_00406670();
  return *puVar1;
}



void FUN_00402780(uint param_1)

{
  uint uVar1;
  undefined4 uVar2;
  LPVOID pvVar3;
  undefined4 in_stack_00000000;
  
  uVar1 = param_1 & 0x7f;
  if (DAT_00476004 != (code *)0x0) {
    uVar1 = (*DAT_00476004)(uVar1,in_stack_00000000);
  }
  uVar2 = CONCAT31((int3)(uVar1 - 1 >> 8),*(undefined1 *)(uVar1 + 0x4027a8));
  if ((int)(uVar1 - 1) < 0) {
    pvVar3 = FUN_00406670();
    uVar2 = *(undefined4 *)((int)pvVar3 + 4);
  }
  FUN_00403bd0(uVar2);
  return;
}



void FUN_004027c4(void)

{
  LPVOID pvVar1;
  
  pvVar1 = FUN_00406670();
  if (*(int *)((int)pvVar1 + 4) == 0) {
    return;
  }
  FUN_00402780(0);
  return;
}



void FUN_004027e4(undefined4 param_1)

{
  LPVOID pvVar1;
  
  pvVar1 = FUN_00406670();
  *(undefined4 *)((int)pvVar1 + 4) = param_1;
  return;
}



void FUN_004027f4(void)

{
  DWORD DVar1;
  
  DVar1 = GetLastError();
  FUN_004027e4(DVar1);
  return;
}



void FUN_00402800(undefined *param_1)

{
  LPCSTR lpPathName;
  BOOL BVar1;
  
  lpPathName = FUN_00404020(param_1);
  BVar1 = SetCurrentDirectoryA(lpPathName);
  if ((short)BVar1 == 0) {
    FUN_004027f4();
  }
  return;
}



void FUN_0040281c(char param_1,int *param_2)

{
  char local_214 [4];
  CHAR local_210 [260];
  CHAR local_10c [260];
  
  if (param_1 != '\0') {
    local_214[0] = param_1 + '@';
    local_214[1] = 0x3a;
    local_214[2] = 0;
    GetCurrentDirectoryA(0x104,local_10c);
    SetCurrentDirectoryA(local_214);
  }
  GetCurrentDirectoryA(0x104,local_210);
  if (param_1 != '\0') {
    SetCurrentDirectoryA(local_10c);
  }
  FUN_00403e0c(param_2,local_210,0x104);
  return;
}



void FUN_00402894(char param_1,byte *param_2,byte param_3)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_11c;
  undefined1 *puStack_118;
  undefined1 *puStack_114;
  byte local_108 [256];
  undefined4 *local_8;
  
  puStack_114 = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  puStack_118 = &LAB_004028fb;
  uStack_11c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_11c;
  FUN_0040281c(param_1,(int *)&local_8);
  FUN_00403e38(local_108,local_8,0xff);
  FUN_00402af0(param_2,local_108,param_3);
  *in_FS_OFFSET = uStack_11c;
  puStack_114 = &LAB_00402902;
  puStack_118 = (undefined1 *)0x4028fa;
  FUN_00403bdc((int *)&local_8);
  return;
}



undefined4 FUN_00402908(void)

{
  undefined4 uVar1;
  LPVOID pvVar2;
  
  pvVar2 = FUN_00406670();
  uVar1 = *(undefined4 *)((int)pvVar2 + 4);
  *(undefined4 *)((int)pvVar2 + 4) = 0;
  return uVar1;
}



void FUN_00402920(undefined4 *param_1,undefined4 *param_2,uint param_3)

{
  int iVar1;
  uint uVar2;
  undefined4 *puVar3;
  undefined1 *puVar4;
  undefined4 *puVar5;
  undefined1 *puVar6;
  
  iVar1 = (int)param_3 >> 2;
  if (param_1 < param_2) {
    puVar3 = (undefined4 *)((int)param_1 + (param_3 - 4));
    puVar5 = (undefined4 *)((int)param_2 + (param_3 - 4));
    if (-1 < iVar1) {
      for (; iVar1 != 0; iVar1 = iVar1 + -1) {
        *puVar5 = *puVar3;
        puVar3 = puVar3 + -1;
        puVar5 = puVar5 + -1;
      }
      puVar4 = (undefined1 *)((int)puVar3 + 3);
      puVar6 = (undefined1 *)((int)puVar5 + 3);
      for (uVar2 = param_3 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {
        *puVar6 = *puVar4;
        puVar4 = puVar4 + -1;
        puVar6 = puVar6 + -1;
      }
    }
  }
  else if ((param_2 != param_1) && (-1 < iVar1)) {
    for (; iVar1 != 0; iVar1 = iVar1 + -1) {
      *param_2 = *param_1;
      param_1 = param_1 + 1;
      param_2 = param_2 + 1;
    }
    for (uVar2 = param_3 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {
      *(undefined1 *)param_2 = *(undefined1 *)param_1;
      param_1 = (undefined4 *)((int)param_1 + 1);
      param_2 = (undefined4 *)((int)param_2 + 1);
    }
    return;
  }
  return;
}



byte * FUN_00402960(byte *param_1,int *param_2)

{
  byte bVar1;
  uint uVar2;
  byte *pbVar3;
  byte *pbVar4;
  byte *local_1008 [1024];
  
  pbVar3 = param_1;
  while( true ) {
    for (; (*pbVar3 != 0 && (*pbVar3 < 0x21)); pbVar3 = pbVar3 + 1) {
    }
    if ((*pbVar3 != 0x22) || (pbVar3[1] != 0x22)) break;
    pbVar3 = pbVar3 + 2;
  }
  uVar2 = 0;
  local_1008[0] = param_1;
  while ((bVar1 = *pbVar3, 0x20 < bVar1 && ((int)uVar2 < 0x1000))) {
    pbVar4 = pbVar3;
    if (bVar1 == 0x22) {
      while( true ) {
        pbVar3 = pbVar4 + 1;
        bVar1 = *pbVar3;
        if ((bVar1 == 0) || (bVar1 == 0x22)) break;
        *(byte *)((int)local_1008 + uVar2) = bVar1;
        uVar2 = uVar2 + 1;
        pbVar4 = pbVar3;
      }
      if (*pbVar3 != 0) {
        pbVar3 = pbVar4 + 2;
      }
    }
    else {
      *(byte *)((int)local_1008 + uVar2) = bVar1;
      uVar2 = uVar2 + 1;
      pbVar3 = pbVar3 + 1;
    }
  }
  FUN_00403cc4(param_2,local_1008,uVar2);
  return pbVar3;
}



void FUN_004029d8(int param_1,int *param_2)

{
  DWORD DVar1;
  byte *pbVar2;
  CHAR local_114 [264];
  
  if (param_1 == 0) {
    DVar1 = GetModuleFileNameA((HMODULE)0x0,local_114,0x105);
    FUN_00403cc4(param_2,(undefined4 *)local_114,DVar1);
  }
  else {
    pbVar2 = (byte *)GetCommandLineA();
    while( true ) {
      pbVar2 = FUN_00402960(pbVar2,param_2);
      if ((param_1 == 0) || (*param_2 == 0)) break;
      param_1 = param_1 + -1;
    }
  }
  return;
}



byte FUN_00402a30(byte param_1)

{
  if ((0x60 < param_1) && (param_1 < 0x7b)) {
    param_1 = param_1 - 0x20;
  }
  return param_1;
}



void FUN_00402a40(void)

{
  ushort in_FPUStatusWord;
  unkbyte10 in_ST0;
  
  fcos(in_ST0);
  if ((in_FPUStatusWord & 0x400) == 0) {
    return;
  }
  return;
}



void FUN_00402a50(void)

{
  ushort in_FPUStatusWord;
  unkbyte10 in_ST0;
  
  fsin(in_ST0);
  if ((in_FPUStatusWord & 0x400) == 0) {
    return;
  }
  return;
}



undefined4 FUN_00402a60(void)

{
  float10 in_ST0;
  undefined4 local_8;
  
  local_8 = (undefined4)(longlong)ROUND(in_ST0);
  return local_8;
}



undefined4 FUN_00402a6c(void)

{
  float10 in_ST0;
  undefined4 local_8;
  
  local_8 = (undefined4)(longlong)ROUND(in_ST0);
  return local_8;
}



void FUN_00402a88(void)

{
  if (DAT_00476018 != (code *)0x0) {
    (*DAT_00476018)();
  }
  FUN_00403bd0(0xd2);
  return;
}



void FUN_00402aa4(byte *param_1,byte *param_2,byte param_3)

{
  byte bVar1;
  byte bVar2;
  byte bVar3;
  uint uVar4;
  byte *pbVar5;
  byte *pbVar6;
  
  bVar3 = *param_2;
  bVar2 = *param_1 + bVar3;
  if (((!CARRY1(*param_1,bVar3)) && (bVar2 <= param_3)) ||
     (bVar3 = param_3 - *param_1, bVar2 = param_3, *param_1 <= param_3 && bVar3 != 0)) {
    bVar1 = *param_1;
    *param_1 = bVar2;
    pbVar5 = param_2 + 1;
    pbVar6 = param_1 + bVar1 + 1;
    for (uVar4 = (uint)bVar3; uVar4 != 0; uVar4 = uVar4 - 1) {
      *pbVar6 = *pbVar5;
      pbVar5 = pbVar5 + 1;
      pbVar6 = pbVar6 + 1;
    }
  }
  return;
}



void FUN_00402ad4(byte *param_1,byte *param_2)

{
  uint uVar1;
  uint uVar2;
  
  uVar1 = *param_2 + 1 & 3;
  uVar2 = *param_2 + 1 >> 2;
  for (; uVar2 != 0; uVar2 = uVar2 - 1) {
    *(undefined4 *)param_1 = *(undefined4 *)param_2;
    param_2 = param_2 + 4;
    param_1 = param_1 + 4;
  }
  for (; uVar1 != 0; uVar1 = uVar1 - 1) {
    *param_1 = *param_2;
    param_2 = param_2 + 1;
    param_1 = param_1 + 1;
  }
  return;
}



void FUN_00402af0(byte *param_1,byte *param_2,byte param_3)

{
  uint uVar1;
  uint uVar2;
  byte *pbVar3;
  byte *pbVar4;
  
  if (param_3 < *param_2) {
    *param_1 = param_3;
    pbVar3 = param_2 + 1;
    pbVar4 = param_1 + 1;
    for (uVar1 = (uint)param_3; uVar1 != 0; uVar1 = uVar1 - 1) {
      *pbVar4 = *pbVar3;
      pbVar3 = pbVar3 + 1;
      pbVar4 = pbVar4 + 1;
    }
    return;
  }
  uVar1 = *param_2 + 1;
  uVar2 = uVar1 & 3;
  for (uVar1 = uVar1 >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {
    *(undefined4 *)param_1 = *(undefined4 *)param_2;
    param_2 = param_2 + 4;
    param_1 = param_1 + 4;
  }
  for (; uVar2 != 0; uVar2 = uVar2 - 1) {
    *param_1 = *param_2;
    param_2 = param_2 + 1;
    param_1 = param_1 + 1;
  }
  return;
}



int FUN_00402b20(byte *param_1,byte *param_2)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  byte *pbVar4;
  byte *pbVar5;
  
  uVar2 = (uint)*param_2;
  pbVar4 = param_1 + 1;
  pbVar5 = param_2 + 1;
  iVar1 = *param_1 - uVar2;
  if (*param_1 < uVar2 || iVar1 == 0) {
    uVar2 = uVar2 + iVar1;
  }
  uVar3 = uVar2 >> 2;
  do {
    if (uVar3 == 0) {
LAB_00402b63:
      uVar2 = uVar2 & 3;
      if ((uVar2 == 0) ||
         ((*pbVar4 == *pbVar5 &&
          ((uVar2 == 1 || ((pbVar4[1] == pbVar5[1] && ((uVar2 == 2 || (pbVar4[2] == pbVar5[2])))))))
          ))) {
        iVar1 = iVar1 * 2;
      }
      return iVar1;
    }
    if (*(int *)pbVar4 != *(int *)pbVar5) {
      return iVar1;
    }
    if (uVar3 == 1) {
      pbVar4 = pbVar4 + 4;
      pbVar5 = pbVar5 + 4;
      goto LAB_00402b63;
    }
    if (*(int *)(pbVar4 + 4) != *(int *)(pbVar5 + 4)) {
      return iVar1;
    }
    pbVar4 = pbVar4 + 8;
    pbVar5 = pbVar5 + 8;
    uVar3 = uVar3 - 2;
  } while( true );
}



int * FUN_00402ba4(int *param_1,int *param_2,uint param_3)

{
  uint uVar1;
  
  uVar1 = param_3 >> 2;
  do {
    if (uVar1 == 0) {
LAB_00402bd4:
      uVar1 = param_3 & 3;
      if (((uVar1 != 0) && ((char)*param_1 == (char)*param_2)) &&
         ((uVar1 == 1 ||
          ((*(char *)((int)param_1 + 1) == *(char *)((int)param_2 + 1) &&
           ((uVar1 == 2 || (*(char *)((int)param_1 + 2) == *(char *)((int)param_2 + 2))))))))) {
        return (int *)0x0;
      }
      return param_1;
    }
    if (*param_1 != *param_2) {
      return param_1;
    }
    if (uVar1 == 1) {
      param_1 = param_1 + 1;
      param_2 = param_2 + 1;
      goto LAB_00402bd4;
    }
    if (param_1[1] != param_2[1]) {
      return param_1;
    }
    param_1 = param_1 + 2;
    param_2 = param_2 + 2;
    uVar1 = uVar1 - 2;
  } while( true );
}



void FUN_00402c14(undefined4 *param_1,uint param_2,undefined1 param_3)

{
  int iVar1;
  uint uVar2;
  
  iVar1 = (int)param_2 >> 2;
  if (-1 < iVar1) {
    for (; iVar1 != 0; iVar1 = iVar1 + -1) {
      *param_1 = CONCAT22(CONCAT11(param_3,param_3),CONCAT11(param_3,param_3));
      param_1 = param_1 + 1;
    }
    for (uVar2 = param_2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {
      *(undefined1 *)param_1 = param_3;
      param_1 = (undefined4 *)((int)param_1 + 1);
    }
  }
  return;
}



void FUN_00402c34(byte *param_1,int *param_2)

{
  bool bVar1;
  uint uVar2;
  byte bVar3;
  byte bVar4;
  byte *pbVar5;
  byte *pbVar6;
  int iVar7;
  
  pbVar6 = param_1;
  if (param_1 == (byte *)0x0) {
LAB_00402cb1:
    pbVar6 = pbVar6 + 1;
  }
  else {
    uVar2 = 0;
    do {
      pbVar5 = pbVar6;
      bVar3 = *pbVar5;
      pbVar6 = pbVar5 + 1;
    } while (bVar3 == 0x20);
    bVar1 = false;
    if (bVar3 != 0x2d) {
      if (bVar3 == 0x2b) goto LAB_00402cc1;
      if (((bVar3 != 0x24) && (bVar3 != 0x78)) && (bVar3 != 0x58)) {
        if (bVar3 == 0x30) {
          bVar3 = *pbVar6;
          pbVar6 = pbVar5 + 2;
          if ((bVar3 != 0x78) && (bVar3 != 0x58)) goto joined_r0x00402c7e;
          goto LAB_00402cc6;
        }
        goto LAB_00402c82;
      }
LAB_00402cc6:
      bVar3 = *pbVar6;
      pbVar6 = pbVar6 + 1;
      if (bVar3 == 0) goto LAB_00402cb1;
      do {
        if (0x60 < bVar3) {
          bVar3 = bVar3 - 0x20;
        }
        bVar4 = bVar3 - 0x30;
        if (9 < bVar4) {
          if (5 < (byte)(bVar3 + 0xbf)) goto LAB_00402cba;
          bVar4 = bVar3 - 0x37;
        }
        if (0xfffffff < uVar2) goto LAB_00402cba;
        uVar2 = uVar2 * 0x10 + (uint)bVar4;
        bVar3 = *pbVar6;
        pbVar6 = pbVar6 + 1;
      } while (bVar3 != 0);
      goto LAB_00402ca8;
    }
    bVar1 = true;
LAB_00402cc1:
    bVar3 = *pbVar6;
    pbVar6 = pbVar5 + 2;
LAB_00402c82:
    if (bVar3 != 0) {
      do {
        if ((9 < (byte)(bVar3 - 0x30)) || (0xccccccc < uVar2)) goto LAB_00402cba;
        uVar2 = uVar2 * 10 + (uint)(byte)(bVar3 - 0x30);
        bVar3 = *pbVar6;
        pbVar6 = pbVar6 + 1;
joined_r0x00402c7e:
      } while (bVar3 != 0);
      if (bVar1) {
        if ((-1 < (int)uVar2) || (0 < (int)uVar2)) goto LAB_00402ca8;
      }
      else if (-1 < (int)uVar2) {
LAB_00402ca8:
        iVar7 = 0;
        goto LAB_00402cab;
      }
    }
  }
LAB_00402cba:
  iVar7 = (int)pbVar6 - (int)param_1;
LAB_00402cab:
  *param_2 = iVar7;
  return;
}



void FUN_00402d00(char *param_1,char *param_2)

{
  char cVar1;
  char *pcVar2;
  char cVar3;
  
  cVar3 = -1;
  pcVar2 = param_1;
  do {
    cVar1 = *param_2;
    param_2 = param_2 + 1;
    if (cVar1 == '\0') break;
    pcVar2 = pcVar2 + 1;
    *pcVar2 = cVar1;
    cVar3 = cVar3 + -1;
  } while (cVar3 != '\0');
  *param_1 = (char)pcVar2 - (char)param_1;
  return;
}



void FUN_00402d18(char *param_1,char *param_2,uint param_3)

{
  char cVar1;
  char *pcVar2;
  
  pcVar2 = param_1;
  if (0xff < param_3) {
    param_3 = 0xff;
  }
  do {
    cVar1 = *param_2;
    param_2 = param_2 + 1;
    if (cVar1 == '\0') break;
    pcVar2 = pcVar2 + 1;
    *pcVar2 = cVar1;
    param_3 = param_3 - 1;
  } while (param_3 != 0);
  *param_1 = (char)pcVar2 - (char)param_1;
  return;
}



void FUN_00402d3c(uint param_1,uint param_2,undefined1 *param_3)

{
  byte bVar1;
  byte bVar2;
  uint uVar3;
  int iVar4;
  uint uVar5;
  uint uVar6;
  byte *pbVar7;
  
  uVar5 = param_2 & 0xff;
  uVar6 = param_1 >> 8 & 0xff;
  for (uVar3 = uVar6; uVar3 != 0; uVar3 = uVar3 - 1) {
    *param_3 = 0;
    param_3 = param_3 + 1;
  }
  if (uVar6 * 8 <= uVar5) {
    uVar5 = uVar6 * 8 - 1;
  }
  if ((param_1 & 0xff) <= uVar5) {
    bVar1 = -1 << ((byte)param_1 & 7);
    uVar3 = (param_1 & 0xff) >> 3;
    bVar2 = 0xff >> (~(byte)uVar5 & 7);
    pbVar7 = param_3 + (uVar3 - uVar6);
    iVar4 = (uVar5 >> 3) - uVar3;
    if (iVar4 == 0) {
      *pbVar7 = bVar1 & bVar2;
    }
    else {
      *pbVar7 = bVar1;
      while( true ) {
        pbVar7 = pbVar7 + 1;
        iVar4 = iVar4 + -1;
        if (iVar4 == 0) break;
        *pbVar7 = 0xff;
      }
      *pbVar7 = bVar2;
    }
  }
  return;
}



int __stdcall GetKeyboardType(int nTypeFlag)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00402d94. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetKeyboardType(nTypeFlag);
  return iVar1;
}



undefined4 FUN_00402d9c(void)

{
  int iVar1;
  uint uVar2;
  undefined4 uVar3;
  
  uVar3 = 0;
  iVar1 = GetKeyboardType(0);
  if (iVar1 == 7) {
    uVar2 = GetKeyboardType(1);
    if (((uVar2 & 0xff00) == 0xd00) || ((uVar2 & 0xff00) == 0x400)) {
      uVar3 = 1;
    }
  }
  return uVar3;
}



void FUN_00402dcc(void)

{
  LSTATUS LVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar2;
  DWORD local_10;
  uint local_c;
  HKEY local_8;
  
  local_c = (uint)DAT_00474000;
  LVar1 = RegOpenKeyExA((HKEY)&hKey_80000002,s_SOFTWARE_Borland_Delphi_RTL_00402e64,0,1,&local_8);
  if (LVar1 == 0) {
    uVar2 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffffe4;
    local_10 = 4;
    RegQueryValueExA(local_8,s_FPUMaskValue_00402e80,(LPDWORD)0x0,(LPDWORD)0x0,(LPBYTE)&local_c,
                     &local_10);
    *in_FS_OFFSET = uVar2;
    RegCloseKey(local_8);
    return;
  }
  DAT_00474000 = DAT_00474000 & 0xffc0 | (ushort)local_c & 0x3f;
  return;
}



void FUN_00402e90(void)

{
  return;
}



undefined4 FUN_00402e9c(undefined4 *param_1)

{
  return *param_1;
}



void FUN_00402ea0(int param_1,byte *param_2)

{
  int iVar1;
  byte *pbVar2;
  
  pbVar2 = *(byte **)(param_1 + -0x2c);
  for (iVar1 = **(byte **)(param_1 + -0x2c) + 1; iVar1 != 0; iVar1 = iVar1 + -1) {
    *param_2 = *pbVar2;
    pbVar2 = pbVar2 + 1;
    param_2 = param_2 + 1;
  }
  return;
}



undefined1 FUN_00402eb4(int param_1,int param_2)

{
  uint uVar1;
  short sVar2;
  
  sVar2 = 0;
  if (param_2 != 0) {
    uVar1 = (uint)**(byte **)(param_1 + -0x2c);
    if (uVar1 == *(uint *)(param_2 + -4)) {
      do {
        sVar2 = (((*(byte **)(param_1 + -0x2c))[uVar1] ^ *(byte *)(param_2 + -1 + uVar1)) & 0xdf) *
                0x100;
        if ((char)((ushort)sVar2 >> 8) != '\0') goto LAB_00402ed7;
        uVar1 = uVar1 - 1;
      } while (uVar1 != 0);
      sVar2 = sVar2 + 1;
    }
  }
LAB_00402ed7:
  return (char)sVar2;
}



int * FUN_00402edc(int param_1)

{
  int *piVar1;
  
  piVar1 = *(int **)(param_1 + -0x24);
  if (piVar1 != (int *)0x0) {
    piVar1 = (int *)*piVar1;
  }
  return piVar1;
}



void FUN_00402ee8(int param_1)

{
  int *piVar1;
  
  piVar1 = (int *)FUN_004026f4(*(int *)(param_1 + -0x28));
  FUN_00402f60(param_1,piVar1);
  return;
}



void FUN_00402efc(int *param_1)

{
  int iVar1;
  int *piVar2;
  
  piVar2 = param_1;
  do {
    iVar1 = *(int *)(*piVar2 + -0x40);
    piVar2 = *(int **)(*piVar2 + -0x24);
    if (iVar1 != 0) {
      FUN_00404480((int)param_1,iVar1);
    }
  } while (piVar2 != (int *)0x0);
  FUN_0040270c((int)param_1);
  return;
}



void FUN_00402f24(int *param_1,char param_2,undefined4 param_3)

{
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_00000000;
  undefined4 in_stack_fffffff0;
  undefined4 in_stack_fffffff4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_fffffff0,in_stack_fffffff4);
    param_2 = extraout_DL;
  }
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_00000000;
  }
  return;
}



void FUN_00402f44(int *param_1,char param_2)

{
  int *piVar1;
  char extraout_DL;
  
  piVar1 = FUN_004032b4(param_1,param_2);
  if ('\0' < extraout_DL) {
    FUN_004032a4(piVar1);
  }
  return;
}



void FUN_00402f54(int *param_1)

{
  if (param_1 != (int *)0x0) {
    (**(code **)(*param_1 + -4))(param_1,1);
  }
  return;
}



// WARNING: Removing unreachable block (ram,0x00402f95)
// WARNING: Removing unreachable block (ram,0x00402f9b)
// WARNING: Removing unreachable block (ram,0x00402fa2)
// WARNING: Removing unreachable block (ram,0x00402fa8)
// WARNING: Removing unreachable block (ram,0x00402fae)

void FUN_00402f60(int param_1,int *param_2)

{
  uint uVar1;
  uint uVar2;
  int *piVar3;
  
  *param_2 = param_1;
  uVar2 = *(uint *)(param_1 + -0x28);
  uVar1 = uVar2 >> 2;
  piVar3 = param_2 + 1;
  while (uVar1 = uVar1 - 1, uVar1 != 0) {
    *piVar3 = 0;
    piVar3 = piVar3 + 1;
  }
  for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {
    *(undefined1 *)piVar3 = 0;
    piVar3 = (int *)((int)piVar3 + 1);
  }
  for (; *(int **)(param_1 + -0x24) != (int *)0x0; param_1 = **(int **)(param_1 + -0x24)) {
  }
  return;
}



void FUN_00402fb8(int *param_1,undefined *UNRECOVERED_JUMPTABLE,int *param_3)

{
  if ((undefined *)0xfeffffff < UNRECOVERED_JUMPTABLE) {
    FUN_00405554(param_3,*(int **)(((uint)UNRECOVERED_JUMPTABLE & 0xffffff) + (int)param_1));
    return;
  }
  if ((undefined *)0xfdffffff < UNRECOVERED_JUMPTABLE) {
                    // WARNING: Could not recover jumptable at 0x00402fcf. Too many branches
                    // WARNING: Treating indirect jump as call
    (**(code **)((int)(short)UNRECOVERED_JUMPTABLE + *param_1))();
    return;
  }
                    // WARNING: Could not recover jumptable at 0x00402fd1. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)UNRECOVERED_JUMPTABLE)();
  return;
}



void FUN_00402fe8(int *param_1,int *param_2,int *param_3)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  int *local_c;
  int *local_8;
  
  puStack_1c = &stack0xfffffffc;
  local_c = (int *)0x0;
  puStack_20 = &LAB_00403076;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  local_8 = param_2;
  piVar1 = FUN_00403088(*param_1,param_2);
  if (piVar1 == (int *)0x0) {
    *param_3 = 0;
  }
  else {
    if (piVar1[5] == 0) {
      FUN_00402fb8(param_1,(undefined *)piVar1[6],(int *)&local_c);
      FUN_00405554(param_3,local_c);
    }
    else {
      *param_3 = (int)param_1 + piVar1[5];
    }
    if ((*param_3 != 0) && (piVar1[5] != 0)) {
      (**(code **)(*(int *)*param_3 + 4))();
    }
  }
  *in_FS_OFFSET = uStack_24;
  puStack_1c = &LAB_0040307d;
  puStack_20 = (undefined1 *)0x403075;
  FUN_0040553c((int *)&local_c);
  return;
}



int * FUN_00403088(int param_1,int *param_2)

{
  int *piVar1;
  int iVar2;
  
  do {
    piVar1 = *(int **)(param_1 + -0x48);
    if (piVar1 != (int *)0x0) {
      iVar2 = *piVar1;
      piVar1 = piVar1 + 1;
      do {
        if ((((*param_2 == *piVar1) && (param_2[1] == piVar1[1])) && (param_2[2] == piVar1[2])) &&
           (param_2[3] == piVar1[3])) {
          return piVar1;
        }
        piVar1 = piVar1 + 7;
        iVar2 = iVar2 + -1;
      } while (iVar2 != 0);
    }
    if (*(int **)(param_1 + -0x24) == (int *)0x0) {
      return (int *)0x0;
    }
    param_1 = **(int **)(param_1 + -0x24);
  } while( true );
}



int * FUN_004030cc(int *param_1,int param_2)

{
  int iVar1;
  
  if (param_1 != (int *)0x0) {
    while (iVar1 = *param_1, iVar1 != param_2) {
      param_1 = *(int **)(iVar1 + -0x24);
      if (param_1 == (int *)0x0) {
        return param_1;
      }
    }
    param_1 = (int *)CONCAT31((int3)((uint)iVar1 >> 8),1);
  }
  return param_1;
}



void FUN_004030e4(int *param_1,int param_2)

{
  int *piVar1;
  
  piVar1 = param_1;
  if (param_1 != (int *)0x0) {
    while (*piVar1 != param_2) {
      piVar1 = *(int **)(*piVar1 + -0x24);
      if (piVar1 == (int *)0x0) {
        FUN_00402780(CONCAT31((int3)((uint)param_1 >> 8),10));
        return;
      }
    }
  }
  return;
}



void FUN_00403100(int param_1)

{
  uint uVar1;
  ushort unaff_BX;
  ushort *puVar2;
  bool bVar3;
  
  do {
    puVar2 = *(ushort **)(param_1 + -0x30);
    if (puVar2 != (ushort *)0x0) {
      uVar1 = (uint)*puVar2;
      bVar3 = puVar2 + 1 == (ushort *)0x0;
      puVar2 = puVar2 + 1;
      do {
        if (uVar1 == 0) break;
        uVar1 = uVar1 - 1;
        bVar3 = unaff_BX == *puVar2;
        puVar2 = puVar2 + 1;
      } while (!bVar3);
      if (bVar3) {
        return;
      }
    }
    if (*(int **)(param_1 + -0x24) == (int *)0x0) {
      return;
    }
    param_1 = **(int **)(param_1 + -0x24);
  } while( true );
}



void FUN_00403130(int *param_1,undefined4 param_2,undefined4 param_3)

{
  code *UNRECOVERED_JUMPTABLE;
  undefined1 in_ZF;
  
  FUN_00403100(*param_1);
  if (!(bool)in_ZF) {
                    // WARNING: Could not recover jumptable at 0x0040313d. Too many branches
                    // WARNING: Treating indirect jump as call
    (*UNRECOVERED_JUMPTABLE)(param_1);
    return;
  }
  FUN_00402a88();
  return;
}



undefined4 FUN_00403148(int *param_1,undefined4 param_2)

{
  undefined4 uVar1;
  undefined1 in_ZF;
  
  FUN_00403100(*param_1);
  if ((bool)in_ZF) {
    uVar1 = FUN_00402a88();
    return uVar1;
  }
  return param_2;
}



int * thunk_FUN_00403164(int param_1,int param_2)

{
  int *piVar1;
  
  while( true ) {
    if (param_1 == param_2) {
      return (int *)CONCAT31((int3)((uint)param_1 >> 8),1);
    }
    piVar1 = *(int **)(param_1 + -0x24);
    if (piVar1 == (int *)0x0) break;
    param_1 = *piVar1;
  }
  return piVar1;
}



int * FUN_00403164(int param_1,int param_2)

{
  int *piVar1;
  
  while( true ) {
    if (param_1 == param_2) {
      return (int *)CONCAT31((int3)((uint)param_1 >> 8),1);
    }
    piVar1 = *(int **)(param_1 + -0x24);
    if (piVar1 == (int *)0x0) break;
    param_1 = *piVar1;
  }
  return piVar1;
}



undefined4 FUN_00403174(int param_1)

{
  return *(undefined4 *)(param_1 + -0x3c);
}



undefined4 FUN_00403178(void)

{
  return 0x8000ffff;
}



void FUN_00403180(void)

{
  return;
}



undefined4 FUN_004031b4(int param_1,byte *param_2)

{
  byte bVar1;
  int iVar2;
  int iVar3;
  byte bVar4;
  undefined2 *puVar5;
  int iVar6;
  
  iVar2 = 0;
  iVar6 = 0;
  bVar4 = *param_2;
  while( true ) {
    puVar5 = *(undefined2 **)(param_1 + -0x34);
    if (puVar5 != (undefined2 *)0x0) {
      iVar6 = CONCAT22((short)((uint)iVar6 >> 0x10),*puVar5);
      puVar5 = puVar5 + 1;
      do {
        bVar1 = *(byte *)(puVar5 + 3);
        iVar3 = CONCAT31((int3)((uint)iVar2 >> 8),bVar1);
        if (bVar1 == bVar4) {
          iVar3 = CONCAT22((short)((uint)iVar2 >> 0x10),(ushort)bVar1);
          while (((*(byte *)((int)puVar5 + iVar3 + 6) ^ param_2[iVar3]) & 0xdf) == 0) {
            iVar3 = iVar3 + -1;
            if (iVar3 == 0) {
              return *(undefined4 *)(puVar5 + 1);
            }
          }
          bVar4 = *param_2;
        }
        iVar2 = CONCAT22((short)((uint)iVar3 >> 0x10),*puVar5);
        puVar5 = (undefined2 *)((int)puVar5 + iVar2);
        iVar6 = iVar6 + -1;
      } while (iVar6 != 0);
    }
    if (*(int **)(param_1 + -0x24) == (int *)0x0) break;
    param_1 = **(int **)(param_1 + -0x24);
  }
  return 0;
}



int FUN_00403204(int *param_1,char *param_2)

{
  undefined2 *puVar1;
  int *piVar2;
  int iVar3;
  char cVar4;
  int *piVar5;
  int iVar6;
  
  iVar3 = 0;
  iVar6 = 0;
  cVar4 = *param_2;
  piVar2 = param_1;
  do {
    puVar1 = *(undefined2 **)(*piVar2 + -0x38);
    if (puVar1 != (undefined2 *)0x0) {
      iVar6 = CONCAT22((short)((uint)iVar6 >> 0x10),*puVar1);
      piVar5 = (int *)(puVar1 + 3);
      do {
        iVar3 = CONCAT31((int3)((uint)iVar3 >> 8),*(char *)((int)piVar5 + 6));
        if (*(char *)((int)piVar5 + 6) == cVar4) {
          while (((*(byte *)((int)piVar5 + iVar3 + 6) ^ param_2[iVar3]) & 0xdf) == 0) {
            iVar3 = iVar3 + -1;
            if (iVar3 == 0) {
              return *piVar5 + (int)param_1;
            }
          }
          cVar4 = *param_2;
          iVar3 = CONCAT31((int3)((uint)iVar3 >> 8),*(undefined1 *)((int)piVar5 + 6));
        }
        piVar5 = (int *)((int)piVar5 + iVar3 + 7);
        iVar6 = iVar6 + -1;
      } while (iVar6 != 0);
    }
    piVar2 = *(int **)(*piVar2 + -0x24);
  } while (piVar2 != (int *)0x0);
  return 0;
}



void FUN_00403254(int param_1,char param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5)

{
  int *in_FS_OFFSET;
  
  if (-1 < param_2) {
    (**(code **)(param_1 + -0xc))();
  }
  *in_FS_OFFSET = (int)&param_4;
  return;
}



void FUN_004032a4(int *param_1)

{
  (**(code **)(*param_1 + -8))();
  return;
}



int * FUN_004032ac(int *param_1)

{
  (**(code **)(*param_1 + -0x1c))();
  return param_1;
}



int * FUN_004032b4(int *param_1,char param_2)

{
  if (param_2 < '\x01') {
    return param_1;
  }
  (**(code **)(*param_1 + -0x18))();
  return param_1;
}



void FUN_004032c4(void)

{
  if (1 < DAT_00474008) {
    RaiseException(0xeedfadf,0,0,(ULONG_PTR *)0x0);
  }
  return;
}



undefined4 FUN_004032e0(undefined4 param_1,ULONG_PTR param_2)

{
  ULONG_PTR UStack_c;
  undefined4 uStack_8;
  undefined4 uStack_4;
  
  if (DAT_00474008 != '\0') {
    UStack_c = param_2;
    uStack_8 = param_1;
    uStack_4 = param_1;
    RaiseException(0xeedfae4,0,2,&UStack_c);
    param_1 = uStack_4;
  }
  return param_1;
}



undefined4 FUN_00403300(void)

{
  undefined4 in_stack_00000004;
  
  RaiseException(0xeedfae0,0,1,(ULONG_PTR *)&stack0x00000000);
  return in_stack_00000004;
}



void FUN_00403314(void)

{
  if (1 < DAT_00474008) {
    FUN_00403300();
    return;
  }
  return;
}



void FUN_00403328(void)

{
  if (1 < DAT_00474008) {
    FUN_00403300();
    return;
  }
  return;
}



int FUN_0040333c(int param_1,undefined4 param_2,char *param_3)

{
  if (((param_3 != (char *)0x0) && (param_1 = *(int *)(param_3 + 1), *param_3 != -0x17)) &&
     (*param_3 == -0x15)) {
    param_1 = (int)(char)param_1;
  }
  return param_1;
}



int FUN_0040335c(int param_1,undefined4 param_2,char *param_3)

{
  ULONG_PTR UStack_10;
  char *pcStack_c;
  undefined4 uStack_8;
  int iStack_4;
  
  if (1 < DAT_00474008) {
    UStack_10 = 0x40336d;
    pcStack_c = param_3;
    uStack_8 = param_2;
    iStack_4 = param_1;
    FUN_0040333c(param_1,param_2,param_3);
    RaiseException(0xeedfae1,0,1,&UStack_10);
    param_1 = iStack_4;
  }
  return param_1;
}



void FUN_00403384(undefined4 param_1,ULONG_PTR param_2)

{
  ULONG_PTR UStack_4;
  
  if (1 < DAT_00474008) {
    UStack_4 = param_2;
    RaiseException(0xeedfae2,0,1,&UStack_4);
  }
  return;
}



undefined4 FUN_004033a0(undefined4 param_1,ULONG_PTR param_2)

{
  ULONG_PTR UStack_8;
  undefined4 uStack_4;
  
  uStack_4 = param_1;
  if (1 < DAT_00474008) {
    UStack_8 = param_2;
    RaiseException(0xeedfae3,0,2,&UStack_8);
  }
  return uStack_4;
}



undefined4 FUN_004033c0(void)

{
  DWORD DVar1;
  int iVar2;
  LONG LVar3;
  PEXCEPTION_RECORD pEVar4;
  LPVOID pvVar5;
  undefined4 uVar6;
  PEXCEPTION_RECORD in_stack_00000004;
  PCONTEXT in_stack_00000008;
  ULONG_PTR in_stack_0000000c;
  
  if ((in_stack_00000004->ExceptionFlags & 6) == 0) {
    pEVar4 = in_stack_00000004;
    if (in_stack_00000004->ExceptionCode != 0xeedfade) {
      FUN_00402e90();
      if (DAT_0047600c == (code *)0x0) {
        return 1;
      }
      iVar2 = (*DAT_0047600c)();
      if (iVar2 == 0) {
        return 1;
      }
      pEVar4 = in_stack_00000004;
      if (((in_stack_00000004->ExceptionCode != 0xeefface) &&
          (FUN_004032e0(iVar2,in_stack_0000000c), pEVar4 = in_stack_00000004, DAT_0047400c != 0)) &&
         (DAT_00474008 == '\0')) {
        LVar3 = UnhandledExceptionFilter((_EXCEPTION_POINTERS *)&stack0x00000004);
        if (LVar3 == 0) {
          return 1;
        }
        goto LAB_00403474;
      }
    }
    in_stack_00000004 = pEVar4;
    if (((DAT_0047400c < 2) || (DAT_00474008 != '\0')) ||
       (LVar3 = UnhandledExceptionFilter((_EXCEPTION_POINTERS *)&stack0x00000004), LVar3 != 0)) {
LAB_00403474:
      in_stack_00000004->ExceptionFlags = in_stack_00000004->ExceptionFlags | 2;
      RtlUnwind(in_stack_00000008,(PVOID)0x403497,in_stack_00000004,(PVOID)0x0);
      pvVar5 = FUN_00406670();
      *(undefined1 **)pvVar5 = &stack0xffffffdc;
      DVar1 = in_stack_00000008->Dr0;
      in_stack_00000008->Dr0 = (DWORD)&LAB_004034c3;
      FUN_00403328();
                    // WARNING: Could not recover jumptable at 0x004034c1. Too many branches
                    // WARNING: Treating indirect jump as call
      uVar6 = (*(code *)(DVar1 + 5))();
      return uVar6;
    }
  }
  return 1;
}



undefined4 FUN_004034ec(void)

{
  byte bVar1;
  int iVar2;
  int iVar3;
  int *piVar4;
  undefined4 uVar5;
  undefined4 *puVar6;
  byte *pbVar7;
  int iVar8;
  int *piVar9;
  int iVar10;
  bool bVar11;
  PEXCEPTION_RECORD in_stack_00000004;
  PVOID in_stack_00000008;
  ULONG_PTR in_stack_0000000c;
  int *piStack_24;
  
  if ((in_stack_00000004->ExceptionFlags & 6) == 0) {
    if (in_stack_00000004->ExceptionCode == 0xeedfade) {
      iVar3 = *(int *)in_stack_00000004->ExceptionInformation[1];
    }
    else {
      FUN_00402e90();
      if (DAT_00476008 == (code *)0x0) {
        return 1;
      }
      iVar3 = (*DAT_00476008)();
      if (iVar3 == 0) {
        return 1;
      }
    }
    iVar8 = *(int *)(*(int *)((int)in_stack_00000008 + 4) + 5);
    piVar9 = (int *)(*(int *)((int)in_stack_00000008 + 4) + 9);
    do {
      piVar4 = (int *)*piVar9;
      iVar10 = iVar3;
      if (piVar4 == (int *)0x0) {
LAB_00403585:
        if (in_stack_00000004->ExceptionCode == 0xeedfade) {
          if ((DAT_0047400c < 2) || (DAT_00474008 != '\0')) goto LAB_004035ff;
          piStack_24 = (int *)0x4035f7;
          iVar3 = UnhandledExceptionFilter((_EXCEPTION_POINTERS *)&stack0xfffffff4);
        }
        else {
          uVar5 = (*DAT_0047600c)();
          FUN_004032e0(uVar5,in_stack_0000000c);
          if ((DAT_0047400c == 0) || (DAT_00474008 != '\0')) goto LAB_004035ff;
          iVar3 = UnhandledExceptionFilter((_EXCEPTION_POINTERS *)&stack0xfffffff4);
        }
        if (iVar3 == 0) {
          return 1;
        }
LAB_004035ff:
        in_stack_00000004->ExceptionFlags = in_stack_00000004->ExceptionFlags | 2;
        piStack_24 = piVar9;
        RtlUnwind(in_stack_00000008,(PVOID)0x40361f,in_stack_00000004,(PVOID)0x0);
        piVar9 = piStack_24;
        piStack_24 = (int *)0x403629;
        puVar6 = (undefined4 *)FUN_00406670();
        piStack_24 = (int *)*puVar6;
        *puVar6 = &piStack_24;
        *(undefined1 **)((int)in_stack_00000008 + 4) = &LAB_0040364b;
        FUN_00403314();
                    // WARNING: Could not recover jumptable at 0x00403648. Too many branches
                    // WARNING: Treating indirect jump as call
        uVar5 = (*(code *)piVar9[1])();
        return uVar5;
      }
      while( true ) {
        iVar2 = *piVar4;
        if (iVar2 == iVar10) goto LAB_00403585;
        if (*(int *)(iVar2 + -0x28) == *(int *)(iVar10 + -0x28)) {
          bVar1 = **(byte **)(iVar2 + -0x2c);
          if (bVar1 == **(byte **)(iVar10 + -0x2c)) {
            pbVar7 = *(byte **)(iVar10 + -0x2c) + 1;
            bVar11 = pbVar7 == (byte *)0x0;
            FUN_00402ba4((int *)(*(byte **)(iVar2 + -0x2c) + 1),(int *)pbVar7,(uint)bVar1);
            if (bVar11) goto LAB_00403585;
          }
        }
        piVar4 = (int *)*piVar9;
        if (*(int **)(iVar10 + -0x24) == (int *)0x0) break;
        iVar10 = **(int **)(iVar10 + -0x24);
      }
      piVar9 = piVar9 + 2;
      iVar8 = iVar8 + -1;
    } while (iVar8 != 0);
  }
  return 1;
}



undefined4 FUN_00403674(void)

{
  int iVar1;
  code *extraout_ECX;
  int in_stack_00000004;
  int in_stack_00000008;
  
  if ((*(uint *)(in_stack_00000004 + 4) & 6) != 0) {
    iVar1 = *(int *)(in_stack_00000008 + 4);
    *(undefined4 *)(in_stack_00000008 + 4) = 0x4036a4;
    FUN_0040335c(in_stack_00000004,in_stack_00000008,(char *)(iVar1 + 5));
    (*extraout_ECX)();
  }
  return 1;
}



void FUN_004036ac(undefined4 param_1)

{
  ULONG_PTR UStack_18;
  undefined4 uStack_14;
  
  uStack_14 = param_1;
  RaiseException(0xeedfade,1,7,&UStack_18);
  return;
}



undefined4 FUN_004036c8(void)

{
  uint *puVar1;
  int *piVar2;
  int *piVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 *in_stack_00000014;
  int in_stack_00000030;
  
  *(undefined4 *)(in_stack_00000030 + 4) = 0x403713;
  piVar3 = (int *)FUN_00406670();
  piVar2 = (int *)*piVar3;
  *piVar3 = *piVar2;
  piVar3 = (int *)piVar2[3];
  puVar1 = (uint *)(piVar3 + 1);
  *puVar1 = *puVar1 & 0xfffffffd;
  if (*piVar3 != 0xeedfade) {
    FUN_00402f54((int *)piVar2[2]);
    FUN_004032c4();
  }
  *in_stack_00000014 = *(undefined4 *)*in_FS_OFFSET;
  return 1;
}



// WARNING (jumptable): Unable to track spacebase fully for stack
// WARNING: Unable to track spacebase fully for stack

void FUN_0040371c(void)

{
  int *piVar1;
  int *piVar2;
  code *UNRECOVERED_JUMPTABLE;
  undefined4 *in_FS_OFFSET;
  ULONG_PTR in_stack_00000000;
  undefined4 *in_stack_00000030;
  
  piVar2 = (int *)FUN_00406670();
  piVar1 = (int *)*piVar2;
  *piVar2 = *piVar1;
  FUN_00402f54((int *)piVar1[2]);
  *in_FS_OFFSET = *in_stack_00000030;
  in_stack_00000030[2] = 0x403749;
  FUN_00403384(in_stack_00000030[1],in_stack_00000000);
                    // WARNING: Could not recover jumptable at 0x00403749. Too many branches
                    // WARNING: Treating indirect jump as call
  (*UNRECOVERED_JUMPTABLE)();
  return;
}



void FUN_0040374c(void)

{
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_00000004;
  int in_stack_00000008;
  
  *in_FS_OFFSET = in_stack_00000004;
  (*(code *)(in_stack_00000008 + 5))();
  return;
}



void FUN_00403764(undefined4 param_1)

{
  FUN_00403bd0(param_1);
  return;
}



void FUN_004038ac(void)

{
  int iVar1;
  int unaff_EBP;
  int *in_FS_OFFSET;
  
  DAT_004764a4 = (int *)(unaff_EBP + -0xc);
  iVar1 = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)DAT_004764a4;
  *DAT_004764a4 = iVar1;
  *(undefined1 **)(unaff_EBP + -8) = &LAB_00403810;
  *(int *)(unaff_EBP + -4) = unaff_EBP;
  return;
}



void FUN_004038cc(void)

{
  int *piVar1;
  int *in_FS_OFFSET;
  
  piVar1 = (int *)*in_FS_OFFSET;
  if (DAT_004764a4 == piVar1) {
    *in_FS_OFFSET = *DAT_004764a4;
    return;
  }
  while( true ) {
    if (piVar1 == (int *)0xffffffff) {
      return;
    }
    if ((int *)*piVar1 == DAT_004764a4) break;
    piVar1 = (int *)*piVar1;
  }
  *piVar1 = *DAT_004764a4;
  return;
}



void FUN_004038f4(void)

{
  int iVar1;
  code *pcVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  iVar3 = DAT_004764ac;
  puStack_14 = &stack0xfffffffc;
  if (DAT_004764a8 != 0) {
    iVar1 = *(int *)(DAT_004764a8 + 4);
    puStack_18 = &LAB_0040393a;
    uStack_1c = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_1c;
    if (0 < iVar3) {
      do {
        iVar3 = iVar3 + -1;
        pcVar2 = *(code **)(iVar1 + 4 + iVar3 * 8);
        DAT_004764ac = iVar3;
        if (pcVar2 != (code *)0x0) {
          (*pcVar2)();
        }
      } while (0 < iVar3);
    }
    *in_FS_OFFSET = uStack_1c;
  }
  return;
}



void FUN_00403954(void)

{
  int iVar1;
  int iVar2;
  code *pcVar3;
  int iVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  puStack_14 = &stack0xfffffffc;
  if (DAT_004764a8 != (int *)0x0) {
    iVar1 = *DAT_004764a8;
    iVar4 = 0;
    iVar2 = DAT_004764a8[1];
    puStack_18 = &LAB_0040399a;
    uStack_1c = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_1c;
    if (0 < iVar1) {
      do {
        pcVar3 = *(code **)(iVar2 + iVar4 * 8);
        iVar4 = iVar4 + 1;
        DAT_004764ac = iVar4;
        if (pcVar3 != (code *)0x0) {
          (*pcVar3)();
        }
      } while (iVar4 < iVar1);
    }
    *in_FS_OFFSET = uStack_1c;
  }
  return;
}



void FUN_004039b4(undefined4 param_1,int param_2)

{
  DAT_004764ac = 0;
  DAT_0047601c = *(undefined4 *)(param_2 + 4);
  DAT_004764a8 = param_1;
  DAT_004764b0 = param_2;
  FUN_004038ac();
  DAT_00476024 = 0;
  FUN_00403954();
  return;
}



void FUN_004039e4(int *param_1)

{
  int iVar1;
  int *piVar2;
  
  iVar1 = *param_1;
  piVar2 = param_1 + 1;
  do {
    FUN_004054e4(*(undefined4 **)piVar2[1],(int *)*piVar2);
    piVar2 = piVar2 + 2;
    iVar1 = iVar1 + -1;
  } while (iVar1 != 0);
  return;
}



void FUN_00403a00(int *param_1)

{
  int iVar1;
  int *piVar2;
  
  iVar1 = *param_1;
  piVar2 = param_1 + 1;
  do {
    *(int *)*piVar2 = *(int *)piVar2[1] + piVar2[2];
    piVar2 = piVar2 + 3;
    iVar1 = iVar1 + -1;
  } while (iVar1 != 0);
  return;
}



void FUN_00403a20(void)

{
  ulonglong uVar1;
  uint uVar2;
  PVOID pvVar3;
  char *pcVar4;
  
  pcVar4 = s_Runtime_error_at_00000000_0047402c + 0x10;
  uVar2 = DAT_00476034;
  do {
    uVar1 = (ulonglong)uVar2;
    uVar2 = uVar2 / 10;
    *pcVar4 = (char)(uVar1 % 10) + '0';
    pcVar4 = pcVar4 + -1;
  } while (uVar2 != 0);
  pvVar3 = FUN_00404f6c(DAT_0047603c);
  uVar2 = (int)DAT_0047603c - (int)pvVar3;
  pcVar4 = s_Runtime_error_at_00000000_0047402c + 0x1c;
  do {
    *pcVar4 = (&DAT_00474054)[uVar2 & 0xf];
    pcVar4 = pcVar4 + -1;
    uVar2 = uVar2 >> 4;
  } while (uVar2 != 0);
  return;
}



bool FUN_00403a70(void)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  
  puVar3 = DAT_004764a0;
  puVar4 = &DAT_004764a0;
  for (iVar2 = 0xb; iVar1 = DAT_00476034, iVar2 != 0; iVar2 = iVar2 + -1) {
    *puVar4 = *puVar3;
    puVar3 = puVar3 + 1;
    puVar4 = puVar4 + 1;
  }
  LOCK();
  DAT_00476034 = 0;
  UNLOCK();
  return (bool)('\x01' - (iVar1 != 0));
}



void FUN_00403aa4(void)

{
  code *pcVar1;
  undefined *puVar2;
  undefined1 *extraout_ECX;
  int iVar3;
  undefined4 extraout_EDX;
  undefined4 *puVar4;
  undefined4 *puVar5;
  byte bVar6;
  
  bVar6 = 0;
  if ((DAT_004764c4 == 0) && (DAT_00476038 != (code *)0x0)) {
    do {
      pcVar1 = DAT_00476038;
      DAT_00476038 = (code *)0x0;
      (*pcVar1)();
    } while (DAT_00476038 != (code *)0x0);
  }
  if (DAT_0047603c != 0) {
    FUN_00403a20();
    if (DAT_00476044 == '\0') {
      if (DAT_00474010 == '\0') {
        MessageBoxA((HWND)0x0,s_Runtime_error_at_00000000_0047402c,s_Error_0047404c,0);
      }
    }
    else {
      puVar2 = (undefined *)FUN_00405c68(&DAT_00476218,s_Runtime_error_at_00000000_0047402c);
      FUN_00405beb(puVar2);
    }
    DAT_0047603c = 0;
  }
  while( true ) {
    if ((DAT_004764c4 == 2) && (DAT_00476034 == 0)) {
      DAT_004764ac = 0;
    }
    FUN_004038f4();
    if (((DAT_004764c4 < 2) || (DAT_00476034 != 0)) && (DAT_004764b0 != (undefined4 *)0x0)) {
      FUN_00405474(DAT_004764b0,extraout_EDX,extraout_ECX);
      if ((HMODULE)DAT_004764b0[4] != (HMODULE)DAT_004764b0[1]) {
        FreeLibrary((HMODULE)DAT_004764b0[4]);
      }
    }
    FUN_004038cc();
    if (DAT_004764c4 == 1) {
      (*DAT_004764c8)();
    }
    if (DAT_004764c4 != 0) {
      FUN_00403a70();
    }
    if (DAT_004764a0 == (undefined4 *)0x0) break;
    puVar4 = DAT_004764a0;
    puVar5 = &DAT_004764a0;
    for (iVar3 = 0xb; iVar3 != 0; iVar3 = iVar3 + -1) {
      *puVar5 = *puVar4;
      puVar4 = puVar4 + (uint)bVar6 * -2 + 1;
      puVar5 = puVar5 + (uint)bVar6 * -2 + 1;
    }
  }
                    // WARNING: Subroutine does not return
  ExitProcess(DAT_00476034);
}



void FUN_00403bc4(undefined4 param_1)

{
  DAT_00476034 = param_1;
                    // WARNING: Subroutine does not return
  FUN_00403aa4();
}



void FUN_00403bd0(undefined4 param_1)

{
  undefined4 in_stack_00000000;
  
  DAT_0047603c = in_stack_00000000;
  FUN_00403bc4(param_1);
  return;
}



int * FUN_00403bdc(int *param_1)

{
  int *piVar1;
  int iVar2;
  
  iVar2 = *param_1;
  if ((iVar2 != 0) && (*param_1 = 0, 0 < *(int *)(iVar2 + -8))) {
    LOCK();
    piVar1 = (int *)(iVar2 + -8);
    *piVar1 = *piVar1 + -1;
    UNLOCK();
    if (*piVar1 == 0) {
      FUN_0040270c(iVar2 + -8);
    }
  }
  return param_1;
}



void FUN_00403c00(int *param_1,int param_2)

{
  int *piVar1;
  int iVar2;
  
  do {
    iVar2 = *param_1;
    if ((iVar2 != 0) && (*param_1 = 0, 0 < *(int *)(iVar2 + -8))) {
      LOCK();
      piVar1 = (int *)(iVar2 + -8);
      *piVar1 = *piVar1 + -1;
      UNLOCK();
      if (*piVar1 == 0) {
        FUN_0040270c(iVar2 + -8);
      }
    }
    param_1 = param_1 + 1;
    param_2 = param_2 + -1;
  } while (param_2 != 0);
  return;
}



void FUN_00403c30(int *param_1,undefined4 *param_2)

{
  int *piVar1;
  int iVar2;
  undefined4 *puVar3;
  
  if (param_2 != (undefined4 *)0x0) {
    iVar2 = param_2[-2];
    if (iVar2 == -1 || SCARRY4(iVar2,1) != iVar2 + 1 < 0) {
      puVar3 = FUN_00403ca0(param_2[-1]);
      FUN_00402920(param_2,puVar3,param_2[-1]);
      param_2 = puVar3;
    }
    else {
      LOCK();
      param_2[-2] = param_2[-2] + 1;
      UNLOCK();
    }
  }
  LOCK();
  iVar2 = *param_1;
  *param_1 = (int)param_2;
  UNLOCK();
  if ((iVar2 != 0) && (0 < *(int *)(iVar2 + -8))) {
    LOCK();
    piVar1 = (int *)(iVar2 + -8);
    *piVar1 = *piVar1 + -1;
    UNLOCK();
    if (*piVar1 == 0) {
      FUN_0040270c(iVar2 + -8);
    }
  }
  return;
}



void FUN_00403c74(int *param_1,int param_2)

{
  int *piVar1;
  int iVar2;
  
  if ((param_2 != 0) &&
     (iVar2 = *(int *)(param_2 + -8), iVar2 != -1 && SCARRY4(iVar2,1) == iVar2 + 1 < 0)) {
    LOCK();
    *(int *)(param_2 + -8) = *(int *)(param_2 + -8) + 1;
    UNLOCK();
  }
  LOCK();
  iVar2 = *param_1;
  *param_1 = param_2;
  UNLOCK();
  if ((iVar2 != 0) && (0 < *(int *)(iVar2 + -8))) {
    LOCK();
    piVar1 = (int *)(iVar2 + -8);
    *piVar1 = *piVar1 + -1;
    UNLOCK();
    if (*piVar1 == 0) {
      FUN_0040270c(iVar2 + -8);
    }
  }
  return;
}



undefined4 * FUN_00403ca0(int param_1)

{
  undefined4 *puVar1;
  
  if (0 < param_1) {
    puVar1 = (undefined4 *)FUN_004026f4(param_1 + 9);
    puVar1[1] = param_1;
    *puVar1 = 1;
    *(undefined1 *)((int)(puVar1 + 2) + param_1) = 0;
    return puVar1 + 2;
  }
  return (undefined4 *)0x0;
}



void FUN_00403cc4(int *param_1,undefined4 *param_2,uint param_3)

{
  undefined4 *puVar1;
  
  puVar1 = FUN_00403ca0(param_3);
  if (param_2 != (undefined4 *)0x0) {
    FUN_00402920(param_2,puVar1,param_3);
  }
  FUN_00403bdc(param_1);
  *param_1 = (int)puVar1;
  return;
}



void FUN_00403cf4(int *param_1,LPCWSTR param_2,int param_3)

{
  uint uVar1;
  CHAR local_810 [2048];
  
  if (param_3 < 1) {
    FUN_00403bdc(param_1);
  }
  else {
    if (param_3 < 0x400) {
      uVar1 = WideCharToMultiByte(0,0,param_2,param_3,local_810,0x800,(LPCSTR)0x0,(LPBOOL)0x0);
      if (0 < (int)uVar1) {
        FUN_00403cc4(param_1,(undefined4 *)local_810,uVar1);
        return;
      }
    }
    uVar1 = WideCharToMultiByte(0,0,param_2,param_3,(LPSTR)0x0,0,(LPCSTR)0x0,(LPBOOL)0x0);
    FUN_00403cc4(param_1,(undefined4 *)0x0,uVar1);
    WideCharToMultiByte(0,0,param_2,param_3,(LPSTR)*param_1,uVar1,(LPCSTR)0x0,(LPBOOL)0x0);
  }
  return;
}



void FUN_00403d84(int *param_1,undefined4 param_2)

{
  undefined4 uStack_4;
  
  uStack_4 = param_2;
  FUN_00403cc4(param_1,&uStack_4,1);
  return;
}



void FUN_00403d94(int *param_1,char *param_2)

{
  uint uVar1;
  char *pcVar2;
  
  uVar1 = 0;
  pcVar2 = param_2;
  if (param_2 != (char *)0x0) {
    for (; *pcVar2 != '\0'; pcVar2 = pcVar2 + 4) {
      if (pcVar2[1] == '\0') {
LAB_00403db5:
        pcVar2 = pcVar2 + 1;
        break;
      }
      if (pcVar2[2] == '\0') {
LAB_00403db4:
        pcVar2 = pcVar2 + 1;
        goto LAB_00403db5;
      }
      if (pcVar2[3] == '\0') {
        pcVar2 = pcVar2 + 1;
        goto LAB_00403db4;
      }
    }
    uVar1 = (int)pcVar2 - (int)param_2;
  }
  FUN_00403cc4(param_1,(undefined4 *)param_2,uVar1);
  return;
}



void FUN_00403e00(int *param_1,byte *param_2)

{
  FUN_00403cc4(param_1,(undefined4 *)(param_2 + 1),(uint)*param_2);
  return;
}



void FUN_00403e0c(int *param_1,char *param_2,uint param_3)

{
  uint uVar1;
  char *pcVar2;
  bool bVar3;
  
  bVar3 = true;
  uVar1 = param_3;
  pcVar2 = param_2;
  do {
    if (uVar1 == 0) break;
    uVar1 = uVar1 - 1;
    bVar3 = *pcVar2 == '\0';
    pcVar2 = pcVar2 + 1;
  } while (!bVar3);
  if (bVar3) {
    uVar1 = ~uVar1;
  }
  FUN_00403cc4(param_1,(undefined4 *)param_2,uVar1 + param_3);
  return;
}



void FUN_00403e38(undefined1 *param_1,undefined4 *param_2,uint param_3)

{
  uint uVar1;
  
  if ((param_2 != (undefined4 *)0x0) && (uVar1 = param_2[-1], uVar1 != 0)) {
    if ((int)uVar1 <= (int)param_3) {
      param_3 = uVar1;
    }
    *param_1 = (char)param_3;
    FUN_00402920(param_2,(undefined4 *)(param_1 + 1),param_3);
    return;
  }
  *param_1 = 0;
  return;
}



int FUN_00403e5c(int param_1)

{
  if (param_1 != 0) {
    param_1 = *(int *)(param_1 + -4);
  }
  return param_1;
}



void FUN_00403e64(int *param_1,undefined4 *param_2)

{
  int *piVar1;
  int iVar2;
  uint uVar3;
  undefined4 *puVar4;
  uint uVar5;
  
  if (param_2 == (undefined4 *)0x0) {
    return;
  }
  puVar4 = (undefined4 *)*param_1;
  if (puVar4 != (undefined4 *)0x0) {
    uVar3 = puVar4[-1];
    if (param_2 == puVar4) {
      FUN_00404190(param_1,param_2[-1] + uVar3);
      param_2 = (undefined4 *)*param_1;
      uVar5 = uVar3;
    }
    else {
      FUN_00404190(param_1,param_2[-1] + uVar3);
      uVar5 = param_2[-1];
    }
    FUN_00402920(param_2,(undefined4 *)(*param_1 + uVar3),uVar5);
    return;
  }
  if (param_2 != (undefined4 *)0x0) {
    iVar2 = param_2[-2];
    if (iVar2 == -1 || SCARRY4(iVar2,1) != iVar2 + 1 < 0) {
      puVar4 = FUN_00403ca0(param_2[-1]);
      FUN_00402920(param_2,puVar4,param_2[-1]);
      param_2 = puVar4;
    }
    else {
      LOCK();
      param_2[-2] = param_2[-2] + 1;
      UNLOCK();
    }
  }
  LOCK();
  iVar2 = *param_1;
  *param_1 = (int)param_2;
  UNLOCK();
  if ((iVar2 != 0) && (0 < *(int *)(iVar2 + -8))) {
    LOCK();
    piVar1 = (int *)(iVar2 + -8);
    *piVar1 = *piVar1 + -1;
    UNLOCK();
    if (*piVar1 == 0) {
      FUN_0040270c(iVar2 + -8);
    }
  }
  return;
}



void FUN_00403ea8(int *param_1,undefined4 *param_2,undefined4 *param_3)

{
  int *piVar1;
  int iVar2;
  undefined4 *puVar3;
  
  if (param_2 == (undefined4 *)0x0) {
    FUN_00403c30(param_1,param_3);
    return;
  }
  if (param_3 == (undefined4 *)0x0) {
    if (param_2 != (undefined4 *)0x0) {
      iVar2 = param_2[-2];
      if (iVar2 == -1 || SCARRY4(iVar2,1) != iVar2 + 1 < 0) {
        puVar3 = FUN_00403ca0(param_2[-1]);
        FUN_00402920(param_2,puVar3,param_2[-1]);
        param_2 = puVar3;
      }
      else {
        LOCK();
        param_2[-2] = param_2[-2] + 1;
        UNLOCK();
      }
    }
    LOCK();
    iVar2 = *param_1;
    *param_1 = (int)param_2;
    UNLOCK();
    if ((iVar2 != 0) && (0 < *(int *)(iVar2 + -8))) {
      LOCK();
      piVar1 = (int *)(iVar2 + -8);
      *piVar1 = *piVar1 + -1;
      UNLOCK();
      if (*piVar1 == 0) {
        FUN_0040270c(iVar2 + -8);
      }
    }
    return;
  }
  if (param_2 == (undefined4 *)*param_1) {
    FUN_00403e64(param_1,param_3);
    return;
  }
  if (param_3 != (undefined4 *)*param_1) {
    FUN_00403c30(param_1,param_2);
    FUN_00403e64(param_1,param_3);
    return;
  }
  puVar3 = FUN_00403ca0(param_2[-1] + param_3[-1]);
  FUN_00402920(param_2,puVar3,param_2[-1]);
  FUN_00402920(param_3,(undefined4 *)((int)puVar3 + param_2[-1]),param_3[-1]);
  if (puVar3 != (undefined4 *)0x0) {
    puVar3[-2] = puVar3[-2] + -1;
  }
  FUN_00403c30(param_1,puVar3);
  return;
}



void FUN_00403eca(int *param_1,undefined4 *param_2,undefined4 *param_3)

{
  undefined4 *puVar1;
  
  puVar1 = FUN_00403ca0(param_2[-1] + param_3[-1]);
  FUN_00402920(param_2,puVar1,param_2[-1]);
  FUN_00402920(param_3,(undefined4 *)((int)puVar1 + param_2[-1]),param_3[-1]);
  if (puVar1 != (undefined4 *)0x0) {
    puVar1[-2] = puVar1[-2] + -1;
  }
  FUN_00403c30(param_1,puVar1);
  return;
}



void FUN_00403f1c(int *param_1,int param_2)

{
  undefined4 *puVar1;
  int iVar2;
  undefined4 *puVar3;
  int iVar4;
  undefined4 *puVar5;
  undefined4 *puVar6;
  code *UNRECOVERED_JUMPTABLE;
  
  iVar2 = 0;
  iVar4 = param_2;
  do {
    if (*(int *)(&stack0x00000000 + iVar4 * 4) != 0) {
      iVar2 = iVar2 + *(int *)(*(int *)(&stack0x00000000 + iVar4 * 4) + -4);
    }
    iVar4 = iVar4 + -1;
  } while (iVar4 != 0);
  puVar3 = FUN_00403ca0(iVar2);
  puVar5 = puVar3;
  do {
    puVar1 = *(undefined4 **)(&stack0x00000000 + param_2 * 4);
    puVar6 = puVar5;
    if (puVar1 != (undefined4 *)0x0) {
      puVar6 = (undefined4 *)((int)puVar5 + puVar1[-1]);
      FUN_00402920(puVar1,puVar5,puVar1[-1]);
    }
    param_2 = param_2 + -1;
    puVar5 = puVar6;
  } while (param_2 != 0);
  if (puVar3 != (undefined4 *)0x0) {
    puVar3[-2] = puVar3[-2] + -1;
  }
  FUN_00403c30(param_1,puVar3);
                    // WARNING: Could not recover jumptable at 0x00403f66. Too many branches
                    // WARNING: Treating indirect jump as call
  (*UNRECOVERED_JUMPTABLE)(UNRECOVERED_JUMPTABLE);
  return;
}



uint * FUN_00403f6c(uint *param_1,uint *param_2)

{
  uint uVar1;
  uint *puVar2;
  uint uVar3;
  uint uVar4;
  
  if (param_1 != param_2) {
    if (param_1 == (uint *)0x0) {
      param_1 = (uint *)-param_2[-1];
    }
    else if (param_2 == (uint *)0x0) {
      param_1 = (uint *)param_1[-1];
    }
    else {
      uVar3 = param_2[-1];
      puVar2 = (uint *)(param_1[-1] - uVar3);
      if (param_1[-1] < uVar3 || puVar2 == (uint *)0x0) {
        uVar3 = uVar3 + (int)puVar2;
      }
      for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 2) {
        if (*param_1 != *param_2) {
          return puVar2;
        }
        if (uVar4 == 1) {
          param_1 = param_1 + 1;
          param_2 = param_2 + 1;
          break;
        }
        if (param_1[1] != param_2[1]) {
          return puVar2;
        }
        param_1 = param_1 + 2;
        param_2 = param_2 + 2;
      }
      uVar3 = uVar3 & 3;
      if (uVar3 != 0) {
        uVar4 = *param_1;
        uVar1 = *param_2;
        if ((char)uVar4 != (char)uVar1) {
          return puVar2;
        }
        if (uVar3 != 1) {
          if ((char)(uVar4 >> 8) != (char)(uVar1 >> 8)) {
            return puVar2;
          }
          if ((uVar3 != 2) && ((uVar4 & 0xff0000) != (uVar1 & 0xff0000))) {
            return puVar2;
          }
        }
      }
      param_1 = (uint *)((int)puVar2 * 2);
    }
  }
  return param_1;
}



void FUN_00404010(int param_1)

{
  int iVar1;
  
  if ((param_1 != 0) &&
     (iVar1 = *(int *)(param_1 + -8), iVar1 != -1 && SCARRY4(iVar1,1) == iVar1 + 1 < 0)) {
    LOCK();
    *(int *)(param_1 + -8) = *(int *)(param_1 + -8) + 1;
    UNLOCK();
  }
  return;
}



undefined * FUN_00404020(undefined *param_1)

{
  if (param_1 != (undefined *)0x0) {
    return param_1;
  }
  return &DAT_00404025;
}



int FUN_0040402c(int *param_1)

{
  undefined4 *puVar1;
  undefined4 *puVar2;
  int iVar3;
  
  iVar3 = *param_1;
  if ((iVar3 != 0) && (*(int *)(iVar3 + -8) != 1)) {
    puVar2 = FUN_00403ca0(*(int *)(iVar3 + -4));
    puVar1 = (undefined4 *)*param_1;
    *param_1 = (int)puVar2;
    if (0 < (int)puVar1[-2]) {
      LOCK();
      puVar1[-2] = puVar1[-2] + -1;
      UNLOCK();
    }
    FUN_00402920(puVar1,puVar2,puVar1[-1]);
    iVar3 = *param_1;
  }
  return iVar3;
}



void FUN_00404064(int param_1,int param_2,uint param_3,int *param_4)

{
  int iVar1;
  int iVar2;
  
  if ((param_1 != 0) && (iVar1 = *(int *)(param_1 + -4), iVar1 != 0)) {
    iVar2 = param_2 + -1;
    if (param_2 < 1) {
      iVar2 = 0;
    }
    else if (iVar1 <= iVar2) goto LAB_00404096;
    if (-1 < (int)param_3) {
      if (iVar1 - iVar2 < (int)param_3) {
        param_3 = iVar1 - iVar2;
      }
      FUN_00403cc4(param_4,(undefined4 *)(iVar2 + param_1),param_3);
      return;
    }
  }
LAB_00404096:
  FUN_00403bdc(param_4);
  return;
}



void FUN_004040a4(int *param_1,int param_2,int param_3)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  FUN_0040402c(param_1);
  iVar1 = *param_1;
  if (iVar1 != 0) {
    iVar3 = param_2 + -1;
    if (((0 < param_2) && (iVar3 < *(int *)(iVar1 + -4))) && (0 < param_3)) {
      iVar2 = *(int *)(iVar1 + -4) - iVar3;
      if (iVar2 < param_3) {
        param_3 = iVar2;
      }
      FUN_00402920((undefined4 *)(iVar1 + iVar3 + param_3),(undefined4 *)(iVar1 + iVar3),
                   iVar2 - param_3);
      FUN_00404190(param_1,*(int *)(*param_1 + -4) - param_3);
    }
  }
  return;
}



void FUN_004040ec(undefined4 *param_1,int *param_2,int param_3)

{
  undefined4 *puVar1;
  uint uVar2;
  int iVar3;
  undefined4 *puVar4;
  undefined4 *puVar5;
  
  if (param_1 != (undefined4 *)0x0) {
    puVar1 = (undefined4 *)*param_2;
    puVar4 = puVar1;
    if (puVar1 != (undefined4 *)0x0) {
      puVar4 = (undefined4 *)puVar1[-1];
    }
    puVar5 = (undefined4 *)(param_3 + -1);
    if (param_3 < 1) {
      puVar5 = (undefined4 *)0x0;
    }
    if ((int)puVar4 < (int)puVar5) {
      puVar5 = puVar4;
    }
    uVar2 = param_1[-1];
    FUN_00404190(param_2,(int)puVar4 + uVar2);
    if (puVar1 == param_1) {
      param_1 = (undefined4 *)*param_2;
    }
    iVar3 = *param_2;
    FUN_00402920((undefined4 *)(iVar3 + (int)puVar5),(undefined4 *)((int)puVar5 + uVar2 + iVar3),
                 *(int *)(iVar3 + -4) - ((int)puVar5 + uVar2));
    FUN_00402920(param_1,(undefined4 *)(*param_2 + (int)puVar5),uVar2);
  }
  return;
}



char * FUN_00404148(char *param_1,char *param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  char *pcVar4;
  char *pcVar5;
  char *pcVar6;
  bool bVar7;
  
  if (param_1 != (char *)0x0) {
    if (param_2 == (char *)0x0) {
      return (char *)0x0;
    }
    iVar3 = *(int *)(param_1 + -4) + -1;
    if (-1 < iVar3) {
      iVar1 = *(int *)(param_2 + -4) - iVar3;
      bVar7 = iVar1 == 0;
      pcVar5 = param_2;
      if (!bVar7 && iVar3 <= *(int *)(param_2 + -4)) {
LAB_00404168:
        do {
          if (iVar1 != 0) {
            iVar1 = iVar1 + -1;
            pcVar4 = pcVar5 + 1;
            bVar7 = *param_1 == *pcVar5;
            pcVar5 = pcVar4;
            if (!bVar7) goto LAB_00404168;
          }
          iVar2 = iVar3;
          pcVar4 = param_1 + 1;
          pcVar6 = pcVar5;
          if (!bVar7) break;
          do {
            if (iVar2 == 0) break;
            bVar7 = *pcVar4 == *pcVar6;
            iVar2 = iVar2 + -1;
            pcVar4 = pcVar4 + 1;
            pcVar6 = pcVar6 + 1;
          } while (bVar7);
          if (bVar7) {
            return pcVar5 + -(int)param_2;
          }
        } while( true );
      }
    }
    param_1 = (char *)0x0;
  }
  return param_1;
}



void FUN_00404190(int *param_1,uint param_2)

{
  undefined4 *puVar1;
  uint uVar2;
  undefined4 *puVar3;
  int iStack_10;
  
  puVar3 = (undefined4 *)0x0;
  if (param_2 != 0) {
    iStack_10 = *param_1;
    if ((iStack_10 != 0) && (*(int *)(iStack_10 + -8) == 1)) {
      iStack_10 = iStack_10 + -8;
      FUN_00402724(&iStack_10,param_2 + 9);
      *param_1 = iStack_10 + 8;
      *(uint *)(iStack_10 + 4) = param_2;
      *(undefined1 *)(iStack_10 + 8 + param_2) = 0;
      return;
    }
    iStack_10 = 0x4041cd;
    puVar3 = FUN_00403ca0(param_2);
    puVar1 = (undefined4 *)*param_1;
    if (puVar1 != (undefined4 *)0x0) {
      uVar2 = puVar1[-1];
      if ((int)param_2 <= (int)puVar1[-1]) {
        uVar2 = param_2;
      }
      iStack_10 = 0x4041e5;
      FUN_00402920(puVar1,puVar3,uVar2);
    }
  }
  iStack_10 = 0x4041ec;
  FUN_00403bdc(param_1);
  *param_1 = (int)puVar3;
  return;
}



void FUN_004041f4(undefined *param_1,undefined1 *param_2)

{
  undefined *puVar1;
  int iVar2;
  int iVar3;
  
  iVar3 = 0;
  iVar2 = 0;
  if (param_2 != (undefined1 *)0x0) {
    iVar2 = *(int *)(param_2 + -4);
    iVar3 = -iVar2;
  }
  puVar1 = FUN_00405b8b(param_1,iVar3);
  FUN_00405b20(puVar1,param_2,iVar2);
  return;
}



void FUN_00404224(undefined4 *param_1,undefined4 param_2)

{
  BSTR bstrString;
  
  bstrString = (BSTR)*param_1;
  *param_1 = param_2;
  if (bstrString != (BSTR)0x0) {
    SysFreeString(bstrString);
  }
  return;
}



undefined4 * FUN_00404234(undefined4 *param_1)

{
  BSTR bstrString;
  
  bstrString = (BSTR)*param_1;
  if (bstrString != (BSTR)0x0) {
    *param_1 = 0;
    SysFreeString(bstrString);
  }
  return param_1;
}



void FUN_0040424c(undefined4 *param_1,int param_2)

{
  BSTR bstrString;
  
  do {
    bstrString = (BSTR)*param_1;
    if (bstrString != (BSTR)0x0) {
      *param_1 = 0;
      SysFreeString(bstrString);
    }
    param_1 = param_1 + 1;
    param_2 = param_2 + -1;
  } while (param_2 != 0);
  return;
}



BSTR * FUN_00404270(BSTR *param_1,OLECHAR *param_2)

{
  BSTR bstrString;
  BSTR *ppOVar1;
  
  if ((param_2 != (OLECHAR *)0x0) && (*(uint *)(param_2 + -2) >> 1 != 0)) {
    ppOVar1 = (BSTR *)SysReAllocStringLen(param_1,param_2,*(uint *)(param_2 + -2) >> 1);
    if (ppOVar1 != (BSTR *)0x0) {
      return ppOVar1;
    }
    ppOVar1 = (BSTR *)FUN_00402780(1);
    return ppOVar1;
  }
  bstrString = *param_1;
  if (bstrString != (BSTR)0x0) {
    *param_1 = (BSTR)0x0;
    SysFreeString(bstrString);
  }
  return param_1;
}



void FUN_00404294(BSTR param_1,LPCSTR param_2,int param_3)

{
  UINT UVar1;
  WCHAR local_810 [1024];
  
  if (param_3 < 1) {
    FUN_00404234((undefined4 *)param_1);
  }
  else {
    if (param_3 < 0x400) {
      UVar1 = MultiByteToWideChar(0,0,param_2,param_3,local_810,0x400);
      if (0 < (int)UVar1) {
        FUN_00404318(param_1,local_810,UVar1);
        return;
      }
    }
    UVar1 = MultiByteToWideChar(0,0,param_2,param_3,(LPWSTR)0x0,0);
    FUN_00404318(param_1,(OLECHAR *)0x0,UVar1);
    MultiByteToWideChar(0,0,param_2,param_3,*(LPWSTR *)param_1,UVar1);
  }
  return;
}



BSTR FUN_00404318(BSTR param_1,OLECHAR *param_2,UINT param_3)

{
  BSTR bstrString;
  BSTR pOVar1;
  
  if (param_3 == 0) {
    if (*(BSTR *)param_1 != (BSTR)0x0) {
      param_1[0] = L'\0';
      param_1[1] = L'\0';
      SysFreeString(*(BSTR *)param_1);
    }
    return param_1;
  }
  pOVar1 = SysAllocStringLen(param_2,param_3);
  if (pOVar1 != (BSTR)0x0) {
    bstrString = *(BSTR *)param_1;
    *(BSTR *)param_1 = pOVar1;
    SysFreeString(bstrString);
    return pOVar1;
  }
  pOVar1 = (BSTR)FUN_00402780(1);
  return pOVar1;
}



void FUN_0040433c(BSTR param_1,LPCSTR param_2)

{
  int iVar1;
  
  iVar1 = 0;
  if (param_2 != (LPCSTR)0x0) {
    iVar1 = *(int *)(param_2 + -4);
  }
  FUN_00404294(param_1,param_2,iVar1);
  return;
}



uint FUN_0040434c(uint param_1)

{
  if (param_1 != 0) {
    param_1 = *(uint *)(param_1 - 4) >> 1;
  }
  return param_1;
}



void FUN_00404358(UINT param_1)

{
  BSTR pOVar1;
  
  if (param_1 != 0) {
    pOVar1 = SysAllocStringLen((OLECHAR *)0x0,param_1);
    if (pOVar1 == (BSTR)0x0) {
      FUN_00402780(1);
      return;
    }
  }
  return;
}



void FUN_00404370(uint *param_1,UINT param_2)

{
  uint uVar1;
  undefined4 *puVar2;
  
  puVar2 = (undefined4 *)0x0;
  if (0 < (int)param_2) {
    puVar2 = (undefined4 *)FUN_00404358(param_2);
    uVar1 = FUN_0040434c(*param_1);
    if (0 < (int)uVar1) {
      if ((int)param_2 < (int)uVar1) {
        uVar1 = param_2;
      }
      FUN_00402920((undefined4 *)*param_1,puVar2,uVar1 * 2);
    }
  }
  FUN_00404224(param_1,puVar2);
  return;
}



void FUN_004043b4(int param_1,int param_2)

{
  bool bVar1;
  undefined4 *puVar2;
  int iVar3;
  int iVar4;
  
  puVar2 = (undefined4 *)(param_2 + 10 + (uint)*(byte *)(param_2 + 1));
  iVar3 = *(int *)(param_2 + 6 + (uint)*(byte *)(param_2 + 1));
  do {
    FUN_00404474((undefined4 *)(puVar2[1] + param_1),*(char **)*puVar2);
    puVar2 = puVar2 + 2;
    iVar4 = iVar3 + -1;
    bVar1 = 0 < iVar3;
    iVar3 = iVar4;
  } while (iVar4 != 0 && bVar1);
  return;
}



void FUN_004043e0(undefined4 *param_1,char *param_2,int param_3)

{
  char cVar1;
  bool bVar2;
  uint uVar3;
  int iVar4;
  int iVar5;
  
  cVar1 = *param_2;
  uVar3 = (uint)(byte)param_2[1];
  if ((cVar1 != '\n') && (cVar1 != '\v')) {
    if (cVar1 == '\f') {
      do {
        *param_1 = 0;
        param_1[1] = 0;
        param_1[2] = 0;
        param_1[3] = 0;
        param_1 = param_1 + 4;
        iVar4 = param_3 + -1;
        bVar2 = 0 < param_3;
        param_3 = iVar4;
      } while (iVar4 != 0 && bVar2);
      return;
    }
    if (cVar1 == '\r') {
      do {
        iVar4 = *(int *)(param_2 + uVar3 + 2);
        FUN_004043e0(param_1,(char *)**(undefined4 **)(param_2 + uVar3 + 10),
                     *(int *)(param_2 + uVar3 + 6));
        iVar5 = param_3 + -1;
        bVar2 = 0 < param_3;
        param_1 = (undefined4 *)((int)param_1 + iVar4);
        param_3 = iVar5;
      } while (iVar5 != 0 && bVar2);
      return;
    }
    if (cVar1 == '\x0e') {
      do {
        iVar4 = *(int *)(param_2 + uVar3 + 2);
        FUN_004043b4((int)param_1,(int)param_2);
        iVar5 = param_3 + -1;
        bVar2 = 0 < param_3;
        param_1 = (undefined4 *)((int)param_1 + iVar4);
        param_3 = iVar5;
      } while (iVar5 != 0 && bVar2);
      return;
    }
    if ((cVar1 != '\x0f') && (cVar1 != '\x11')) {
      FUN_00402780(CONCAT31((int3)((uint)param_1 >> 8),2));
      return;
    }
  }
  do {
    *param_1 = 0;
    param_1 = param_1 + 1;
    iVar4 = param_3 + -1;
    bVar2 = 0 < param_3;
    param_3 = iVar4;
  } while (iVar4 != 0 && bVar2);
  return;
}



void FUN_00404474(undefined4 *param_1,char *param_2)

{
  FUN_004043e0(param_1,param_2,1);
  return;
}



int FUN_00404480(int param_1,int param_2)

{
  bool bVar1;
  undefined4 *puVar2;
  int iVar3;
  int iVar4;
  
  puVar2 = (undefined4 *)(param_2 + 10 + (uint)*(byte *)(param_2 + 1));
  iVar3 = *(int *)(param_2 + 6 + (uint)*(byte *)(param_2 + 1));
  do {
    FUN_00404594((VARIANTARG *)(puVar2[1] + param_1),*(char **)*puVar2);
    puVar2 = puVar2 + 2;
    iVar4 = iVar3 + -1;
    bVar1 = 0 < iVar3;
    iVar3 = iVar4;
  } while (iVar4 != 0 && bVar1);
  return param_1;
}



// WARNING: Type propagation algorithm not settling

VARIANTARG * FUN_004044ac(VARIANTARG *param_1,char *param_2,int param_3)

{
  char cVar1;
  bool bVar2;
  VARIANTARG *pVVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  
  if (param_3 != 0) {
    cVar1 = *param_2;
    uVar4 = (uint)(byte)param_2[1];
    if (cVar1 == '\n') {
      if (param_3 < 2) {
        FUN_00403bdc((int *)param_1);
      }
      else {
        FUN_00403c00((int *)param_1,param_3);
      }
    }
    else if (cVar1 == '\v') {
      if (param_3 < 2) {
        FUN_00404234((undefined4 *)param_1);
      }
      else {
        FUN_0040424c((undefined4 *)param_1,param_3);
      }
    }
    else {
      pVVar3 = param_1;
      if (cVar1 == '\f') {
        do {
          FUN_00404d14(pVVar3);
          iVar6 = param_3 + -1;
          bVar2 = 0 < param_3;
          pVVar3 = pVVar3 + 1;
          param_3 = iVar6;
        } while (iVar6 != 0 && bVar2);
      }
      else if (cVar1 == '\r') {
        do {
          iVar6 = *(int *)(param_2 + uVar4 + 2);
          FUN_004044ac(pVVar3,(char *)**(undefined4 **)(param_2 + uVar4 + 10),
                       *(int *)(param_2 + uVar4 + 6));
          iVar5 = param_3 + -1;
          bVar2 = 0 < param_3;
          pVVar3 = (VARIANTARG *)((int)&pVVar3->n1 + iVar6);
          param_3 = iVar5;
        } while (iVar5 != 0 && bVar2);
      }
      else if (cVar1 == '\x0e') {
        do {
          iVar6 = *(int *)(param_2 + uVar4 + 2);
          FUN_00404480((int)pVVar3,(int)param_2);
          iVar5 = param_3 + -1;
          bVar2 = 0 < param_3;
          pVVar3 = (VARIANTARG *)((int)&pVVar3->n1 + iVar6);
          param_3 = iVar5;
        } while (iVar5 != 0 && bVar2);
      }
      else if (cVar1 == '\x0f') {
        do {
          FUN_0040553c((int *)pVVar3);
          iVar6 = param_3 + -1;
          bVar2 = 0 < param_3;
          pVVar3 = (VARIANTARG *)((int)&pVVar3->n1 + 4);
          param_3 = iVar6;
        } while (iVar6 != 0 && bVar2);
      }
      else {
        if (cVar1 != '\x11') {
          pVVar3 = (VARIANTARG *)FUN_00402780(CONCAT31((int3)((uint)param_1 >> 8),2));
          return pVVar3;
        }
        do {
          FUN_00404f08((int *)pVVar3,(int)param_2);
          iVar6 = param_3 + -1;
          bVar2 = 0 < param_3;
          pVVar3 = (VARIANTARG *)((int)&pVVar3->n1 + 4);
          param_3 = iVar6;
        } while (iVar6 != 0 && bVar2);
      }
    }
  }
  return param_1;
}



void FUN_00404594(VARIANTARG *param_1,char *param_2)

{
  FUN_004044ac(param_1,param_2,1);
  return;
}



void FUN_004045a0(int param_1,int param_2,int param_3)

{
  char cVar1;
  int iVar2;
  int iVar3;
  char *pcVar4;
  int iVar5;
  uint uVar6;
  int iVar7;
  undefined4 *puVar8;
  
  puVar8 = (undefined4 *)(param_3 + 10 + (uint)*(byte *)(param_3 + 1));
  iVar7 = puVar8[-1];
  iVar5 = 0;
  iVar2 = puVar8[-2];
  do {
    uVar6 = puVar8[1] - iVar5;
    if (uVar6 != 0 && iVar5 <= (int)puVar8[1]) {
      FUN_00402920((undefined4 *)(iVar5 + param_2),(undefined4 *)(iVar5 + param_1),uVar6);
    }
    iVar3 = puVar8[1];
    pcVar4 = *(char **)*puVar8;
    cVar1 = *pcVar4;
    if (cVar1 == '\n') {
      FUN_00403c30((int *)(iVar3 + param_1),*(undefined4 **)(param_2 + iVar3));
      iVar5 = 4;
    }
    else if (cVar1 == '\v') {
      FUN_00404270((BSTR *)(iVar3 + param_1),*(OLECHAR **)(param_2 + iVar3));
      iVar5 = 4;
    }
    else if (cVar1 == '\f') {
      FUN_0040495c((VARIANT *)(iVar3 + param_1),(VARIANTARG *)(param_2 + iVar3));
      iVar5 = 0x10;
    }
    else if (cVar1 == '\r') {
      uVar6 = (uint)(byte)pcVar4[1];
      iVar5 = *(int *)(pcVar4 + uVar6 + 2);
      FUN_004046bc((VARIANT *)(iVar3 + param_1),(VARIANTARG *)(param_2 + iVar3),
                   (char *)**(undefined4 **)(pcVar4 + uVar6 + 10),*(int *)(pcVar4 + uVar6 + 6));
    }
    else if (cVar1 == '\x0e') {
      iVar5 = *(int *)(pcVar4 + (byte)pcVar4[1] + 2);
      FUN_004045a0(iVar3 + param_1,param_2 + iVar3,(int)pcVar4);
    }
    else if (cVar1 == '\x0f') {
      FUN_00405554((int *)(iVar3 + param_1),*(int **)(param_2 + iVar3));
      iVar5 = 4;
    }
    else {
      if (cVar1 != '\x11') {
        FUN_00402780(CONCAT31((int3)((uint)iVar3 >> 8),2));
        return;
      }
      FUN_00404f44((int *)(iVar3 + param_1),*(int *)(param_2 + iVar3),(int)pcVar4);
      iVar5 = 4;
    }
    iVar5 = iVar5 + puVar8[1];
    puVar8 = puVar8 + 2;
    iVar7 = iVar7 + -1;
  } while (iVar7 != 0);
  uVar6 = iVar2 - iVar5;
  if (uVar6 != 0 && iVar5 <= iVar2) {
    FUN_00402920((undefined4 *)(iVar5 + param_2),(undefined4 *)(param_1 + iVar5),uVar6);
  }
  return;
}



// WARNING: Type propagation algorithm not settling

void FUN_004046bc(VARIANT *param_1,VARIANTARG *param_2,char *param_3,int param_4)

{
  int *piVar1;
  char cVar2;
  
  cVar2 = *param_3;
  if (cVar2 == '\n') {
    do {
      FUN_00403c30((int *)param_1,*(undefined4 **)&param_2->n1);
      param_1 = (VARIANT *)((int)&param_1->n1 + 4);
      param_2 = (VARIANTARG *)((int)&param_2->n1 + 4);
      param_4 = param_4 + -1;
    } while (param_4 != 0);
  }
  else if (cVar2 == '\v') {
    do {
      FUN_00404270((BSTR *)param_1,*(OLECHAR **)&param_2->n1);
      param_1 = (VARIANT *)((int)&param_1->n1 + 4);
      param_2 = (VARIANTARG *)((int)&param_2->n1 + 4);
      param_4 = param_4 + -1;
    } while (param_4 != 0);
  }
  else if (cVar2 == '\f') {
    do {
      FUN_0040495c(param_1,param_2);
      param_1 = param_1 + 1;
      param_2 = param_2 + 1;
      param_4 = param_4 + -1;
    } while (param_4 != 0);
  }
  else if (cVar2 == '\r') {
    piVar1 = (int *)(param_3 + (byte)param_3[1] + 2);
    do {
      FUN_004046bc(param_1,param_2,(char *)piVar1[2],piVar1[1]);
      param_1 = (VARIANT *)((int)&param_1->n1 + *piVar1);
      param_2 = (VARIANTARG *)((int)&param_2->n1 + *piVar1);
      param_4 = param_4 + -1;
    } while (param_4 != 0);
  }
  else if (cVar2 == '\x0e') {
    do {
      FUN_004045a0((int)param_1,(int)param_2,(int)param_3);
      param_1 = (VARIANT *)((int)&param_1->n1 + *(int *)(param_3 + (byte)param_3[1] + 2));
      param_2 = (VARIANTARG *)((int)&param_2->n1 + *(int *)(param_3 + (byte)param_3[1] + 2));
      param_4 = param_4 + -1;
    } while (param_4 != 0);
  }
  else if (cVar2 == '\x0f') {
    do {
      FUN_00405554((int *)param_1,*(int **)&param_2->n1);
      param_1 = (VARIANT *)((int)&param_1->n1 + 4);
      param_2 = (VARIANTARG *)((int)&param_2->n1 + 4);
      param_4 = param_4 + -1;
    } while (param_4 != 0);
  }
  else {
    if (cVar2 != '\x11') {
      FUN_00402780(CONCAT31((int3)((uint)param_1 >> 8),2));
      return;
    }
    do {
      FUN_00404f44((int *)param_1,*(int *)&param_2->n1,(int)param_3);
      param_1 = (VARIANT *)((int)&param_1->n1 + 4);
      param_2 = (VARIANTARG *)((int)&param_2->n1 + 4);
      param_4 = param_4 + -1;
    } while (param_4 != 0);
  }
  return;
}



undefined4 * FUN_004047b0(int param_1,char *param_2)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)FUN_004026f4(param_1);
  if (puVar1 != (undefined4 *)0x0) {
    FUN_00404474(puVar1,param_2);
  }
  return puVar1;
}



void FUN_004047c4(VARIANTARG *param_1,char *param_2)

{
  FUN_00404594(param_1,param_2);
  FUN_0040270c((int)param_1);
  return;
}



void FUN_004047d4(LPCWSTR param_1,int param_2,int *param_3)

{
  uint uVar1;
  CHAR local_810 [2048];
  
  if (param_2 == 0) {
    FUN_00403bdc(param_3);
  }
  else if (param_2 < 0x400) {
    uVar1 = WideCharToMultiByte(0,0,param_1,param_2,local_810,0x800,(LPCSTR)0x0,(LPBOOL)0x0);
    FUN_00403cc4(param_3,(undefined4 *)local_810,uVar1);
  }
  else {
    uVar1 = WideCharToMultiByte(0,0,param_1,param_2,(LPSTR)0x0,0,(LPCSTR)0x0,(LPBOOL)0x0);
    FUN_00403cc4(param_3,(undefined4 *)0x0,uVar1);
    WideCharToMultiByte(0,0,param_1,param_2,(LPSTR)*param_3,uVar1,(LPCSTR)0x0,(LPBOOL)0x0);
  }
  return;
}



void FUN_00404860(LPCWSTR param_1,int *param_2)

{
  UINT UVar1;
  
  UVar1 = SysStringLen(param_1);
  FUN_004047d4(param_1,UVar1,param_2);
  return;
}



BSTR FUN_00404884(LPCSTR param_1)

{
  int cbMultiByte;
  int iVar1;
  LPCSTR lpMultiByteStr;
  UINT UVar2;
  BSTR lpWideCharStr;
  WCHAR *lpWideCharStr_00;
  WCHAR local_810 [1024];
  
  lpWideCharStr_00 = local_810;
  cbMultiByte = FUN_00403e5c((int)param_1);
  iVar1 = FUN_00403e5c((int)param_1);
  if (iVar1 < 0x400) {
    iVar1 = 0x400;
    lpMultiByteStr = FUN_00404020(param_1);
    UVar2 = MultiByteToWideChar(0,0,lpMultiByteStr,cbMultiByte,lpWideCharStr_00,iVar1);
    lpWideCharStr = SysAllocStringLen(local_810,UVar2);
  }
  else {
    UVar2 = MultiByteToWideChar(0,0,param_1,cbMultiByte,(LPWSTR)0x0,0);
    lpWideCharStr = SysAllocStringLen((OLECHAR *)0x0,UVar2);
    MultiByteToWideChar(0,0,param_1,cbMultiByte,lpWideCharStr,UVar2);
  }
  return lpWideCharStr;
}



void thunk_FUN_00402780(uint param_1)

{
  FUN_00402780(CONCAT31((int3)(param_1 >> 8),0xf));
  return;
}



void FUN_00404918(VARIANTARG *param_1)

{
  ushort uVar1;
  
  uVar1 = (param_1->n1).n2.vt;
  if (((uVar1 & 0x4000) != 0) || (uVar1 < 8)) {
    (param_1->n1).n2.vt = 0;
    return;
  }
  if (uVar1 == 0x100) {
    (param_1->n1).n2.vt = 0;
    FUN_00403bdc((int *)((int)&param_1->n1 + 8));
    return;
  }
  if (uVar1 == 0x101) {
                    // WARNING: Could not recover jumptable at 0x0040493a. Too many branches
                    // WARNING: Treating indirect jump as call
    (*DAT_004763e4)();
    return;
  }
  VariantClear(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0040495c(VARIANT *param_1,VARIANTARG *param_2)

{
  int iVar1;
  int iVar2;
  HRESULT HVar3;
  
  if (param_1 != param_2) {
    if (7 < (param_1->n1).n2.vt) {
      if ((param_1->n1).n2.vt == 0x100) {
        FUN_00403bdc((int *)((int)&param_1->n1 + 8));
      }
      else if ((param_1->n1).n2.vt == 0x101) {
        (*DAT_004763e4)();
      }
      else {
        VariantClear(param_1);
      }
    }
    if ((param_2->n1).n2.vt < 8) {
      *(undefined4 *)&param_1->n1 = *(undefined4 *)&param_2->n1;
      *(undefined4 *)((int)&param_1->n1 + 8) = *(undefined4 *)((int)&param_2->n1 + 8);
      *(undefined4 *)((int)&param_1->n1 + 0xc) = *(undefined4 *)((int)&param_2->n1 + 0xc);
      return;
    }
    if ((param_2->n1).n2.vt == 0x100) {
      iVar1 = *(int *)((int)&param_2->n1 + 8);
      if ((iVar1 != 0) &&
         (iVar2 = *(int *)(iVar1 + -8), iVar2 != -1 && SCARRY4(iVar2,1) == iVar2 + 1 < 0)) {
        LOCK();
        *(int *)(iVar1 + -8) = *(int *)(iVar1 + -8) + 1;
        UNLOCK();
      }
      (param_1->n1).n2.vt = 0x100;
      *(int *)((int)&param_1->n1 + 8) = iVar1;
      return;
    }
    if ((param_2->n1).n2.vt == 0x101) {
      FUN_0040499a((undefined4 *)param_1,(undefined4 *)param_2);
                    // WARNING: Could not recover jumptable at 0x004049c0. Too many branches
                    // WARNING: Treating indirect jump as call
      (*_DAT_004763ec)(param_1);
      return;
    }
    (param_1->n1).n2.vt = 0;
    HVar3 = VariantCopyInd(param_1,param_2);
    if (HVar3 != 0) {
      FUN_00402780(CONCAT31((int3)((uint)HVar3 >> 8),0x10));
      return;
    }
  }
  return;
}



void FUN_0040499a(undefined4 *param_1,undefined4 *param_2)

{
  *param_1 = *param_2;
  param_1[2] = param_2[2];
  param_1[3] = param_2[3];
  return;
}



void FUN_004049f8(VARIANTARG *param_1,undefined4 *param_2,undefined4 param_3)

{
  int iVar1;
  VARIANT *pVVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_2c;
  undefined1 *puStack_28;
  undefined1 *puStack_24;
  VARIANT local_14;
  
  pVVar2 = &local_14;
  for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {
    *(undefined4 *)&pVVar2->n1 = *param_2;
    param_2 = param_2 + 1;
    pVVar2 = (VARIANT *)((int)&pVVar2->n1 + 4);
  }
  puStack_24 = (undefined1 *)0x404a1b;
  FUN_00404d1c(&local_14);
  puStack_28 = &LAB_00404a54;
  uStack_2c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_2c;
  puStack_24 = &stack0xfffffffc;
  (*DAT_004763e8)(&local_14);
  FUN_00404a7c(param_1,&local_14,param_3);
  *in_FS_OFFSET = uStack_2c;
  puStack_24 = &LAB_00404a5b;
  puStack_28 = (undefined1 *)0x404a53;
  FUN_00404d14(&local_14);
  return;
}



bool FUN_00404a64(VARIANTARG *param_1,short *param_2)

{
  short sVar1;
  undefined4 in_ECX;
  
  sVar1 = *param_2;
  if (sVar1 == 0x101) {
    FUN_004049f8(param_1,(undefined4 *)param_2,in_ECX);
  }
  return sVar1 == 0x101;
}



void FUN_00404a7c(VARIANTARG *param_1,VARIANTARG *param_2,undefined4 param_3)

{
  VARTYPE VVar1;
  bool bVar2;
  uint uVar3;
  _union_2683 local_14;
  
  VVar1 = (param_1->n1).n2.vt;
  if (VVar1 == 0x100) {
    bVar2 = FUN_00404a64(param_1,(short *)param_2);
    if (!bVar2) {
      local_14._0_4_ = (uint)local_14.n2.wReserved1 << 0x10;
      uVar3 = VariantChangeTypeEx((VARIANTARG *)&local_14.n2,param_2,0x400,0,(VARTYPE)param_3);
      if (uVar3 != 0) {
        thunk_FUN_00402780(uVar3);
      }
      FUN_00404918(param_1);
      *(undefined4 *)&param_1->n1 = local_14._0_4_;
      *(undefined4 *)((int)&param_1->n1 + 8) = local_14._8_4_;
      *(undefined4 *)((int)&param_1->n1 + 0xc) = local_14._12_4_;
    }
  }
  else if (VVar1 == 0x101) {
    FUN_004049f8(param_1,(undefined4 *)param_2,param_3);
  }
  else {
    bVar2 = FUN_00404a64(param_1,(short *)param_2);
    if (!bVar2) {
      uVar3 = VariantChangeTypeEx(param_1,param_2,0x400,0,(VARTYPE)param_3);
      if (uVar3 != 0) {
        thunk_FUN_00402780(uVar3);
      }
    }
  }
  return;
}



void FUN_00404b20(VARIANTARG *param_1,int param_2)

{
  int local_8;
  
  local_8 = 0;
  FUN_00404860(*(LPCWSTR *)(param_2 + 8),&local_8);
  FUN_00404918(param_1);
  (param_1->n1).n2.vt = 0x100;
  *(int *)((int)&param_1->n1 + 8) = local_8;
  return;
}



void FUN_00404b50(VARIANTARG *param_1,int param_2)

{
  BSTR pOVar1;
  
  pOVar1 = FUN_00404884(*(LPCSTR *)(param_2 + 8));
  FUN_00404918(param_1);
  (param_1->n1).n2.vt = 8;
  *(BSTR *)((int)&param_1->n1 + 8) = pOVar1;
  return;
}



void FUN_00404b70(VARIANT *param_1,VARIANTARG *param_2,undefined4 param_3)

{
  VARTYPE VVar1;
  VARTYPE VVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  _union_2683 local_14;
  
  VVar1 = (param_2->n1).n2.vt;
  VVar2 = (VARTYPE)param_3;
  if (VVar2 == VVar1) {
    puStack_20 = (undefined1 *)0x404b8c;
    FUN_0040495c(param_1,param_2);
  }
  else if (VVar1 == 0x100) {
    if (VVar2 != 8) {
      local_14.n2.vt = 0;
      puStack_20 = (undefined1 *)0x404bb8;
      FUN_00404b50((VARIANTARG *)&local_14.n2,(int)param_2);
      puStack_24 = &LAB_00404be9;
      uStack_28 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack_28;
      puStack_20 = &stack0xfffffffc;
      FUN_00404a7c(param_1,(VARIANTARG *)&local_14.n2,param_3);
      *in_FS_OFFSET = uStack_28;
      puStack_20 = (undefined1 *)0x404c5f;
      puStack_24 = (undefined1 *)0x404be8;
      FUN_00404918((VARIANTARG *)&local_14.n2);
      return;
    }
    puStack_20 = (undefined1 *)0x404ba5;
    FUN_00404b50(param_1,(int)param_2);
  }
  else if ((VVar2 == 0x100) && (VVar1 != 0x101)) {
    if (VVar1 != 8) {
      local_14.n2.vt = 0;
      puStack_20 = (undefined1 *)0x404c1f;
      FUN_00404a7c((VARIANTARG *)&local_14.n2,param_2,CONCAT22((short)((uint)param_3 >> 0x10),8));
      puStack_24 = &LAB_00404c4e;
      uStack_28 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack_28;
      puStack_20 = &stack0xfffffffc;
      FUN_00404b20(param_1,(int)&local_14);
      *in_FS_OFFSET = uStack_28;
      puStack_20 = (undefined1 *)0x404c5f;
      puStack_24 = (undefined1 *)0x404c4d;
      FUN_00404918((VARIANTARG *)&local_14.n2);
      return;
    }
    puStack_20 = (undefined1 *)0x404c0b;
    FUN_00404b20(param_1,(int)param_2);
  }
  else {
    puStack_20 = (undefined1 *)0x404c5f;
    FUN_00404a7c(param_1,param_2,param_3);
  }
  return;
}



void FUN_00404c64(int *param_1,VARIANTARG *param_2)

{
  _union_2683 local_14;
  
  if ((param_2->n1).n2.vt == 0x100) {
    FUN_00403c30(param_1,*(undefined4 **)((int)&param_2->n1 + 8));
    return;
  }
  local_14.n2.vt = 0;
  FUN_00404b70((VARIANT *)&local_14.n2,param_2,0x100);
  FUN_00403bdc(param_1);
  *param_1 = local_14._8_4_;
  return;
}



void FUN_00404ca0(VARIANTARG *param_1,undefined4 *param_2)

{
  int iVar1;
  undefined4 *puVar2;
  
  if (7 < (param_1->n1).n2.vt) {
    FUN_00404918(param_1);
  }
  puVar2 = param_2;
  if (param_2 != (undefined4 *)0x0) {
    iVar1 = param_2[-2];
    if (iVar1 == -1 || SCARRY4(iVar1,1) != iVar1 + 1 < 0) {
      puVar2 = FUN_00403ca0(param_2[-1]);
      FUN_00402920(param_2,puVar2,puVar2[-1]);
    }
    else {
      LOCK();
      param_2[-2] = param_2[-2] + 1;
      UNLOCK();
    }
  }
  (param_1->n1).n2.vt = 0x100;
  *(undefined4 **)((int)&param_1->n1 + 8) = puVar2;
  return;
}



void FUN_00404ce0(VARIANTARG *param_1,OLECHAR *param_2)

{
  BSTR ui;
  
  if (7 < (param_1->n1).n2.vt) {
    FUN_00404918(param_1);
  }
  ui = (BSTR)0x0;
  if ((param_2 != (OLECHAR *)0x0) && (ui = (BSTR)(*(uint *)(param_2 + -2) >> 1), ui != (BSTR)0x0)) {
    ui = SysAllocStringLen(param_2,(UINT)ui);
    if (ui == (BSTR)0x0) {
      FUN_00402780(1);
      return;
    }
  }
  (param_1->n1).n2.vt = 8;
  *(BSTR *)((int)&param_1->n1 + 8) = ui;
  return;
}



VARIANTARG * FUN_00404d14(VARIANTARG *param_1)

{
  FUN_00404918(param_1);
  return param_1;
}



void FUN_00404d1c(VARIANT *param_1)

{
  _union_2683 _Stack_10;
  
  if (7 < (param_1->n1).n2.vt) {
    _Stack_10._12_4_ = *(undefined4 *)((int)&param_1->n1 + 0xc);
    _Stack_10._8_4_ = *(undefined4 *)((int)&param_1->n1 + 8);
    _Stack_10.decVal.Hi32 = (param_1->n1).decVal.Hi32;
    _Stack_10._0_4_ = *(undefined4 *)&param_1->n1;
    (param_1->n1).n2.vt = 0;
    FUN_0040495c(param_1,(VARIANTARG *)&_Stack_10.n2);
  }
  return;
}



int FUN_00404d40(int param_1)

{
  if (param_1 != 0) {
    param_1 = *(int *)(param_1 + -4);
  }
  return param_1;
}



int FUN_00404d48(int param_1)

{
  int iVar1;
  
  iVar1 = FUN_00404d40(param_1);
  return iVar1 + -1;
}



void FUN_00404d50(VARIANT *param_1,VARIANTARG *param_2,char *param_3,int param_4)

{
  FUN_004046bc(param_1,param_2,param_3,param_4);
  return;
}



// WARNING: Type propagation algorithm not settling

VARIANTARG * thunk_FUN_004044ac(VARIANTARG *param_1,char *param_2,int param_3)

{
  char cVar1;
  bool bVar2;
  VARIANTARG *pVVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  
  if (param_3 != 0) {
    cVar1 = *param_2;
    uVar4 = (uint)(byte)param_2[1];
    if (cVar1 == '\n') {
      if (param_3 < 2) {
        FUN_00403bdc((int *)param_1);
      }
      else {
        FUN_00403c00((int *)param_1,param_3);
      }
    }
    else if (cVar1 == '\v') {
      if (param_3 < 2) {
        FUN_00404234((undefined4 *)param_1);
      }
      else {
        FUN_0040424c((undefined4 *)param_1,param_3);
      }
    }
    else {
      pVVar3 = param_1;
      if (cVar1 == '\f') {
        do {
          FUN_00404d14(pVVar3);
          iVar6 = param_3 + -1;
          bVar2 = 0 < param_3;
          pVVar3 = pVVar3 + 1;
          param_3 = iVar6;
        } while (iVar6 != 0 && bVar2);
      }
      else if (cVar1 == '\r') {
        do {
          iVar6 = *(int *)(param_2 + uVar4 + 2);
          FUN_004044ac(pVVar3,(char *)**(undefined4 **)(param_2 + uVar4 + 10),
                       *(int *)(param_2 + uVar4 + 6));
          iVar5 = param_3 + -1;
          bVar2 = 0 < param_3;
          pVVar3 = (VARIANTARG *)((int)&pVVar3->n1 + iVar6);
          param_3 = iVar5;
        } while (iVar5 != 0 && bVar2);
      }
      else if (cVar1 == '\x0e') {
        do {
          iVar6 = *(int *)(param_2 + uVar4 + 2);
          FUN_00404480((int)pVVar3,(int)param_2);
          iVar5 = param_3 + -1;
          bVar2 = 0 < param_3;
          pVVar3 = (VARIANTARG *)((int)&pVVar3->n1 + iVar6);
          param_3 = iVar5;
        } while (iVar5 != 0 && bVar2);
      }
      else if (cVar1 == '\x0f') {
        do {
          FUN_0040553c((int *)pVVar3);
          iVar6 = param_3 + -1;
          bVar2 = 0 < param_3;
          pVVar3 = (VARIANTARG *)((int)&pVVar3->n1 + 4);
          param_3 = iVar6;
        } while (iVar6 != 0 && bVar2);
      }
      else {
        if (cVar1 != '\x11') {
          pVVar3 = (VARIANTARG *)FUN_00402780(CONCAT31((int3)((uint)param_1 >> 8),2));
          return pVVar3;
        }
        do {
          FUN_00404f08((int *)pVVar3,(int)param_2);
          iVar6 = param_3 + -1;
          bVar2 = 0 < param_3;
          pVVar3 = (VARIANTARG *)((int)&pVVar3->n1 + 4);
          param_3 = iVar6;
        } while (iVar6 != 0 && bVar2);
      }
    }
  }
  return param_1;
}



void FUN_00404d68(int *param_1,int param_2)

{
  FUN_00404f08(param_1,param_2);
  return;
}



void FUN_00404d70(int *param_1,int param_2,int param_3,int *param_4)

{
  undefined4 *puVar1;
  int *piVar2;
  int iVar3;
  char *pcVar4;
  int iVar5;
  int *local_24;
  int local_20;
  int local_1c;
  int local_18;
  int local_14;
  int local_10;
  int local_c;
  int *local_8;
  
  piVar2 = (int *)*param_1;
  iVar5 = *param_4;
  local_c = param_3;
  local_8 = param_1;
  if (iVar5 < 1) {
    if (iVar5 < 0) {
      FUN_00402780(CONCAT31((int3)((uint)param_4 >> 8),4));
    }
    FUN_00404d68(local_8,param_2);
  }
  else {
    local_14 = 0;
    if (piVar2 != (int *)0x0) {
      local_14 = piVar2[-1];
      piVar2 = piVar2 + -2;
    }
    iVar3 = param_2 + (uint)*(byte *)(param_2 + 1);
    local_1c = *(int *)(iVar3 + 2);
    puVar1 = *(undefined4 **)(iVar3 + 6);
    if (puVar1 == (undefined4 *)0x0) {
      pcVar4 = (char *)0x0;
    }
    else {
      pcVar4 = (char *)*puVar1;
    }
    local_20 = iVar5 * local_1c;
    if (local_20 / iVar5 != local_1c) {
      FUN_00402780(CONCAT31((int3)((uint)(local_20 / iVar5) >> 8),4));
    }
    local_20 = local_20 + 8;
    if ((piVar2 == (int *)0x0) || (*piVar2 == 1)) {
      local_24 = piVar2;
      if ((iVar5 < local_14) && (pcVar4 != (char *)0x0)) {
        thunk_FUN_004044ac((VARIANTARG *)((int)piVar2 + iVar5 * local_1c + 8),pcVar4,
                           local_14 - iVar5);
      }
      FUN_00402724((int *)&local_24,local_20);
      piVar2 = local_24;
    }
    else {
      *piVar2 = *piVar2 + -1;
      piVar2 = (int *)FUN_004026f4(local_20);
      local_18 = local_14;
      if (iVar5 < local_14) {
        local_18 = iVar5;
      }
      if (pcVar4 == (char *)0x0) {
        FUN_00402920((undefined4 *)*local_8,piVar2 + 2,local_18 * local_1c);
      }
      else {
        FUN_00402c14(piVar2 + 2,local_18 * local_1c,0);
        FUN_00404d50((VARIANT *)(piVar2 + 2),(VARIANTARG *)*local_8,pcVar4,local_18);
      }
    }
    *piVar2 = 1;
    piVar2[1] = iVar5;
    piVar2 = piVar2 + 2;
    FUN_00402c14((int *)(local_1c * local_14 + (int)piVar2),(iVar5 - local_14) * local_1c,0);
    if (1 < local_c) {
      local_c = local_c + -1;
      if (-1 < iVar5 + -1) {
        local_10 = 0;
        do {
          FUN_00404d70(piVar2 + local_10,(int)pcVar4,local_c,param_4 + 1);
          local_10 = local_10 + 1;
          iVar5 = iVar5 + -1;
        } while (iVar5 != 0);
      }
    }
    *local_8 = (int)piVar2;
  }
  return;
}



void FUN_00404efc(int *param_1,int param_2,int param_3)

{
  FUN_00404d70(param_1,param_2,param_3,(int *)&stack0x00000004);
  return;
}



int * FUN_00404f08(int *param_1,int param_2)

{
  int *piVar1;
  undefined4 *puVar2;
  int iVar3;
  VARIANTARG *pVVar4;
  
  pVVar4 = (VARIANTARG *)*param_1;
  if (pVVar4 != (VARIANTARG *)0x0) {
    *param_1 = 0;
    LOCK();
    piVar1 = (int *)((int)&pVVar4[-1].n1 + 8);
    *piVar1 = *piVar1 + -1;
    UNLOCK();
    if (*piVar1 == 0) {
      puVar2 = *(undefined4 **)(param_2 + 6 + (uint)*(byte *)(param_2 + 1));
      if ((puVar2 != (undefined4 *)0x0) && (iVar3 = *(int *)((int)&pVVar4[-1].n1 + 0xc), iVar3 != 0)
         ) {
        pVVar4 = FUN_004044ac(pVVar4,(char *)*puVar2,iVar3);
      }
      FUN_0040270c((int)((int)&pVVar4[-1].n1 + 8));
    }
  }
  return param_1;
}



void FUN_00404f44(int *param_1,int param_2,int param_3)

{
  int *piVar1;
  int iVar2;
  
  iVar2 = *param_1;
  if (param_2 != 0) {
    LOCK();
    *(int *)(param_2 + -8) = *(int *)(param_2 + -8) + 1;
    UNLOCK();
  }
  if (iVar2 != 0) {
    LOCK();
    piVar1 = (int *)(iVar2 + -8);
    *piVar1 = *piVar1 + -1;
    UNLOCK();
    if (*piVar1 == 0) {
      *(int *)(iVar2 + -8) = *(int *)(iVar2 + -8) + 1;
      FUN_00404f08(param_1,param_3);
    }
  }
  *param_1 = param_2;
  return;
}



PVOID FUN_00404f6c(LPCVOID param_1)

{
  _MEMORY_BASIC_INFORMATION local_1c;
  
  VirtualQuery(param_1,&local_1c,0x1c);
  if (local_1c.State != 0x1000) {
    local_1c.AllocationBase = (PVOID)0x0;
  }
  return local_1c.AllocationBase;
}



void FUN_00404f94(LPCVOID param_1)

{
  FUN_00404f6c(param_1);
  return;
}



int FUN_00404f9c(int param_1)

{
  int *piVar1;
  
  piVar1 = DAT_00474014;
  if (DAT_00474014 != (int *)0x0) {
    do {
      if (((param_1 == piVar1[1]) || (param_1 == piVar1[2])) || (param_1 == piVar1[3])) {
        return piVar1[4];
      }
      piVar1 = (int *)*piVar1;
    } while (piVar1 != (int *)0x0);
  }
  return param_1;
}



void thunk_FUN_00404fc8(LPCSTR param_1)

{
  for (; (*param_1 != '\0' && (*param_1 != '\\')); param_1 = CharNextA(param_1)) {
  }
  return;
}



void FUN_00404fc8(LPCSTR param_1)

{
  for (; (*param_1 != '\0' && (*param_1 != '\\')); param_1 = CharNextA(param_1)) {
  }
  return;
}



char * FUN_00404fd4(char *param_1)

{
  HMODULE hModule;
  int iVar1;
  char *pcVar2;
  LPCSTR pCVar3;
  HANDLE hFindFile;
  int iVar4;
  CHAR local_253 [261];
  undefined1 local_14e [322];
  char *local_c;
  char *local_8;
  
  local_c = param_1;
  local_8 = param_1;
  hModule = GetModuleHandleA(s_kernel32_dll_00405158);
  if (((hModule == (HMODULE)0x0) ||
      (local_14e._318_4_ = GetProcAddress(hModule,s_GetLongPathNameA_00405168),
      (FARPROC)local_14e._318_4_ == (FARPROC)0x0)) ||
     (iVar1 = (*(code *)local_14e._318_4_)(), iVar1 == 0)) {
    if (*local_8 == '\\') {
      if (local_8[1] != '\\') {
        return local_c;
      }
      pcVar2 = (char *)thunk_FUN_00404fc8(local_8 + 2);
      if (*pcVar2 == '\0') {
        return local_c;
      }
      pcVar2 = (char *)thunk_FUN_00404fc8(pcVar2 + 1);
      if (*pcVar2 == '\0') {
        return local_c;
      }
    }
    else {
      pcVar2 = local_8 + 2;
    }
    iVar1 = (int)pcVar2 - (int)local_8;
    lstrcpynA(local_253,local_8,iVar1 + 1);
    while (*pcVar2 != '\0') {
      pCVar3 = (LPCSTR)thunk_FUN_00404fc8(pcVar2 + 1);
      if (0x105 < (int)(pCVar3 + (iVar1 - (int)pcVar2) + 1)) {
        return local_c;
      }
      lstrcpynA(local_253 + iVar1,pcVar2,(int)(pCVar3 + (1 - (int)pcVar2)));
      hFindFile = FindFirstFileA(local_253,(LPWIN32_FIND_DATAA)local_14e);
      if (hFindFile == (HANDLE)0xffffffff) {
        return local_c;
      }
      FindClose(hFindFile);
      iVar4 = lstrlenA(local_14e + 0x2c);
      if (0x105 < iVar4 + iVar1 + 2) {
        return local_c;
      }
      local_253[iVar1] = '\\';
      lstrcpyA(local_253 + iVar1 + 1,local_14e + 0x2c);
      iVar4 = lstrlenA(local_14e + 0x2c);
      iVar1 = iVar1 + iVar4 + 1;
      pcVar2 = pCVar3;
    }
    lstrcpyA(local_8,local_253);
  }
  else {
    lstrcpyA(local_8,local_253);
  }
  return local_c;
}



HMODULE FUN_0040517c(LPCSTR param_1)

{
  LSTATUS LVar1;
  char *pcVar2;
  HMODULE pHVar3;
  LCID Locale;
  LPSTR lpString1;
  undefined4 *in_FS_OFFSET;
  LPDWORD lpReserved;
  LPDWORD lpType;
  BYTE *lpData;
  DWORD *lpcbData;
  undefined4 uVar4;
  LCTYPE LCType;
  int iVar5;
  char local_121 [261];
  DWORD local_1c;
  BYTE local_16 [5];
  char local_11 [2];
  undefined1 local_f;
  HKEY local_c;
  LPCSTR local_8;
  
  local_8 = param_1;
  GetModuleFileNameA((HMODULE)0x0,local_121,0x105);
  local_16[0] = '\0';
  LVar1 = RegOpenKeyExA((HKEY)&hKey_80000001,s_Software_Borland_Locales_00405338,0,0xf003f,&local_c)
  ;
  if (LVar1 != 0) {
    LVar1 = RegOpenKeyExA((HKEY)&hKey_80000001,s_Software_Borland_Delphi_Locales_00405354,0,0xf003f,
                          &local_c);
    if (LVar1 != 0) {
      lstrcpyA(local_121,local_8);
      iVar5 = 5;
      pcVar2 = local_11;
      LCType = 3;
      Locale = GetThreadLocale();
      GetLocaleInfoA(Locale,LCType,pcVar2,iVar5);
      pHVar3 = (HMODULE)0x0;
      if ((local_121[0] != '\0') && ((local_11[0] != '\0' || (local_16[0] != '\0')))) {
        iVar5 = lstrlenA(local_121);
        for (pcVar2 = local_121 + iVar5; (*pcVar2 != '.' && (pcVar2 != local_121));
            pcVar2 = pcVar2 + -1) {
        }
        if (pcVar2 != local_121) {
          lpString1 = pcVar2 + 1;
          if (local_16[0] != '\0') {
            lstrcpyA(lpString1,(LPCSTR)local_16);
            pHVar3 = LoadLibraryExA(local_121,(HANDLE)0x0,2);
          }
          if ((pHVar3 == (HMODULE)0x0) && (local_11[0] != '\0')) {
            lstrcpyA(lpString1,local_11);
            pHVar3 = LoadLibraryExA(local_121,(HANDLE)0x0,2);
            if (pHVar3 == (HMODULE)0x0) {
              local_f = 0;
              lstrcpyA(lpString1,local_11);
              pHVar3 = LoadLibraryExA(local_121,(HANDLE)0x0,2);
            }
          }
        }
      }
      return pHVar3;
    }
  }
  uVar4 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xfffffec8;
  local_1c = 5;
  lpcbData = &local_1c;
  lpData = local_16;
  lpType = (LPDWORD)0x0;
  lpReserved = (LPDWORD)0x0;
  pcVar2 = FUN_00404fd4(local_121);
  LVar1 = RegQueryValueExA(local_c,pcVar2,lpReserved,lpType,lpData,lpcbData);
  if (LVar1 != 0) {
    RegQueryValueExA(local_c,&lpValueName_00405374,(LPDWORD)0x0,(LPDWORD)0x0,local_16,&local_1c);
  }
  *in_FS_OFFSET = uVar4;
  pHVar3 = (HMODULE)RegCloseKey(local_c);
  return pHVar3;
}



void FUN_00405380(int param_1)

{
  FUN_004053a8(param_1);
  return;
}



void FUN_00405388(undefined4 param_1)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)FUN_004026f4(8);
  *puVar1 = DAT_00474018;
  puVar1[1] = param_1;
  DAT_00474018 = puVar1;
  return;
}



void FUN_004053a8(int param_1)

{
  int *piVar1;
  int *piVar2;
  
  piVar2 = DAT_00474018;
  if ((DAT_00474018 != (int *)0x0) && (DAT_00474018[1] == param_1)) {
    DAT_00474018 = (int *)*DAT_00474018;
    FUN_0040270c((int)piVar2);
    return;
  }
  if (DAT_00474018 != (int *)0x0) {
    do {
      piVar1 = (int *)*piVar2;
      if ((piVar1 != (int *)0x0) && (piVar1[1] == param_1)) {
        *piVar2 = *piVar1;
        FUN_0040270c((int)piVar1);
        return;
      }
      piVar2 = (int *)*piVar2;
    } while (piVar2 != (int *)0x0);
  }
  return;
}



void FUN_00405408(undefined4 param_1,undefined4 param_2,undefined1 *param_3)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  int *local_c;
  
  local_c = DAT_00474018;
  if (DAT_00474018 != (int *)0x0) {
    do {
      puStack_20 = &LAB_00405443;
      uStack_24 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack_24;
      puStack_1c = &stack0xfffffffc;
      (*(code *)local_c[1])(param_1,param_2,param_3);
      *in_FS_OFFSET = uStack_24;
      local_c = (int *)*local_c;
      param_3 = puStack_1c;
      param_2 = uStack_24;
    } while (local_c != (int *)0x0);
  }
  return;
}



void FUN_00405464(undefined4 *param_1)

{
  *param_1 = DAT_00474014;
  DAT_00474014 = param_1;
  return;
}



void FUN_00405474(undefined4 *param_1,undefined4 param_2,undefined1 *param_3)

{
  undefined4 *puVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_14;
  undefined1 *puStack_10;
  undefined1 *puStack_c;
  undefined4 *local_8;
  
  puStack_c = &stack0xfffffffc;
  puStack_10 = &LAB_004054d8;
  uStack_14 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_14;
  local_8 = param_1;
  FUN_00405408(param_1[1],0,param_3);
  *in_FS_OFFSET = uStack_14;
  puVar1 = DAT_00474014;
  if (local_8 == DAT_00474014) {
    DAT_00474014 = (undefined4 *)*local_8;
  }
  else {
    for (; puVar1 != (undefined4 *)0x0; puVar1 = (undefined4 *)*puVar1) {
      if ((undefined4 *)*puVar1 == local_8) {
        *puVar1 = *local_8;
        return;
      }
    }
  }
  return;
}



void FUN_004054e4(undefined4 *param_1,int *param_2)

{
  HINSTANCE hInstance;
  uint uVar1;
  UINT uID;
  CHAR *lpBuffer;
  int cchBufferMax;
  CHAR local_408 [1024];
  
  lpBuffer = local_408;
  if (param_1 != (undefined4 *)0x0) {
    if ((int)param_1[1] < 0x10000) {
      cchBufferMax = 0x400;
      uID = param_1[1];
      hInstance = (HINSTANCE)FUN_00404f9c(*(int *)*param_1);
      uVar1 = LoadStringA(hInstance,uID,lpBuffer,cchBufferMax);
      FUN_00403cc4(param_2,(undefined4 *)local_408,uVar1);
    }
    else {
      FUN_00403d94(param_2,(char *)param_1[1]);
    }
  }
  return;
}



int * FUN_0040553c(int *param_1)

{
  int *piVar1;
  
  piVar1 = (int *)*param_1;
  if (piVar1 != (int *)0x0) {
    *param_1 = 0;
    (**(code **)(*piVar1 + 8))();
    param_1 = piVar1;
  }
  return param_1;
}



void FUN_00405554(int *param_1,int *param_2)

{
  int *piVar1;
  
  piVar1 = (int *)*param_1;
  *param_1 = (int)param_2;
  if (param_2 != (int *)0x0) {
    (**(code **)(*param_2 + 4))();
  }
  if (piVar1 != (int *)0x0) {
    (**(code **)(*piVar1 + 8))();
  }
  return;
}



void FUN_00405570(int *param_1)

{
  if (param_1 != (int *)0x0) {
    (**(code **)(*param_1 + 4))();
  }
  return;
}



LONG FUN_004055e4(void)

{
  LONG LVar1;
  int *in_stack_00000004;
  
  LVar1 = InterlockedDecrement(in_stack_00000004 + 1);
  if (LVar1 == 0) {
    (**(code **)(*in_stack_00000004 + -4))(in_stack_00000004,1);
  }
  return LVar1;
}



DWORD __stdcall GetCurrentThreadId(void)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040560c. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetCurrentThreadId();
  return DVar1;
}



void FUN_00405816(undefined4 *param_1,char *param_2)

{
  char cVar1;
  char *pcVar2;
  char *pcVar3;
  char cVar4;
  
  param_1[5] = param_1 + 0x53;
  *param_1 = 0;
  param_1[1] = 0xd7b0;
  param_1[2] = 0x80;
  param_1[3] = 0;
  param_1[4] = 0;
  param_1[6] = &LAB_00405688;
  param_1[7] = 0;
  param_1[8] = 0;
  param_1[9] = 0;
  pcVar3 = (char *)(param_1 + 0x12);
  if (param_2 != (char *)0x0) {
    cVar4 = -0x7e;
    do {
      pcVar2 = pcVar3;
      cVar1 = *param_2;
      *pcVar2 = cVar1;
      if (cVar1 == '\0') {
        return;
      }
      cVar1 = param_2[1];
      param_2 = param_2 + 2;
      pcVar2[1] = cVar1;
      if (cVar1 == '\0') {
        return;
      }
      cVar4 = cVar4 + -1;
      pcVar3 = pcVar2 + 2;
    } while (cVar4 != '\0');
    pcVar3 = pcVar2 + 1;
  }
  *pcVar3 = '\0';
  return;
}



void FUN_00405891(int param_1)

{
  int iVar1;
  
  if (*(int *)(param_1 + 4) == 0xd7b2) {
    iVar1 = (**(code **)(param_1 + 0x20))();
    if (iVar1 != 0) {
LAB_004058b1:
      FUN_004027e4(iVar1);
      return;
    }
  }
  else if (*(int *)(param_1 + 4) != 0xd7b1) {
    iVar1 = 0x67;
    goto LAB_004058b1;
  }
  return;
}



uint FUN_004058b8(undefined4 *param_1,LPVOID param_2,uint param_3,uint *param_4)

{
  BOOL BVar1;
  uint uVar2;
  DWORD DVar3;
  DWORD DStack_10;
  uint uStack_c;
  
  if (param_1[1] - 0xd7b1 < 3) {
    DStack_10 = 0;
    uStack_c = param_3;
    BVar1 = ReadFile((HANDLE)*param_1,param_2,param_1[2] * param_3,&DStack_10,(LPOVERLAPPED)0x0);
    if (BVar1 == 1) {
      uVar2 = DStack_10 / (uint)param_1[2];
      if (param_4 != (uint *)0x0) {
        *param_4 = uVar2;
        return uVar2;
      }
      if (uVar2 == uStack_c) {
        return uVar2;
      }
      DVar3 = 100;
    }
    else {
      uStack_c = 0x40590b;
      DVar3 = GetLastError();
    }
  }
  else {
    DVar3 = 0x67;
  }
  uStack_c = 0x405910;
  FUN_004027e4(DVar3);
  return 0;
}



void FUN_0040591c(undefined *param_1)

{
  int iVar1;
  
  if (*(int *)(param_1 + 4) != 0xd7b1) {
    if (2 < *(int *)(param_1 + 4) - 0xd7b1U) {
      if (param_1 == &DAT_0047604c) {
        return;
      }
      iVar1 = 0x67;
      goto LAB_00405941;
    }
    iVar1 = (**(code **)(param_1 + 0x1c))();
    if (iVar1 != 0) goto LAB_00405941;
  }
  iVar1 = (**(code **)(param_1 + 0x24))(param_1);
  if (iVar1 == 0) {
    return;
  }
LAB_00405941:
  FUN_004027e4(iVar1);
  return;
}



uint FUN_00405958(undefined4 *param_1)

{
  DWORD DVar1;
  uint uVar2;
  
  if (param_1[1] - 0xd7b1 < 3) {
    DVar1 = GetFileSize((HANDLE)*param_1,(LPDWORD)0x0);
    if (DVar1 == 0xffffffff) {
      FUN_004027f4();
      uVar2 = 0xffffffff;
    }
    else {
      uVar2 = DVar1 / (uint)param_1[2];
    }
  }
  else {
    FUN_004027e4(0x67);
    uVar2 = 0xffffffff;
  }
  return uVar2;
}



void FUN_00405998(undefined *param_1,undefined4 param_2)

{
  int iVar1;
  
  if (*(int *)(param_1 + 4) != 0xd7b0) {
    if (3 < *(int *)(param_1 + 4) - 0xd7b0U) {
      FUN_004027e4(0x66);
      return;
    }
    FUN_0040591c(param_1);
  }
  *(undefined4 *)(param_1 + 4) = param_2;
  iVar1 = (**(code **)(param_1 + 0x18))(param_1);
  if (iVar1 != 0) {
    FUN_004027e4(iVar1);
  }
  return;
}



void FUN_004059da(undefined *param_1)

{
  FUN_00405998(param_1,0xd7b2);
  return;
}



void FUN_004059e1(undefined *param_1)

{
  FUN_00405998(param_1,0xd7b3);
  return;
}



void FUN_004059e8(undefined4 *param_1,undefined4 param_2,int param_3)

{
  int iVar1;
  DWORD dwDesiredAccess;
  HANDLE pvVar2;
  DWORD DVar3;
  DWORD dwCreationDisposition;
  
  if (param_1[1] != 0xd7b0) {
    if (3 < param_1[1] - 0xd7b0) {
      DVar3 = 0x66;
      goto LAB_00405ac2;
    }
    iVar1 = (*(code *)param_1[9])();
    if (iVar1 != 0) {
      FUN_004027e4(iVar1);
    }
  }
  param_1[1] = 0xd7b3;
  param_1[2] = param_2;
  param_1[9] = &LAB_00405b0a;
  param_1[7] = &LAB_00405a93;
  if (*(char *)(param_1 + 0x12) == '\0') {
    param_1[9] = &LAB_00405a93;
    if (param_3 == 3) {
      DVar3 = 0xfffffff5;
    }
    else {
      DVar3 = 0xfffffff6;
    }
    pvVar2 = GetStdHandle(DVar3);
  }
  else {
    dwDesiredAccess = 0xc0000000;
    DVar3 = *(DWORD *)(&DAT_00405ac9 + ((DAT_00476046 & 0x70) >> 2));
    dwCreationDisposition = 2;
    if ((param_3 != 3) && (dwCreationDisposition = 3, param_3 != 2)) {
      dwDesiredAccess = 0x40000000;
      param_1[1] = 0xd7b2;
      if (param_3 != 1) {
        dwDesiredAccess = 0x80000000;
        param_1[1] = 0xd7b1;
      }
    }
    pvVar2 = CreateFileA((LPCSTR)(param_1 + 0x12),dwDesiredAccess,DVar3,(LPSECURITY_ATTRIBUTES)0x0,
                         dwCreationDisposition,0x80,(HANDLE)0x0);
  }
  if (pvVar2 != (HANDLE)0xffffffff) {
    *param_1 = pvVar2;
    return;
  }
  param_1[1] = 0xd7b0;
  DVar3 = GetLastError();
LAB_00405ac2:
  FUN_004027e4(DVar3);
  return;
}



void FUN_00405ae9(undefined4 *param_1,undefined4 param_2)

{
  uint uVar1;
  
  uVar1 = DAT_00476046 & 0xffffff03;
  if (2 < (byte)uVar1) {
    uVar1 = 2;
  }
  FUN_004059e8(param_1,param_2,uVar1);
  return;
}



undefined * FUN_00405b20(undefined *param_1,undefined1 *param_2,int param_3)

{
  int iVar1;
  int iVar2;
  undefined1 *puVar3;
  byte bVar4;
  
  bVar4 = 0;
  if ((*(int *)(param_1 + 4) == 0xd7b2) ||
     ((param_1 == &DAT_00476218 && (FUN_004059da(&DAT_00476218), iRam0047621c == 0xd7b2)))) {
    do {
      iVar1 = *(int *)(param_1 + 0xc);
      iVar2 = *(int *)(param_1 + 8) - *(int *)(param_1 + 0xc);
      if (param_3 < iVar2) {
        *(int *)(param_1 + 0xc) = *(int *)(param_1 + 0xc) + param_3;
        puVar3 = (undefined1 *)(*(int *)(param_1 + 0x14) + iVar1);
        for (; param_3 != 0; param_3 = param_3 + -1) {
          *puVar3 = *param_2;
          param_2 = param_2 + (uint)bVar4 * -2 + 1;
          puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
        }
        return param_1;
      }
      *(int *)(param_1 + 0xc) = *(int *)(param_1 + 0xc) + iVar2;
      param_3 = param_3 - iVar2;
      puVar3 = (undefined1 *)(*(int *)(param_1 + 0x14) + iVar1);
      for (; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar3 = *param_2;
        param_2 = param_2 + (uint)bVar4 * -2 + 1;
        puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
      }
      iVar1 = (**(code **)(param_1 + 0x1c))();
    } while (iVar1 == 0);
    FUN_004027e4(iVar1);
  }
  else {
    param_1 = (undefined *)FUN_004027e4(0x69);
  }
  return param_1;
}



undefined * FUN_00405b8b(undefined *param_1,int param_2)

{
  int iVar1;
  LPVOID pvVar2;
  int iVar3;
  undefined *puVar4;
  undefined1 *puVar5;
  byte bVar6;
  
  bVar6 = 0;
  while (0x40 < param_2) {
    param_2 = param_2 + -0x40;
    FUN_00405b20(param_1,&DAT_00474064,0x40);
    pvVar2 = FUN_00406670();
    if (*(int *)((int)pvVar2 + 4) != 0) {
      return param_1;
    }
  }
  if (0 < param_2) {
    puVar4 = &DAT_00474064;
    if ((*(int *)(param_1 + 4) == 0xd7b2) ||
       ((param_1 == &DAT_00476218 && (FUN_004059da(&DAT_00476218), iRam0047621c == 0xd7b2)))) {
      do {
        iVar1 = *(int *)(param_1 + 0xc);
        iVar3 = *(int *)(param_1 + 8) - *(int *)(param_1 + 0xc);
        if (param_2 < iVar3) {
          *(int *)(param_1 + 0xc) = *(int *)(param_1 + 0xc) + param_2;
          puVar5 = (undefined1 *)(*(int *)(param_1 + 0x14) + iVar1);
          for (; param_2 != 0; param_2 = param_2 + -1) {
            *puVar5 = *puVar4;
            puVar4 = puVar4 + (uint)bVar6 * -2 + 1;
            puVar5 = puVar5 + (uint)bVar6 * -2 + 1;
          }
          return param_1;
        }
        *(int *)(param_1 + 0xc) = *(int *)(param_1 + 0xc) + iVar3;
        param_2 = param_2 - iVar3;
        puVar5 = (undefined1 *)(*(int *)(param_1 + 0x14) + iVar1);
        for (; iVar3 != 0; iVar3 = iVar3 + -1) {
          *puVar5 = *puVar4;
          puVar4 = puVar4 + (uint)bVar6 * -2 + 1;
          puVar5 = puVar5 + (uint)bVar6 * -2 + 1;
        }
        iVar1 = (**(code **)(param_1 + 0x1c))();
      } while (iVar1 == 0);
      FUN_004027e4(iVar1);
    }
    else {
      param_1 = (undefined *)FUN_004027e4(0x69);
    }
    return param_1;
  }
  return param_1;
}



void FUN_00405beb(undefined *param_1)

{
  undefined *puVar1;
  
  puVar1 = FUN_00405b20(param_1,&DAT_004740a4,2);
  FUN_00405891((int)puVar1);
  return;
}



void FUN_00405c68(undefined *param_1,char *param_2)

{
  char cVar1;
  uint uVar2;
  char *pcVar3;
  
  uVar2 = 0xffffffff;
  pcVar3 = param_2;
  do {
    if (uVar2 == 0) break;
    uVar2 = uVar2 - 1;
    cVar1 = *pcVar3;
    pcVar3 = pcVar3 + 1;
  } while (cVar1 != '\0');
  FUN_00405b8b(param_1,-(~uVar2 - 1));
  FUN_00405b20(param_1,param_2,~uVar2 - 1);
  return;
}



// WARNING: Removing unreachable block (ram,0x00405db4)
// WARNING: Removing unreachable block (ram,0x00405ce5)
// WARNING: Removing unreachable block (ram,0x00405dbc)
// WARNING: Removing unreachable block (ram,0x00405dc1)
// WARNING: Removing unreachable block (ram,0x00405dd2)
// WARNING: Removing unreachable block (ram,0x00405de0)
// WARNING: Removing unreachable block (ram,0x00405df5)
// WARNING: Removing unreachable block (ram,0x00405df7)
// WARNING: Removing unreachable block (ram,0x00405e00)
// WARNING: Removing unreachable block (ram,0x00405e07)
// WARNING: Removing unreachable block (ram,0x00405e09)
// WARNING: Removing unreachable block (ram,0x00405e1b)
// WARNING: Removing unreachable block (ram,0x00405e1d)
// WARNING: Removing unreachable block (ram,0x00405e1f)
// WARNING: Removing unreachable block (ram,0x00405e28)
// WARNING: Removing unreachable block (ram,0x00405e2c)
// WARNING: Removing unreachable block (ram,0x00405e2e)
// WARNING: Removing unreachable block (ram,0x00405e32)
// WARNING: Removing unreachable block (ram,0x00405e38)
// WARNING: Removing unreachable block (ram,0x00405d2e)
// WARNING: Removing unreachable block (ram,0x00405d22)
// WARNING: Removing unreachable block (ram,0x00405d54)

void FUN_00405cb8(byte *param_1,undefined4 param_2,undefined4 param_3,float10 param_4)

{
  uint uVar1;
  float10 fVar2;
  ushort uVar3;
  byte bVar4;
  int iVar5;
  uint uVar6;
  undefined1 *puVar7;
  byte *pbVar8;
  byte *pbVar9;
  byte bVar10;
  undefined4 uStack_114;
  undefined1 local_110 [8];
  ushort uStack_108;
  byte *local_10;
  
  bVar10 = 0;
  puVar7 = local_110;
  _local_110 = param_4;
  fVar2 = _local_110;
  uStack_108 = (ushort)((unkuint10)param_4 >> 0x40);
  uVar3 = uStack_108;
  if ((uStack_108 & 0x7fff) == 0x7fff) {
    local_110._4_4_ = (undefined4)((unkuint10)param_4 >> 0x20);
    pbVar8 = &DAT_00405e7e;
    if ((local_110._4_4_ == -0x80000000) && (pbVar8 = &DAT_00405e82, (short)uStack_108 < 0)) {
      pbVar8 = &DAT_00405e87;
    }
    *param_1 = 0x17;
    pbVar9 = param_1 + 1;
    uVar6 = (uint)(byte)(0x17 - *pbVar8);
    if (*pbVar8 < 0x18 && (byte)(0x17 - *pbVar8) != 0) {
      for (; uVar6 != 0; uVar6 = uVar6 - 1) {
        *pbVar9 = 0x20;
        pbVar9 = pbVar9 + 1;
      }
    }
    pbVar9[-1] = pbVar9[-1] - (char)uVar6;
    for (iVar5 = CONCAT31((int3)(uVar6 >> 8),*pbVar8); pbVar8 = pbVar8 + 1, iVar5 != 0;
        iVar5 = iVar5 + -1) {
      *pbVar9 = *pbVar8;
      pbVar9 = pbVar9 + 1;
    }
  }
  else {
    uStack_114 = 0x405d18;
    _local_110 = fVar2;
    local_10 = param_1;
    uStack_114 = FUN_00405ef6();
    iVar5 = 0xf;
    FUN_00405e8c(0xf,local_110);
    *local_10 = 0x17;
    bVar4 = 0x20;
    *local_10 = *local_10;
    if ((short)uVar3 < 0) {
      bVar4 = 0x2d;
    }
    pbVar8 = local_10 + (uint)bVar10 * -2 + 2;
    local_10[1] = bVar4;
    if (local_110[0] != '0') {
      uStack_114 = uStack_114 + 1;
      puVar7 = (undefined1 *)((int)&uStack_114 + 3);
    }
    *pbVar8 = puVar7[1];
    pbVar8[(uint)bVar10 * -2 + 1] = 0x2e;
    pbVar9 = puVar7 + (uint)bVar10 * -2 + 2;
    pbVar8 = pbVar8 + (uint)bVar10 * -2 + 1 + 1;
    while (iVar5 = iVar5 + -1, iVar5 != 0) {
      *pbVar8 = *pbVar9;
      pbVar9 = pbVar9 + (uint)bVar10 * -2 + 1;
      pbVar8 = pbVar8 + (uint)bVar10 * -2 + 1;
    }
    *pbVar8 = 0x45;
    bVar10 = 0x2b;
    if ((int)uStack_114 < 0) {
      bVar10 = 0x2d;
      uStack_114 = -uStack_114;
    }
    pbVar8[1] = bVar10;
    uVar6 = (uStack_114 & 0xffff) / 10;
    pbVar8[5] = (char)((uStack_114 & 0xffff) % 10) + 0x30;
    uVar1 = uVar6 / 10;
    pbVar8[4] = (char)(uVar6 % 10) + 0x30;
    pbVar8[3] = (char)(uVar1 % 10) + 0x30;
    pbVar8[2] = (char)(uVar1 / 10) + 0x30;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00405e8c(int param_1,undefined1 *param_2)

{
  int iVar1;
  short *psVar2;
  short *psVar3;
  char *pcVar4;
  float10 in_ST0;
  float10 fVar5;
  unkbyte10 local_e;
  
  *param_2 = 0x30;
  fVar5 = ROUND(in_ST0 * (float10)_DAT_00405ca8);
  if ((float10)_DAT_00405cb0 <= fVar5) {
    fVar5 = fVar5 - (float10)_DAT_00405cb0;
    *param_2 = 0x31;
  }
  local_e = to_bcd(fVar5);
  iVar1 = 8;
  psVar2 = (short *)(param_2 + 1);
  do {
    psVar3 = psVar2 + 1;
    *psVar2 = (CONCAT11(*(byte *)((int)&local_e + iVar1),*(byte *)((int)&local_e + iVar1) >> 4) &
              0xfff) + 0x3030;
    iVar1 = iVar1 + -1;
    psVar2 = psVar3;
  } while (-1 < iVar1);
  iVar1 = param_1 + -0x12;
  if (param_1 < 0x12) {
    pcVar4 = (char *)((int)psVar3 + iVar1);
    if ('4' < *pcVar4) {
      while( true ) {
        pcVar4 = pcVar4 + -1;
        *pcVar4 = *pcVar4 + '\x01';
        if (*pcVar4 < ':') break;
        *pcVar4 = '0';
      }
    }
  }
  else {
    for (; iVar1 != 0; iVar1 = iVar1 + -1) {
      *(undefined1 *)psVar3 = 0x30;
      psVar3 = (short *)((int)psVar3 + 1);
    }
  }
  return;
}



int FUN_00405ef6(void)

{
  int iVar1;
  int iVar2;
  int iVar3;
  unkbyte10 in_ST0;
  int local_10;
  int iStack_c;
  short sStack_8;
  
  iVar3 = 0;
  while (((sStack_8 = (short)((unkuint10)in_ST0 >> 0x40), sStack_8 != 0 ||
          (iStack_c = (int)((unkuint10)in_ST0 >> 0x20), iStack_c != 0)) ||
         (local_10 = (int)in_ST0, local_10 != 0))) {
    iVar1 = (int)(short)((uint)((short)(sStack_8 + -0x3fff) * 0x4d10) >> 0x10);
    iVar2 = -iVar1;
    if (iVar2 == 0) {
      return iVar3;
    }
    iVar3 = iVar3 + iVar1;
    FUN_00405f3c(iVar2);
  }
  return iVar3;
}



void FUN_00405f3c(int param_1)

{
  uint uVar1;
  
  if (param_1 < 0) {
    uVar1 = -param_1;
    if (0x13ff < (int)uVar1) {
      return;
    }
    if ((uVar1 >> 5 != 0) && (uVar1 >> 9 != 0)) {
      return;
    }
  }
  else if ((param_1 != 0) && (0x13ff < param_1)) {
    return;
  }
  return;
}



int FUN_00406210(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  return param_1 * param_4;
}



int FUN_00406300(int param_1,uint param_2,undefined4 param_3,uint param_4,uint param_5)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  bool bVar4;
  bool bVar5;
  
  if ((param_5 == 0) && ((param_2 == 0 || (param_4 == 0)))) {
    param_1 = (int)(CONCAT44(param_2,param_1) / (ulonglong)param_4);
  }
  else {
    iVar1 = 0x40;
    uVar3 = 0;
    uVar2 = 0;
    do {
      bVar4 = param_1 < 0;
      param_1 = param_1 * 2;
      bVar5 = (int)param_2 < 0;
      param_2 = param_2 << 1 | (uint)bVar4;
      bVar4 = (int)uVar2 < 0;
      uVar2 = uVar2 << 1 | (uint)bVar5;
      uVar3 = uVar3 << 1 | (uint)bVar4;
      if ((param_5 <= uVar3) && ((param_5 < uVar3 || (param_4 <= uVar2)))) {
        bVar4 = uVar2 < param_4;
        uVar2 = uVar2 - param_4;
        uVar3 = (uVar3 - param_5) - (uint)bVar4;
        param_1 = param_1 + 1;
      }
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  return param_1;
}



uint FUN_004063f5(int param_1,uint param_2,undefined4 param_3,uint param_4,uint param_5)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  bool bVar4;
  bool bVar5;
  
  if ((param_5 == 0) && ((param_2 == 0 || (param_4 == 0)))) {
    uVar2 = (uint)(CONCAT44(param_2,param_1) % (ulonglong)param_4);
  }
  else {
    iVar1 = 0x40;
    uVar3 = 0;
    uVar2 = 0;
    do {
      bVar4 = param_1 < 0;
      param_1 = param_1 * 2;
      bVar5 = (int)param_2 < 0;
      param_2 = param_2 << 1 | (uint)bVar4;
      bVar4 = (int)uVar2 < 0;
      uVar2 = uVar2 << 1 | (uint)bVar5;
      uVar3 = uVar3 << 1 | (uint)bVar4;
      if ((param_5 <= uVar3) && ((param_5 < uVar3 || (param_4 <= uVar2)))) {
        bVar4 = uVar2 < param_4;
        uVar2 = uVar2 - param_4;
        uVar3 = (uVar3 - param_5) - (uint)bVar4;
        param_1 = param_1 + 1;
      }
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  return uVar2;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00406498(void)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_10;
  undefined1 *puStack_c;
  undefined1 *puStack_8;
  
  puStack_8 = &stack0xfffffffc;
  puStack_c = &LAB_004064f6;
  uStack_10 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_10;
  _DAT_00476428 = _DAT_00476428 + 1;
  if (_DAT_00476428 == 0) {
    FUN_0040591c(&DAT_0047604c);
    FUN_0040591c(&DAT_00476218);
    FUN_00401b24();
    FUN_00404d14((VARIANTARG *)&DAT_00476410);
    FUN_00404d14((VARIANTARG *)&DAT_00476400);
    FUN_00404d14((VARIANTARG *)&DAT_004763f0);
  }
  *in_FS_OFFSET = uStack_10;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00406500(void)

{
  WORD WVar1;
  undefined4 uVar2;
  undefined2 extraout_var;
  undefined4 *in_FS_OFFSET;
  bool bVar3;
  undefined4 uStack_10;
  undefined1 *puStack_c;
  undefined1 *puStack_8;
  
  puStack_8 = &stack0xfffffffc;
  puStack_c = &LAB_004065e8;
  uStack_10 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_10;
  bVar3 = _DAT_00476428 == 0;
  _DAT_00476428 = _DAT_00476428 + -1;
  if (bVar3) {
    DAT_00476034 = 0;
    DAT_0047603c = 0;
    _DAT_00476040 = 0;
    DAT_00476046 = 2;
    DAT_00476047 = 2;
    DAT_00476048 = 3;
    _DAT_004763f0 = 0;
    _DAT_00476400 = 1;
    _DAT_00476410 = 10;
    _DAT_00476418 = 0x80020004;
    DAT_004763e4 = 0x404910;
    DAT_004763e8 = thunk_FUN_00402780;
    _DAT_004763ec = 0x404910;
    uVar2 = FUN_00402d9c();
    if ((char)uVar2 != '\0') {
      FUN_00402dcc();
    }
    FUN_00402e90();
    FUN_00405816((undefined4 *)&DAT_0047604c,&DAT_004065f4);
    FUN_00405816((undefined4 *)&DAT_00476218,&DAT_004065f4);
    _DAT_0047602c = GetCommandLineA();
    WVar1 = FUN_00401370();
    DAT_00476028 = CONCAT22(extraout_var,WVar1);
    _DAT_00476020 = GetCurrentThreadId();
  }
  *in_FS_OFFSET = uStack_10;
  return;
}



DWORD __stdcall GetModuleFileNameA(HMODULE hModule,LPSTR lpFilename,DWORD nSize)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x004065f8. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetModuleFileNameA(hModule,lpFilename,nSize);
  return DVar1;
}



HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)

{
  HMODULE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406600. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetModuleHandleA(lpModuleName);
  return pHVar1;
}



HLOCAL __stdcall LocalAlloc(UINT uFlags,SIZE_T uBytes)

{
  HLOCAL pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406608. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = LocalAlloc(uFlags,uBytes);
  return pvVar1;
}



LPVOID __stdcall TlsGetValue(DWORD dwTlsIndex)

{
  LPVOID pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406610. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = TlsGetValue(dwTlsIndex);
  return pvVar1;
}



BOOL __stdcall TlsSetValue(DWORD dwTlsIndex,LPVOID lpTlsValue)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406618. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = TlsSetValue(dwTlsIndex,lpTlsValue);
  return BVar1;
}



void FUN_00406620(void)

{
  HLOCAL lpTlsValue;
  
  if ((int)_tls_index < 0) {
    FUN_00403bd0(0xe2);
  }
  lpTlsValue = LocalAlloc(0x40,0x10);
  if (lpTlsValue == (HLOCAL)0x0) {
    FUN_00403bd0(0xe2);
  }
  else {
    TlsSetValue(_tls_index,lpTlsValue);
  }
  DAT_004764e0 = lpTlsValue;
  return;
}



LPVOID FUN_00406670(void)

{
  LPVOID pvVar1;
  int in_FS_OFFSET;
  
  if (DAT_004764cc == '\0') {
    return *(LPVOID *)(*(int *)(in_FS_OFFSET + 0x2c) + _tls_index * 4);
  }
  pvVar1 = TlsGetValue(_tls_index);
  if (pvVar1 != (LPVOID)0x0) {
    return pvVar1;
  }
  FUN_00406620();
  pvVar1 = TlsGetValue(_tls_index);
  if (pvVar1 != (LPVOID)0x0) {
    return pvVar1;
  }
  return DAT_004764e0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_004066b4(void)

{
  CHAR local_10c [264];
  
  GetModuleFileNameA(DAT_004764d8,local_10c,0x105);
  _DAT_004740b8 = FUN_0040517c(local_10c);
  if (_DAT_004740b8 == (HMODULE)0x0) {
    _DAT_004740b8 = DAT_004740ac;
  }
  FUN_00405464((undefined4 *)&DAT_004740a8);
  return;
}



void FUN_00406700(undefined4 param_1)

{
  undefined *puVar1;
  
  DAT_004740ac = GetModuleHandleA((LPCSTR)0x0);
  puVar1 = &DAT_004740a8;
  DAT_004740b0 = 0;
  DAT_004740b4 = 0;
  DAT_004764d8 = DAT_004740ac;
  FUN_004066b4();
  FUN_004039b4(param_1,(int)puVar1);
  return;
}



LSTATUS __stdcall RegCloseKey(HKEY hKey)

{
  LSTATUS LVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040676c. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = RegCloseKey(hKey);
  return LVar1;
}



LSTATUS __stdcall
RegOpenKeyExA(HKEY hKey,LPCSTR lpSubKey,DWORD ulOptions,REGSAM samDesired,PHKEY phkResult)

{
  LSTATUS LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406774. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = RegOpenKeyExA(hKey,lpSubKey,ulOptions,samDesired,phkResult);
  return LVar1;
}



LSTATUS __stdcall
RegQueryValueExA(HKEY hKey,LPCSTR lpValueName,LPDWORD lpReserved,LPDWORD lpType,LPBYTE lpData,
                LPDWORD lpcbData)

{
  LSTATUS LVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040677c. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = RegQueryValueExA(hKey,lpValueName,lpReserved,lpType,lpData,lpcbData);
  return LVar1;
}



BOOL __stdcall CloseHandle(HANDLE hObject)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406784. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = CloseHandle(hObject);
  return BVar1;
}



int __stdcall
CompareStringA(LCID Locale,DWORD dwCmpFlags,PCNZCH lpString1,int cchCount1,PCNZCH lpString2,
              int cchCount2)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040678c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = CompareStringA(Locale,dwCmpFlags,lpString1,cchCount1,lpString2,cchCount2);
  return iVar1;
}



HANDLE __stdcall
CreateEventA(LPSECURITY_ATTRIBUTES lpEventAttributes,BOOL bManualReset,BOOL bInitialState,
            LPCSTR lpName)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406794. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = CreateEventA(lpEventAttributes,bManualReset,bInitialState,lpName);
  return pvVar1;
}



HANDLE __stdcall
CreateFileA(LPCSTR lpFileName,DWORD dwDesiredAccess,DWORD dwShareMode,
           LPSECURITY_ATTRIBUTES lpSecurityAttributes,DWORD dwCreationDisposition,
           DWORD dwFlagsAndAttributes,HANDLE hTemplateFile)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040679c. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = CreateFileA(lpFileName,dwDesiredAccess,dwShareMode,lpSecurityAttributes,
                       dwCreationDisposition,dwFlagsAndAttributes,hTemplateFile);
  return pvVar1;
}



HANDLE __stdcall
CreateThread(LPSECURITY_ATTRIBUTES lpThreadAttributes,SIZE_T dwStackSize,
            LPTHREAD_START_ROUTINE lpStartAddress,LPVOID lpParameter,DWORD dwCreationFlags,
            LPDWORD lpThreadId)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x004067a4. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = CreateThread(lpThreadAttributes,dwStackSize,lpStartAddress,lpParameter,dwCreationFlags,
                        lpThreadId);
  return pvVar1;
}



void __stdcall DeleteCriticalSection(LPCRITICAL_SECTION lpCriticalSection)

{
                    // WARNING: Could not recover jumptable at 0x004067ac. Too many branches
                    // WARNING: Treating indirect jump as call
  DeleteCriticalSection(lpCriticalSection);
  return;
}



void __stdcall EnterCriticalSection(LPCRITICAL_SECTION lpCriticalSection)

{
                    // WARNING: Could not recover jumptable at 0x004067b4. Too many branches
                    // WARNING: Treating indirect jump as call
  EnterCriticalSection(lpCriticalSection);
  return;
}



BOOL __stdcall
EnumCalendarInfoA(CALINFO_ENUMPROCA lpCalInfoEnumProc,LCID Locale,CALID Calendar,CALTYPE CalType)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004067bc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = EnumCalendarInfoA(lpCalInfoEnumProc,Locale,Calendar,CalType);
  return BVar1;
}



BOOL __stdcall FileTimeToDosDateTime(FILETIME *lpFileTime,LPWORD lpFatDate,LPWORD lpFatTime)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004067c4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = FileTimeToDosDateTime(lpFileTime,lpFatDate,lpFatTime);
  return BVar1;
}



BOOL __stdcall FileTimeToLocalFileTime(FILETIME *lpFileTime,LPFILETIME lpLocalFileTime)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004067cc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = FileTimeToLocalFileTime(lpFileTime,lpLocalFileTime);
  return BVar1;
}



BOOL __stdcall FindClose(HANDLE hFindFile)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004067d4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = FindClose(hFindFile);
  return BVar1;
}



HANDLE __stdcall FindFirstFileA(LPCSTR lpFileName,LPWIN32_FIND_DATAA lpFindFileData)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x004067dc. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = FindFirstFileA(lpFileName,lpFindFileData);
  return pvVar1;
}



BOOL __stdcall FindNextFileA(HANDLE hFindFile,LPWIN32_FIND_DATAA lpFindFileData)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004067e4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = FindNextFileA(hFindFile,lpFindFileData);
  return BVar1;
}



HRSRC __stdcall FindResourceA(HMODULE hModule,LPCSTR lpName,LPCSTR lpType)

{
  HRSRC pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x004067ec. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = FindResourceA(hModule,lpName,lpType);
  return pHVar1;
}



DWORD __stdcall
FormatMessageA(DWORD dwFlags,LPCVOID lpSource,DWORD dwMessageId,DWORD dwLanguageId,LPSTR lpBuffer,
              DWORD nSize,va_list *Arguments)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x004067f4. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = FormatMessageA(dwFlags,lpSource,dwMessageId,dwLanguageId,lpBuffer,nSize,Arguments);
  return DVar1;
}



BOOL __stdcall FreeLibrary(HMODULE hLibModule)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004067fc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = FreeLibrary(hLibModule);
  return BVar1;
}



BOOL __stdcall FreeResource(HGLOBAL hResData)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406804. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = FreeResource(hResData);
  return BVar1;
}



BOOL __stdcall GetCPInfo(UINT CodePage,LPCPINFO lpCPInfo)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040680c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetCPInfo(CodePage,lpCPInfo);
  return BVar1;
}



DWORD __stdcall GetCurrentThreadId(void)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040681c. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetCurrentThreadId();
  return DVar1;
}



int __stdcall
GetDateFormatA(LCID Locale,DWORD dwFlags,SYSTEMTIME *lpDate,LPCSTR lpFormat,LPSTR lpDateStr,
              int cchDate)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406824. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetDateFormatA(Locale,dwFlags,lpDate,lpFormat,lpDateStr,cchDate);
  return iVar1;
}



BOOL __stdcall
GetDiskFreeSpaceA(LPCSTR lpRootPathName,LPDWORD lpSectorsPerCluster,LPDWORD lpBytesPerSector,
                 LPDWORD lpNumberOfFreeClusters,LPDWORD lpTotalNumberOfClusters)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040682c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetDiskFreeSpaceA(lpRootPathName,lpSectorsPerCluster,lpBytesPerSector,
                            lpNumberOfFreeClusters,lpTotalNumberOfClusters);
  return BVar1;
}



UINT __stdcall GetDriveTypeA(LPCSTR lpRootPathName)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406834. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetDriveTypeA(lpRootPathName);
  return UVar1;
}



DWORD __stdcall GetFileAttributesA(LPCSTR lpFileName)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040683c. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetFileAttributesA(lpFileName);
  return DVar1;
}



BOOL __stdcall
GetFileTime(HANDLE hFile,LPFILETIME lpCreationTime,LPFILETIME lpLastAccessTime,
           LPFILETIME lpLastWriteTime)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406844. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetFileTime(hFile,lpCreationTime,lpLastAccessTime,lpLastWriteTime);
  return BVar1;
}



DWORD __stdcall GetLastError(void)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040684c. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetLastError();
  return DVar1;
}



void __stdcall GetLocalTime(LPSYSTEMTIME lpSystemTime)

{
                    // WARNING: Could not recover jumptable at 0x00406854. Too many branches
                    // WARNING: Treating indirect jump as call
  GetLocalTime(lpSystemTime);
  return;
}



int __stdcall GetLocaleInfoA(LCID Locale,LCTYPE LCType,LPSTR lpLCData,int cchData)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040685c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetLocaleInfoA(Locale,LCType,lpLCData,cchData);
  return iVar1;
}



DWORD __stdcall GetLogicalDrives(void)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406864. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetLogicalDrives();
  return DVar1;
}



DWORD __stdcall GetModuleFileNameA(HMODULE hModule,LPSTR lpFilename,DWORD nSize)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040686c. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetModuleFileNameA(hModule,lpFilename,nSize);
  return DVar1;
}



HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)

{
  HMODULE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406874. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetModuleHandleA(lpModuleName);
  return pHVar1;
}



FARPROC __stdcall GetProcAddress(HMODULE hModule,LPCSTR lpProcName)

{
  FARPROC pFVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040687c. Too many branches
                    // WARNING: Treating indirect jump as call
  pFVar1 = GetProcAddress(hModule,lpProcName);
  return pFVar1;
}



DWORD __stdcall
GetProfileStringA(LPCSTR lpAppName,LPCSTR lpKeyName,LPCSTR lpDefault,LPSTR lpReturnedString,
                 DWORD nSize)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406884. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetProfileStringA(lpAppName,lpKeyName,lpDefault,lpReturnedString,nSize);
  return DVar1;
}



void __stdcall GetSystemInfo(LPSYSTEM_INFO lpSystemInfo)

{
                    // WARNING: Could not recover jumptable at 0x0040688c. Too many branches
                    // WARNING: Treating indirect jump as call
  GetSystemInfo(lpSystemInfo);
  return;
}



LCID __stdcall GetThreadLocale(void)

{
  LCID LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406894. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = GetThreadLocale();
  return LVar1;
}



DWORD __stdcall GetTickCount(void)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040689c. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetTickCount();
  return DVar1;
}



DWORD __stdcall GetVersion(void)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x004068a4. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetVersion();
  return DVar1;
}



BOOL __stdcall GetVersionExA(LPOSVERSIONINFOA lpVersionInformation)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004068ac. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetVersionExA(lpVersionInformation);
  return BVar1;
}



BOOL __stdcall
GetVolumeInformationA
          (LPCSTR lpRootPathName,LPSTR lpVolumeNameBuffer,DWORD nVolumeNameSize,
          LPDWORD lpVolumeSerialNumber,LPDWORD lpMaximumComponentLength,LPDWORD lpFileSystemFlags,
          LPSTR lpFileSystemNameBuffer,DWORD nFileSystemNameSize)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004068b4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetVolumeInformationA
                    (lpRootPathName,lpVolumeNameBuffer,nVolumeNameSize,lpVolumeSerialNumber,
                     lpMaximumComponentLength,lpFileSystemFlags,lpFileSystemNameBuffer,
                     nFileSystemNameSize);
  return BVar1;
}



ATOM __stdcall GlobalAddAtomA(LPCSTR lpString)

{
  ATOM AVar1;
  
                    // WARNING: Could not recover jumptable at 0x004068bc. Too many branches
                    // WARNING: Treating indirect jump as call
  AVar1 = GlobalAddAtomA(lpString);
  return AVar1;
}



HGLOBAL __stdcall GlobalAlloc(UINT uFlags,SIZE_T dwBytes)

{
  HGLOBAL pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x004068c4. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = GlobalAlloc(uFlags,dwBytes);
  return pvVar1;
}



ATOM __stdcall GlobalDeleteAtom(ATOM nAtom)

{
  ATOM AVar1;
  
                    // WARNING: Could not recover jumptable at 0x004068cc. Too many branches
                    // WARNING: Treating indirect jump as call
  AVar1 = GlobalDeleteAtom(nAtom);
  return AVar1;
}



HGLOBAL __stdcall GlobalFree(HGLOBAL hMem)

{
  HGLOBAL pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x004068d4. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = GlobalFree(hMem);
  return pvVar1;
}



LPVOID __stdcall GlobalLock(HGLOBAL hMem)

{
  LPVOID pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x004068dc. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = GlobalLock(hMem);
  return pvVar1;
}



HGLOBAL __stdcall GlobalHandle(LPCVOID pMem)

{
  HGLOBAL pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x004068e4. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = GlobalHandle(pMem);
  return pvVar1;
}



HGLOBAL __stdcall GlobalReAlloc(HGLOBAL hMem,SIZE_T dwBytes,UINT uFlags)

{
  HGLOBAL pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x004068ec. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = GlobalReAlloc(hMem,dwBytes,uFlags);
  return pvVar1;
}



BOOL __stdcall GlobalUnlock(HGLOBAL hMem)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004068f4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GlobalUnlock(hMem);
  return BVar1;
}



void __stdcall InitializeCriticalSection(LPCRITICAL_SECTION lpCriticalSection)

{
                    // WARNING: Could not recover jumptable at 0x004068fc. Too many branches
                    // WARNING: Treating indirect jump as call
  InitializeCriticalSection(lpCriticalSection);
  return;
}



void __stdcall LeaveCriticalSection(LPCRITICAL_SECTION lpCriticalSection)

{
                    // WARNING: Could not recover jumptable at 0x00406904. Too many branches
                    // WARNING: Treating indirect jump as call
  LeaveCriticalSection(lpCriticalSection);
  return;
}



HMODULE __stdcall LoadLibraryA(LPCSTR lpLibFileName)

{
  HMODULE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040690c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = LoadLibraryA(lpLibFileName);
  return pHVar1;
}



HGLOBAL __stdcall LoadResource(HMODULE hModule,HRSRC hResInfo)

{
  HGLOBAL pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406914. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = LoadResource(hModule,hResInfo);
  return pvVar1;
}



LPVOID __stdcall LockResource(HGLOBAL hResData)

{
  LPVOID pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040691c. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = LockResource(hResData);
  return pvVar1;
}



int __stdcall MulDiv(int nNumber,int nNumerator,int nDenominator)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406924. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = MulDiv(nNumber,nNumerator,nDenominator);
  return iVar1;
}



BOOL __stdcall
ReadFile(HANDLE hFile,LPVOID lpBuffer,DWORD nNumberOfBytesToRead,LPDWORD lpNumberOfBytesRead,
        LPOVERLAPPED lpOverlapped)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040692c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ReadFile(hFile,lpBuffer,nNumberOfBytesToRead,lpNumberOfBytesRead,lpOverlapped);
  return BVar1;
}



BOOL __stdcall SetEndOfFile(HANDLE hFile)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406934. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetEndOfFile(hFile);
  return BVar1;
}



UINT __stdcall SetErrorMode(UINT uMode)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040693c. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = SetErrorMode(uMode);
  return UVar1;
}



BOOL __stdcall SetEvent(HANDLE hEvent)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406944. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetEvent(hEvent);
  return BVar1;
}



BOOL __stdcall SetFileAttributesA(LPCSTR lpFileName,DWORD dwFileAttributes)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040694c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetFileAttributesA(lpFileName,dwFileAttributes);
  return BVar1;
}



DWORD __stdcall
SetFilePointer(HANDLE hFile,LONG lDistanceToMove,PLONG lpDistanceToMoveHigh,DWORD dwMoveMethod)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406954. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = SetFilePointer(hFile,lDistanceToMove,lpDistanceToMoveHigh,dwMoveMethod);
  return DVar1;
}



BOOL __stdcall SetThreadLocale(LCID Locale)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040695c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetThreadLocale(Locale);
  return BVar1;
}



DWORD __stdcall SizeofResource(HMODULE hModule,HRSRC hResInfo)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406964. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = SizeofResource(hModule,hResInfo);
  return DVar1;
}



void __stdcall Sleep(DWORD dwMilliseconds)

{
                    // WARNING: Could not recover jumptable at 0x0040696c. Too many branches
                    // WARNING: Treating indirect jump as call
  Sleep(dwMilliseconds);
  return;
}



LPVOID __stdcall VirtualAlloc(LPVOID lpAddress,SIZE_T dwSize,DWORD flAllocationType,DWORD flProtect)

{
  LPVOID pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406974. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = VirtualAlloc(lpAddress,dwSize,flAllocationType,flProtect);
  return pvVar1;
}



SIZE_T __stdcall VirtualQuery(LPCVOID lpAddress,PMEMORY_BASIC_INFORMATION lpBuffer,SIZE_T dwLength)

{
  SIZE_T SVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040697c. Too many branches
                    // WARNING: Treating indirect jump as call
  SVar1 = VirtualQuery(lpAddress,lpBuffer,dwLength);
  return SVar1;
}



DWORD __stdcall WaitForSingleObject(HANDLE hHandle,DWORD dwMilliseconds)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406984. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = WaitForSingleObject(hHandle,dwMilliseconds);
  return DVar1;
}



BOOL __stdcall
WriteFile(HANDLE hFile,LPCVOID lpBuffer,DWORD nNumberOfBytesToWrite,LPDWORD lpNumberOfBytesWritten,
         LPOVERLAPPED lpOverlapped)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040698c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = WriteFile(hFile,lpBuffer,nNumberOfBytesToWrite,lpNumberOfBytesWritten,lpOverlapped);
  return BVar1;
}



LPSTR __stdcall lstrcpyA(LPSTR lpString1,LPCSTR lpString2)

{
  LPSTR pCVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406994. Too many branches
                    // WARNING: Treating indirect jump as call
  pCVar1 = lstrcpyA(lpString1,lpString2);
  return pCVar1;
}



DWORD __stdcall WNetGetConnectionA(LPCSTR lpLocalName,LPSTR lpRemoteName,LPDWORD lpnLength)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040699c. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = WNetGetConnectionA(lpLocalName,lpRemoteName,lpnLength);
  return DVar1;
}



BOOL __stdcall GetFileVersionInfoA(LPCSTR lptstrFilename,DWORD dwHandle,DWORD dwLen,LPVOID lpData)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069a4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetFileVersionInfoA(lptstrFilename,dwHandle,dwLen,lpData);
  return BVar1;
}



DWORD __stdcall GetFileVersionInfoSizeA(LPCSTR lptstrFilename,LPDWORD lpdwHandle)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069ac. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetFileVersionInfoSizeA(lptstrFilename,lpdwHandle);
  return DVar1;
}



BOOL __stdcall VerQueryValueA(LPCVOID pBlock,LPCSTR lpSubBlock,LPVOID *lplpBuffer,PUINT puLen)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069b4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = VerQueryValueA(pBlock,lpSubBlock,lplpBuffer,puLen);
  return BVar1;
}



BOOL __stdcall BitBlt(HDC hdc,int x,int y,int cx,int cy,HDC hdcSrc,int x1,int y1,DWORD rop)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069bc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = BitBlt(hdc,x,y,cx,cy,hdcSrc,x1,y1,rop);
  return BVar1;
}



int __stdcall CombineRgn(HRGN hrgnDst,HRGN hrgnSrc1,HRGN hrgnSrc2,int iMode)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069c4. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = CombineRgn(hrgnDst,hrgnSrc1,hrgnSrc2,iMode);
  return iVar1;
}



HENHMETAFILE __stdcall CopyEnhMetaFileA(HENHMETAFILE hEnh,LPCSTR lpFileName)

{
  HENHMETAFILE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069cc. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = CopyEnhMetaFileA(hEnh,lpFileName);
  return pHVar1;
}



HBITMAP __stdcall CreateBitmap(int nWidth,int nHeight,UINT nPlanes,UINT nBitCount,void *lpBits)

{
  HBITMAP pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069d4. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = CreateBitmap(nWidth,nHeight,nPlanes,nBitCount,lpBits);
  return pHVar1;
}



HBRUSH __stdcall CreateBrushIndirect(LOGBRUSH *plbrush)

{
  HBRUSH pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069dc. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = CreateBrushIndirect(plbrush);
  return pHVar1;
}



HBITMAP __stdcall CreateCompatibleBitmap(HDC hdc,int cx,int cy)

{
  HBITMAP pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069e4. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = CreateCompatibleBitmap(hdc,cx,cy);
  return pHVar1;
}



HDC __stdcall CreateCompatibleDC(HDC hdc)

{
  HDC pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069ec. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = CreateCompatibleDC(hdc);
  return pHVar1;
}



HBITMAP __stdcall
CreateDIBSection(HDC hdc,BITMAPINFO *lpbmi,UINT usage,void **ppvBits,HANDLE hSection,DWORD offset)

{
  HBITMAP pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069fc. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = CreateDIBSection(hdc,lpbmi,usage,ppvBits,hSection,offset);
  return pHVar1;
}



HBITMAP __stdcall
CreateDIBitmap(HDC hdc,BITMAPINFOHEADER *pbmih,DWORD flInit,void *pjBits,BITMAPINFO *pbmi,
              UINT iUsage)

{
  HBITMAP pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a04. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = CreateDIBitmap(hdc,pbmih,flInit,pjBits,pbmi,iUsage);
  return pHVar1;
}



HFONT __stdcall CreateFontIndirectA(LOGFONTA *lplf)

{
  HFONT pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a0c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = CreateFontIndirectA(lplf);
  return pHVar1;
}



HPALETTE __stdcall CreateHalftonePalette(HDC hdc)

{
  HPALETTE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a14. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = CreateHalftonePalette(hdc);
  return pHVar1;
}



HPALETTE __stdcall CreatePalette(LOGPALETTE *plpal)

{
  HPALETTE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a24. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = CreatePalette(plpal);
  return pHVar1;
}



HPEN __stdcall CreatePenIndirect(LOGPEN *plpen)

{
  HPEN pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a2c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = CreatePenIndirect(plpen);
  return pHVar1;
}



HRGN __stdcall CreateRectRgn(int x1,int y1,int x2,int y2)

{
  HRGN pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a34. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = CreateRectRgn(x1,y1,x2,y2);
  return pHVar1;
}



HBRUSH __stdcall CreateSolidBrush(COLORREF color)

{
  HBRUSH pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a3c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = CreateSolidBrush(color);
  return pHVar1;
}



BOOL __stdcall DeleteDC(HDC hdc)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a44. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DeleteDC(hdc);
  return BVar1;
}



BOOL __stdcall DeleteEnhMetaFile(HENHMETAFILE hmf)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a4c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DeleteEnhMetaFile(hmf);
  return BVar1;
}



BOOL __stdcall DeleteObject(HGDIOBJ ho)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a54. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DeleteObject(ho);
  return BVar1;
}



BOOL __stdcall Ellipse(HDC hdc,int left,int top,int right,int bottom)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a5c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = Ellipse(hdc,left,top,right,bottom);
  return BVar1;
}



int __stdcall EndDoc(HDC hdc)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a64. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = EndDoc(hdc);
  return iVar1;
}



int __stdcall EndPage(HDC hdc)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a6c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = EndPage(hdc);
  return iVar1;
}



int __stdcall ExcludeClipRect(HDC hdc,int left,int top,int right,int bottom)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a74. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = ExcludeClipRect(hdc,left,top,right,bottom);
  return iVar1;
}



BOOL __stdcall
ExtTextOutA(HDC hdc,int x,int y,UINT options,RECT *lprect,LPCSTR lpString,UINT c,INT *lpDx)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a7c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ExtTextOutA(hdc,x,y,options,lprect,lpString,c,lpDx);
  return BVar1;
}



BOOL __stdcall GdiFlush(void)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a84. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GdiFlush();
  return BVar1;
}



LONG __stdcall GetBitmapBits(HBITMAP hbit,LONG cb,LPVOID lpvBits)

{
  LONG LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a8c. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = GetBitmapBits(hbit,cb,lpvBits);
  return LVar1;
}



BOOL __stdcall GetBrushOrgEx(HDC hdc,LPPOINT lppt)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a94. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetBrushOrgEx(hdc,lppt);
  return BVar1;
}



int __stdcall GetClipBox(HDC hdc,LPRECT lprect)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a9c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetClipBox(hdc,lprect);
  return iVar1;
}



BOOL __stdcall GetCurrentPositionEx(HDC hdc,LPPOINT lppt)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406aa4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetCurrentPositionEx(hdc,lppt);
  return BVar1;
}



BOOL __stdcall GetDCOrgEx(HDC hdc,LPPOINT lppt)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406aac. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetDCOrgEx(hdc,lppt);
  return BVar1;
}



UINT __stdcall GetDIBColorTable(HDC hdc,UINT iStart,UINT cEntries,RGBQUAD *prgbq)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ab4. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetDIBColorTable(hdc,iStart,cEntries,prgbq);
  return UVar1;
}



int __stdcall
GetDIBits(HDC hdc,HBITMAP hbm,UINT start,UINT cLines,LPVOID lpvBits,LPBITMAPINFO lpbmi,UINT usage)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406abc. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetDIBits(hdc,hbm,start,cLines,lpvBits,lpbmi,usage);
  return iVar1;
}



int __stdcall GetDeviceCaps(HDC hdc,int index)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ac4. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetDeviceCaps(hdc,index);
  return iVar1;
}



UINT __stdcall GetEnhMetaFileBits(HENHMETAFILE hEMF,UINT nSize,LPBYTE lpData)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406acc. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetEnhMetaFileBits(hEMF,nSize,lpData);
  return UVar1;
}



UINT __stdcall GetEnhMetaFileHeader(HENHMETAFILE hemf,UINT nSize,LPENHMETAHEADER lpEnhMetaHeader)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ad4. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetEnhMetaFileHeader(hemf,nSize,lpEnhMetaHeader);
  return UVar1;
}



UINT __stdcall
GetEnhMetaFilePaletteEntries(HENHMETAFILE hemf,UINT nNumEntries,LPPALETTEENTRY lpPaletteEntries)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406adc. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetEnhMetaFilePaletteEntries(hemf,nNumEntries,lpPaletteEntries);
  return UVar1;
}



int __stdcall GetObjectA(HANDLE h,int c,LPVOID pv)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ae4. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetObjectA(h,c,pv);
  return iVar1;
}



UINT __stdcall GetPaletteEntries(HPALETTE hpal,UINT iStart,UINT cEntries,LPPALETTEENTRY pPalEntries)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406aec. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetPaletteEntries(hpal,iStart,cEntries,pPalEntries);
  return UVar1;
}



COLORREF __stdcall GetPixel(HDC hdc,int x,int y)

{
  COLORREF CVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406af4. Too many branches
                    // WARNING: Treating indirect jump as call
  CVar1 = GetPixel(hdc,x,y);
  return CVar1;
}



int __stdcall GetRgnBox(HRGN hrgn,LPRECT lprc)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406afc. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetRgnBox(hrgn,lprc);
  return iVar1;
}



HGDIOBJ __stdcall GetStockObject(int i)

{
  HGDIOBJ pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b04. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = GetStockObject(i);
  return pvVar1;
}



UINT __stdcall GetSystemPaletteEntries(HDC hdc,UINT iStart,UINT cEntries,LPPALETTEENTRY pPalEntries)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b0c. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetSystemPaletteEntries(hdc,iStart,cEntries,pPalEntries);
  return UVar1;
}



BOOL __stdcall GetTextExtentPoint32A(HDC hdc,LPCSTR lpString,int c,LPSIZE psizl)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b14. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetTextExtentPoint32A(hdc,lpString,c,psizl);
  return BVar1;
}



BOOL __stdcall GetTextExtentPointA(HDC hdc,LPCSTR lpString,int c,LPSIZE lpsz)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b1c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetTextExtentPointA(hdc,lpString,c,lpsz);
  return BVar1;
}



BOOL __stdcall GetTextMetricsA(HDC hdc,LPTEXTMETRICA lptm)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b24. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetTextMetricsA(hdc,lptm);
  return BVar1;
}



UINT __stdcall
GetWinMetaFileBits(HENHMETAFILE hemf,UINT cbData16,LPBYTE pData16,INT iMapMode,HDC hdcRef)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b2c. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetWinMetaFileBits(hemf,cbData16,pData16,iMapMode,hdcRef);
  return UVar1;
}



BOOL __stdcall GetWindowOrgEx(HDC hdc,LPPOINT lppoint)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b34. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetWindowOrgEx(hdc,lppoint);
  return BVar1;
}



int __stdcall IntersectClipRect(HDC hdc,int left,int top,int right,int bottom)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b3c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = IntersectClipRect(hdc,left,top,right,bottom);
  return iVar1;
}



BOOL __stdcall LineTo(HDC hdc,int x,int y)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b44. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = LineTo(hdc,x,y);
  return BVar1;
}



BOOL __stdcall
MaskBlt(HDC hdcDest,int xDest,int yDest,int width,int height,HDC hdcSrc,int xSrc,int ySrc,
       HBITMAP hbmMask,int xMask,int yMask,DWORD rop)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b4c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = MaskBlt(hdcDest,xDest,yDest,width,height,hdcSrc,xSrc,ySrc,hbmMask,xMask,yMask,rop);
  return BVar1;
}



BOOL __stdcall MoveToEx(HDC hdc,int x,int y,LPPOINT lppt)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b54. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = MoveToEx(hdc,x,y,lppt);
  return BVar1;
}



BOOL __stdcall PatBlt(HDC hdc,int x,int y,int w,int h,DWORD rop)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b5c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = PatBlt(hdc,x,y,w,h,rop);
  return BVar1;
}



BOOL __stdcall Pie(HDC hdc,int left,int top,int right,int bottom,int xr1,int yr1,int xr2,int yr2)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b64. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = Pie(hdc,left,top,right,bottom,xr1,yr1,xr2,yr2);
  return BVar1;
}



BOOL __stdcall PlayEnhMetaFile(HDC hdc,HENHMETAFILE hmf,RECT *lprect)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b6c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = PlayEnhMetaFile(hdc,hmf,lprect);
  return BVar1;
}



BOOL __stdcall Polyline(HDC hdc,POINT *apt,int cpt)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b74. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = Polyline(hdc,apt,cpt);
  return BVar1;
}



UINT __stdcall RealizePalette(HDC hdc)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b7c. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = RealizePalette(hdc);
  return UVar1;
}



BOOL __stdcall RectVisible(HDC hdc,RECT *lprect)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b84. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = RectVisible(hdc,lprect);
  return BVar1;
}



BOOL __stdcall Rectangle(HDC hdc,int left,int top,int right,int bottom)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b8c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = Rectangle(hdc,left,top,right,bottom);
  return BVar1;
}



BOOL __stdcall RestoreDC(HDC hdc,int nSavedDC)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b94. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = RestoreDC(hdc,nSavedDC);
  return BVar1;
}



int __stdcall SaveDC(HDC hdc)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b9c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = SaveDC(hdc);
  return iVar1;
}



HGDIOBJ __stdcall SelectObject(HDC hdc,HGDIOBJ h)

{
  HGDIOBJ pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ba4. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = SelectObject(hdc,h);
  return pvVar1;
}



HPALETTE __stdcall SelectPalette(HDC hdc,HPALETTE hPal,BOOL bForceBkgd)

{
  HPALETTE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bac. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = SelectPalette(hdc,hPal,bForceBkgd);
  return pHVar1;
}



int __stdcall SetAbortProc(HDC hdc,ABORTPROC proc)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bb4. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = SetAbortProc(hdc,proc);
  return iVar1;
}



COLORREF __stdcall SetBkColor(HDC hdc,COLORREF color)

{
  COLORREF CVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bbc. Too many branches
                    // WARNING: Treating indirect jump as call
  CVar1 = SetBkColor(hdc,color);
  return CVar1;
}



int __stdcall SetBkMode(HDC hdc,int mode)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bc4. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = SetBkMode(hdc,mode);
  return iVar1;
}



BOOL __stdcall SetBrushOrgEx(HDC hdc,int x,int y,LPPOINT lppt)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bcc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetBrushOrgEx(hdc,x,y,lppt);
  return BVar1;
}



UINT __stdcall SetDIBColorTable(HDC hdc,UINT iStart,UINT cEntries,RGBQUAD *prgbq)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bd4. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = SetDIBColorTable(hdc,iStart,cEntries,prgbq);
  return UVar1;
}



HENHMETAFILE __stdcall SetEnhMetaFileBits(UINT nSize,BYTE *pb)

{
  HENHMETAFILE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bdc. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = SetEnhMetaFileBits(nSize,pb);
  return pHVar1;
}



COLORREF __stdcall SetPixel(HDC hdc,int x,int y,COLORREF color)

{
  COLORREF CVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406be4. Too many branches
                    // WARNING: Treating indirect jump as call
  CVar1 = SetPixel(hdc,x,y,color);
  return CVar1;
}



int __stdcall SetROP2(HDC hdc,int rop2)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bec. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = SetROP2(hdc,rop2);
  return iVar1;
}



int __stdcall SetStretchBltMode(HDC hdc,int mode)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bf4. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = SetStretchBltMode(hdc,mode);
  return iVar1;
}



COLORREF __stdcall SetTextColor(HDC hdc,COLORREF color)

{
  COLORREF CVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bfc. Too many branches
                    // WARNING: Treating indirect jump as call
  CVar1 = SetTextColor(hdc,color);
  return CVar1;
}



BOOL __stdcall SetViewportOrgEx(HDC hdc,int x,int y,LPPOINT lppt)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c04. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetViewportOrgEx(hdc,x,y,lppt);
  return BVar1;
}



HENHMETAFILE __stdcall
SetWinMetaFileBits(UINT nSize,BYTE *lpMeta16Data,HDC hdcRef,METAFILEPICT *lpMFP)

{
  HENHMETAFILE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c0c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = SetWinMetaFileBits(nSize,lpMeta16Data,hdcRef,lpMFP);
  return pHVar1;
}



BOOL __stdcall SetWindowOrgEx(HDC hdc,int x,int y,LPPOINT lppt)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c14. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetWindowOrgEx(hdc,x,y,lppt);
  return BVar1;
}



int __stdcall StartDocA(HDC hdc,DOCINFOA *lpdi)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c1c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = StartDocA(hdc,lpdi);
  return iVar1;
}



int __stdcall StartPage(HDC hdc)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c24. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = StartPage(hdc);
  return iVar1;
}



BOOL __stdcall
StretchBlt(HDC hdcDest,int xDest,int yDest,int wDest,int hDest,HDC hdcSrc,int xSrc,int ySrc,int wSrc
          ,int hSrc,DWORD rop)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c2c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = StretchBlt(hdcDest,xDest,yDest,wDest,hDest,hdcSrc,xSrc,ySrc,wSrc,hSrc,rop);
  return BVar1;
}



BOOL __stdcall UnrealizeObject(HGDIOBJ h)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c34. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = UnrealizeObject(h);
  return BVar1;
}



HKL __stdcall ActivateKeyboardLayout(HKL hkl,UINT Flags)

{
  HKL pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c3c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = ActivateKeyboardLayout(hkl,Flags);
  return pHVar1;
}



BOOL __stdcall AdjustWindowRectEx(LPRECT lpRect,DWORD dwStyle,BOOL bMenu,DWORD dwExStyle)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c44. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = AdjustWindowRectEx(lpRect,dwStyle,bMenu,dwExStyle);
  return BVar1;
}



LPSTR __stdcall CharLowerA(LPSTR lpsz)

{
  LPSTR pCVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c4c. Too many branches
                    // WARNING: Treating indirect jump as call
  pCVar1 = CharLowerA(lpsz);
  return pCVar1;
}



HDC __stdcall BeginPaint(HWND hWnd,LPPAINTSTRUCT lpPaint)

{
  HDC pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c54. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = BeginPaint(hWnd,lpPaint);
  return pHVar1;
}



LRESULT __stdcall CallNextHookEx(HHOOK hhk,int nCode,WPARAM wParam,LPARAM lParam)

{
  LRESULT LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c5c. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = CallNextHookEx(hhk,nCode,wParam,lParam);
  return LVar1;
}



LRESULT __stdcall
CallWindowProcA(WNDPROC lpPrevWndFunc,HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam)

{
  LRESULT LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c64. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = CallWindowProcA(lpPrevWndFunc,hWnd,Msg,wParam,lParam);
  return LVar1;
}



DWORD __stdcall CharLowerBuffA(LPSTR lpsz,DWORD cchLength)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c6c. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = CharLowerBuffA(lpsz,cchLength);
  return DVar1;
}



DWORD __stdcall CharUpperBuffA(LPSTR lpsz,DWORD cchLength)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c74. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = CharUpperBuffA(lpsz,cchLength);
  return DVar1;
}



DWORD __stdcall CheckMenuItem(HMENU hMenu,UINT uIDCheckItem,UINT uCheck)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c7c. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = CheckMenuItem(hMenu,uIDCheckItem,uCheck);
  return DVar1;
}



BOOL __stdcall ClientToScreen(HWND hWnd,LPPOINT lpPoint)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c84. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ClientToScreen(hWnd,lpPoint);
  return BVar1;
}



HICON __stdcall
CreateIcon(HINSTANCE hInstance,int nWidth,int nHeight,BYTE cPlanes,BYTE cBitsPixel,BYTE *lpbANDbits,
          BYTE *lpbXORbits)

{
  HICON pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c8c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = CreateIcon(hInstance,nWidth,nHeight,cPlanes,cBitsPixel,lpbANDbits,lpbXORbits);
  return pHVar1;
}



HMENU __stdcall CreateMenu(void)

{
  HMENU pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c94. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = CreateMenu();
  return pHVar1;
}



HMENU __stdcall CreatePopupMenu(void)

{
  HMENU pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c9c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = CreatePopupMenu();
  return pHVar1;
}



HWND __stdcall
CreateWindowExA(DWORD dwExStyle,LPCSTR lpClassName,LPCSTR lpWindowName,DWORD dwStyle,int X,int Y,
               int nWidth,int nHeight,HWND hWndParent,HMENU hMenu,HINSTANCE hInstance,LPVOID lpParam
               )

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ca4. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = CreateWindowExA(dwExStyle,lpClassName,lpWindowName,dwStyle,X,Y,nWidth,nHeight,hWndParent,
                           hMenu,hInstance,lpParam);
  return pHVar1;
}



LRESULT __stdcall DefFrameProcA(HWND hWnd,HWND hWndMDIClient,UINT uMsg,WPARAM wParam,LPARAM lParam)

{
  LRESULT LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406cac. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = DefFrameProcA(hWnd,hWndMDIClient,uMsg,wParam,lParam);
  return LVar1;
}



LRESULT __stdcall DefMDIChildProcA(HWND hWnd,UINT uMsg,WPARAM wParam,LPARAM lParam)

{
  LRESULT LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406cb4. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = DefMDIChildProcA(hWnd,uMsg,wParam,lParam);
  return LVar1;
}



LRESULT __stdcall DefWindowProcA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam)

{
  LRESULT LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406cbc. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = DefWindowProcA(hWnd,Msg,wParam,lParam);
  return LVar1;
}



BOOL __stdcall DeleteMenu(HMENU hMenu,UINT uPosition,UINT uFlags)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406cc4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DeleteMenu(hMenu,uPosition,uFlags);
  return BVar1;
}



BOOL __stdcall DestroyCursor(HCURSOR hCursor)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ccc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DestroyCursor(hCursor);
  return BVar1;
}



BOOL __stdcall DestroyIcon(HICON hIcon)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406cd4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DestroyIcon(hIcon);
  return BVar1;
}



BOOL __stdcall DestroyMenu(HMENU hMenu)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406cdc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DestroyMenu(hMenu);
  return BVar1;
}



BOOL __stdcall DestroyWindow(HWND hWnd)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ce4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DestroyWindow(hWnd);
  return BVar1;
}



LRESULT __stdcall DispatchMessageA(MSG *lpMsg)

{
  LRESULT LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406cec. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = DispatchMessageA(lpMsg);
  return LVar1;
}



BOOL __stdcall DrawEdge(HDC hdc,LPRECT qrc,UINT edge,UINT grfFlags)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406cf4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DrawEdge(hdc,qrc,edge,grfFlags);
  return BVar1;
}



BOOL __stdcall DrawFocusRect(HDC hDC,RECT *lprc)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406cfc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DrawFocusRect(hDC,lprc);
  return BVar1;
}



BOOL __stdcall DrawFrameControl(HDC param_1,LPRECT param_2,UINT param_3,UINT param_4)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d04. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DrawFrameControl(param_1,param_2,param_3,param_4);
  return BVar1;
}



BOOL __stdcall DrawIcon(HDC hDC,int X,int Y,HICON hIcon)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d0c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DrawIcon(hDC,X,Y,hIcon);
  return BVar1;
}



BOOL __stdcall
DrawIconEx(HDC hdc,int xLeft,int yTop,HICON hIcon,int cxWidth,int cyWidth,UINT istepIfAniCur,
          HBRUSH hbrFlickerFreeDraw,UINT diFlags)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d14. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DrawIconEx(hdc,xLeft,yTop,hIcon,cxWidth,cyWidth,istepIfAniCur,hbrFlickerFreeDraw,diFlags);
  return BVar1;
}



BOOL __stdcall DrawMenuBar(HWND hWnd)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d1c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DrawMenuBar(hWnd);
  return BVar1;
}



int __stdcall DrawTextA(HDC hdc,LPCSTR lpchText,int cchText,LPRECT lprc,UINT format)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d24. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = DrawTextA(hdc,lpchText,cchText,lprc,format);
  return iVar1;
}



BOOL __stdcall EnableMenuItem(HMENU hMenu,UINT uIDEnableItem,UINT uEnable)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d2c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = EnableMenuItem(hMenu,uIDEnableItem,uEnable);
  return BVar1;
}



BOOL __stdcall EnableWindow(HWND hWnd,BOOL bEnable)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d3c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = EnableWindow(hWnd,bEnable);
  return BVar1;
}



BOOL __stdcall EndPaint(HWND hWnd,PAINTSTRUCT *lpPaint)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d44. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = EndPaint(hWnd,lpPaint);
  return BVar1;
}



BOOL __stdcall EnumThreadWindows(DWORD dwThreadId,WNDENUMPROC lpfn,LPARAM lParam)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d4c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = EnumThreadWindows(dwThreadId,lpfn,lParam);
  return BVar1;
}



BOOL __stdcall EnumWindows(WNDENUMPROC lpEnumFunc,LPARAM lParam)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d54. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = EnumWindows(lpEnumFunc,lParam);
  return BVar1;
}



BOOL __stdcall EqualRect(RECT *lprc1,RECT *lprc2)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d5c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = EqualRect(lprc1,lprc2);
  return BVar1;
}



int __stdcall FillRect(HDC hDC,RECT *lprc,HBRUSH hbr)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d64. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = FillRect(hDC,lprc,hbr);
  return iVar1;
}



HWND __stdcall FindWindowA(LPCSTR lpClassName,LPCSTR lpWindowName)

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d6c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = FindWindowA(lpClassName,lpWindowName);
  return pHVar1;
}



int __stdcall FrameRect(HDC hDC,RECT *lprc,HBRUSH hbr)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d74. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = FrameRect(hDC,lprc,hbr);
  return iVar1;
}



HWND __stdcall GetActiveWindow(void)

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d7c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetActiveWindow();
  return pHVar1;
}



HWND __stdcall GetCapture(void)

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d84. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetCapture();
  return pHVar1;
}



BOOL __stdcall GetClassInfoA(HINSTANCE hInstance,LPCSTR lpClassName,LPWNDCLASSA lpWndClass)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d8c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetClassInfoA(hInstance,lpClassName,lpWndClass);
  return BVar1;
}



BOOL __stdcall GetClientRect(HWND hWnd,LPRECT lpRect)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d94. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetClientRect(hWnd,lpRect);
  return BVar1;
}



HANDLE __stdcall GetClipboardData(UINT uFormat)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d9c. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = GetClipboardData(uFormat);
  return pvVar1;
}



HCURSOR __stdcall GetCursor(void)

{
  HCURSOR pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406da4. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetCursor();
  return pHVar1;
}



BOOL __stdcall GetCursorPos(LPPOINT lpPoint)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406dac. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetCursorPos(lpPoint);
  return BVar1;
}



HDC __stdcall GetDC(HWND hWnd)

{
  HDC pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406db4. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetDC(hWnd);
  return pHVar1;
}



HDC __stdcall GetDCEx(HWND hWnd,HRGN hrgnClip,DWORD flags)

{
  HDC pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406dbc. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetDCEx(hWnd,hrgnClip,flags);
  return pHVar1;
}



HWND __stdcall GetDesktopWindow(void)

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406dc4. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetDesktopWindow();
  return pHVar1;
}



HWND __stdcall GetDlgItem(HWND hDlg,int nIDDlgItem)

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406dcc. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetDlgItem(hDlg,nIDDlgItem);
  return pHVar1;
}



HWND __stdcall GetFocus(void)

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406dd4. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetFocus();
  return pHVar1;
}



HWND __stdcall GetForegroundWindow(void)

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ddc. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetForegroundWindow();
  return pHVar1;
}



BOOL __stdcall GetIconInfo(HICON hIcon,PICONINFO piconinfo)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406de4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetIconInfo(hIcon,piconinfo);
  return BVar1;
}



int __stdcall GetKeyNameTextA(LONG lParam,LPSTR lpString,int cchSize)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406dec. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetKeyNameTextA(lParam,lpString,cchSize);
  return iVar1;
}



SHORT __stdcall GetKeyState(int nVirtKey)

{
  SHORT SVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406df4. Too many branches
                    // WARNING: Treating indirect jump as call
  SVar1 = GetKeyState(nVirtKey);
  return SVar1;
}



HKL __stdcall GetKeyboardLayout(DWORD idThread)

{
  HKL pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406dfc. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetKeyboardLayout(idThread);
  return pHVar1;
}



int __stdcall GetKeyboardLayoutList(int nBuff,HKL *lpList)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406e04. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetKeyboardLayoutList(nBuff,lpList);
  return iVar1;
}



BOOL __stdcall GetKeyboardState(PBYTE lpKeyState)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406e0c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetKeyboardState(lpKeyState);
  return BVar1;
}



HWND __stdcall GetLastActivePopup(HWND hWnd)

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406e14. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetLastActivePopup(hWnd);
  return pHVar1;
}



HMENU __stdcall GetMenu(HWND hWnd)

{
  HMENU pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406e1c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetMenu(hWnd);
  return pHVar1;
}



int __stdcall GetMenuItemCount(HMENU hMenu)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406e24. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetMenuItemCount(hMenu);
  return iVar1;
}



UINT __stdcall GetMenuItemID(HMENU hMenu,int nPos)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406e2c. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetMenuItemID(hMenu,nPos);
  return UVar1;
}



BOOL __stdcall GetMenuItemInfoA(HMENU hmenu,UINT item,BOOL fByPosition,LPMENUITEMINFOA lpmii)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406e34. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetMenuItemInfoA(hmenu,item,fByPosition,lpmii);
  return BVar1;
}



UINT __stdcall GetMenuState(HMENU hMenu,UINT uId,UINT uFlags)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406e3c. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetMenuState(hMenu,uId,uFlags);
  return UVar1;
}



int __stdcall GetMenuStringA(HMENU hMenu,UINT uIDItem,LPSTR lpString,int cchMax,UINT flags)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406e44. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetMenuStringA(hMenu,uIDItem,lpString,cchMax,flags);
  return iVar1;
}



HWND __stdcall GetWindow(HWND hWnd,UINT uCmd)

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406e4c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetWindow(hWnd,uCmd);
  return pHVar1;
}



HWND __stdcall GetParent(HWND hWnd)

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406e54. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetParent(hWnd);
  return pHVar1;
}



HANDLE __stdcall GetPropA(HWND hWnd,LPCSTR lpString)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406e5c. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = GetPropA(hWnd,lpString);
  return pvVar1;
}



HMENU __stdcall GetSubMenu(HMENU hMenu,int nPos)

{
  HMENU pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406e7c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetSubMenu(hMenu,nPos);
  return pHVar1;
}



DWORD __stdcall GetSysColor(int nIndex)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406e84. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetSysColor(nIndex);
  return DVar1;
}



HMENU __stdcall GetSystemMenu(HWND hWnd,BOOL bRevert)

{
  HMENU pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406e8c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetSystemMenu(hWnd,bRevert);
  return pHVar1;
}



int __stdcall GetSystemMetrics(int nIndex)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406e94. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetSystemMetrics(nIndex);
  return iVar1;
}



HWND __stdcall GetTopWindow(HWND hWnd)

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406e9c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetTopWindow(hWnd);
  return pHVar1;
}



HWND __stdcall GetWindow(HWND hWnd,UINT uCmd)

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ea4. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetWindow(hWnd,uCmd);
  return pHVar1;
}



HDC __stdcall GetWindowDC(HWND hWnd)

{
  HDC pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406eac. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = GetWindowDC(hWnd);
  return pHVar1;
}



LONG __stdcall GetWindowLongA(HWND hWnd,int nIndex)

{
  LONG LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406eb4. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = GetWindowLongA(hWnd,nIndex);
  return LVar1;
}



BOOL __stdcall GetWindowPlacement(HWND hWnd,WINDOWPLACEMENT *lpwndpl)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ebc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetWindowPlacement(hWnd,lpwndpl);
  return BVar1;
}



BOOL __stdcall GetWindowRect(HWND hWnd,LPRECT lpRect)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ec4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetWindowRect(hWnd,lpRect);
  return BVar1;
}



int __stdcall GetWindowTextA(HWND hWnd,LPSTR lpString,int nMaxCount)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ecc. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetWindowTextA(hWnd,lpString,nMaxCount);
  return iVar1;
}



DWORD __stdcall GetWindowThreadProcessId(HWND hWnd,LPDWORD lpdwProcessId)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ed4. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetWindowThreadProcessId(hWnd,lpdwProcessId);
  return DVar1;
}



BOOL __stdcall InflateRect(LPRECT lprc,int dx,int dy)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406edc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = InflateRect(lprc,dx,dy);
  return BVar1;
}



BOOL __stdcall
InsertMenuA(HMENU hMenu,UINT uPosition,UINT uFlags,UINT_PTR uIDNewItem,LPCSTR lpNewItem)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ee4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = InsertMenuA(hMenu,uPosition,uFlags,uIDNewItem,lpNewItem);
  return BVar1;
}



BOOL __stdcall InsertMenuItemA(HMENU hmenu,UINT item,BOOL fByPosition,LPCMENUITEMINFOA lpmi)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406eec. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = InsertMenuItemA(hmenu,item,fByPosition,lpmi);
  return BVar1;
}



BOOL __stdcall IntersectRect(LPRECT lprcDst,RECT *lprcSrc1,RECT *lprcSrc2)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ef4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = IntersectRect(lprcDst,lprcSrc1,lprcSrc2);
  return BVar1;
}



BOOL __stdcall InvalidateRect(HWND hWnd,RECT *lpRect,BOOL bErase)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406efc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = InvalidateRect(hWnd,lpRect,bErase);
  return BVar1;
}



BOOL __stdcall IsChild(HWND hWndParent,HWND hWnd)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f04. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = IsChild(hWndParent,hWnd);
  return BVar1;
}



BOOL __stdcall IsDialogMessageA(HWND hDlg,LPMSG lpMsg)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f0c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = IsDialogMessageA(hDlg,lpMsg);
  return BVar1;
}



BOOL __stdcall IsIconic(HWND hWnd)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f14. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = IsIconic(hWnd);
  return BVar1;
}



BOOL __stdcall IsRectEmpty(RECT *lprc)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f1c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = IsRectEmpty(lprc);
  return BVar1;
}



BOOL __stdcall IsWindow(HWND hWnd)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f24. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = IsWindow(hWnd);
  return BVar1;
}



BOOL __stdcall IsWindowEnabled(HWND hWnd)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f2c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = IsWindowEnabled(hWnd);
  return BVar1;
}



BOOL __stdcall IsWindowVisible(HWND hWnd)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f34. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = IsWindowVisible(hWnd);
  return BVar1;
}



BOOL __stdcall IsZoomed(HWND hWnd)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f3c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = IsZoomed(hWnd);
  return BVar1;
}



BOOL __stdcall KillTimer(HWND hWnd,UINT_PTR uIDEvent)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f44. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = KillTimer(hWnd,uIDEvent);
  return BVar1;
}



HBITMAP __stdcall LoadBitmapA(HINSTANCE hInstance,LPCSTR lpBitmapName)

{
  HBITMAP pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f4c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = LoadBitmapA(hInstance,lpBitmapName);
  return pHVar1;
}



HCURSOR __stdcall LoadCursorA(HINSTANCE hInstance,LPCSTR lpCursorName)

{
  HCURSOR pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f54. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = LoadCursorA(hInstance,lpCursorName);
  return pHVar1;
}



HICON __stdcall LoadIconA(HINSTANCE hInstance,LPCSTR lpIconName)

{
  HICON pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f5c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = LoadIconA(hInstance,lpIconName);
  return pHVar1;
}



HKL __stdcall LoadKeyboardLayoutA(LPCSTR pwszKLID,UINT Flags)

{
  HKL pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f64. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = LoadKeyboardLayoutA(pwszKLID,Flags);
  return pHVar1;
}



int __stdcall LoadStringA(HINSTANCE hInstance,UINT uID,LPSTR lpBuffer,int cchBufferMax)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f6c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = LoadStringA(hInstance,uID,lpBuffer,cchBufferMax);
  return iVar1;
}



UINT __stdcall MapVirtualKeyA(UINT uCode,UINT uMapType)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f74. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = MapVirtualKeyA(uCode,uMapType);
  return UVar1;
}



int __stdcall MapWindowPoints(HWND hWndFrom,HWND hWndTo,LPPOINT lpPoints,UINT cPoints)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f7c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = MapWindowPoints(hWndFrom,hWndTo,lpPoints,cPoints);
  return iVar1;
}



int __stdcall MessageBoxA(HWND hWnd,LPCSTR lpText,LPCSTR lpCaption,UINT uType)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f84. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = MessageBoxA(hWnd,lpText,lpCaption,uType);
  return iVar1;
}



BOOL __stdcall OemToCharA(LPCSTR pSrc,LPSTR pDst)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f8c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = OemToCharA(pSrc,pDst);
  return BVar1;
}



BOOL __stdcall OffsetRect(LPRECT lprc,int dx,int dy)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f94. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = OffsetRect(lprc,dx,dy);
  return BVar1;
}



BOOL __stdcall
PeekMessageA(LPMSG lpMsg,HWND hWnd,UINT wMsgFilterMin,UINT wMsgFilterMax,UINT wRemoveMsg)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406f9c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = PeekMessageA(lpMsg,hWnd,wMsgFilterMin,wMsgFilterMax,wRemoveMsg);
  return BVar1;
}



BOOL __stdcall PostMessageA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406fa4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = PostMessageA(hWnd,Msg,wParam,lParam);
  return BVar1;
}



void __stdcall PostQuitMessage(int nExitCode)

{
                    // WARNING: Could not recover jumptable at 0x00406fac. Too many branches
                    // WARNING: Treating indirect jump as call
  PostQuitMessage(nExitCode);
  return;
}



BOOL __stdcall PtInRect(RECT *lprc,POINT pt)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406fb4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = PtInRect(lprc,pt);
  return BVar1;
}



BOOL __stdcall RedrawWindow(HWND hWnd,RECT *lprcUpdate,HRGN hrgnUpdate,UINT flags)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406fbc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = RedrawWindow(hWnd,lprcUpdate,hrgnUpdate,flags);
  return BVar1;
}



ATOM __stdcall RegisterClassA(WNDCLASSA *lpWndClass)

{
  ATOM AVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406fc4. Too many branches
                    // WARNING: Treating indirect jump as call
  AVar1 = RegisterClassA(lpWndClass);
  return AVar1;
}



UINT __stdcall RegisterWindowMessageA(LPCSTR lpString)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406fd4. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = RegisterWindowMessageA(lpString);
  return UVar1;
}



BOOL __stdcall ReleaseCapture(void)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406fdc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ReleaseCapture();
  return BVar1;
}



int __stdcall ReleaseDC(HWND hWnd,HDC hDC)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406fe4. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = ReleaseDC(hWnd,hDC);
  return iVar1;
}



BOOL __stdcall RemoveMenu(HMENU hMenu,UINT uPosition,UINT uFlags)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406fec. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = RemoveMenu(hMenu,uPosition,uFlags);
  return BVar1;
}



HANDLE __stdcall RemovePropA(HWND hWnd,LPCSTR lpString)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ff4. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = RemovePropA(hWnd,lpString);
  return pvVar1;
}



BOOL __stdcall ScreenToClient(HWND hWnd,LPPOINT lpPoint)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ffc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ScreenToClient(hWnd,lpPoint);
  return BVar1;
}



BOOL __stdcall ScrollWindow(HWND hWnd,int XAmount,int YAmount,RECT *lpRect,RECT *lpClipRect)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00407004. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ScrollWindow(hWnd,XAmount,YAmount,lpRect,lpClipRect);
  return BVar1;
}



LRESULT __stdcall SendMessageA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam)

{
  LRESULT LVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040700c. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = SendMessageA(hWnd,Msg,wParam,lParam);
  return LVar1;
}



HWND __stdcall SetActiveWindow(HWND hWnd)

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00407014. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = SetActiveWindow(hWnd);
  return pHVar1;
}



HWND __stdcall SetCapture(HWND hWnd)

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040701c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = SetCapture(hWnd);
  return pHVar1;
}



DWORD __stdcall SetClassLongA(HWND hWnd,int nIndex,LONG dwNewLong)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00407024. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = SetClassLongA(hWnd,nIndex,dwNewLong);
  return DVar1;
}



HCURSOR __stdcall SetCursor(HCURSOR hCursor)

{
  HCURSOR pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040702c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = SetCursor(hCursor);
  return pHVar1;
}



HWND __stdcall SetFocus(HWND hWnd)

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00407034. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = SetFocus(hWnd);
  return pHVar1;
}



BOOL __stdcall SetForegroundWindow(HWND hWnd)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040703c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetForegroundWindow(hWnd);
  return BVar1;
}



BOOL __stdcall SetMenu(HWND hWnd,HMENU hMenu)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00407044. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetMenu(hWnd,hMenu);
  return BVar1;
}



BOOL __stdcall SetMenuItemInfoA(HMENU hmenu,UINT item,BOOL fByPositon,LPCMENUITEMINFOA lpmii)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040704c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetMenuItemInfoA(hmenu,item,fByPositon,lpmii);
  return BVar1;
}



BOOL __stdcall SetPropA(HWND hWnd,LPCSTR lpString,HANDLE hData)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00407054. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetPropA(hWnd,lpString,hData);
  return BVar1;
}



BOOL __stdcall SetRect(LPRECT lprc,int xLeft,int yTop,int xRight,int yBottom)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040705c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetRect(lprc,xLeft,yTop,xRight,yBottom);
  return BVar1;
}



UINT_PTR __stdcall SetTimer(HWND hWnd,UINT_PTR nIDEvent,UINT uElapse,TIMERPROC lpTimerFunc)

{
  UINT_PTR UVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040707c. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = SetTimer(hWnd,nIDEvent,uElapse,lpTimerFunc);
  return UVar1;
}



LONG __stdcall SetWindowLongA(HWND hWnd,int nIndex,LONG dwNewLong)

{
  LONG LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00407084. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = SetWindowLongA(hWnd,nIndex,dwNewLong);
  return LVar1;
}



BOOL __stdcall SetWindowPlacement(HWND hWnd,WINDOWPLACEMENT *lpwndpl)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040708c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetWindowPlacement(hWnd,lpwndpl);
  return BVar1;
}



BOOL __stdcall SetWindowPos(HWND hWnd,HWND hWndInsertAfter,int X,int Y,int cx,int cy,UINT uFlags)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00407094. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetWindowPos(hWnd,hWndInsertAfter,X,Y,cx,cy,uFlags);
  return BVar1;
}



BOOL __stdcall SetWindowTextA(HWND hWnd,LPCSTR lpString)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040709c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetWindowTextA(hWnd,lpString);
  return BVar1;
}



HHOOK __stdcall SetWindowsHookExA(int idHook,HOOKPROC lpfn,HINSTANCE hmod,DWORD dwThreadId)

{
  HHOOK pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x004070a4. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = SetWindowsHookExA(idHook,lpfn,hmod,dwThreadId);
  return pHVar1;
}



int __stdcall ShowCursor(BOOL bShow)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x004070ac. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = ShowCursor(bShow);
  return iVar1;
}



BOOL __stdcall ShowOwnedPopups(HWND hWnd,BOOL fShow)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004070b4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ShowOwnedPopups(hWnd,fShow);
  return BVar1;
}



BOOL __stdcall ShowWindow(HWND hWnd,int nCmdShow)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004070c4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ShowWindow(hWnd,nCmdShow);
  return BVar1;
}



BOOL __stdcall SystemParametersInfoA(UINT uiAction,UINT uiParam,PVOID pvParam,UINT fWinIni)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004070cc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SystemParametersInfoA(uiAction,uiParam,pvParam,fWinIni);
  return BVar1;
}



BOOL __stdcall
TrackPopupMenu(HMENU hMenu,UINT uFlags,int x,int y,int nReserved,HWND hWnd,RECT *prcRect)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004070d4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = TrackPopupMenu(hMenu,uFlags,x,y,nReserved,hWnd,prcRect);
  return BVar1;
}



BOOL __stdcall TranslateMDISysAccel(HWND hWndClient,LPMSG lpMsg)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004070dc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = TranslateMDISysAccel(hWndClient,lpMsg);
  return BVar1;
}



BOOL __stdcall TranslateMessage(MSG *lpMsg)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004070e4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = TranslateMessage(lpMsg);
  return BVar1;
}



BOOL __stdcall UnhookWindowsHookEx(HHOOK hhk)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004070ec. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = UnhookWindowsHookEx(hhk);
  return BVar1;
}



BOOL __stdcall UnregisterClassA(LPCSTR lpClassName,HINSTANCE hInstance)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004070f4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = UnregisterClassA(lpClassName,hInstance);
  return BVar1;
}



BOOL __stdcall UpdateWindow(HWND hWnd)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004070fc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = UpdateWindow(hWnd);
  return BVar1;
}



BOOL __stdcall WaitMessage(void)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00407104. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = WaitMessage();
  return BVar1;
}



BOOL __stdcall WinHelpA(HWND hWndMain,LPCSTR lpszHelp,UINT uCommand,ULONG_PTR dwData)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040710c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = WinHelpA(hWndMain,lpszHelp,uCommand,dwData);
  return BVar1;
}



HWND __stdcall WindowFromPoint(POINT Point)

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00407114. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = WindowFromPoint(Point);
  return pHVar1;
}



uint FUN_0040711c(uint param_1,int param_2)

{
  return param_1 & 0xffff | param_2 << 0x10;
}



uint FUN_00407128(uint param_1)

{
  return param_1 >> 0x10;
}



void FUN_0040712c(void)

{
  GetTickCount();
  return;
}



undefined4 FUN_00407134(void)

{
  return 0;
}



void FUN_00407138(UINT param_1,SIZE_T param_2)

{
  HGLOBAL hMem;
  
  hMem = GlobalAlloc(param_1,param_2);
  GlobalLock(hMem);
  return;
}



void FUN_00407148(LPCVOID param_1,SIZE_T param_2,UINT param_3)

{
  HGLOBAL pvVar1;
  
  pvVar1 = GlobalHandle(param_1);
  GlobalUnlock(pvVar1);
  pvVar1 = GlobalReAlloc(pvVar1,param_2,param_3);
  GlobalLock(pvVar1);
  return;
}



void FUN_00407164(LPCVOID param_1)

{
  HGLOBAL hMem;
  
  hMem = GlobalHandle(param_1);
  GlobalUnlock(hMem);
  GlobalFree(hMem);
  return;
}



uint FUN_00407178(uint param_1,uint param_2)

{
  return param_1 | (param_2 & 0xff0000) << 8;
}



void FUN_00407184(undefined4 param_1,int *param_2)

{
  short local_4;
  short sStack_2;
  
  local_4 = (short)param_1;
  *param_2 = (int)local_4;
  sStack_2 = (short)((uint)param_1 >> 0x10);
  param_2[1] = (int)sStack_2;
  return;
}



undefined4 FUN_00407198(undefined2 *param_1)

{
  undefined4 local_4;
  
  local_4 = CONCAT22(param_1[2],*param_1);
  return local_4;
}



void FUN_004071b0(uint param_1,int param_2)

{
  FUN_0040711c(param_1,param_2);
  return;
}



void FUN_004071b8(LPCSTR param_1,LPCSTR param_2,DWORD param_3,LPVOID param_4,HINSTANCE param_5,
                 HMENU param_6,HWND param_7,int param_8,int param_9,int param_10,int param_11)

{
  CreateWindowExA(0,param_1,param_2,param_3,param_11,param_10,param_9,param_8,param_7,param_6,
                  param_5,param_4);
  return;
}



HWND FUN_004071ec(UINT *param_1,UINT *param_2,UINT *param_3,LRESULT *param_4,LRESULT *param_5)

{
  HWND hWnd;
  UINT UVar1;
  LRESULT LVar2;
  
  hWnd = FindWindowA(s_MouseZ_0040729c,s_Magellan_MSWHEEL_00407288);
  UVar1 = RegisterWindowMessageA(s_MSWHEEL_ROLLMSG_004072a4);
  *param_1 = UVar1;
  UVar1 = RegisterWindowMessageA(s_MSH_WHEELSUPPORT_MSG_004072b4);
  *param_2 = UVar1;
  UVar1 = RegisterWindowMessageA(s_MSH_SCROLL_LINES_MSG_004072cc);
  *param_3 = UVar1;
  if ((*param_2 == 0) || (hWnd == (HWND)0x0)) {
    *param_5 = 0;
  }
  else {
    LVar2 = SendMessageA(hWnd,*param_2,0,0);
    *param_5 = LVar2;
  }
  if ((*param_3 == 0) || (hWnd == (HWND)0x0)) {
    *param_4 = 3;
  }
  else {
    LVar2 = SendMessageA(hWnd,*param_3,0,0);
    *param_4 = LVar2;
  }
  return hWnd;
}



void FUN_00408154(uint param_1,uint param_2,undefined2 *param_3,undefined2 *param_4)

{
  *param_3 = (short)(param_1 / (param_2 & 0xffff));
  *param_4 = (short)(param_1 % (param_2 & 0xffff));
  return;
}



void FUN_00408170(undefined4 *param_1)

{
  int *piVar1;
  
  piVar1 = FUN_0040aa10((int *)PTR_DAT_00407cac,'\x01',param_1);
  FUN_004036ac(piVar1);
  return;
}



void FUN_00408188(undefined4 *param_1,undefined4 param_2,undefined4 param_3)

{
  undefined4 uVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  byte *local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_8 = (byte *)0x0;
  puStack_1c = &LAB_004081da;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  FUN_004054e4(param_1,(int *)&local_8);
  uVar1 = FUN_0040aa4c((int)PTR_DAT_00407cac,'\x01',local_8,param_3,param_2);
  FUN_004036ac(uVar1);
  *in_FS_OFFSET = puStack_18;
  FUN_00403bdc((int *)&local_8);
  return;
}



undefined4 * FUN_004081e8(uint param_1)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)FUN_004026f4(param_1);
  FUN_00402c14(puVar1,param_1,0);
  return puVar1;
}



void FUN_00408234(undefined4 param_1)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)FUN_004026f4(0xc);
  *puVar1 = DAT_00474130;
  puVar1[1] = *(undefined4 *)PTR_DAT_00475588;
  puVar1[2] = param_1;
  DAT_00474130 = puVar1;
  *(undefined1 **)PTR_DAT_00475588 = &LAB_00408208;
  return;
}



void FUN_0040826c(byte *param_1,int *param_2)

{
  byte bVar1;
  uint uVar2;
  byte *pbVar3;
  
  uVar2 = FUN_00403e5c((int)param_1);
  FUN_00404190(param_2,uVar2);
  pbVar3 = (byte *)*param_2;
  for (; uVar2 != 0; uVar2 = uVar2 - 1) {
    bVar1 = *param_1;
    if ((0x60 < bVar1) && (bVar1 < 0x7b)) {
      bVar1 = bVar1 - 0x20;
    }
    *pbVar3 = bVar1;
    param_1 = param_1 + 1;
    pbVar3 = pbVar3 + 1;
  }
  return;
}



undefined4 FUN_004082a8(int *param_1,int *param_2,uint param_3)

{
  undefined4 uVar1;
  uint uVar2;
  uint uVar3;
  int *piVar4;
  int *piVar5;
  bool bVar6;
  
  uVar1 = 0;
  uVar3 = param_3 & 3;
  uVar2 = param_3 >> 2;
  bVar6 = uVar2 == 0;
  do {
    piVar4 = param_1;
    piVar5 = param_2;
    if (uVar2 == 0) break;
    uVar2 = uVar2 - 1;
    piVar5 = param_2 + 1;
    piVar4 = param_1 + 1;
    bVar6 = *param_1 == *param_2;
    param_1 = piVar4;
    param_2 = piVar5;
  } while (bVar6);
  if (bVar6) {
    do {
      if (uVar3 == 0) break;
      uVar3 = uVar3 - 1;
      bVar6 = (char)*piVar4 == (char)*piVar5;
      piVar4 = (int *)((int)piVar4 + 1);
      piVar5 = (int *)((int)piVar5 + 1);
    } while (bVar6);
    if (bVar6) {
      uVar1 = 1;
    }
  }
  return uVar1;
}



int FUN_004082c8(char *param_1,char *param_2)

{
  char *pcVar1;
  char *pcVar2;
  char *pcVar3;
  char *pcVar4;
  char *pcVar5;
  byte bVar6;
  byte bVar7;
  bool bVar8;
  
  pcVar3 = param_1;
  if (param_1 != (char *)0x0) {
    pcVar3 = *(char **)(param_1 + -4);
  }
  pcVar5 = param_2;
  if (param_2 != (char *)0x0) {
    pcVar5 = *(char **)(param_2 + -4);
  }
  pcVar4 = pcVar3;
  if (pcVar5 < pcVar3) {
    pcVar4 = pcVar5;
  }
  bVar8 = true;
LAB_004082e7:
  do {
    if (pcVar4 != (char *)0x0) {
      pcVar4 = pcVar4 + -1;
      pcVar2 = param_2 + 1;
      pcVar1 = param_1 + 1;
      bVar8 = *param_1 == *param_2;
      param_1 = pcVar1;
      param_2 = pcVar2;
      if (bVar8) goto LAB_004082e7;
    }
    if (bVar8) goto LAB_00408315;
    bVar6 = param_1[-1];
    if ((0x60 < bVar6) && (bVar6 < 0x7b)) {
      bVar6 = bVar6 - 0x20;
    }
    bVar7 = param_2[-1];
    if ((0x60 < bVar7) && (bVar7 < 0x7b)) {
      bVar7 = bVar7 - 0x20;
    }
    bVar8 = bVar6 == bVar7;
    if (!bVar8) {
      pcVar3 = (char *)(uint)bVar6;
      pcVar5 = (char *)(uint)bVar7;
LAB_00408315:
      return (int)pcVar3 - (int)pcVar5;
    }
  } while( true );
}



undefined4 FUN_0040831c(char *param_1,char *param_2)

{
  if (param_1 != param_2) {
    if (param_1 == (char *)0x0) {
      return 0;
    }
    if ((param_2 == (char *)0x0) || (*(int *)(param_1 + -4) != *(int *)(param_2 + -4))) {
      return 0;
    }
    param_1 = (char *)FUN_004082c8(param_1,param_2);
    if (param_1 != (char *)0x0) {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



void FUN_00408340(undefined *param_1,int *param_2)

{
  uint cchLength;
  undefined4 *puVar1;
  
  cchLength = FUN_00403e5c((int)param_1);
  puVar1 = (undefined4 *)FUN_00404020(param_1);
  FUN_00403cc4(param_2,puVar1,cchLength);
  if (0 < (int)cchLength) {
    CharUpperBuffA((LPSTR)*param_2,cchLength);
  }
  return;
}



void FUN_00408374(undefined *param_1,int *param_2)

{
  uint cchLength;
  undefined4 *puVar1;
  
  cchLength = FUN_00403e5c((int)param_1);
  puVar1 = (undefined4 *)FUN_00404020(param_1);
  FUN_00403cc4(param_2,puVar1,cchLength);
  if (0 < (int)cchLength) {
    CharLowerBuffA((LPSTR)*param_2,cchLength);
  }
  return;
}



int FUN_004083a8(undefined *param_1,undefined *param_2)

{
  int iVar1;
  PCNZCH lpString2;
  int cchCount1;
  PCNZCH lpString1;
  
  iVar1 = FUN_00403e5c((int)param_2);
  lpString2 = FUN_00404020(param_2);
  cchCount1 = FUN_00403e5c((int)param_1);
  lpString1 = FUN_00404020(param_1);
  iVar1 = CompareStringA(0x400,0,lpString1,cchCount1,lpString2,iVar1);
  return iVar1 + -2;
}



int FUN_004083e0(undefined *param_1,undefined *param_2)

{
  int iVar1;
  PCNZCH lpString2;
  int cchCount1;
  PCNZCH lpString1;
  
  iVar1 = FUN_00403e5c((int)param_2);
  lpString2 = FUN_00404020(param_2);
  cchCount1 = FUN_00403e5c((int)param_1);
  lpString1 = FUN_00404020(param_1);
  iVar1 = CompareStringA(0x400,1,lpString1,cchCount1,lpString2,iVar1);
  return iVar1 + -2;
}



bool FUN_00408418(undefined *param_1,undefined *param_2)

{
  int iVar1;
  PCNZCH lpString2;
  int cchCount1;
  PCNZCH lpString1;
  
  iVar1 = FUN_00403e5c((int)param_2);
  lpString2 = FUN_00404020(param_2);
  cchCount1 = FUN_00403e5c((int)param_1);
  lpString1 = FUN_00404020(param_1);
  iVar1 = CompareStringA(0x400,1,lpString1,cchCount1,lpString2,iVar1);
  return iVar1 == 2;
}



int FUN_00408454(PCNZCH param_1,PCNZCH param_2,int param_3)

{
  int iVar1;
  
  iVar1 = CompareStringA(0x400,1,param_1,param_3,param_2,param_3);
  return iVar1 + -2;
}



undefined4 FUN_00408474(char *param_1)

{
  char cVar1;
  int iVar2;
  undefined4 uVar3;
  int iVar4;
  
  uVar3 = 0;
  iVar2 = FUN_00403e5c((int)param_1);
  if ((iVar2 != 0) &&
     (((cVar1 = *param_1, (byte)(cVar1 + 0xbfU) < 0x1a || (cVar1 == '_')) ||
      ((byte)(cVar1 + 0x9fU) < 0x1a)))) {
    iVar2 = FUN_00403e5c((int)param_1);
    if (1 < iVar2) {
      iVar2 = iVar2 + -1;
      iVar4 = 2;
      do {
        cVar1 = param_1[iVar4 + -1];
        if (((9 < (byte)(cVar1 - 0x30U)) && (0x19 < (byte)(cVar1 + 0xbfU))) &&
           ((cVar1 != '_' && (0x19 < (byte)(cVar1 + 0x9fU))))) {
          return 0;
        }
        iVar4 = iVar4 + 1;
        iVar2 = iVar2 + -1;
      } while (iVar2 != 0);
    }
    uVar3 = 1;
  }
  return uVar3;
}



void FUN_004084d8(undefined4 param_1,int *param_2)

{
  undefined4 local_8;
  undefined1 local_4;
  
  local_4 = 0;
  local_8 = param_1;
  FUN_00409238(param_2,&DAT_00408504,&local_8,0);
  return;
}



undefined4 FUN_00408508(byte *param_1)

{
  undefined4 uVar1;
  int local_14;
  byte *local_10;
  undefined1 local_c;
  
  uVar1 = FUN_00402c34(param_1,&local_14);
  if (local_14 != 0) {
    local_c = 0xb;
    local_10 = param_1;
    FUN_00408188((undefined4 *)PTR_PTR_004756a4,&local_10,0);
  }
  return uVar1;
}



undefined4 FUN_00408544(byte *param_1,undefined4 param_2,int param_3)

{
  undefined4 uVar1;
  int local_8;
  
  local_8 = param_3;
  uVar1 = FUN_00402c34(param_1,&local_8);
  if (local_8 != 0) {
    uVar1 = param_2;
  }
  return uVar1;
}



void FUN_0040855c(undefined *param_1,uint param_2)

{
  LPCSTR lpFileName;
  DWORD dwDesiredAccess;
  DWORD dwShareMode;
  LPSECURITY_ATTRIBUTES lpSecurityAttributes;
  DWORD dwCreationDisposition;
  DWORD dwFlagsAndAttributes;
  HANDLE hTemplateFile;
  
  hTemplateFile = (HANDLE)0x0;
  dwFlagsAndAttributes = 0x80;
  dwCreationDisposition = 3;
  lpSecurityAttributes = (LPSECURITY_ATTRIBUTES)0x0;
  dwShareMode = *(DWORD *)(&DAT_00474140 + ((param_2 & 0xf0) >> 4) * 4);
  dwDesiredAccess = *(DWORD *)(&DAT_00474134 + (param_2 & 3) * 4);
  lpFileName = FUN_00404020(param_1);
  CreateFileA(lpFileName,dwDesiredAccess,dwShareMode,lpSecurityAttributes,dwCreationDisposition,
              dwFlagsAndAttributes,hTemplateFile);
  return;
}



void FUN_0040859c(undefined *param_1)

{
  LPCSTR lpFileName;
  DWORD dwDesiredAccess;
  DWORD dwShareMode;
  LPSECURITY_ATTRIBUTES lpSecurityAttributes;
  DWORD dwCreationDisposition;
  DWORD dwFlagsAndAttributes;
  HANDLE hTemplateFile;
  
  hTemplateFile = (HANDLE)0x0;
  dwFlagsAndAttributes = 0x80;
  dwCreationDisposition = 2;
  lpSecurityAttributes = (LPSECURITY_ATTRIBUTES)0x0;
  dwShareMode = 0;
  dwDesiredAccess = 0xc0000000;
  lpFileName = FUN_00404020(param_1);
  CreateFileA(lpFileName,dwDesiredAccess,dwShareMode,lpSecurityAttributes,dwCreationDisposition,
              dwFlagsAndAttributes,hTemplateFile);
  return;
}



DWORD FUN_004085c0(HANDLE param_1,LPVOID param_2,DWORD param_3)

{
  BOOL BVar1;
  DWORD local_10;
  
  local_10 = param_3;
  BVar1 = ReadFile(param_1,param_2,param_3,&local_10,(LPOVERLAPPED)0x0);
  if (BVar1 == 0) {
    local_10 = 0xffffffff;
  }
  return local_10;
}



DWORD FUN_004085ec(HANDLE param_1,LPCVOID param_2,DWORD param_3)

{
  BOOL BVar1;
  DWORD local_10;
  
  local_10 = param_3;
  BVar1 = WriteFile(param_1,param_2,param_3,&local_10,(LPOVERLAPPED)0x0);
  if (BVar1 == 0) {
    local_10 = 0xffffffff;
  }
  return local_10;
}



void FUN_00408618(HANDLE param_1,LONG param_2,DWORD param_3)

{
  SetFilePointer(param_1,param_2,(PLONG)0x0,param_3);
  return;
}



void FUN_00408624(HANDLE param_1)

{
  CloseHandle(param_1);
  return;
}



undefined4 FUN_0040862c(undefined *param_1)

{
  LPCSTR lpFileName;
  HANDLE hFindFile;
  BOOL BVar1;
  _WIN32_FIND_DATAA *lpFindFileData;
  _WIN32_FIND_DATAA local_150;
  _FILETIME local_10;
  undefined4 local_8;
  
  lpFindFileData = &local_150;
  lpFileName = FUN_00404020(param_1);
  hFindFile = FindFirstFileA(lpFileName,lpFindFileData);
  if ((hFindFile != (HANDLE)0xffffffff) &&
     (FindClose(hFindFile), ((byte)local_150.dwFileAttributes & 0x10) == 0)) {
    FileTimeToLocalFileTime(&local_150.ftLastWriteTime,&local_10);
    BVar1 = FileTimeToDosDateTime(&local_10,(LPWORD)((int)&local_8 + 2),(LPWORD)&local_8);
    if (BVar1 != 0) {
      return local_8;
    }
  }
  return 0xffffffff;
}



undefined4 FUN_00408694(undefined *param_1)

{
  int iVar1;
  
  iVar1 = FUN_0040862c(param_1);
  return CONCAT31((int3)((uint)(iVar1 + 1) >> 8),iVar1 + 1 != 0);
}



undefined4 FUN_004086a4(HANDLE param_1)

{
  BOOL BVar1;
  _FILETIME local_18;
  _FILETIME local_10;
  undefined4 local_8;
  
  BVar1 = GetFileTime(param_1,(LPFILETIME)0x0,(LPFILETIME)0x0,&local_10);
  if (((BVar1 != 0) && (BVar1 = FileTimeToLocalFileTime(&local_10,&local_18), BVar1 != 0)) &&
     (BVar1 = FileTimeToDosDateTime(&local_18,(LPWORD)((int)&local_8 + 2),(LPWORD)&local_8),
     BVar1 != 0)) {
    return local_8;
  }
  return 0xffffffff;
}



void FUN_004086f4(undefined *param_1)

{
  LPCSTR lpFileName;
  
  lpFileName = FUN_00404020(param_1);
  GetFileAttributesA(lpFileName);
  return;
}



DWORD FUN_00408708(undefined *param_1,DWORD param_2)

{
  LPCSTR lpFileName;
  BOOL BVar1;
  DWORD DVar2;
  
  DVar2 = 0;
  lpFileName = FUN_00404020(param_1);
  BVar1 = SetFileAttributesA(lpFileName,param_2);
  if (BVar1 == 0) {
    DVar2 = GetLastError();
  }
  return DVar2;
}



DWORD FUN_00408730(LPWORD param_1)

{
  BOOL BVar1;
  DWORD DVar2;
  _FILETIME local_c;
  
  do {
    if ((*(uint *)(param_1 + 0xc) & *(uint *)(param_1 + 8)) == 0) {
      FileTimeToLocalFileTime((FILETIME *)(param_1 + 0x16),&local_c);
      FileTimeToDosDateTime(&local_c,param_1 + 1,param_1);
      *(undefined4 *)(param_1 + 2) = *(undefined4 *)(param_1 + 0x1c);
      *(undefined4 *)(param_1 + 4) = *(undefined4 *)(param_1 + 0xc);
      FUN_00403e0c((int *)(param_1 + 6),(char *)(param_1 + 0x22),0x104);
      return 0;
    }
    BVar1 = FindNextFileA(*(HANDLE *)(param_1 + 10),(LPWIN32_FIND_DATAA)(param_1 + 0xc));
  } while (BVar1 != 0);
  DVar2 = GetLastError();
  return DVar2;
}



DWORD FUN_00408794(undefined *param_1,uint param_2,LPWORD param_3)

{
  LPCSTR lpFileName;
  HANDLE pvVar1;
  DWORD DVar2;
  LPWIN32_FIND_DATAA lpFindFileData;
  
  *(uint *)(param_3 + 8) = ~param_2 & 0x1e;
  lpFindFileData = (LPWIN32_FIND_DATAA)(param_3 + 0xc);
  lpFileName = FUN_00404020(param_1);
  pvVar1 = FindFirstFileA(lpFileName,lpFindFileData);
  *(HANDLE *)(param_3 + 10) = pvVar1;
  if (pvVar1 == (HANDLE)0xffffffff) {
    DVar2 = GetLastError();
  }
  else {
    DVar2 = FUN_00408730(param_3);
    if (DVar2 != 0) {
      FUN_00408808((int)param_3);
    }
  }
  return DVar2;
}



void FUN_004087e4(LPWORD param_1)

{
  BOOL BVar1;
  
  BVar1 = FindNextFileA(*(HANDLE *)(param_1 + 10),(LPWIN32_FIND_DATAA)(param_1 + 0xc));
  if (BVar1 != 0) {
    FUN_00408730(param_1);
    return;
  }
  GetLastError();
  return;
}



void FUN_00408808(int param_1)

{
  if (*(HANDLE *)(param_1 + 0x14) != (HANDLE)0xffffffff) {
    FindClose(*(HANDLE *)(param_1 + 0x14));
    *(undefined4 *)(param_1 + 0x14) = 0xffffffff;
  }
  return;
}



undefined * FUN_00408824(undefined *param_1)

{
  int iVar1;
  undefined4 uVar2;
  undefined *puVar3;
  
  iVar1 = FUN_00403e5c((int)param_1);
  if (iVar1 == 0) {
    puVar3 = (undefined *)0x0;
  }
  else {
    puVar3 = param_1 + iVar1 + -1;
    uVar2 = FUN_0040b2d4(param_1,iVar1);
    if ((char)uVar2 == '\x02') {
      puVar3 = puVar3 + -1;
    }
  }
  return puVar3;
}



int FUN_00408854(undefined *param_1,undefined *param_2)

{
  int iVar1;
  char *pcVar2;
  char *pcVar3;
  undefined4 uVar4;
  
  iVar1 = FUN_00403e5c((int)param_2);
  pcVar2 = FUN_00404020(param_1);
  do {
    if (iVar1 < 1) {
      return iVar1;
    }
    if ((param_2[iVar1 + -1] != '\0') &&
       (pcVar3 = FUN_00408c68(pcVar2,param_2[iVar1 + -1]), pcVar3 != (char *)0x0)) {
      uVar4 = FUN_0040b2d4(param_2,iVar1);
      if ((char)uVar4 != '\x02') {
        return iVar1;
      }
      iVar1 = iVar1 + -1;
    }
    iVar1 = iVar1 + -1;
  } while( true );
}



void FUN_004088a4(undefined *param_1,undefined4 *param_2,int *param_3)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  undefined4 *local_c;
  int *local_8;
  
  puStack_1c = &stack0xfffffffc;
  local_c = (undefined4 *)0x0;
  puStack_20 = &LAB_0040891b;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  local_8 = param_3;
  iVar1 = FUN_00408854(&DAT_00408934,param_1);
  if ((iVar1 == 0) || (param_1[iVar1 + -1] != '.')) {
    iVar1 = 0x7fffffff;
  }
  FUN_00404064((int)param_1,1,iVar1 - 1,(int *)&local_c);
  FUN_00403ea8(local_8,local_c,param_2);
  *in_FS_OFFSET = uStack_24;
  puStack_1c = &LAB_00408922;
  puStack_20 = (undefined1 *)0x40891a;
  FUN_00403bdc((int *)&local_c);
  return;
}



void FUN_00408938(undefined *param_1,int *param_2)

{
  uint uVar1;
  
  uVar1 = FUN_00408854(&DAT_00408968,param_1);
  FUN_00404064((int)param_1,1,uVar1,param_2);
  return;
}



void FUN_0040896c(char *param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  
  iVar1 = FUN_00403e5c((int)param_1);
  if ((iVar1 < 2) || (param_1[1] != ':')) {
    iVar1 = FUN_00403e5c((int)param_1);
    if ((iVar1 < 2) || ((*param_1 != '\\' || (param_1[1] != '\\')))) {
      FUN_00403bdc(param_2);
    }
    else {
      iVar1 = 0;
      uVar3 = 3;
      while( true ) {
        iVar2 = FUN_00403e5c((int)param_1);
        if ((iVar2 <= (int)uVar3) || (1 < iVar1)) break;
        if (param_1[uVar3 - 1] == '\\') {
          iVar1 = iVar1 + 1;
        }
        if (iVar1 < 2) {
          uVar3 = uVar3 + 1;
        }
      }
      if (param_1[uVar3 - 1] == '\\') {
        uVar3 = uVar3 - 1;
      }
      FUN_00404064((int)param_1,1,uVar3,param_2);
    }
  }
  else {
    FUN_00404064((int)param_1,1,2,param_2);
  }
  return;
}



void FUN_00408a00(undefined *param_1,int *param_2)

{
  int iVar1;
  
  iVar1 = FUN_00408854(&DAT_00408a34,param_1);
  FUN_00404064((int)param_1,iVar1 + 1,0x7fffffff,param_2);
  return;
}



void FUN_00408a38(undefined *param_1,int *param_2)

{
  int iVar1;
  
  iVar1 = FUN_00408854(&DAT_00408a7c,param_1);
  if ((iVar1 < 1) || (param_1[iVar1 + -1] != '.')) {
    FUN_00403bdc(param_2);
  }
  else {
    FUN_00404064((int)param_1,iVar1,0x7fffffff,param_2);
  }
  return;
}



int FUN_00408af4(char *param_1)

{
  char cVar1;
  int iVar2;
  
  iVar2 = -1;
  do {
    if (iVar2 == 0) break;
    iVar2 = iVar2 + -1;
    cVar1 = *param_1;
    param_1 = param_1 + 1;
  } while (cVar1 != '\0');
  return -2 - iVar2;
}



char * FUN_00408b0c(char *param_1)

{
  char cVar1;
  int iVar2;
  char *pcVar3;
  
  iVar2 = -1;
  do {
    pcVar3 = param_1;
    if (iVar2 == 0) break;
    iVar2 = iVar2 + -1;
    pcVar3 = param_1 + 1;
    cVar1 = *param_1;
    param_1 = pcVar3;
  } while (cVar1 != '\0');
  return pcVar3 + -1;
}



void FUN_00408b20(undefined4 *param_1,undefined4 *param_2,uint param_3)

{
  uint uVar1;
  undefined1 *puVar2;
  undefined4 *puVar3;
  undefined1 *puVar4;
  undefined4 *puVar5;
  
  if (param_2 < param_1) {
    puVar2 = (undefined1 *)((int)param_2 + (param_3 - 1));
    puVar4 = (undefined1 *)((int)param_1 + (param_3 - 1));
    for (uVar1 = param_3 & 3; uVar1 != 0; uVar1 = uVar1 - 1) {
      *puVar4 = *puVar2;
      puVar2 = puVar2 + -1;
      puVar4 = puVar4 + -1;
    }
    puVar3 = (undefined4 *)(puVar2 + -3);
    puVar5 = (undefined4 *)(puVar4 + -3);
    for (uVar1 = param_3 >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {
      *puVar5 = *puVar3;
      puVar3 = puVar3 + -1;
      puVar5 = puVar5 + -1;
    }
  }
  else if (param_1 != param_2) {
    for (uVar1 = param_3 >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {
      *param_1 = *param_2;
      param_2 = param_2 + 1;
      param_1 = param_1 + 1;
    }
    for (uVar1 = param_3 & 3; uVar1 != 0; uVar1 = uVar1 - 1) {
      *(undefined1 *)param_1 = *(undefined1 *)param_2;
      param_2 = (undefined4 *)((int)param_2 + 1);
      param_1 = (undefined4 *)((int)param_1 + 1);
    }
    return;
  }
  return;
}



char * FUN_00408b5c(char *param_1,char *param_2)

{
  char cVar1;
  uint uVar2;
  uint uVar3;
  char *pcVar4;
  
  uVar2 = 0xffffffff;
  pcVar4 = param_2;
  do {
    if (uVar2 == 0) break;
    uVar2 = uVar2 - 1;
    cVar1 = *pcVar4;
    pcVar4 = pcVar4 + 1;
  } while (cVar1 != '\0');
  pcVar4 = param_1;
  for (uVar3 = ~uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {
    *(undefined4 *)pcVar4 = *(undefined4 *)param_2;
    param_2 = param_2 + 4;
    pcVar4 = pcVar4 + 4;
  }
  for (uVar2 = ~uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {
    *pcVar4 = *param_2;
    param_2 = param_2 + 1;
    pcVar4 = pcVar4 + 1;
  }
  return param_1;
}



char * FUN_00408b84(char *param_1,char *param_2,int param_3)

{
  int iVar1;
  uint uVar2;
  char *pcVar3;
  bool bVar4;
  
  bVar4 = param_3 == 0;
  iVar1 = param_3;
  pcVar3 = param_2;
  if (!bVar4) {
    do {
      if (iVar1 == 0) break;
      iVar1 = iVar1 + -1;
      bVar4 = *pcVar3 == '\0';
      pcVar3 = pcVar3 + 1;
    } while (!bVar4);
    if (bVar4) {
      iVar1 = iVar1 + 1;
    }
  }
  pcVar3 = param_1;
  for (uVar2 = (uint)(param_3 - iVar1) >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {
    *(undefined4 *)pcVar3 = *(undefined4 *)param_2;
    param_2 = param_2 + 4;
    pcVar3 = pcVar3 + 4;
  }
  for (uVar2 = param_3 - iVar1 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {
    *pcVar3 = *param_2;
    param_2 = param_2 + 1;
    pcVar3 = pcVar3 + 1;
  }
  *pcVar3 = '\0';
  return param_1;
}



void FUN_00408bb8(char *param_1,undefined *param_2)

{
  int iVar1;
  char *pcVar2;
  
  iVar1 = FUN_00403e5c((int)param_2);
  pcVar2 = FUN_00404020(param_2);
  FUN_00408b84(param_1,pcVar2,iVar1);
  return;
}



void FUN_00408bdc(char *param_1,undefined *param_2,int param_3)

{
  char *pcVar1;
  
  pcVar1 = FUN_00404020(param_2);
  FUN_00408b84(param_1,pcVar1,param_3);
  return;
}



int FUN_00408bfc(char *param_1,char *param_2)

{
  char cVar1;
  char cVar2;
  uint uVar3;
  char *pcVar4;
  char *pcVar5;
  
  uVar3 = 0xffffffff;
  pcVar4 = param_2;
  do {
    if (uVar3 == 0) break;
    uVar3 = uVar3 - 1;
    cVar1 = *pcVar4;
    pcVar4 = pcVar4 + 1;
  } while (cVar1 != '\0');
  uVar3 = ~uVar3;
  do {
    pcVar4 = param_1;
    pcVar5 = param_2;
    if (uVar3 == 0) break;
    uVar3 = uVar3 - 1;
    pcVar5 = param_2 + 1;
    pcVar4 = param_1 + 1;
    cVar2 = *param_2;
    cVar1 = *param_1;
    param_1 = pcVar4;
    param_2 = pcVar5;
  } while (cVar1 == cVar2);
  return (uint)(byte)pcVar4[-1] - (uint)(byte)pcVar5[-1];
}



void FUN_00408c20(char *param_1,char *param_2,int param_3)

{
  char *pcVar1;
  char cVar2;
  byte bVar3;
  int iVar4;
  undefined3 uVar5;
  int iVar6;
  uint uVar7;
  char *pcVar8;
  bool bVar9;
  
  iVar4 = 0;
  iVar6 = param_3;
  pcVar8 = param_2;
  if (param_3 != 0) {
    do {
      if (iVar6 == 0) break;
      iVar6 = iVar6 + -1;
      cVar2 = *pcVar8;
      pcVar8 = pcVar8 + 1;
    } while (cVar2 != '\0');
    iVar6 = param_3 - iVar6;
    bVar9 = true;
LAB_00408c39:
    do {
      if (iVar6 != 0) {
        iVar6 = iVar6 + -1;
        pcVar1 = param_2 + 1;
        pcVar8 = param_1 + 1;
        bVar9 = *param_1 == *param_2;
        param_1 = pcVar8;
        param_2 = pcVar1;
        if (bVar9) goto LAB_00408c39;
      }
      if (bVar9) {
        return;
      }
      bVar3 = param_1[-1];
      uVar5 = (undefined3)((uint)iVar4 >> 8);
      iVar4 = CONCAT31(uVar5,bVar3);
      if ((0x60 < bVar3) && (bVar3 < 0x7b)) {
        iVar4 = CONCAT31(uVar5,bVar3 - 0x20);
      }
      bVar3 = param_2[-1];
      uVar7 = (uint)bVar3;
      if ((0x60 < bVar3) && (bVar3 < 0x7b)) {
        uVar7 = (uint)(byte)(bVar3 - 0x20);
      }
      iVar4 = iVar4 - uVar7;
      bVar9 = iVar4 == 0;
    } while (bVar9);
  }
  return;
}



char * FUN_00408c68(char *param_1,char param_2)

{
  char *pcVar1;
  uint uVar2;
  char *pcVar3;
  bool bVar4;
  
  uVar2 = 0xffffffff;
  bVar4 = true;
  pcVar3 = param_1;
  do {
    if (uVar2 == 0) break;
    uVar2 = uVar2 - 1;
    bVar4 = *pcVar3 == '\0';
    pcVar3 = pcVar3 + 1;
  } while (!bVar4);
  uVar2 = ~uVar2;
  do {
    pcVar3 = param_1;
    if (uVar2 == 0) break;
    uVar2 = uVar2 - 1;
    pcVar3 = param_1 + 1;
    bVar4 = param_2 == *param_1;
    param_1 = pcVar3;
  } while (!bVar4);
  pcVar1 = (char *)0x0;
  if (bVar4) {
    pcVar1 = pcVar3 + -1;
  }
  return pcVar1;
}



char * FUN_00408c88(char *param_1,char *param_2)

{
  char cVar1;
  uint uVar2;
  uint uVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  char *pcVar7;
  char *pcVar8;
  bool bVar9;
  
  if ((param_1 != (char *)0x0) && (param_2 != (char *)0x0)) {
    uVar2 = 0xffffffff;
    pcVar7 = param_2;
    do {
      if (uVar2 == 0) break;
      uVar2 = uVar2 - 1;
      cVar1 = *pcVar7;
      pcVar7 = pcVar7 + 1;
    } while (cVar1 != '\0');
    uVar3 = ~uVar2 - 1;
    if (uVar3 != 0) {
      uVar4 = 0xffffffff;
      pcVar7 = param_1;
      do {
        if (uVar4 == 0) break;
        uVar4 = uVar4 - 1;
        cVar1 = *pcVar7;
        pcVar7 = pcVar7 + 1;
      } while (cVar1 != '\0');
      iVar5 = ~uVar4 - uVar3;
      bVar9 = iVar5 == 0;
      if (uVar3 <= ~uVar4 && !bVar9) {
        do {
          pcVar7 = param_2 + 1;
          pcVar8 = param_1;
          do {
            param_1 = pcVar8;
            if (iVar5 == 0) break;
            iVar5 = iVar5 + -1;
            param_1 = pcVar8 + 1;
            bVar9 = *param_2 == *pcVar8;
            pcVar8 = param_1;
          } while (!bVar9);
          iVar6 = ~uVar2 - 2;
          pcVar8 = param_1;
          if (!bVar9) {
            return (char *)0x0;
          }
          do {
            if (iVar6 == 0) break;
            bVar9 = *pcVar7 == *pcVar8;
            iVar6 = iVar6 + -1;
            pcVar8 = pcVar8 + 1;
            pcVar7 = pcVar7 + 1;
          } while (bVar9);
          if (bVar9) {
            return param_1 + -1;
          }
        } while( true );
      }
    }
  }
  return (char *)0x0;
}



void FUN_00408cdc(char *param_1,int *param_2)

{
  FUN_00403d94(param_2,param_1);
  return;
}



int * FUN_00408cf0(int param_1)

{
  int *piVar1;
  
  piVar1 = (int *)FUN_004026f4(param_1 + 4);
  *piVar1 = param_1 + 4;
  return piVar1 + 1;
}



int FUN_00408d04(int param_1)

{
  return *(int *)(param_1 + -4) + -4;
}



undefined4 FUN_00408d10(char *param_1)

{
  int iVar1;
  int *piVar2;
  undefined4 uVar3;
  
  if (param_1 == (char *)0x0) {
    return 0;
  }
  iVar1 = FUN_00408af4(param_1);
  piVar2 = FUN_00408cf0(iVar1 + 1U);
  uVar3 = FUN_00408b20(piVar2,(undefined4 *)param_1,iVar1 + 1U);
  return uVar3;
}



void FUN_00408d3c(int param_1)

{
  if (param_1 != 0) {
    FUN_0040270c(param_1 + -4);
  }
  return;
}



// WARNING: Type propagation algorithm not settling

void FUN_00408d4c(int param_1,byte *param_2,uint param_3)

{
  undefined4 uVar1;
  undefined1 auStack_35 [33];
  undefined1 *local_14;
  undefined1 local_10;
  
  if (0x1f < param_3) {
    param_3 = 0x1f;
  }
  uVar1 = FUN_0040b2f8(param_2,param_3 - 1);
  if ((char)uVar1 == '\x01') {
    param_3 = param_3 - 1;
  }
  FUN_00408b20((undefined4 *)((int)auStack_35 + 1),(undefined4 *)param_2,param_3);
  auStack_35[param_3 + 1] = 0;
  local_10 = 6;
  local_14 = (undefined1 *)((int)auStack_35 + 1);
  FUN_00408188((undefined4 *)(&PTR_PTR_00474154)[param_1],&local_14,0);
  return;
}



void FUN_00408db8(int *param_1)

{
  FUN_00403bdc(param_1);
  return;
}



void FUN_00408dc4(byte *param_1,byte *param_2,byte *param_3,undefined4 param_4,undefined4 param_5,
                 int param_6)

{
  byte bVar1;
  char cVar2;
  uint uVar3;
  undefined3 uVar5;
  undefined4 uVar4;
  byte *pbVar6;
  byte *extraout_ECX;
  byte *extraout_ECX_00;
  byte *extraout_ECX_01;
  byte *extraout_EDX;
  byte *extraout_EDX_00;
  byte *pbVar7;
  byte *pbVar8;
  byte *pbVar9;
  byte *pbVar10;
  byte *pbVar11;
  bool bVar12;
  byte bVar13;
  int local_10;
  byte *local_c;
  byte *local_8;
  
  bVar13 = 0;
  pbVar6 = param_3 + param_6;
  uVar3 = 0;
  local_c = (byte *)0x0;
  local_10 = 0;
  local_8 = param_1;
LAB_00408de8:
  if (param_2 != (byte *)0x0) {
    do {
      if (param_3 == pbVar6) break;
      pbVar9 = param_3 + (uint)bVar13 * -2 + 1;
      bVar1 = *param_3;
      uVar5 = (undefined3)(uVar3 >> 8);
      uVar3 = CONCAT31(uVar5,bVar1);
      param_3 = pbVar9;
      if (bVar1 == 0x25) {
        if (pbVar9 == pbVar6) break;
        param_3 = pbVar9 + (uint)bVar13 * -2 + 1;
        uVar3 = CONCAT31(uVar5,*pbVar9);
        if (*pbVar9 != 0x25) goto code_r0x00408e0e;
      }
      pbVar9 = param_1 + (uint)bVar13 * -2 + 1;
      *param_1 = (byte)uVar3;
      param_2 = param_2 + -1;
      param_1 = pbVar9;
      if (param_2 == (byte *)0x0) break;
    } while( true );
  }
LAB_00408dfa:
  FUN_004091ac((int)param_1 - (int)local_8);
  return;
code_r0x00408e0e:
  pbVar9 = param_3 + -2;
  while( true ) {
    cVar2 = (char)uVar3;
    pbVar10 = param_3;
    if (cVar2 == '-') {
      if (param_3 == pbVar6) goto LAB_00408dfa;
      pbVar10 = param_3 + (uint)bVar13 * -2 + 1;
      uVar3 = CONCAT31((int3)(uVar3 >> 8),*param_3);
    }
    uVar3 = FUN_00408ea6(uVar3,param_2,pbVar6);
    uVar5 = (undefined3)(uVar3 >> 8);
    pbVar6 = extraout_ECX;
    if ((char)uVar3 != ':') break;
    local_c = pbVar9;
    if (pbVar10 == extraout_ECX) goto LAB_00408dfa;
    param_3 = pbVar10 + (uint)bVar13 * -2 + 1;
    uVar3 = CONCAT31(uVar5,*pbVar10);
    param_2 = extraout_EDX;
  }
  pbVar7 = extraout_EDX;
  param_3 = pbVar10;
  if ((char)uVar3 == '.') {
    if (pbVar10 == extraout_ECX) goto LAB_00408dfa;
    param_3 = pbVar10 + (uint)bVar13 * -2 + 1;
    uVar3 = FUN_00408ea6(CONCAT31(uVar5,*pbVar10),extraout_EDX,extraout_ECX);
    pbVar6 = extraout_ECX_00;
    pbVar7 = extraout_EDX_00;
  }
  uVar4 = FUN_00408eef((char)uVar3,pbVar7,pbVar6);
  pbVar10 = pbVar9 + -(int)extraout_ECX_01;
  if (pbVar9 < extraout_ECX_01) {
    pbVar10 = (byte *)0x0;
  }
  pbVar9 = extraout_ECX_01;
  pbVar11 = param_3;
  if (cVar2 == '-') {
    bVar12 = pbVar7 < extraout_ECX_01;
    pbVar7 = pbVar7 + -(int)extraout_ECX_01;
    if (bVar12) {
      pbVar9 = extraout_ECX_01 + (int)pbVar7;
      pbVar7 = (byte *)0x0;
    }
    for (; pbVar9 != (byte *)0x0; pbVar9 = pbVar9 + -1) {
      *param_1 = *pbVar11;
      pbVar11 = pbVar11 + (uint)bVar13 * -2 + 1;
      param_1 = param_1 + (uint)bVar13 * -2 + 1;
    }
  }
  pbVar8 = pbVar7 + -(int)pbVar10;
  if (pbVar7 < pbVar10) {
    pbVar10 = pbVar10 + (int)pbVar8;
    pbVar8 = (byte *)0x0;
  }
  uVar3 = CONCAT31((int3)((uint)uVar4 >> 8),0x20);
  for (; pbVar10 != (byte *)0x0; pbVar10 = pbVar10 + -1) {
    *param_1 = 0x20;
    param_1 = param_1 + (uint)bVar13 * -2 + 1;
  }
  param_2 = pbVar8 + -(int)pbVar9;
  if (pbVar8 < pbVar9) {
    pbVar9 = pbVar9 + (int)param_2;
    param_2 = (byte *)0x0;
  }
  for (; pbVar9 != (byte *)0x0; pbVar9 = pbVar9 + -1) {
    *param_1 = *pbVar11;
    pbVar11 = pbVar11 + (uint)bVar13 * -2 + 1;
    param_1 = param_1 + (uint)bVar13 * -2 + 1;
  }
  if (local_10 != 0) {
    uVar3 = FUN_00408db8(&local_10);
  }
  goto LAB_00408de8;
}



uint FUN_00408ea6(uint param_1,undefined4 param_2,byte *param_3)

{
  uint uVar1;
  int unaff_EBP;
  byte *unaff_ESI;
  int unaff_EDI;
  
  if ((char)param_1 == '*') {
    uVar1 = *(uint *)(unaff_EBP + -8);
    if (uVar1 <= *(uint *)(unaff_EBP + 8)) {
      *(int *)(unaff_EBP + -8) = *(int *)(unaff_EBP + -8) + 1;
    }
    if (unaff_ESI == param_3) {
LAB_00408dfa:
      uVar1 = FUN_004091ac(unaff_EDI - *(int *)(unaff_EBP + -4));
      return uVar1;
    }
    param_1 = CONCAT31((int3)(uVar1 >> 8),*unaff_ESI);
  }
  else {
    while ((0x2f < (byte)param_1 && ((byte)param_1 < 0x3a))) {
      if (unaff_ESI == param_3) goto LAB_00408dfa;
      param_1 = (uint)*unaff_ESI;
      unaff_ESI = unaff_ESI + 1;
    }
  }
  return param_1;
}



void FUN_00408eef(undefined1 param_1,undefined4 param_2,undefined4 param_3)

{
  int *piVar1;
  undefined4 *puVar2;
  undefined4 uVar3;
  int iVar4;
  int *piVar5;
  uint uVar6;
  char extraout_CL;
  uint uVar7;
  byte bVar8;
  int extraout_EDX;
  int unaff_EBP;
  int unaff_ESI;
  byte *pbVar9;
  
  uVar3 = 1;
  uVar6 = *(uint *)(unaff_EBP + -8);
  if (uVar6 <= *(uint *)(unaff_EBP + 8)) {
    *(int *)(unaff_EBP + -8) = *(int *)(unaff_EBP + -8) + 1;
    puVar2 = (undefined4 *)(*(int *)(unaff_EBP + 0xc) + uVar6 * 8);
                    // WARNING: Could not recover jumptable at 0x00408f0f. Too many branches
                    // WARNING: Treating indirect jump as call
    (**(code **)(&DAT_00408f16 + (uint)*(byte *)(puVar2 + 1) * 4))
              (*puVar2,param_2,CONCAT31((int3)((uint)param_3 >> 8),param_1) & 0xffffffdf);
    return;
  }
  do {
    iVar4 = FUN_004091a1(uVar3);
    piVar5 = (int *)FUN_00408d4c(iVar4,*(byte **)(unaff_EBP + -0x14),
                                 *(int *)(unaff_EBP + -0x24) - (int)*(byte **)(unaff_EBP + -0x14));
    piVar1 = (int *)(unaff_EBP + -0x30);
    *piVar1 = *piVar5;
    *(int *)(unaff_EBP + -0x2c) = piVar5[1];
    if (extraout_CL == 'D') {
      if ((*(uint *)(unaff_EBP + -0x2c) & 0x80000000) != 0) {
        iVar4 = *piVar1;
        *piVar1 = -*piVar1;
        *(int *)(unaff_EBP + -0x2c) = *(int *)(unaff_EBP + -0x2c) + (uint)(iVar4 != 0);
        *(int *)(unaff_EBP + -0x2c) = -*(int *)(unaff_EBP + -0x2c);
        FUN_00408faf();
        *(undefined1 *)(unaff_ESI + -1) = 0x2d;
        return;
      }
code_r0x00408faf:
      uVar3 = 10;
LAB_00408fb4:
      pbVar9 = (byte *)(unaff_EBP + -0x51);
      do {
        uVar6 = FUN_004063f5(*piVar1,*(uint *)(unaff_EBP + -0x2c),uVar3,uVar3,0);
        bVar8 = (char)uVar6 + 0x30;
        if (0x39 < bVar8) {
          bVar8 = (char)uVar6 + 0x37;
        }
        pbVar9 = pbVar9 + -1;
        *pbVar9 = bVar8;
        iVar4 = FUN_00406300(*piVar1,*(uint *)(unaff_EBP + -0x2c),uVar3,uVar3,0);
        *piVar1 = iVar4;
        *(int *)(unaff_EBP + -0x2c) = extraout_EDX;
      } while (iVar4 != 0 || extraout_EDX != 0);
      uVar7 = (unaff_EBP + -0x51) - (int)pbVar9;
      uVar6 = *(uint *)(unaff_EBP + -0x20);
      if (uVar6 < 0x11) {
        iVar4 = uVar6 - uVar7;
        if (uVar7 <= uVar6 && iVar4 != 0) {
          do {
            pbVar9 = pbVar9 + -1;
            *pbVar9 = 0x30;
            iVar4 = iVar4 + -1;
          } while (iVar4 != 0);
        }
        return;
      }
      return;
    }
    if (extraout_CL == 'U') goto code_r0x00408faf;
    if (extraout_CL == 'X') {
      uVar3 = 0x10;
      goto LAB_00408fb4;
    }
    uVar3 = 0;
  } while( true );
}



void FUN_00408faf(void)

{
  uint uVar1;
  int iVar2;
  uint uVar3;
  byte bVar4;
  int extraout_EDX;
  int *unaff_EBX;
  int unaff_EBP;
  byte *pbVar5;
  
  pbVar5 = (byte *)(unaff_EBP + -0x51);
  do {
    uVar1 = FUN_004063f5(*unaff_EBX,unaff_EBX[1],10,10,0);
    bVar4 = (char)uVar1 + 0x30;
    if (0x39 < bVar4) {
      bVar4 = (char)uVar1 + 0x37;
    }
    pbVar5 = pbVar5 + -1;
    *pbVar5 = bVar4;
    iVar2 = FUN_00406300(*unaff_EBX,unaff_EBX[1],10,10,0);
    *unaff_EBX = iVar2;
    unaff_EBX[1] = extraout_EDX;
  } while (iVar2 != 0 || extraout_EDX != 0);
  uVar3 = (unaff_EBP + -0x51) - (int)pbVar5;
  uVar1 = *(uint *)(unaff_EBP + -0x20);
  if (uVar1 < 0x11) {
    iVar2 = uVar1 - uVar3;
    if (uVar3 <= uVar1 && iVar2 != 0) {
      do {
        pbVar5 = pbVar5 + -1;
        *pbVar5 = 0x30;
        iVar2 = iVar2 + -1;
      } while (iVar2 != 0);
    }
    return;
  }
  return;
}



undefined4 FUN_004091a1(undefined4 param_1)

{
  int unaff_EBP;
  
  FUN_00403bdc((int *)(unaff_EBP + -0x10));
  return param_1;
}



void FUN_004091ac(undefined4 param_1)

{
  FUN_004091a1(param_1);
  return;
}



byte * FUN_004091bc(byte *param_1,byte *param_2,undefined4 param_3,undefined4 param_4)

{
  int iVar1;
  
  iVar1 = FUN_00408af4((char *)param_2);
  iVar1 = FUN_00408dc4(param_1,(byte *)0x7fffffff,param_2,param_4,param_3,iVar1);
  param_1[iVar1] = 0;
  return param_1;
}



byte * FUN_004091f0(byte *param_1,byte *param_2,byte *param_3,undefined4 param_4,undefined4 param_5)

{
  int iVar1;
  
  iVar1 = FUN_00408af4((char *)param_3);
  iVar1 = FUN_00408dc4(param_1,param_2,param_3,param_4,param_5,iVar1);
  param_1[iVar1] = 0;
  return param_1;
}



void FUN_00409224(byte *param_1,undefined4 param_2,undefined4 param_3,int *param_4)

{
  FUN_00409238(param_4,param_1,param_2,param_3);
  return;
}



// WARNING: Removing unreachable block (ram,0x00409262)

void FUN_00409238(int *param_1,byte *param_2,undefined4 param_3,undefined4 param_4)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  byte local_100e [10];
  int *piStack_1004;
  undefined4 local_c;
  byte *local_8;
  
  piStack_1004 = param_1;
  local_c = param_3;
  local_8 = param_2;
  iVar1 = FUN_00403e5c((int)param_2);
  if (iVar1 < 0xc02) {
    iVar1 = FUN_00403e5c((int)local_8);
    uVar2 = FUN_00408dc4(local_100e,(byte *)0x1001,local_8,param_4,local_c,iVar1);
    uVar3 = 0x1002;
  }
  else {
    uVar2 = FUN_00403e5c((int)local_8);
    uVar3 = uVar2;
  }
  if ((int)uVar2 < (int)(uVar3 - 1)) {
    FUN_00403cc4(param_1,(undefined4 *)local_100e,uVar2);
  }
  else {
    while ((int)(uVar3 - 1) <= (int)uVar2) {
      uVar3 = uVar3 * 2;
      FUN_00403bdc(param_1);
      FUN_00404190(param_1,uVar3);
      iVar1 = FUN_00403e5c((int)local_8);
      uVar2 = FUN_00408dc4((byte *)*param_1,(byte *)(uVar3 - 1),local_8,param_4,local_c,iVar1);
    }
    FUN_00404190(param_1,uVar2);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00409300(undefined4 *param_1,undefined4 param_2,undefined4 param_3,double param_4)

{
  ulonglong uVar1;
  int iVar2;
  undefined4 uVar3;
  int local_c;
  int iStack_8;
  
  uVar1 = (ulonglong)ROUND(param_4 * (double)_DAT_0047415c);
  local_c = (int)uVar1;
  iStack_8 = (int)(uVar1 >> 0x20);
  if ((longlong)uVar1 < 0) {
    uVar1 = CONCAT44(-(uint)(local_c != 0) - iStack_8,-local_c);
    uVar3 = (undefined4)(uVar1 % (ulonglong)DAT_00474160);
    iVar2 = -(int)(uVar1 / DAT_00474160);
  }
  else {
    iVar2 = (int)(uVar1 / DAT_00474160);
    uVar3 = (undefined4)(uVar1 % (ulonglong)DAT_00474160);
  }
  *param_1 = uVar3;
  param_1[1] = iVar2 + 0xa955a;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined1 FUN_00409340(ushort param_1,ushort param_2,ushort param_3,double *param_4,ushort param_5)

{
  undefined1 local_5;
  
  local_5 = 0;
  if ((((param_1 < 0x18) && (param_2 < 0x3c)) && (param_3 < 0x3c)) && (param_5 < 1000)) {
    *param_4 = (double)((float)(int)((uint)param_1 * 3600000 + (uint)param_2 * 60000 +
                                     (uint)param_3 * 1000 + (uint)param_5) / _DAT_004093ac);
    local_5 = 1;
  }
  return local_5;
}



void FUN_004093b0(ushort param_1,ushort param_2,ushort param_3,ushort param_4)

{
  char cVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  undefined4 *local_10;
  double local_c;
  
  puStack_20 = &stack0xfffffffc;
  local_10 = (undefined4 *)0x0;
  puStack_24 = &LAB_00409415;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  cVar1 = FUN_00409340(param_1,param_2,param_3,&local_c,param_4);
  if (cVar1 == '\0') {
    FUN_004054e4((undefined4 *)PTR_LAB_0047572c,(int *)&local_10);
    FUN_00408170(local_10);
  }
  *in_FS_OFFSET = uStack_28;
  puStack_20 = &LAB_0040941c;
  puStack_24 = (undefined1 *)0x409414;
  FUN_00403bdc((int *)&local_10);
  return;
}



void FUN_00409428(undefined2 *param_1,undefined2 *param_2,undefined2 *param_3,undefined2 *param_4,
                 undefined4 param_5,undefined4 param_6)

{
  undefined2 extraout_var;
  undefined2 extraout_var_00;
  undefined2 extraout_var_01;
  ushort *puVar1;
  uint local_10 [2];
  ushort local_8;
  ushort local_6;
  
  puVar1 = &local_8;
  FUN_00409300(local_10,param_2,param_3,(double)CONCAT44(param_6,param_5));
  FUN_00408154(local_10[0],CONCAT22(extraout_var,60000),&local_6,puVar1);
  FUN_00408154((uint)local_6,CONCAT22(extraout_var_00,0x3c),param_1,param_2);
  FUN_00408154((uint)local_8,CONCAT22(extraout_var_01,1000),param_3,param_4);
  return;
}



undefined4 FUN_00409484(uint param_1)

{
  uint uVar1;
  uint uVar2;
  
  if ((param_1 & 3) == 0) {
    uVar2 = param_1 & 0xffff;
    uVar1 = 100;
    if ((uVar2 % 100 != 0) || (uVar1 = 400, uVar2 % 400 == 0)) {
      return CONCAT31((int3)(uVar2 / uVar1 >> 8),1);
    }
  }
  return 0;
}



void FUN_004094c0(short *param_1,ushort *param_2,short *param_3,undefined2 *param_4,
                 undefined4 param_5,undefined4 param_6)

{
  ushort uVar1;
  short sVar2;
  short sVar3;
  ushort uVar4;
  uint uVar5;
  undefined2 extraout_var;
  undefined2 extraout_var_00;
  short sVar6;
  undefined4 local_1c;
  int local_18;
  short local_14;
  ushort local_12;
  short *local_10;
  ushort *local_c;
  short *local_8;
  
  local_10 = param_3;
  local_c = param_2;
  local_8 = param_1;
  FUN_00409300(&local_1c,param_2,param_3,(double)CONCAT44(param_6,param_5));
  if (local_18 < 1) {
    *local_8 = 0;
    *local_c = 0;
    *local_10 = 0;
    *param_4 = 0;
  }
  else {
    *param_4 = (short)(local_18 % 7);
    sVar6 = 1;
    for (uVar5 = local_18 - 1; 0x23ab0 < (int)uVar5; uVar5 = uVar5 - 0x23ab1) {
      sVar6 = sVar6 + 400;
    }
    FUN_00408154(uVar5,CONCAT22((short)((uint)(local_18 % 7) >> 0x10),0x8eac),&local_14,&local_12);
    if (local_14 == 4) {
      local_14 = 3;
      local_12 = local_12 + 0x8eac;
    }
    sVar2 = local_14 * 100;
    FUN_00408154((uint)local_12,CONCAT22(extraout_var,0x5b5),&local_14,&local_12);
    sVar3 = local_14 * 4;
    FUN_00408154((uint)local_12,CONCAT22(extraout_var_00,0x16d),&local_14,&local_12);
    if (local_14 == 4) {
      local_14 = 3;
      local_12 = local_12 + 0x16d;
    }
    sVar6 = sVar6 + sVar2 + sVar3 + local_14;
    uVar5 = FUN_00409484(CONCAT22((short)((uint)param_4 >> 0x10),sVar6));
    uVar4 = 1;
    for (; uVar1 = *(ushort *)((uVar5 & 0x7f) * 0x18 + 0x4740d6 + (uint)uVar4 * 2),
        uVar1 <= local_12; local_12 = local_12 - uVar1) {
      uVar4 = uVar4 + 1;
    }
    *local_8 = sVar6;
    *local_c = uVar4;
    *local_10 = local_12 + 1;
  }
  return;
}



void FUN_00409604(short *param_1,ushort *param_2,short *param_3,undefined4 param_4,
                 undefined4 param_5)

{
  undefined4 uStack_8;
  
  uStack_8 = param_3;
  FUN_004094c0(param_1,param_2,param_3,(undefined2 *)((int)&uStack_8 + 2),param_4,param_5);
  return;
}



int FUN_00409624(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
                undefined4 param_5)

{
  undefined4 local_c;
  int local_8;
  
  FUN_00409300(&local_c,param_2,param_3,(double)CONCAT44(param_5,param_4));
  return local_8 % 7 + 1;
}



void FUN_0040964c(void)

{
  _SYSTEMTIME local_10;
  
  GetLocalTime(&local_10);
  FUN_004093b0(local_10.wHour,local_10.wMinute,local_10.wSecond,local_10.wMilliseconds);
  return;
}



void FUN_00409680(undefined4 *param_1,uint param_2,undefined4 param_3,int param_4)

{
  uint uVar1;
  
  uVar1 = 0x100 - *(int *)(param_4 + -0x104);
  if ((int)param_2 < (int)uVar1) {
    uVar1 = param_2;
  }
  if (uVar1 != 0) {
    FUN_00402920(param_1,(undefined4 *)(param_4 + -0x100 + *(int *)(param_4 + -0x104)),uVar1);
  }
  *(int *)(param_4 + -0x104) = *(int *)(param_4 + -0x104) + uVar1;
  return;
}



void FUN_004096c4(undefined4 *param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  uint uVar1;
  undefined4 extraout_ECX;
  
  uVar1 = FUN_00403e5c((int)param_1);
  FUN_00409680(param_1,uVar1,extraout_ECX,param_4);
  return;
}



void FUN_004096e4(undefined4 param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  uint uVar1;
  undefined4 extraout_ECX;
  undefined4 local_24;
  undefined1 local_20;
  undefined4 local_1c;
  undefined1 local_18;
  byte local_14 [16];
  
  local_20 = 0;
  local_18 = 0;
  local_24 = param_2;
  local_1c = param_1;
  uVar1 = FUN_00408dc4(local_14,(byte *)0x10,&DAT_00474164,1,&local_24,4);
  FUN_00409680((undefined4 *)local_14,uVar1,extraout_ECX,param_4);
  return;
}



void FUN_00409730(void)

{
  int iVar1;
  int *piVar2;
  int in_stack_00000004;
  
  piVar2 = (int *)(in_stack_00000004 + -4);
  iVar1 = *piVar2;
  while (*(char *)*piVar2 == *(char *)(in_stack_00000004 + -5)) {
    *piVar2 = *piVar2 + 1;
  }
  *(int *)(in_stack_00000004 + -0xc) = (*piVar2 - iVar1) + 1;
  return;
}



void FUN_0040975c(void)

{
  int in_stack_00000004;
  
  if (*(char *)(in_stack_00000004 + -0x13) == '\0') {
    FUN_00409604((short *)(in_stack_00000004 + -0xe),(ushort *)(in_stack_00000004 + -0x10),
                 (short *)(in_stack_00000004 + -0x12),
                 *(undefined4 *)(*(int *)(in_stack_00000004 + 8) + 8),
                 *(undefined4 *)(*(int *)(in_stack_00000004 + 8) + 0xc));
    *(undefined1 *)(in_stack_00000004 + -0x13) = 1;
  }
  return;
}



void FUN_00409794(void)

{
  int in_stack_00000004;
  
  if (*(char *)(in_stack_00000004 + -0x1d) == '\0') {
    FUN_00409428((undefined2 *)(in_stack_00000004 + -0x16),(undefined2 *)(in_stack_00000004 + -0x18)
                 ,(undefined2 *)(in_stack_00000004 + -0x1a),
                 (undefined2 *)(in_stack_00000004 + -0x1c),
                 *(undefined4 *)(*(int *)(in_stack_00000004 + 8) + 8),
                 *(undefined4 *)(*(int *)(in_stack_00000004 + 8) + 0xc));
    *(undefined1 *)(in_stack_00000004 + -0x1d) = 1;
  }
  return;
}



void FUN_004097d4(int param_1,int *param_2,undefined4 param_3,int param_4)

{
  LPCSTR lpFormat;
  LCID Locale;
  uint uVar1;
  undefined4 *in_FS_OFFSET;
  DWORD dwFlags;
  SYSTEMTIME *lpDate;
  CHAR *lpDateStr;
  int iVar2;
  int *piVar3;
  undefined4 uStack_130;
  undefined1 *puStack_12c;
  undefined1 *puStack_128;
  undefined4 local_11c;
  CHAR local_118 [256];
  SYSTEMTIME local_18;
  undefined *local_8;
  
  puStack_128 = &stack0xfffffffc;
  local_11c = 0;
  local_8 = (undefined *)0x0;
  puStack_12c = &LAB_00409926;
  uStack_130 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_130;
  FUN_00403bdc(param_2);
  local_18.wYear = *(WORD *)(param_4 + -0xe);
  local_18.wMonth = *(WORD *)(param_4 + -0x10);
  local_18.wDay = *(WORD *)(param_4 + -0x12);
  FUN_00403c74((int *)&local_8,0x40993c);
  iVar2 = 0x100;
  lpDateStr = local_118;
  lpFormat = FUN_00404020(local_8);
  lpDate = &local_18;
  dwFlags = 4;
  Locale = GetThreadLocale();
  iVar2 = GetDateFormatA(Locale,dwFlags,lpDate,lpFormat,lpDateStr,iVar2);
  if (iVar2 != 0) {
    FUN_00403e0c(param_2,local_118,0x100);
    if (param_1 == 1) {
      if (DAT_004765b4 == 4) {
        if (DAT_004765b6 == 1) {
          iVar2 = FUN_00403e5c(*param_2);
          iVar2 = FUN_0040b310(*param_2,iVar2);
          if (iVar2 == 4) {
            iVar2 = FUN_0040b3fc(*param_2,3);
            FUN_00403d94(&local_11c,local_118 + iVar2 + -1);
            uVar1 = FUN_0040b460(local_11c,2);
            FUN_00403cc4(param_2,(undefined4 *)(local_118 + iVar2 + -1),uVar1);
          }
        }
      }
      else if (DAT_004765b4 == 0x11) {
        piVar3 = param_2;
        uVar1 = FUN_0040b460(*param_2,1);
        FUN_00404064(*param_2,1,uVar1,piVar3);
      }
    }
  }
  *in_FS_OFFSET = uStack_130;
  puStack_128 = &LAB_0040992d;
  puStack_12c = (undefined1 *)0x40991d;
  FUN_00403bdc(&local_11c);
  puStack_12c = (undefined1 *)0x409925;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_00409940(int param_1,int *param_2,undefined4 param_3,int param_4)

{
  LPCSTR lpFormat;
  LCID Locale;
  undefined4 *in_FS_OFFSET;
  DWORD dwFlags;
  SYSTEMTIME *lpDate;
  CHAR *lpDateStr;
  int iVar1;
  int *piVar2;
  undefined4 uStack_12c;
  undefined1 *puStack_128;
  undefined1 *puStack_124;
  CHAR local_118 [256];
  SYSTEMTIME local_18;
  undefined *local_8;
  
  puStack_124 = &stack0xfffffffc;
  local_8 = (undefined *)0x0;
  puStack_128 = &LAB_00409a1e;
  uStack_12c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_12c;
  FUN_00403bdc(param_2);
  local_18.wYear = *(WORD *)(param_4 + -0xe);
  local_18.wMonth = *(WORD *)(param_4 + -0x10);
  local_18.wDay = *(WORD *)(param_4 + -0x12);
  if (param_1 < 3) {
    FUN_00403c74((int *)&local_8,0x409a34);
  }
  else {
    FUN_00403c74((int *)&local_8,0x409a40);
  }
  iVar1 = 0x100;
  lpDateStr = local_118;
  lpFormat = FUN_00404020(local_8);
  lpDate = &local_18;
  dwFlags = 4;
  Locale = GetThreadLocale();
  iVar1 = GetDateFormatA(Locale,dwFlags,lpDate,lpFormat,lpDateStr,iVar1);
  if (iVar1 != 0) {
    FUN_00403e0c(param_2,local_118,0x100);
    if ((param_1 == 1) && (*(char *)*param_2 == '0')) {
      piVar2 = param_2;
      iVar1 = FUN_00403e5c(*param_2);
      FUN_00404064(*param_2,2,iVar1 - 1,piVar2);
    }
  }
  *in_FS_OFFSET = uStack_12c;
  puStack_124 = &LAB_00409a25;
  puStack_128 = (undefined1 *)0x409a1d;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_00409a48(byte *param_1,undefined4 param_2,undefined1 *param_3,undefined1 *param_4)

{
  byte bVar1;
  byte bVar2;
  ushort uVar3;
  int iVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined1 *extraout_ECX_01;
  undefined1 *extraout_ECX_02;
  undefined1 *extraout_ECX_03;
  undefined1 *puVar5;
  undefined4 extraout_ECX_04;
  undefined4 extraout_ECX_05;
  undefined4 extraout_ECX_06;
  undefined4 extraout_ECX_07;
  undefined4 extraout_ECX_08;
  undefined4 extraout_ECX_09;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 extraout_EDX_03;
  undefined4 extraout_EDX_04;
  undefined4 extraout_EDX_05;
  undefined4 extraout_EDX_06;
  undefined4 extraout_EDX_07;
  undefined4 extraout_EDX_08;
  undefined4 extraout_EDX_09;
  undefined4 extraout_EDX_10;
  undefined4 extraout_EDX_11;
  undefined4 extraout_EDX_12;
  byte bVar6;
  byte bVar7;
  byte *pbVar8;
  byte *pbVar9;
  undefined4 *in_FS_OFFSET;
  undefined1 *puVar10;
  undefined4 uStack_40;
  undefined1 *puStack_3c;
  undefined1 *puStack_38;
  undefined4 *local_2c;
  undefined4 *local_28;
  byte local_23;
  char local_22;
  undefined1 local_21;
  ushort local_20;
  ushort local_1e;
  ushort local_1c;
  ushort local_1a;
  undefined1 local_17;
  ushort local_16;
  ushort local_14;
  ushort local_12;
  int local_10;
  byte local_9;
  byte *local_8;
  
  puStack_38 = &stack0xfffffffc;
  local_2c = (undefined4 *)0x0;
  local_28 = (undefined4 *)0x0;
  puStack_3c = &LAB_0040a189;
  uStack_40 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_40;
  local_8 = param_1;
  if ((param_1 != (byte *)0x0) && (*(int *)(param_4 + -0x108) < 2)) {
    *(int *)(param_4 + -0x108) = *(int *)(param_4 + -0x108) + 1;
    local_17 = 0;
    local_21 = 0;
    local_22 = '\0';
    bVar7 = 0x20;
    while (bVar1 = *local_8, pbVar8 = local_8, bVar1 != 0) {
      pbVar8 = local_8 + 1;
      local_9 = bVar1;
      if (((byte)(&DAT_00474108)[(int)(uint)bVar1 >> 3] >> (bVar1 & 7) & 1) == 0) {
        bVar2 = bVar1;
        if ((byte)(bVar1 + 0x9f) < 0x1a) {
          bVar2 = bVar1 - 0x20;
        }
        bVar6 = bVar7;
        if ((((byte)(bVar2 + 0xbf) < 0x1a) && (bVar6 = bVar2, bVar2 == 0x4d)) && (bVar7 == 0x48)) {
          bVar2 = 0x4e;
          bVar6 = bVar2;
        }
        bVar7 = bVar6;
        local_8 = pbVar8;
        switch(bVar2) {
        case 0x22:
        case 0x27:
          while( true ) {
            bVar2 = *local_8;
            if (((bVar2 == 0) || (bVar2 == bVar1)) ||
               ((((byte)(&DAT_00474108)[(int)(uint)bVar2 >> 3] >> (bVar2 & 7) & 1) != 0 &&
                (local_8 = local_8 + 1, *local_8 == 0)))) break;
            local_8 = local_8 + 1;
          }
          puVar5 = param_4;
          FUN_00409680((undefined4 *)pbVar8,(int)local_8 - (int)pbVar8,param_3,(int)param_4);
          param_3 = puVar5;
          if (*local_8 != 0) {
            local_8 = local_8 + 1;
          }
          break;
        default:
          puVar5 = param_4;
          FUN_00409680((undefined4 *)&local_9,1,param_3,(int)param_4);
          param_3 = puVar5;
          break;
        case 0x2f:
          puVar5 = param_4;
          FUN_00409680((undefined4 *)&DAT_004764f9,1,param_3,(int)param_4);
          param_3 = puVar5;
          break;
        case 0x3a:
          puVar5 = param_4;
          FUN_00409680((undefined4 *)&DAT_00476504,1,param_3,(int)param_4);
          param_3 = puVar5;
          break;
        case 0x41:
          FUN_00409794();
          pbVar8 = local_8;
          pbVar9 = local_8 + -1;
          iVar4 = FUN_00408c20((char *)pbVar9,s_AM_PM_0040a198,5);
          if (iVar4 == 0) {
            if (0xb < local_1a) {
              pbVar9 = pbVar8 + 2;
            }
            param_3 = param_4;
            FUN_00409680((undefined4 *)pbVar9,2,extraout_ECX_04,(int)param_4);
            local_8 = local_8 + 4;
            local_22 = '\x01';
          }
          else {
            iVar4 = FUN_00408c20((char *)pbVar9,&DAT_0040a1a0,3);
            if (iVar4 == 0) {
              if (0xb < local_1a) {
                pbVar9 = pbVar8 + 1;
              }
              param_3 = param_4;
              FUN_00409680((undefined4 *)pbVar9,1,extraout_ECX_05,(int)param_4);
              local_8 = local_8 + 2;
              local_22 = '\x01';
            }
            else {
              iVar4 = FUN_00408c20((char *)pbVar9,&DAT_0040a1a4,4);
              if (iVar4 == 0) {
                if (local_1a < 0xc) {
                  param_3 = param_4;
                  FUN_004096c4(DAT_00476508,extraout_EDX_06,extraout_ECX_06,(int)param_4);
                }
                else {
                  param_3 = param_4;
                  FUN_004096c4(DAT_0047650c,extraout_EDX_06,extraout_ECX_06,(int)param_4);
                }
                local_8 = local_8 + 3;
                local_22 = '\x01';
              }
              else {
                iVar4 = FUN_00408c20((char *)pbVar9,&DAT_0040a1ac,4);
                if (iVar4 == 0) {
                  puVar5 = &stack0xfffffffc;
                  FUN_0040975c();
                  param_3 = param_4;
                  iVar4 = FUN_00409624(param_4,extraout_EDX_07,puVar5,*(undefined4 *)(param_4 + 8),
                                       *(undefined4 *)(param_4 + 0xc));
                  FUN_004096c4(*(undefined4 **)(&DAT_00476590 + iVar4 * 4),extraout_EDX_08,
                               extraout_ECX_07,(int)param_3);
                  local_8 = local_8 + 3;
                }
                else {
                  iVar4 = FUN_00408c20((char *)pbVar9,&DAT_0040a1b4,3);
                  if (iVar4 == 0) {
                    puVar5 = &stack0xfffffffc;
                    FUN_0040975c();
                    param_3 = param_4;
                    iVar4 = FUN_00409624(param_4,extraout_EDX_09,puVar5,*(undefined4 *)(param_4 + 8)
                                         ,*(undefined4 *)(param_4 + 0xc));
                    FUN_004096c4(*(undefined4 **)(&DAT_00476574 + iVar4 * 4),extraout_EDX_10,
                                 extraout_ECX_09,(int)param_3);
                    local_8 = local_8 + 2;
                  }
                  else {
                    param_3 = param_4;
                    FUN_00409680((undefined4 *)&local_9,1,extraout_ECX_08,(int)param_4);
                  }
                }
              }
            }
          }
          break;
        case 0x43:
          puVar5 = &stack0xfffffffc;
          FUN_00409730();
          FUN_00409a48(DAT_004764fc,extraout_EDX_11,puVar5,param_4);
          param_3 = &stack0xfffffffc;
          FUN_00409794();
          if (((local_1a != 0) || (local_1c != 0)) || (local_1e != 0)) {
            puVar5 = param_4;
            FUN_00409680((undefined4 *)&LAB_0040a1b8,1,param_3,(int)param_4);
            param_3 = param_4;
            FUN_00409a48(DAT_00476514,extraout_EDX_12,puVar5,param_4);
          }
          break;
        case 0x44:
          puVar5 = &stack0xfffffffc;
          FUN_00409730();
          if (local_10 - 1U < 2) {
            puVar5 = &stack0xfffffffc;
            FUN_0040975c();
            param_3 = param_4;
            FUN_004096e4((uint)local_16,local_10,puVar5,(int)param_4);
          }
          else if (local_10 == 3) {
            param_3 = param_4;
            iVar4 = FUN_00409624(param_4,extraout_EDX_02,puVar5,*(undefined4 *)(param_4 + 8),
                                 *(undefined4 *)(param_4 + 0xc));
            FUN_004096c4(*(undefined4 **)(&DAT_00476574 + iVar4 * 4),extraout_EDX_03,extraout_ECX,
                         (int)param_3);
          }
          else if (local_10 == 4) {
            param_3 = param_4;
            iVar4 = FUN_00409624(param_4,extraout_EDX_02,puVar5,*(undefined4 *)(param_4 + 8),
                                 *(undefined4 *)(param_4 + 0xc));
            FUN_004096c4(*(undefined4 **)(&DAT_00476590 + iVar4 * 4),extraout_EDX_04,extraout_ECX_00
                         ,(int)param_3);
          }
          else if (local_10 == 5) {
            param_3 = param_4;
            FUN_00409a48(DAT_004764fc,extraout_EDX_02,puVar5,param_4);
          }
          else {
            param_3 = param_4;
            FUN_00409a48(DAT_00476500,extraout_EDX_02,puVar5,param_4);
          }
          break;
        case 0x45:
          FUN_00409730();
          puVar10 = &stack0xfffffffc;
          FUN_0040975c();
          puVar5 = &stack0xfffffffc;
          param_3 = param_4;
          FUN_00409940(local_10,(int *)&local_2c,puVar10,(int)&stack0xfffffffc);
          FUN_004096c4(local_2c,extraout_EDX_00,puVar5,(int)param_3);
          break;
        case 0x47:
          FUN_00409730();
          puVar10 = &stack0xfffffffc;
          FUN_0040975c();
          puVar5 = &stack0xfffffffc;
          param_3 = param_4;
          FUN_004097d4(local_10,(int *)&local_28,puVar10,(int)&stack0xfffffffc);
          FUN_004096c4(local_28,extraout_EDX,puVar5,(int)param_3);
          break;
        case 0x48:
          FUN_00409730();
          puVar5 = &stack0xfffffffc;
          FUN_00409794();
          local_23 = 0;
          pbVar8 = local_8;
          while (bVar1 = *pbVar8, bVar1 != 0) {
            if (((byte)(&DAT_00474108)[(int)(uint)bVar1 >> 3] >> (bVar1 & 7) & 1) == 0) {
              bVar1 = *pbVar8;
              if (bVar1 < 0x49) {
                if (bVar1 == 0x48) break;
                if ((bVar1 == 0x22) || (bVar1 == 0x27)) {
                  local_23 = local_23 ^ 1;
                }
                else if (bVar1 == 0x41) goto LAB_00409d9b;
              }
              else if (bVar1 == 0x61) {
LAB_00409d9b:
                if (local_23 == 0) {
                  iVar4 = FUN_00408c20((char *)pbVar8,s_AM_PM_0040a198,5);
                  puVar5 = extraout_ECX_01;
                  if (((iVar4 == 0) ||
                      (iVar4 = FUN_00408c20((char *)pbVar8,&DAT_0040a1a0,3),
                      puVar5 = extraout_ECX_02, iVar4 == 0)) ||
                     (iVar4 = FUN_00408c20((char *)pbVar8,&DAT_0040a1a4,4), puVar5 = extraout_ECX_03
                     , iVar4 == 0)) {
                    local_22 = '\x01';
                  }
                  break;
                }
              }
              else if (bVar1 == 0x68) break;
              pbVar8 = pbVar8 + 1;
            }
            else {
              if (pbVar8[1] == 0) break;
              pbVar8 = pbVar8 + 2;
            }
          }
          uVar3 = local_1a;
          if (local_22 != '\0') {
            if (local_1a == 0) {
              uVar3 = 0xc;
            }
            else if (0xc < local_1a) {
              uVar3 = local_1a - 0xc;
            }
          }
          if (2 < local_10) {
            local_10 = 2;
          }
          param_3 = param_4;
          FUN_004096e4((uint)uVar3,local_10,puVar5,(int)param_4);
          break;
        case 0x4d:
          FUN_00409730();
          puVar5 = &stack0xfffffffc;
          FUN_0040975c();
          if (local_10 - 1U < 2) {
            param_3 = param_4;
            FUN_004096e4((uint)local_14,local_10,puVar5,(int)param_4);
          }
          else if (local_10 - 1U == 2) {
            param_3 = param_4;
            FUN_004096c4((undefined4 *)(&DAT_00476514)[local_14],extraout_EDX_01,puVar5,(int)param_4
                        );
          }
          else {
            param_3 = param_4;
            FUN_004096c4(*(undefined4 **)(&DAT_00476544 + (uint)local_14 * 4),extraout_EDX_01,puVar5
                         ,(int)param_4);
          }
          break;
        case 0x4e:
          FUN_00409730();
          puVar5 = &stack0xfffffffc;
          FUN_00409794();
          if (2 < local_10) {
            local_10 = 2;
          }
          param_3 = param_4;
          FUN_004096e4((uint)local_1c,local_10,puVar5,(int)param_4);
          break;
        case 0x53:
          FUN_00409730();
          puVar5 = &stack0xfffffffc;
          FUN_00409794();
          if (2 < local_10) {
            local_10 = 2;
          }
          param_3 = param_4;
          FUN_004096e4((uint)local_1e,local_10,puVar5,(int)param_4);
          break;
        case 0x54:
          puVar5 = &stack0xfffffffc;
          FUN_00409730();
          if (local_10 == 1) {
            param_3 = param_4;
            FUN_00409a48(DAT_00476510,extraout_EDX_05,puVar5,param_4);
          }
          else {
            param_3 = param_4;
            FUN_00409a48(DAT_00476514,extraout_EDX_05,puVar5,param_4);
          }
          break;
        case 0x59:
          FUN_00409730();
          puVar5 = &stack0xfffffffc;
          FUN_0040975c();
          if (local_10 < 3) {
            param_3 = param_4;
            FUN_004096e4((uint)local_12 % 100,2,100,(int)param_4);
          }
          else {
            param_3 = param_4;
            FUN_004096e4((uint)local_12,4,puVar5,(int)param_4);
          }
          break;
        case 0x5a:
          FUN_00409730();
          puVar5 = &stack0xfffffffc;
          FUN_00409794();
          if (3 < local_10) {
            local_10 = 3;
          }
          param_3 = param_4;
          FUN_004096e4((uint)local_20,local_10,puVar5,(int)param_4);
        }
      }
      else {
        if (*pbVar8 == 0) break;
        local_8 = local_8 + 2;
        bVar7 = 0x20;
      }
    }
    local_8 = pbVar8;
    *(int *)(param_4 + -0x108) = *(int *)(param_4 + -0x108) + -1;
  }
  *in_FS_OFFSET = uStack_40;
  puStack_38 = &LAB_0040a190;
  puStack_3c = (undefined1 *)0x40a188;
  FUN_00403c00((int *)&local_2c,2);
  return;
}



void FUN_0040a1bc(int *param_1,byte *param_2,undefined1 *param_3)

{
  undefined4 local_104 [64];
  
  if (param_2 == (byte *)0x0) {
    FUN_00409a48(&LAB_0040a214,0,param_3,&stack0xfffffffc);
  }
  else {
    FUN_00409a48(param_2,param_2,param_3,&stack0xfffffffc);
  }
  FUN_00403cc4(param_1,local_104,0);
  return;
}



void FUN_0040a230(DWORD param_1,int *param_2)

{
  uint uVar1;
  CHAR local_104 [256];
  
  uVar1 = FormatMessageA(0x3000,(LPCVOID)0x0,param_1,0,local_104,0x100,(va_list *)0x0);
  for (; (0 < (int)uVar1 && (((byte)local_104[uVar1 - 1] < 0x21 || (local_104[uVar1 - 1] == 0x2e))))
      ; uVar1 = uVar1 - 1) {
  }
  FUN_00403cc4(param_2,(undefined4 *)local_104,uVar1);
  return;
}



void FUN_0040a27c(LCID param_1,LCTYPE param_2,undefined4 *param_3,int *param_4)

{
  int iVar1;
  CHAR local_104 [256];
  
  iVar1 = GetLocaleInfoA(param_1,param_2,local_104,0x100);
  if (iVar1 < 1) {
    FUN_00403c30(param_4,param_3);
  }
  else {
    FUN_00403cc4(param_4,(undefined4 *)local_104,iVar1 - 1);
  }
  return;
}



uint FUN_0040a2c8(LCID param_1,LCTYPE param_2,uint param_3)

{
  int iVar1;
  uint local_10;
  
  local_10 = param_3;
  iVar1 = GetLocaleInfoA(param_1,param_2,(LPSTR)&local_10,2);
  if (0 < iVar1) {
    param_3 = CONCAT31((int3)((uint)iVar1 >> 8),(undefined1)local_10);
  }
  return param_3;
}



void FUN_0040a2f0(LCTYPE param_1,int param_2,int param_3,int *param_4,undefined4 param_5,int param_6
                 )

{
  FUN_0040a27c(*(LCID *)(param_6 + -4),param_1,(undefined4 *)0x0,param_4);
  if (*param_4 == 0) {
    FUN_004054e4(*(undefined4 **)(param_3 + param_2 * 4),param_4);
  }
  return;
}



void FUN_0040a32c(void)

{
  int iVar1;
  int *piVar2;
  int *piVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_34;
  undefined1 *puStack_30;
  undefined1 *puStack_2c;
  undefined4 *local_1c;
  undefined4 *local_18;
  undefined4 *local_14;
  undefined4 *local_10;
  int local_c;
  LCID local_8;
  
  puStack_2c = &stack0xfffffffc;
  local_8 = 0;
  local_c = 0;
  local_10 = (undefined4 *)0x0;
  local_14 = (undefined4 *)0x0;
  local_18 = (undefined4 *)0x0;
  local_1c = (undefined4 *)0x0;
  puStack_30 = &LAB_0040a43f;
  uStack_34 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_34;
  local_8 = GetThreadLocale();
  iVar1 = 1;
  piVar2 = (int *)&DAT_00476518;
  piVar3 = (int *)&DAT_00476548;
  do {
    FUN_0040a2f0(iVar1 + 0x43,iVar1 + -1,0x474168,(int *)&local_10,0xb,(int)&stack0xfffffffc);
    FUN_00403c30(piVar2,local_10);
    FUN_0040a2f0(iVar1 + 0x37,iVar1 + -1,0x474198,(int *)&local_14,0xb,(int)&stack0xfffffffc);
    FUN_00403c30(piVar3,local_14);
    iVar1 = iVar1 + 1;
    piVar3 = piVar3 + 1;
    piVar2 = piVar2 + 1;
  } while (iVar1 != 0xd);
  iVar1 = 1;
  piVar2 = (int *)&DAT_00476578;
  piVar3 = (int *)&DAT_00476594;
  do {
    local_c = (iVar1 + 5) % 7;
    FUN_0040a2f0(local_c + 0x31,iVar1 + -1,0x4741c8,(int *)&local_18,6,(int)&stack0xfffffffc);
    FUN_00403c30(piVar2,local_18);
    FUN_0040a2f0(local_c + 0x2a,iVar1 + -1,0x4741e4,(int *)&local_1c,6,(int)&stack0xfffffffc);
    FUN_00403c30(piVar3,local_1c);
    iVar1 = iVar1 + 1;
    piVar3 = piVar3 + 1;
    piVar2 = piVar2 + 1;
  } while (iVar1 != 8);
  *in_FS_OFFSET = uStack_34;
  puStack_2c = &LAB_0040a446;
  puStack_30 = (undefined1 *)0x40a43e;
  FUN_00403c00((int *)&local_1c,4);
  return;
}



// lpCalInfoEnumProc parameter of EnumCalendarInfoA
// 

undefined4 lpCalInfoEnumProc_0040a450(void)

{
  int iVar1;
  char *in_stack_00000004;
  
  iVar1 = 1;
  while( true ) {
    if (*(int *)(&DAT_004765b8 + iVar1 * 4) == 0) {
      FUN_00403d94((int *)(&DAT_004765b8 + iVar1 * 4),in_stack_00000004);
      return 1;
    }
    if (iVar1 == 7) break;
    iVar1 = iVar1 + 1;
  }
  return 0;
}



// lpCalInfoEnumProc parameter of EnumCalendarInfoA
// 

void lpCalInfoEnumProc_0040a48c(void)

{
  undefined4 uVar1;
  int extraout_ECX;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  char *in_stack_00000004;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  byte *local_8;
  
  puStack_14 = &stack0xfffffffc;
  local_8 = (byte *)0x0;
  puStack_18 = &LAB_0040a4f1;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  for (iVar2 = 1; *(int *)(iVar2 * 4 + 0x4765d4) != -1; iVar2 = iVar2 + 1) {
    if (iVar2 == 7) goto LAB_0040a4db;
  }
  FUN_00403d94((int *)&local_8,in_stack_00000004);
  uVar1 = FUN_00408544(local_8,0,extraout_ECX);
  *(undefined4 *)(iVar2 * 4 + 0x4765d4) = uVar1;
LAB_0040a4db:
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_0040a4f8;
  puStack_18 = (undefined1 *)0x40a4f0;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_0040a504(void)

{
  LCID LVar1;
  CALID Calendar;
  undefined4 *puVar2;
  int extraout_ECX;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  CALID Calendar_00;
  byte **ppbVar4;
  CALTYPE CVar5;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  byte *local_8;
  
  puStack_10 = &stack0xfffffffc;
  local_8 = (byte *)0x0;
  puStack_14 = &LAB_0040a59b;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  ppbVar4 = &local_8;
  LVar1 = GetThreadLocale();
  FUN_0040a27c(LVar1,0x100b,(undefined4 *)&DAT_0040a5b0,(int *)ppbVar4);
  Calendar = FUN_00408544(local_8,1,extraout_ECX);
  if (Calendar - 3 < 3) {
    CVar5 = 4;
    Calendar_00 = Calendar;
    LVar1 = GetThreadLocale();
    EnumCalendarInfoA(lpCalInfoEnumProc_0040a450,LVar1,Calendar_00,CVar5);
    iVar3 = 7;
    puVar2 = &DAT_004765d8;
    do {
      *puVar2 = 0xffffffff;
      puVar2 = puVar2 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
    CVar5 = 3;
    LVar1 = GetThreadLocale();
    EnumCalendarInfoA(lpCalInfoEnumProc_0040a48c,LVar1,Calendar,CVar5);
  }
  *in_FS_OFFSET = uStack_18;
  puStack_10 = &LAB_0040a5a2;
  puStack_14 = (undefined1 *)0x40a59a;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_0040a5b4(undefined4 *param_1,int *param_2)

{
  char cVar1;
  bool bVar2;
  LCID LVar3;
  int iVar4;
  uint uVar5;
  int extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  int iVar6;
  undefined4 *in_FS_OFFSET;
  byte **ppbVar7;
  undefined4 uStack_2c;
  undefined1 *puStack_28;
  undefined1 *puStack_24;
  undefined4 *local_14;
  undefined4 *local_10;
  undefined4 *local_c;
  byte *local_8;
  
  puStack_24 = &stack0xfffffffc;
  local_8 = (byte *)0x0;
  local_c = (undefined4 *)0x0;
  local_10 = (undefined4 *)0x0;
  local_14 = (undefined4 *)0x0;
  puStack_28 = &LAB_0040a776;
  uStack_2c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_2c;
  iVar6 = 1;
  FUN_00403bdc(param_2);
  ppbVar7 = &local_8;
  LVar3 = GetThreadLocale();
  FUN_0040a27c(LVar3,0x1009,(undefined4 *)&DAT_0040a78c,(int *)ppbVar7);
  iVar4 = FUN_00408544(local_8,1,extraout_ECX);
  if (iVar4 - 3U < 3) {
    while (iVar4 = FUN_00403e5c((int)param_1), iVar6 <= iVar4) {
      uVar5 = (uint)*(byte *)((int)param_1 + iVar6 + -1);
      if (((byte)(&DAT_00474108)[(int)uVar5 >> 3] >> (uVar5 & 7) & 1) == 0) {
        iVar4 = FUN_00408c20((char *)((int)param_1 + iVar6 + -1),&DAT_0040a790,2);
        if (iVar4 == 0) {
          FUN_00403e64(param_2,(undefined4 *)&DAT_0040a79c);
          iVar6 = iVar6 + 1;
        }
        else {
          iVar4 = FUN_00408c20((char *)((int)param_1 + iVar6 + -1),&DAT_0040a7a0,4);
          if (iVar4 == 0) {
            FUN_00403e64(param_2,(undefined4 *)&DAT_0040a7b0);
            iVar6 = iVar6 + 3;
          }
          else {
            iVar4 = FUN_00408c20((char *)((int)param_1 + iVar6 + -1),&DAT_0040a7b8,2);
            if (iVar4 == 0) {
              FUN_00403e64(param_2,(undefined4 *)&DAT_0040a7c4);
              iVar6 = iVar6 + 1;
            }
            else {
              cVar1 = *(char *)((int)param_1 + iVar6 + -1);
              if ((cVar1 == 'Y') || (cVar1 == 'y')) {
                FUN_00403e64(param_2,(undefined4 *)&DAT_0040a7d0);
              }
              else {
                FUN_00403d84((int *)&local_14,
                             CONCAT31((int3)((uint)extraout_EDX_00 >> 8),
                                      *(undefined1 *)((int)param_1 + iVar6 + -1)));
                FUN_00403e64(param_2,local_14);
              }
            }
          }
        }
        iVar6 = iVar6 + 1;
      }
      else {
        FUN_00404064((int)param_1,iVar6,2,(int *)&local_10);
        FUN_00403e64(param_2,local_10);
        iVar6 = iVar6 + 2;
      }
    }
  }
  else {
    if ((DAT_004765b4 == 4) || ((ushort)(DAT_004765b4 - 0x11U) < 2)) {
      bVar2 = true;
    }
    else {
      bVar2 = false;
    }
    if (bVar2) {
      for (; iVar4 = FUN_00403e5c((int)param_1), iVar6 <= iVar4; iVar6 = iVar6 + 1) {
        cVar1 = *(char *)((int)param_1 + iVar6 + -1);
        if ((cVar1 != 'G') && (cVar1 != 'g')) {
          FUN_00403d84((int *)&local_c,
                       CONCAT31((int3)((uint)extraout_EDX >> 8),
                                *(undefined1 *)((int)param_1 + iVar6 + -1)));
          FUN_00403e64(param_2,local_c);
        }
      }
    }
    else {
      FUN_00403c30(param_2,param_1);
    }
  }
  *in_FS_OFFSET = uStack_2c;
  puStack_24 = &LAB_0040a77d;
  puStack_28 = (undefined1 *)0x40a775;
  FUN_00403c00((int *)&local_14,4);
  return;
}



undefined4 FUN_0040a7d4(void)

{
  int iVar1;
  
  iVar1 = FUN_00402774();
  if (iVar1 != 0) {
    iVar1 = FUN_00402774();
    return *(undefined4 *)(iVar1 + 8);
  }
  return 0;
}



undefined4 FUN_0040a7ec(void)

{
  int iVar1;
  
  iVar1 = FUN_00402774();
  if (iVar1 != 0) {
    iVar1 = FUN_00402774();
    return *(undefined4 *)(iVar1 + 4);
  }
  return 0;
}



int FUN_0040a804(int param_1)

{
  if (param_1 != 0) {
    param_1 = param_1 + -0x1000;
  }
  return param_1;
}



void FUN_0040a810(int *param_1,LPCVOID param_2,byte *param_3,byte *param_4)

{
  DWORD DVar1;
  char *pcVar2;
  int *piVar3;
  int iVar4;
  HINSTANCE hInstance;
  undefined *puVar5;
  UINT uID;
  byte *lpBuffer;
  byte local_45c [256];
  byte *local_35c;
  undefined1 local_358;
  char *local_354;
  undefined1 local_350;
  int local_34c;
  undefined1 local_348;
  char *local_344;
  undefined1 local_340;
  undefined *local_33c;
  undefined1 local_338;
  _MEMORY_BASIC_INFORMATION local_334;
  byte local_316 [256];
  byte local_216 [261];
  char local_111 [261];
  int local_c;
  byte *local_8;
  
  local_8 = param_3;
  VirtualQuery(param_2,&local_334,0x1c);
  if (local_334.State == 0x1000) {
    DVar1 = GetModuleFileNameA((HMODULE)local_334.AllocationBase,(LPSTR)local_216,0x105);
    if (DVar1 != 0) {
      local_c = (int)param_2 - (int)local_334.AllocationBase;
      goto LAB_0040a886;
    }
  }
  GetModuleFileNameA(DAT_004764d8,(LPSTR)local_216,0x105);
  local_c = FUN_0040a804((int)param_2);
LAB_0040a886:
  pcVar2 = FUN_0040b790(local_216,'\\');
  FUN_00408b84(local_111,pcVar2 + 1,0x104);
  pcVar2 = (char *)((int)&UNK_0040a98f + 1);
  puVar5 = (undefined *)0x40a990;
  piVar3 = FUN_004030cc(param_1,(int)PTR_DAT_00407654);
  if ((char)piVar3 != '\0') {
    pcVar2 = FUN_00404020((undefined *)param_1[1]);
    iVar4 = FUN_00408af4(pcVar2);
    if ((iVar4 != 0) && (pcVar2[iVar4 + -1] != '.')) {
      puVar5 = &DAT_0040a994;
    }
  }
  iVar4 = 0x100;
  lpBuffer = local_316;
  uID = *(UINT *)(PTR_PTR_004758d0 + 4);
  hInstance = (HINSTANCE)FUN_00404f9c((int)DAT_004764d8);
  LoadStringA(hInstance,uID,(LPSTR)lpBuffer,iVar4);
  FUN_00402ea0(*param_1,local_45c);
  local_35c = local_45c;
  local_358 = 4;
  local_354 = local_111;
  local_350 = 6;
  local_34c = local_c;
  local_348 = 5;
  local_340 = 6;
  local_338 = 6;
  local_344 = pcVar2;
  local_33c = puVar5;
  FUN_004091f0(local_8,param_4,local_316,4,&local_35c);
  FUN_00408af4((char *)local_8);
  return;
}



void FUN_0040a998(int *param_1,LPCVOID param_2)

{
  undefined *puVar1;
  HINSTANCE hInstance;
  UINT uID;
  CHAR *lpBuffer;
  int cchBufferMax;
  CHAR local_440 [64];
  byte local_400 [1024];
  
  FUN_0040a810(param_1,param_2,local_400,(byte *)0x400);
  lpBuffer = local_440;
  if (*PTR_DAT_0047580c == '\0') {
    cchBufferMax = 0x40;
    uID = *(UINT *)(PTR_PTR_00475608 + 4);
    hInstance = (HINSTANCE)FUN_00404f9c(DAT_004764d8);
    LoadStringA(hInstance,uID,lpBuffer,cchBufferMax);
    MessageBoxA((HWND)0x0,(LPCSTR)local_400,local_440,0x2010);
  }
  else {
    puVar1 = (undefined *)FUN_00405c68(PTR_DAT_00475650,(char *)local_400);
    FUN_00405beb(puVar1);
    FUN_004027c4();
  }
  return;
}



int * FUN_0040aa10(int *param_1,char param_2,undefined4 *param_3)

{
  undefined4 *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00403c30(param_1 + 1,param_3);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_0040aa4c(int param_1,char param_2,byte *param_3,undefined4 param_4,undefined4 param_5)

{
  byte *extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_30;
  undefined1 *puStack_2c;
  undefined1 *puStack_28;
  undefined4 in_stack_ffffffdc;
  undefined4 in_stack_ffffffe0;
  undefined4 *local_8;
  
  local_8 = (undefined4 *)0x0;
  if (param_2 != '\0') {
    puStack_28 = (undefined1 *)0x40aa60;
    param_1 = FUN_00403254(param_1,param_2,param_3,in_stack_ffffffdc,in_stack_ffffffe0);
    param_3 = extraout_ECX;
  }
  puStack_2c = &LAB_0040aaa6;
  uStack_30 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_30;
  puStack_28 = &stack0xfffffffc;
  FUN_00409224(param_3,param_5,param_4,(int *)&local_8);
  FUN_00403c30((int *)(param_1 + 4),local_8);
  *in_FS_OFFSET = uStack_30;
  puStack_28 = &LAB_0040aaad;
  puStack_2c = (undefined1 *)0x40aaa5;
  FUN_00403bdc((int *)&local_8);
  return;
}



int * FUN_0040aacc(int *param_1,char param_2,undefined4 *param_3)

{
  undefined4 *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_004054e4(param_3,param_1 + 1);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_0040ab08(int param_1,char param_2,undefined4 *param_3,undefined4 param_4,undefined4 param_5
                 )

{
  undefined4 *extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 **ppuVar1;
  undefined4 uStack_34;
  undefined1 *puStack_30;
  undefined1 *puStack_2c;
  undefined4 in_stack_ffffffd8;
  undefined4 in_stack_ffffffdc;
  byte *local_c;
  undefined4 *local_8;
  
  local_8 = (undefined4 *)0x0;
  local_c = (byte *)0x0;
  if (param_2 != '\0') {
    puStack_2c = (undefined1 *)0x40ab1e;
    param_1 = FUN_00403254(param_1,param_2,param_3,in_stack_ffffffd8,in_stack_ffffffdc);
    param_3 = extraout_ECX;
  }
  puStack_30 = &LAB_0040ab74;
  uStack_34 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_34;
  ppuVar1 = &local_8;
  puStack_2c = &stack0xfffffffc;
  FUN_004054e4(param_3,(int *)&local_c);
  FUN_00409224(local_c,param_5,param_4,(int *)ppuVar1);
  FUN_00403c30((int *)(param_1 + 4),local_8);
  *in_FS_OFFSET = uStack_34;
  puStack_2c = &LAB_0040ab7b;
  puStack_30 = (undefined1 *)0x40ab73;
  FUN_00403c00((int *)&local_c,2);
  return;
}



void FUN_0040abc8(void)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  int local_10;
  undefined1 local_c;
  
  iVar1 = FUN_00402908();
  for (iVar3 = 0; (iVar3 < 7 && (iVar1 != (&DAT_00474200)[iVar3 * 2])); iVar3 = iVar3 + 1) {
  }
  if (iVar3 < 7) {
    piVar2 = FUN_0040aa10((int *)PTR_DAT_004077c8,'\x01',(undefined4 *)(&DAT_00474204)[iVar3 * 2]);
  }
  else {
    local_c = 0;
    local_10 = iVar1;
    piVar2 = (int *)FUN_0040ab08((int)PTR_DAT_004077c8,'\x01',(undefined4 *)PTR_PTR_00475604,0,
                                 &local_10);
  }
  piVar2[3] = iVar1;
  return;
}



void FUN_0040ac8c(int param_1,undefined4 param_2,undefined4 param_3)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uVar1;
  int *piVar2;
  undefined1 *puStack_3c;
  undefined1 *puStack_38;
  undefined1 *puStack_34;
  byte *local_24;
  int local_20;
  undefined1 local_1c;
  undefined4 local_18;
  undefined1 local_14;
  undefined4 local_10;
  undefined1 local_c;
  int local_8;
  
  puStack_34 = &stack0xfffffffc;
  local_24 = (byte *)0x0;
  local_8 = 0;
  puStack_38 = &LAB_0040ad28;
  puStack_3c = (undefined1 *)*in_FS_OFFSET;
  *in_FS_OFFSET = &puStack_3c;
  if (param_1 == 0) {
    FUN_004054e4((undefined4 *)PTR_PTR_004757e4,&local_8);
  }
  else {
    puStack_34 = &stack0xfffffffc;
    FUN_00403c74(&local_8,param_1);
  }
  local_20 = local_8;
  local_1c = 0xb;
  local_14 = 0xb;
  local_c = 0;
  piVar2 = &local_20;
  uVar1 = 2;
  local_18 = param_2;
  local_10 = param_3;
  FUN_004054e4((undefined4 *)PTR_PTR_00475844,(int *)&local_24);
  FUN_0040aa4c((int)PTR_DAT_00407ed0,'\x01',local_24,uVar1,piVar2);
  *in_FS_OFFSET = uVar1;
  puStack_3c = &LAB_0040ad2f;
  FUN_00403bdc((int *)&local_24);
  FUN_00403bdc(&local_8);
  return;
}



void FUN_0040ad38(undefined4 param_1,undefined4 param_2,undefined4 *param_3)

{
  *param_3 = param_2;
  FUN_004036ac(param_1);
  return;
}



undefined4 FUN_0040ad90(int *param_1)

{
  int iVar1;
  undefined3 uVar3;
  int iVar2;
  
  iVar1 = *param_1;
  uVar3 = (undefined3)((uint)iVar1 >> 8);
  if (iVar1 < -0x3fffff6d) {
    iVar2 = iVar1;
    if (iVar1 == -0x3fffff6e) {
LAB_0040adf4:
      return CONCAT31((int3)((uint)iVar2 >> 8),6);
    }
    if (iVar1 < -0x3fffff71) {
      if (iVar1 == -0x3fffff72) {
        return CONCAT31(uVar3,7);
      }
      if (iVar1 == -0x3ffffffb) {
        return 0xb;
      }
      if (iVar1 == -0x3fffff74) {
        return 4;
      }
      iVar2 = iVar1 + 0x3fffff73;
      if (iVar2 == 0) goto LAB_0040adfd;
    }
    else {
      iVar2 = iVar1 + 0x3fffff6f;
      if (iVar1 + 0x3fffff71U < 2) goto LAB_0040adf4;
      if (iVar2 == 0) {
        return 8;
      }
    }
  }
  else if (iVar1 < -0x3fffff69) {
    if (iVar1 == -0x3fffff6a) {
      return CONCAT31(uVar3,0xc);
    }
    iVar2 = iVar1 + 0x3fffff6d;
    if (iVar2 == 0) {
LAB_0040adfd:
      return CONCAT31((int3)((uint)iVar2 >> 8),9);
    }
    if (iVar1 == -0x3fffff6c) {
      return 3;
    }
    iVar2 = iVar1 + 0x3fffff6b;
    if (iVar2 == 0) {
      return 5;
    }
  }
  else {
    if (iVar1 == -0x3fffff03) {
      return 0xe;
    }
    iVar2 = iVar1 + 0x3ffffec6;
    if (iVar2 == 0) {
      return 0xd;
    }
  }
  return CONCAT31((int3)((uint)iVar2 >> 8),0x16);
}



void FUN_0040ae24(void)

{
  int iVar1;
  undefined4 uVar2;
  DWORD DVar3;
  undefined4 *in_FS_OFFSET;
  int in_stack_00000004;
  undefined4 uVar4;
  undefined4 *puVar5;
  undefined1 *puStack_188;
  undefined1 *puStack_184;
  undefined1 *puStack_180;
  byte *local_174;
  undefined4 local_170;
  undefined1 local_16c;
  int local_168;
  undefined1 local_164;
  undefined4 local_160;
  undefined1 local_15c;
  byte *local_158;
  undefined *local_154;
  int local_150;
  undefined4 local_14c;
  undefined1 local_148;
  int local_144;
  undefined1 local_140;
  int local_13c;
  undefined1 local_138;
  undefined4 local_134;
  undefined1 local_130;
  CHAR local_129 [261];
  _MEMORY_BASIC_INFORMATION local_24;
  int local_8;
  
  puStack_180 = &stack0xfffffffc;
  local_174 = (byte *)0x0;
  local_150 = 0;
  local_158 = (byte *)0x0;
  local_154 = (undefined *)0x0;
  local_8 = 0;
  puStack_184 = &LAB_0040afdf;
  puStack_188 = (undefined1 *)*in_FS_OFFSET;
  *in_FS_OFFSET = &puStack_188;
  iVar1 = *(int *)(in_stack_00000004 + -4);
  if (*(int *)(iVar1 + 0x14) == 0) {
    puStack_180 = &stack0xfffffffc;
    FUN_004054e4((undefined4 *)PTR_PTR_00475900,&local_8);
  }
  else {
    FUN_004054e4((undefined4 *)PTR_PTR_004757c4,&local_8);
  }
  uVar2 = *(undefined4 *)(iVar1 + 0x18);
  VirtualQuery(*(LPCVOID *)(iVar1 + 0xc),&local_24,0x1c);
  if (local_24.State == 0x1000) {
    DVar3 = GetModuleFileNameA((HMODULE)local_24.AllocationBase,local_129,0x105);
    if (DVar3 != 0) {
      local_14c = *(undefined4 *)(iVar1 + 0xc);
      local_148 = 5;
      FUN_00403e0c((int *)&local_154,local_129,0x105);
      FUN_00408a00(local_154,&local_150);
      local_144 = local_150;
      local_140 = 0xb;
      local_13c = local_8;
      local_138 = 0xb;
      local_130 = 5;
      puVar5 = &local_14c;
      uVar4 = 3;
      local_134 = uVar2;
      FUN_004054e4((undefined4 *)PTR_PTR_00475820,(int *)&local_158);
      FUN_0040aa4c((int)PTR_DAT_00407d08,'\x01',local_158,uVar4,puVar5);
      goto LAB_0040afae;
    }
  }
  local_170 = *(undefined4 *)(iVar1 + 0xc);
  local_16c = 5;
  local_168 = local_8;
  local_164 = 0xb;
  local_15c = 5;
  puVar5 = &local_170;
  uVar4 = 2;
  local_160 = uVar2;
  FUN_004054e4((undefined4 *)PTR_PTR_00475874,(int *)&local_174);
  FUN_0040aa4c((int)PTR_DAT_00407d08,'\x01',local_174,uVar4,puVar5);
LAB_0040afae:
  *in_FS_OFFSET = uVar4;
  puStack_188 = &LAB_0040afe6;
  FUN_00403bdc((int *)&local_174);
  FUN_00403c00((int *)&local_158,3);
  FUN_00403bdc(&local_8);
  return;
}



void FUN_0040b0cc(void)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  undefined4 *local_c;
  undefined4 *local_8;
  
  puStack_10 = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  local_c = (undefined4 *)0x0;
  puStack_14 = &LAB_0040b18d;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  FUN_004054e4((undefined4 *)PTR_PTR_0047560c,(int *)&local_8);
  DAT_004765fc = FUN_0040aa10((int *)PTR_DAT_0040776c,'\x01',local_8);
  FUN_004054e4((undefined4 *)PTR_PTR_00475790,(int *)&local_c);
  DAT_00476600 = FUN_0040aa10((int *)PTR_DAT_00407bf4,'\x01',local_c);
  *(undefined1 **)PTR_DAT_0047558c = &LAB_0040ac48;
  *(undefined1 **)PTR_DAT_0047568c = &LAB_0040b0bc;
  *(undefined **)PTR_DAT_004755fc = PTR_DAT_00407654;
  *(undefined1 **)PTR_DAT_00475670 = &LAB_0040ae10;
  *(undefined1 **)PTR_DAT_00475694 = &LAB_0040aff0;
  *(undefined1 **)PTR_DAT_004757b8 = &LAB_0040ad48;
  *(undefined1 **)PTR_DAT_00475570 = &LAB_0040ad64;
  *in_FS_OFFSET = uStack_18;
  puStack_10 = &LAB_0040b194;
  puStack_14 = (undefined1 *)0x40b18c;
  FUN_00403c00((int *)&local_c,2);
  return;
}



void FUN_0040b198(void)

{
  *(undefined1 *)(DAT_004765fc + 3) = 1;
  (**(code **)(*DAT_004765fc + -8))();
  DAT_004765fc = (int *)0x0;
  *(undefined1 *)(DAT_00476600 + 3) = 1;
  FUN_00402f54(DAT_00476600);
  DAT_00476600 = (int *)0x0;
  *(undefined4 *)PTR_DAT_0047558c = 0;
  *(undefined4 *)PTR_DAT_0047568c = 0;
  *(undefined4 *)PTR_DAT_004755fc = 0;
  *(undefined4 *)PTR_DAT_00475670 = 0;
  *(undefined4 *)PTR_DAT_00475694 = 0;
  *(undefined4 *)PTR_DAT_004757b8 = 0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0040b204(void)

{
  BOOL BVar1;
  _OSVERSIONINFOA local_94;
  
  local_94.dwOSVersionInfoSize = 0x94;
  BVar1 = GetVersionExA(&local_94);
  if (BVar1 != 0) {
    DAT_004740c4 = local_94.dwPlatformId;
    DAT_004740c8 = local_94.dwMajorVersion;
    DAT_004740cc = local_94.dwMinorVersion;
    _DAT_004740d0 = local_94.dwBuildNumber;
    FUN_00403e0c((int *)&DAT_004740d4,local_94.szCSDVersion,0x80);
  }
  return;
}



undefined4 FUN_0040b25c(byte *param_1,int param_2)

{
  uint uVar1;
  undefined4 uVar2;
  int iVar3;
  
  uVar2 = 0;
  if ((param_1 != (byte *)0x0) && (param_1[param_2] != 0)) {
    if (param_2 == 0) {
      if (((byte)(&DAT_00474108)[(int)(uint)*param_1 >> 3] >> (*param_1 & 7) & 1) != 0) {
        uVar2 = 1;
      }
    }
    else {
      iVar3 = param_2 + -1;
      while ((-1 < iVar3 &&
             (((byte)(&DAT_00474108)[(int)(uint)param_1[iVar3] >> 3] >> (param_1[iVar3] & 7) & 1) !=
              0))) {
        iVar3 = iVar3 + -1;
      }
      uVar1 = param_2 - iVar3 & 0x80000001;
      if ((int)uVar1 < 0) {
        uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;
      }
      if (uVar1 == 0) {
        uVar2 = 2;
      }
      else if (((byte)(&DAT_00474108)[(int)(uint)param_1[param_2] >> 3] >> (param_1[param_2] & 7) &
               1) != 0) {
        uVar2 = 1;
      }
    }
  }
  return uVar2;
}



undefined4 FUN_0040b2d4(undefined *param_1,int param_2)

{
  undefined4 uVar1;
  byte *pbVar2;
  
  uVar1 = 0;
  if (DAT_004765b8 != '\0') {
    pbVar2 = FUN_00404020(param_1);
    uVar1 = FUN_0040b25c(pbVar2,param_2 + -1);
  }
  return uVar1;
}



undefined4 FUN_0040b2f8(byte *param_1,int param_2)

{
  undefined4 uVar1;
  
  uVar1 = 0;
  if (DAT_004765b8 != '\0') {
    uVar1 = FUN_0040b25c(param_1,param_2);
  }
  return uVar1;
}



void FUN_0040b310(int param_1,int param_2)

{
  int iVar1;
  
  iVar1 = FUN_00403e5c(param_1);
  if (iVar1 < param_2) {
    param_2 = FUN_00403e5c(param_1);
  }
  FUN_0040b338(param_1,param_2);
  return;
}



int FUN_0040b338(int param_1,int param_2)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  
  iVar3 = 0;
  if (0 < param_2) {
    iVar1 = FUN_00403e5c(param_1);
    if ((param_2 <= iVar1) && (iVar3 = param_2, DAT_004765b8 != '\0')) {
      iVar1 = 1;
      iVar3 = 0;
      if (0 < param_2) {
        do {
          uVar2 = (uint)*(byte *)(param_1 + -1 + iVar1);
          if (((byte)(&DAT_00474108)[(int)uVar2 >> 3] >> (uVar2 & 7) & 1) != 0) {
            iVar1 = iVar1 + 1;
          }
          iVar1 = iVar1 + 1;
          iVar3 = iVar3 + 1;
        } while (iVar1 <= param_2);
      }
    }
  }
  return iVar3;
}



void FUN_0040b388(int param_1,int param_2,int *param_3,int *param_4)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  int iVar4;
  
  iVar1 = FUN_00403e5c(param_1);
  iVar4 = 1;
  iVar2 = 1;
  while ((iVar2 < iVar1 && (iVar4 < param_2))) {
    iVar4 = iVar4 + 1;
    uVar3 = (uint)*(byte *)(param_1 + -1 + iVar2);
    if (((byte)(&DAT_00474108)[(int)uVar3 >> 3] >> (uVar3 & 7) & 1) != 0) {
      iVar2 = iVar2 + 1;
    }
    iVar2 = iVar2 + 1;
  }
  if (((iVar4 == param_2) && (iVar2 < iVar1)) &&
     (uVar3 = (uint)*(byte *)(param_1 + -1 + iVar2),
     ((byte)(&DAT_00474108)[(int)uVar3 >> 3] >> (uVar3 & 7) & 1) != 0)) {
    iVar2 = iVar2 + 1;
  }
  *param_3 = iVar4;
  *param_4 = iVar2;
  return;
}



int FUN_0040b3fc(int param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int local_10;
  int local_c;
  
  local_10 = 0;
  iVar2 = local_10;
  if ((((0 < param_2) && (iVar1 = FUN_00403e5c(param_1), iVar2 = local_10, param_2 <= iVar1)) &&
      (iVar2 = param_2, 1 < param_2)) && (iVar2 = param_2, DAT_004765b8 != '\0')) {
    FUN_0040b388(param_1,param_2 + -1,&local_c,&local_10);
    if ((local_c < param_2 + -1) || (iVar2 = FUN_00403e5c(param_1), iVar2 <= local_10)) {
      local_10 = 0;
      iVar2 = local_10;
    }
    else {
      iVar2 = local_10 + 1;
    }
  }
  local_10 = iVar2;
  return local_10;
}



int FUN_0040b460(int param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int local_10;
  int local_c;
  
  local_10 = 0;
  iVar1 = local_10;
  if (0 < param_2) {
    iVar1 = FUN_00403e5c(param_1);
    if (iVar1 < param_2) {
      param_2 = FUN_00403e5c(param_1);
    }
    iVar1 = param_2;
    if (DAT_004765b8 != '\0') {
      FUN_0040b388(param_1,param_2,&local_c,&local_10);
      iVar2 = FUN_00403e5c(param_1);
      iVar1 = local_10;
      if (iVar2 < local_10) {
        iVar1 = FUN_00403e5c(param_1);
      }
    }
  }
  local_10 = iVar1;
  return local_10;
}



undefined4 FUN_0040b4c0(undefined *param_1,int param_2)

{
  int iVar1;
  undefined4 uVar2;
  
  if (0 < param_2) {
    iVar1 = FUN_00403e5c((int)param_1);
    if ((param_2 <= iVar1) && (param_1[param_2 + -1] == '\\')) {
      uVar2 = FUN_0040b2d4(param_1,param_2);
      if ((char)uVar2 == '\0') {
        return CONCAT31((int3)((uint)uVar2 >> 8),1);
      }
    }
  }
  return 0;
}



bool FUN_0040b4f4(undefined *param_1,undefined *param_2,int param_3)

{
  int iVar1;
  undefined4 uVar2;
  char *pcVar3;
  bool bVar4;
  
  bVar4 = false;
  if (0 < param_3) {
    iVar1 = FUN_00403e5c((int)param_2);
    if (param_3 <= iVar1) {
      uVar2 = FUN_0040b2d4(param_2,param_3);
      if ((char)uVar2 == '\0') {
        pcVar3 = FUN_00404020(param_1);
        pcVar3 = FUN_00408c68(pcVar3,param_2[param_3 + -1]);
        bVar4 = pcVar3 != (char *)0x0;
      }
    }
  }
  return bVar4;
}



PCNZCH FUN_0040b538(undefined *param_1,undefined *param_2)

{
  char *pcVar1;
  byte *pbVar2;
  PCNZCH pCVar3;
  PCNZCH pCVar4;
  
  pCVar4 = (PCNZCH)0x0;
  pcVar1 = FUN_00404020(param_1);
  pbVar2 = FUN_00404020(param_2);
  pCVar3 = FUN_0040b6f0(pbVar2,pcVar1);
  if (pCVar3 != (PCNZCH)0x0) {
    pCVar4 = pCVar3 + (1 - (int)pbVar2);
  }
  return pCVar4;
}



void FUN_0040b570(undefined *param_1,undefined *param_2)

{
  undefined *puVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  undefined *local_c;
  undefined *local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_8 = (undefined *)0x0;
  local_c = (undefined *)0x0;
  puStack_1c = &LAB_0040b5c9;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  FUN_0040b5d8(param_2,(int *)&local_8);
  puVar1 = local_8;
  FUN_0040b5d8(param_1,(int *)&local_c);
  FUN_004083a8(local_c,puVar1);
  *in_FS_OFFSET = uStack_20;
  puStack_18 = &LAB_0040b5d0;
  puStack_1c = (undefined1 *)0x40b5c8;
  FUN_00403c00((int *)&local_c,2);
  return;
}



int FUN_0040b5d8(undefined *param_1,int *param_2)

{
  char *pcVar1;
  char cVar2;
  uint uVar3;
  int iVar4;
  int iVar5;
  
  if (DAT_004765b8 == '\0') {
    iVar4 = FUN_00408374(param_1,param_2);
  }
  else {
    uVar3 = FUN_00403e5c((int)param_1);
    iVar4 = FUN_00404190(param_2,uVar3);
    iVar5 = 1;
    if (0 < (int)uVar3) {
      do {
        iVar4 = FUN_0040402c(param_2);
        *(undefined *)(iVar4 + -1 + iVar5) = param_1[iVar5 + -1];
        if (((byte)(&DAT_00474108)[(int)(uint)(byte)param_1[iVar5 + -1] >> 3] >>
             ((byte)param_1[iVar5 + -1] & 7) & 1) == 0) {
          cVar2 = *(char *)(*param_2 + -1 + iVar5);
          iVar4 = CONCAT31((int3)((uint)*param_2 >> 8),cVar2 + -0x5b);
          if ((byte)(cVar2 + 0xbfU) < 0x1a) {
            iVar4 = FUN_0040402c(param_2);
            pcVar1 = (char *)(iVar4 + -1 + iVar5);
            *pcVar1 = *pcVar1 + ' ';
          }
        }
        else {
          iVar4 = FUN_0040402c(param_2);
          *(undefined *)(iVar4 + -1 + iVar5 + 1) = param_1[iVar5];
          iVar5 = iVar5 + 1;
        }
        iVar5 = iVar5 + 1;
      } while (iVar5 <= (int)uVar3);
    }
  }
  return iVar4;
}



int FUN_0040b664(undefined *param_1,int *param_2)

{
  char *pcVar1;
  char cVar2;
  uint uVar3;
  int iVar4;
  int iVar5;
  
  if (DAT_004765b8 == '\0') {
    iVar4 = FUN_00408340(param_1,param_2);
  }
  else {
    uVar3 = FUN_00403e5c((int)param_1);
    iVar4 = FUN_00404190(param_2,uVar3);
    iVar5 = 1;
    if (0 < (int)uVar3) {
      do {
        iVar4 = FUN_0040402c(param_2);
        *(undefined *)(iVar4 + -1 + iVar5) = param_1[iVar5 + -1];
        if (((byte)(&DAT_00474108)[(int)(uint)(byte)param_1[iVar5 + -1] >> 3] >>
             ((byte)param_1[iVar5 + -1] & 7) & 1) == 0) {
          cVar2 = *(char *)(*param_2 + -1 + iVar5);
          iVar4 = CONCAT31((int3)((uint)*param_2 >> 8),cVar2 + -0x7b);
          if ((byte)(cVar2 + 0x9fU) < 0x1a) {
            iVar4 = FUN_0040402c(param_2);
            pcVar1 = (char *)(iVar4 + -1 + iVar5);
            *pcVar1 = *pcVar1 + -0x20;
          }
        }
        else {
          iVar4 = FUN_0040402c(param_2);
          *(undefined *)(iVar4 + -1 + iVar5 + 1) = param_1[iVar5];
          iVar5 = iVar5 + 1;
        }
        iVar5 = iVar5 + 1;
      } while (iVar5 <= (int)uVar3);
    }
  }
  return iVar4;
}



PCNZCH FUN_0040b6f0(byte *param_1,char *param_2)

{
  int iVar1;
  uint cchCount1;
  char *lpString1;
  undefined4 uVar2;
  int iVar3;
  
  if ((((param_1 != (byte *)0x0) && (*param_1 != 0)) && (param_2 != (char *)0x0)) &&
     (*param_2 != '\0')) {
    iVar1 = FUN_00408af4((char *)param_1);
    cchCount1 = FUN_00408af4(param_2);
    for (lpString1 = FUN_00408c88((char *)param_1,param_2);
        (lpString1 != (PCNZCH)0x0 && (cchCount1 <= (uint)(iVar1 - ((int)lpString1 - (int)param_1))))
        ; lpString1 = FUN_00408c88(lpString1 + 1,param_2)) {
      uVar2 = FUN_0040b2f8(param_1,(int)lpString1 - (int)param_1);
      if (((char)uVar2 != '\x02') &&
         (iVar3 = CompareStringA(0x400,0,lpString1,cchCount1,param_2,cchCount1), iVar3 == 2)) {
        return lpString1;
      }
      if ((char)uVar2 == '\x01') {
        lpString1 = lpString1 + 1;
      }
    }
  }
  return (PCNZCH)0x0;
}



char * FUN_0040b790(byte *param_1,char param_2)

{
  char *pcVar1;
  char *pcVar2;
  char *pcVar3;
  
  pcVar2 = FUN_0040b7b8(param_1,param_2);
  pcVar3 = pcVar2;
  if (param_2 != '\0') {
    while (pcVar1 = pcVar3, pcVar1 != (char *)0x0) {
      pcVar3 = FUN_0040b7b8((byte *)(pcVar1 + 1),param_2);
      pcVar2 = pcVar1;
    }
  }
  return pcVar2;
}



char * FUN_0040b7b8(byte *param_1,char param_2)

{
  char *pcVar1;
  undefined4 uVar2;
  
  pcVar1 = FUN_00408c68((char *)param_1,param_2);
  while( true ) {
    if (pcVar1 == (char *)0x0) {
      return (char *)0x0;
    }
    uVar2 = FUN_0040b2f8(param_1,(int)pcVar1 - (int)param_1);
    if ((char)uVar2 == '\0') break;
    if ((char)uVar2 == '\x01') {
      pcVar1 = pcVar1 + 1;
    }
    pcVar1 = FUN_00408c68(pcVar1 + 1,param_2);
  }
  return pcVar1;
}



void FUN_0040b7f8(void)

{
  LCID LVar1;
  int iVar2;
  char cVar3;
  byte local_28;
  _cpinfo local_24;
  
  DAT_004765b0 = 0x409;
  DAT_004765b4 = 9;
  DAT_004765b6 = 1;
  LVar1 = GetThreadLocale();
  if (LVar1 != 0) {
    DAT_004765b0 = LVar1;
  }
  if ((ushort)LVar1 != 0) {
    DAT_004765b4 = (ushort)LVar1 & 0x3ff;
    DAT_004765b6 = (undefined2)((LVar1 & 0xffff) >> 10);
  }
  iVar2 = GetSystemMetrics(0x4a);
  DAT_004765b9 = iVar2 != 0;
  iVar2 = GetSystemMetrics(0x2a);
  DAT_004765b8 = iVar2 != 0;
  if ((bool)DAT_004765b8) {
    GetCPInfo(0,&local_24);
    for (iVar2 = 0;
        (iVar2 < 0xc && (local_24.LeadByte[iVar2] != '\0' || local_24.LeadByte[iVar2 + 1] != '\0'));
        iVar2 = iVar2 + 2) {
      local_28 = local_24.LeadByte[iVar2];
      if (local_28 <= local_24.LeadByte[iVar2 + 1]) {
        cVar3 = (local_24.LeadByte[iVar2 + 1] - local_28) + '\x01';
        do {
          (&DAT_00474108)[(int)(uint)local_28 >> 3] =
               (&DAT_00474108)[(int)(uint)local_28 >> 3] | '\x01' << (local_28 & 7);
          local_28 = local_28 + 1;
          cVar3 = cVar3 + -1;
        } while (cVar3 != '\0');
      }
    }
  }
  return;
}



void FUN_0040b8b0(void)

{
  LCID LVar1;
  undefined4 uVar2;
  uint uVar3;
  int iVar4;
  int extraout_ECX;
  int extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  int extraout_ECX_03;
  undefined4 extraout_ECX_04;
  undefined4 extraout_ECX_05;
  int extraout_ECX_06;
  int extraout_ECX_07;
  int extraout_ECX_08;
  undefined4 extraout_ECX_09;
  byte *unaff_EBX;
  undefined4 *in_FS_OFFSET;
  byte *local_44;
  byte *local_40;
  byte *local_3c;
  char *local_38;
  undefined4 *local_34;
  undefined4 *local_30;
  undefined4 *local_2c;
  undefined4 *local_28;
  undefined4 *local_24;
  byte *pbVar5;
  byte *local_1c;
  byte *local_18;
  undefined4 *local_14;
  undefined4 *local_c;
  undefined4 *local_8;
  
  local_14 = (undefined4 *)&stack0xfffffffc;
  iVar4 = 8;
  do {
    local_8 = (undefined4 *)0x0;
    iVar4 = iVar4 + -1;
  } while (iVar4 != 0);
  local_18 = &LAB_0040bb7b;
  local_1c = (byte *)*in_FS_OFFSET;
  *in_FS_OFFSET = &local_1c;
  FUN_0040b7f8();
  FUN_0040a32c();
  if (DAT_004765b8 != '\0') {
    FUN_0040a504();
  }
  LVar1 = GetThreadLocale();
  local_24 = (undefined4 *)0x40b8ff;
  FUN_0040a27c(LVar1,0x14,(undefined4 *)0x0,(int *)&local_14);
  FUN_00403c30((int *)&DAT_004764f0,local_14);
  local_24 = (undefined4 *)0x40b921;
  FUN_0040a27c(LVar1,0x1b,(undefined4 *)&DAT_0040bb90,(int *)&local_18);
  uVar2 = FUN_00408544(local_18,0,extraout_ECX);
  DAT_004764f4 = (undefined1)uVar2;
  local_24 = (undefined4 *)0x40b945;
  FUN_0040a27c(LVar1,0x1c,(undefined4 *)&DAT_0040bb90,(int *)&local_1c);
  uVar2 = FUN_00408544(local_1c,0,extraout_ECX_00);
  DAT_004764f5 = (undefined1)uVar2;
  uVar3 = FUN_0040a2c8(LVar1,0xf,CONCAT31((int3)((uint)extraout_ECX_01 >> 8),0x2c));
  DAT_004764f6 = (undefined1)uVar3;
  uVar3 = FUN_0040a2c8(LVar1,0xe,CONCAT31((int3)((uint)extraout_ECX_02 >> 8),0x2e));
  DAT_004764f7 = (undefined1)uVar3;
  pbVar5 = &stack0xffffffe0;
  local_24 = (undefined4 *)0x40b98f;
  FUN_0040a27c(LVar1,0x19,(undefined4 *)&DAT_0040bb90,(int *)pbVar5);
  uVar2 = FUN_00408544(pbVar5,0,extraout_ECX_03);
  DAT_004764f8 = (undefined1)uVar2;
  uVar3 = FUN_0040a2c8(LVar1,0x1d,CONCAT31((int3)((uint)extraout_ECX_04 >> 8),0x2f));
  DAT_004764f9 = (undefined1)uVar3;
  local_24 = (undefined4 *)0x40b9c6;
  FUN_0040a27c(LVar1,0x1f,(undefined4 *)s_m_d_yy_0040bb9c,(int *)&local_28);
  FUN_0040a5b4(local_28,(int *)&local_24);
  FUN_00403c30(&DAT_004764fc,local_24);
  local_24 = (undefined4 *)0x40b9f3;
  FUN_0040a27c(LVar1,0x20,(undefined4 *)s_mmmm_d__yyyy_0040bbac,(int *)&local_30);
  FUN_0040a5b4(local_30,(int *)&local_2c);
  FUN_00403c30(&DAT_00476500,local_2c);
  uVar3 = FUN_0040a2c8(LVar1,0x1e,CONCAT31((int3)((uint)extraout_ECX_05 >> 8),0x3a));
  DAT_00476504 = (undefined1)uVar3;
  local_24 = (undefined4 *)0x40ba33;
  FUN_0040a27c(LVar1,0x28,(undefined4 *)&DAT_0040bbc4,(int *)&local_34);
  FUN_00403c30(&DAT_00476508,local_34);
  local_24 = (undefined4 *)0x40ba55;
  FUN_0040a27c(LVar1,0x29,(undefined4 *)&DAT_0040bbd0,(int *)&local_38);
  FUN_00403c30(&DAT_0047650c,(undefined4 *)local_38);
  FUN_00403bdc((int *)&local_c);
  FUN_00403bdc((int *)&stack0xfffffff0);
  local_24 = (undefined4 *)0x40ba87;
  FUN_0040a27c(LVar1,0x25,(undefined4 *)&DAT_0040bb90,(int *)&local_3c);
  iVar4 = FUN_00408544(local_3c,0,extraout_ECX_06);
  if (iVar4 == 0) {
    FUN_00403c74((int *)&local_8,0x40bbdc);
  }
  else {
    FUN_00403c74((int *)&local_8,0x40bbe8);
  }
  local_24 = (undefined4 *)0x40bac6;
  FUN_0040a27c(LVar1,0x23,(undefined4 *)&DAT_0040bb90,(int *)&local_40);
  iVar4 = FUN_00408544(local_40,0,extraout_ECX_07);
  if (iVar4 == 0) {
    local_24 = (undefined4 *)0x40bae9;
    FUN_0040a27c(LVar1,0x1005,(undefined4 *)&DAT_0040bb90,(int *)&local_44);
    iVar4 = FUN_00408544(local_44,0,extraout_ECX_08);
    if (iVar4 == 0) {
      FUN_00403c74((int *)&stack0xfffffff0,0x40bbf4);
    }
    else {
      FUN_00403c74((int *)&local_c,0x40bc04);
    }
  }
  local_24 = local_8;
  local_28 = (undefined4 *)&DAT_0040bc14;
  local_30 = (undefined4 *)0x40bb30;
  FUN_00403f1c(&DAT_00476510,4);
  local_30 = local_c;
  local_34 = local_8;
  local_38 = s__mm_ss_0040bc20;
  local_40 = (byte *)0x40bb4d;
  local_3c = unaff_EBX;
  FUN_00403f1c(&DAT_00476514,4);
  local_40 = (byte *)0x40bb5b;
  uVar3 = FUN_0040a2c8(LVar1,0xc,CONCAT31((int3)((uint)extraout_ECX_09 >> 8),0x2c));
  DAT_004765f4 = (undefined1)uVar3;
  *in_FS_OFFSET = local_3c;
  local_34 = (undefined4 *)&LAB_0040bb82;
  local_38 = (char *)0x40bb7a;
  FUN_00403c00((int *)&local_44,0x10);
  return;
}



void FUN_0040bc28(void)

{
  DWORD DVar1;
  int *piVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  undefined1 *local_18;
  DWORD local_14;
  undefined1 local_10;
  undefined1 *local_c;
  undefined1 local_8;
  
  puStack_20 = &stack0xfffffffc;
  local_18 = (undefined1 *)0x0;
  puStack_24 = &LAB_0040bcb2;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  DVar1 = GetLastError();
  if (DVar1 == 0) {
    piVar2 = FUN_0040aacc((int *)PTR_DAT_00407fe8,'\x01',(undefined4 *)PTR_PTR_00475664);
  }
  else {
    local_10 = 0;
    local_14 = DVar1;
    FUN_0040a230(DVar1,(int *)&local_18);
    local_c = local_18;
    local_8 = 0xb;
    piVar2 = (int *)FUN_0040ab08((int)PTR_DAT_00407fe8,'\x01',(undefined4 *)PTR_PTR_004755a4,1,
                                 &local_14);
  }
  piVar2[3] = DVar1;
  FUN_004036ac(piVar2);
  *in_FS_OFFSET = puStack_20;
  local_18 = &LAB_0040bcb9;
  FUN_00403bdc((int *)&local_18);
  return;
}



int FUN_0040bcc0(int param_1)

{
  if (param_1 == 0) {
    FUN_0040bc28();
  }
  return param_1;
}



void FUN_0040bcd0(void)

{
  char cVar1;
  undefined4 *puVar2;
  
  cVar1 = '\x01';
  for (puVar2 = DAT_004742e8; (cVar1 != '\0' && (puVar2 != (undefined4 *)0x0));
      puVar2 = (undefined4 *)*puVar2) {
    cVar1 = (*(code *)puVar2[1])();
  }
  return;
}



void FUN_0040bcec(void)

{
  undefined4 *puVar1;
  
  while (puVar1 = DAT_004742e8, DAT_004742e8 != (undefined4 *)0x0) {
    DAT_004742e8 = (undefined4 *)*DAT_004742e8;
    FUN_0040270c((int)puVar1);
  }
  return;
}



void FUN_0040bd0c(void)

{
  HMODULE hModule;
  
  hModule = GetModuleHandleA(s_kernel32_dll_0040bd44);
  if (hModule != (HMODULE)0x0) {
    DAT_0047412c = GetProcAddress(hModule,s_GetDiskFreeSpaceExA_0040bd54);
  }
  if (DAT_0047412c == (FARPROC)0x0) {
    DAT_0047412c = (FARPROC)&LAB_00408a80;
  }
  return;
}



int * FUN_0040bd68(int *param_1,char param_2,undefined4 param_3)

{
  HANDLE pvVar1;
  undefined4 extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00402f24(param_1,'\0',param_3);
  InitializeCriticalSection((LPCRITICAL_SECTION)(param_1 + 1));
  pvVar1 = CreateEventA((LPSECURITY_ATTRIBUTES)0x0,-1,-1,(LPCSTR)0x0);
  param_1[7] = (int)pvVar1;
  FUN_00404efc(param_1 + 10,(int)PTR_DAT_004080ac,1);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



bool FUN_0040be10(int param_1)

{
  int iVar1;
  bool bVar2;
  int iVar3;
  int iVar4;
  
  bVar2 = false;
  if (*(int *)(param_1 + 0x2c) != 0) {
    iVar3 = FUN_00404d48(*(int *)(param_1 + 0x28));
    for (iVar4 = 0;
        (iVar4 < iVar3 &&
        ((iVar1 = *(int *)(*(int *)(param_1 + 0x28) + iVar4 * 8), iVar1 == 0 ||
         (iVar1 == *(int *)(param_1 + 0x2c))))); iVar4 = iVar4 + 1) {
    }
    bVar2 = iVar3 <= iVar4;
  }
  return bVar2;
}



void FUN_0040be4c(int param_1)

{
  bool bVar1;
  DWORD DVar2;
  
  EnterCriticalSection((LPCRITICAL_SECTION)(param_1 + 4));
  if (*(char *)(param_1 + 0x34) == '\0') {
    DVar2 = GetCurrentThreadId();
    *(DWORD *)(param_1 + 0x2c) = DVar2;
    bVar1 = FUN_0040be10(param_1);
    if (!bVar1) {
      WaitForSingleObject(*(HANDLE *)(param_1 + 0x1c),0xffffffff);
    }
    *(undefined4 *)(param_1 + 0x24) = *(undefined4 *)(param_1 + 0x20);
    *(undefined4 *)(param_1 + 0x20) = 0;
    *(undefined4 *)(param_1 + 0x2c) = 0;
    *(undefined1 *)(param_1 + 0x34) = 1;
  }
  *(int *)(param_1 + 0x20) = *(int *)(param_1 + 0x20) + 1;
  return;
}



void FUN_0040be98(int param_1)

{
  *(int *)(param_1 + 0x20) = *(int *)(param_1 + 0x20) + -1;
  if (*(int *)(param_1 + 0x20) == 0) {
    *(undefined4 *)(param_1 + 0x20) = *(undefined4 *)(param_1 + 0x24);
    *(undefined4 *)(param_1 + 0x24) = 0;
    *(undefined1 *)(param_1 + 0x34) = 0;
  }
  LeaveCriticalSection((LPCRITICAL_SECTION)(param_1 + 4));
  return;
}



void FUN_0040bebc(undefined4 *param_1)

{
  int *piVar1;
  
  piVar1 = (int *)*param_1;
  *param_1 = 0;
  FUN_00402f54(piVar1);
  return;
}



void FUN_0040becc(undefined *param_1,UINT param_2)

{
  LPCSTR lpLibFileName;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_2c;
  undefined1 *puStack_28;
  undefined1 *puStack_24;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  
  puStack_1c = (undefined1 *)0x40bedb;
  SetErrorMode(param_2);
  puStack_1c = &LAB_0040bf3e;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  puStack_28 = &LAB_0040bf20;
  uStack_2c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_2c;
  puStack_24 = &stack0xfffffffc;
  lpLibFileName = FUN_00404020(param_1);
  LoadLibraryA(lpLibFileName);
  *in_FS_OFFSET = uStack_2c;
  return;
}



int FUN_0040c242(undefined1 *param_1,undefined4 param_2,char param_3,undefined4 param_4,int param_5,
                byte param_6)

{
  int iVar1;
  int extraout_ECX;
  uint uVar2;
  undefined *puVar3;
  undefined1 *puVar4;
  byte bVar5;
  ushort local_20 [12];
  undefined1 *local_8;
  
  bVar5 = 0;
  iVar1 = 0x13;
  if (param_3 == '\0') {
    iVar1 = param_5;
    if (param_5 < 2) {
      iVar1 = 2;
    }
    if (0x12 < iVar1) {
      iVar1 = 0x12;
    }
  }
  local_8 = param_1;
  FUN_0040c7e5(local_20,param_2,param_3);
  puVar4 = local_8;
  if (local_20[0] - 0x7fff < 2) {
    FUN_0040c300();
    puVar3 = &DAT_0040c23c + extraout_ECX * 3;
    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {
      *puVar4 = *puVar3;
      puVar3 = puVar3 + (uint)bVar5 * -2 + 1;
      puVar4 = puVar4 + (uint)bVar5 * -2 + 1;
    }
  }
  else {
    uVar2 = (uint)param_6;
    if ((param_6 != 1) && ((4 < param_6 || (iVar1 < (short)local_20[0])))) {
      uVar2 = 0;
    }
    (**(code **)(&DAT_0040c2e3 + uVar2 * 4))();
  }
  return (int)puVar4 - (int)local_8;
}



void FUN_0040c300(void)

{
  int unaff_EBP;
  undefined1 *unaff_EDI;
  
  if (*(char *)(unaff_EBP + -0x1a) != '\0') {
    *unaff_EDI = 0x2d;
  }
  return;
}



uint FUN_0040c3a0(undefined4 param_1,uint param_2,int param_3)

{
  char cVar2;
  uint uVar1;
  char unaff_BL;
  uint *puVar3;
  undefined1 *unaff_EDI;
  char *pcVar4;
  uint local_4;
  
  *unaff_EDI = (char)param_1;
  if (unaff_BL == '\0') {
    param_2 = 0;
LAB_0040c3b3:
    cVar2 = (char)((uint)param_1 >> 8);
    pcVar4 = unaff_EDI + 1;
    if (cVar2 == '\0') goto LAB_0040c3ba;
  }
  else {
    if (-1 < (int)param_2) goto LAB_0040c3b3;
    cVar2 = '-';
    param_2 = -param_2;
  }
  pcVar4 = unaff_EDI + 2;
  unaff_EDI[1] = cVar2;
LAB_0040c3ba:
  puVar3 = &local_4;
  local_4 = param_2;
  do {
    do {
      uVar1 = param_2 / DAT_0040c220;
      *(char *)puVar3 = (char)(param_2 % DAT_0040c220) + '0';
      puVar3 = (uint *)((int)puVar3 + 1);
      param_3 = param_3 + -1;
      param_2 = uVar1;
    } while (uVar1 != 0);
  } while (0 < param_3);
  do {
    puVar3 = (uint *)((int)puVar3 + -1);
    *pcVar4 = *(char *)puVar3;
    pcVar4 = pcVar4 + 1;
  } while (puVar3 != &local_4);
  return local_4;
}



void FUN_0040c5de(undefined4 param_1,undefined4 param_2,int param_3)

{
  char cVar1;
  char cVar2;
  int unaff_EBP;
  char *pcVar3;
  char *pcVar4;
  
  pcVar3 = *(char **)(unaff_EBP + 8);
  if (param_3 != 0) {
    do {
      while( true ) {
        pcVar4 = pcVar3 + 1;
        cVar1 = *pcVar3;
        if ((cVar1 != '\'') && (cVar1 != '\"')) break;
        while( true ) {
          pcVar3 = pcVar4 + 1;
          cVar2 = *pcVar4;
          if (cVar2 == cVar1) break;
          pcVar4 = pcVar3;
          if (cVar2 == '\0') {
            return;
          }
        }
      }
    } while ((cVar1 != '\0') &&
            ((pcVar3 = pcVar4, cVar1 != ';' || (param_3 = param_3 + -1, param_3 != 0))));
  }
  return;
}



void FUN_0040c619(void)

{
  char cVar1;
  char cVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int unaff_EBP;
  char *unaff_ESI;
  char *pcVar6;
  
  *(char **)(unaff_EBP + -0x10) = unaff_ESI;
  iVar5 = 0x7fff;
  iVar4 = 0;
  *(undefined4 *)(unaff_EBP + -0x18) = 0xffffffff;
  *(undefined1 *)(unaff_EBP + -8) = 0;
  *(undefined1 *)(unaff_EBP + -0xc) = 0;
  iVar3 = 0;
LAB_0040c633:
  do {
    cVar2 = *unaff_ESI;
    unaff_ESI = unaff_ESI + 1;
    while (cVar2 != '#') {
      if (cVar2 == '0') {
        if (iVar3 < iVar5) {
          iVar5 = iVar3;
        }
        iVar4 = iVar3 + 1;
        iVar3 = iVar4;
        goto LAB_0040c633;
      }
      if (cVar2 == '.') {
        if (*(int *)(unaff_EBP + -0x18) == -1) {
          *(int *)(unaff_EBP + -0x18) = iVar3;
        }
        goto LAB_0040c633;
      }
      if (cVar2 == ',') {
        *(undefined1 *)(unaff_EBP + -8) = 1;
        goto LAB_0040c633;
      }
      pcVar6 = unaff_ESI;
      if ((cVar2 == '\'') || (cVar2 == '\"')) goto LAB_0040c67f;
      if ((cVar2 != 'E') && (cVar2 != 'e')) {
        if ((cVar2 == ';') || (cVar2 == '\0')) goto LAB_0040c69e;
        goto LAB_0040c633;
      }
      pcVar6 = unaff_ESI + 1;
      cVar2 = *unaff_ESI;
      if ((cVar2 == '-') || (unaff_ESI = pcVar6, cVar2 == '+')) {
        *(undefined1 *)(unaff_EBP + -0xc) = 1;
        do {
          unaff_ESI = pcVar6 + 1;
          cVar2 = *pcVar6;
          pcVar6 = unaff_ESI;
        } while (cVar2 == '0');
      }
    }
    iVar3 = iVar3 + 1;
  } while( true );
LAB_0040c67f:
  unaff_ESI = pcVar6 + 1;
  cVar1 = *pcVar6;
  if (cVar1 == cVar2) goto LAB_0040c633;
  pcVar6 = unaff_ESI;
  if (cVar1 == '\0') {
LAB_0040c69e:
    *(int *)(unaff_EBP + -0x14) = iVar3;
    if (*(int *)(unaff_EBP + -0x18) == -1) {
      *(int *)(unaff_EBP + -0x18) = iVar3;
    }
    iVar3 = *(int *)(unaff_EBP + -0x18) - iVar4;
    if (iVar3 != 0 && iVar4 <= *(int *)(unaff_EBP + -0x18)) {
      iVar3 = 0;
    }
    *(int *)(unaff_EBP + -0x20) = iVar3;
    iVar3 = *(int *)(unaff_EBP + -0x18) - iVar5;
    if (*(int *)(unaff_EBP + -0x18) < iVar5) {
      iVar3 = 0;
    }
    *(int *)(unaff_EBP + -0x1c) = iVar3;
    return;
  }
  goto LAB_0040c67f;
}



int FUN_0040c6c4(void)

{
  byte bVar1;
  byte bVar2;
  undefined3 uVar4;
  undefined2 uVar5;
  uint uVar3;
  uint uVar6;
  int iVar7;
  int unaff_EBP;
  byte *pbVar8;
  byte *pbVar10;
  byte bVar11;
  byte *pbVar9;
  
  bVar11 = 0;
  if (*(char *)(unaff_EBP + -0xc) == '\0') {
    uVar3 = (uint)*(short *)(unaff_EBP + -0x40);
    if ((int)uVar3 <= *(int *)(unaff_EBP + -0x18)) {
      uVar3 = *(uint *)(unaff_EBP + -0x18);
    }
    iVar7 = (int)*(short *)(unaff_EBP + -0x40) - *(int *)(unaff_EBP + -0x18);
  }
  else {
    uVar3 = *(uint *)(unaff_EBP + -0x18);
    iVar7 = 0;
  }
  *(uint *)(unaff_EBP + -0x24) = uVar3;
  *(int *)(unaff_EBP + -0x28) = iVar7;
  pbVar9 = *(byte **)(unaff_EBP + -0x10);
  pbVar10 = *(byte **)(unaff_EBP + -4);
  if ((*(char *)(unaff_EBP + -0x3e) != '\0') && (pbVar9 == *(byte **)(unaff_EBP + 8))) {
    *pbVar10 = 0x2d;
    uVar3 = CONCAT31((int3)(uVar3 >> 8),0x2d);
    pbVar10 = pbVar10 + 1;
  }
LAB_0040c701:
  do {
    while( true ) {
      do {
        while( true ) {
          uVar6 = uVar3;
          pbVar8 = pbVar9 + (uint)bVar11 * -2 + 1;
          bVar1 = *pbVar9;
          uVar4 = (undefined3)(uVar6 >> 8);
          uVar3 = CONCAT31(uVar4,bVar1);
          pbVar9 = pbVar8;
          if ((bVar1 != 0x23) && (bVar1 != 0x30)) break;
          uVar3 = FUN_0040c77f();
        }
      } while ((bVar1 == 0x2e) || (bVar1 == 0x2c));
      uVar5 = (undefined2)(uVar6 >> 0x10);
      if ((bVar1 != 0x27) && (bVar1 != 0x22)) break;
      while( true ) {
        bVar2 = *pbVar8;
        uVar3 = CONCAT31(CONCAT21(uVar5,bVar1),bVar2);
        pbVar9 = pbVar8 + (uint)bVar11 * -2 + 1;
        if (bVar2 == bVar1) break;
        if (bVar2 == 0) goto LAB_0040c779;
        *pbVar10 = bVar2;
        pbVar8 = pbVar8 + (uint)bVar11 * -2 + 1;
        pbVar10 = pbVar10 + (uint)bVar11 * -2 + 1;
      }
    }
    if ((bVar1 == 0x45) || (bVar1 == 0x65)) {
      bVar2 = *pbVar8;
      uVar3 = CONCAT22(uVar5,CONCAT11(bVar2,bVar1));
      if (bVar2 == 0x2b) break;
      if (bVar2 == 0x2d) {
        uVar3 = CONCAT22(uVar5,(ushort)bVar1);
        break;
      }
    }
    else if ((bVar1 == 0x3b) || (uVar3 = CONCAT31(uVar4,bVar1), bVar1 == 0)) {
LAB_0040c779:
      return (int)pbVar10 - *(int *)(unaff_EBP + -4);
    }
    *pbVar10 = (byte)uVar3;
    pbVar10 = pbVar10 + (uint)bVar11 * -2 + 1;
  } while( true );
  uVar6 = 0xffffffff;
  do {
    uVar6 = uVar6 + 1;
    pbVar8 = pbVar8 + 1;
  } while (*pbVar8 == 0x30);
  if (3 < uVar6) {
    uVar6 = 4;
  }
  uVar3 = FUN_0040c3a0(uVar3,(int)*(short *)(unaff_EBP + -0x40) - *(int *)(unaff_EBP + -0x18),uVar6)
  ;
  pbVar9 = pbVar8;
  goto LAB_0040c701;
}



void FUN_0040c77f(void)

{
  int *piVar1;
  char cVar2;
  char *unaff_EBX;
  int unaff_EBP;
  char *unaff_EDI;
  
  if (*(int *)(unaff_EBP + -0x28) == 0) {
    cVar2 = *unaff_EBX;
    if (cVar2 == '\0') {
      if (*(int *)(unaff_EBP + -0x24) <= *(int *)(unaff_EBP + -0x20)) goto LAB_0040c7e1;
      goto LAB_0040c7b0;
    }
  }
  else {
    if (-1 < *(int *)(unaff_EBP + -0x28)) {
      do {
        FUN_0040c7a0();
        piVar1 = (int *)(unaff_EBP + -0x28);
        *piVar1 = *piVar1 + -1;
      } while (*piVar1 != 0);
      FUN_0040c7a0();
      return;
    }
    *(int *)(unaff_EBP + -0x28) = *(int *)(unaff_EBP + -0x28) + 1;
    if (*(int *)(unaff_EBP + -0x1c) < *(int *)(unaff_EBP + -0x24)) goto LAB_0040c7e1;
LAB_0040c7b0:
    cVar2 = '0';
  }
  if (*(int *)(unaff_EBP + -0x24) == 0) {
    *(ushort *)unaff_EDI = CONCAT11(cVar2,DAT_004764f7);
  }
  else {
    *unaff_EDI = cVar2;
    if (((*(char *)(unaff_EBP + -8) != '\0') && (1 < *(int *)(unaff_EBP + -0x24))) &&
       ((char)((ushort)*(int *)(unaff_EBP + -0x24) % 3) == '\x01')) {
      unaff_EDI[1] = DAT_004764f6;
    }
  }
LAB_0040c7e1:
  *(int *)(unaff_EBP + -0x24) = *(int *)(unaff_EBP + -0x24) + -1;
  return;
}



void FUN_0040c7a0(void)

{
  char cVar1;
  char *unaff_EBX;
  int unaff_EBP;
  char *unaff_EDI;
  
  cVar1 = *unaff_EBX;
  if (cVar1 == '\0') {
    if (*(int *)(unaff_EBP + -0x24) <= *(int *)(unaff_EBP + -0x20)) goto LAB_0040c7e1;
    cVar1 = '0';
  }
  if (*(int *)(unaff_EBP + -0x24) == 0) {
    *(ushort *)unaff_EDI = CONCAT11(cVar1,DAT_004764f7);
  }
  else {
    *unaff_EDI = cVar1;
    if (((*(char *)(unaff_EBP + -8) != '\0') && (1 < *(int *)(unaff_EBP + -0x24))) &&
       ((char)((ushort)*(int *)(unaff_EBP + -0x24) % 3) == '\x01')) {
      unaff_EDI[1] = DAT_004764f6;
    }
  }
LAB_0040c7e1:
  *(int *)(unaff_EBP + -0x24) = *(int *)(unaff_EBP + -0x24) + -1;
  return;
}



void FUN_0040c7e5(undefined4 param_1,undefined4 param_2,char param_3)

{
  if (param_3 == '\0') {
    FUN_0040c80c();
  }
  else {
    FUN_0040c913();
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0040c80c(void)

{
  char *pcVar1;
  unkbyte10 Var2;
  byte bVar3;
  undefined2 uVar4;
  uint uVar5;
  ushort uVar6;
  int iVar7;
  undefined2 *unaff_EBX;
  int unaff_EBP;
  float10 *unaff_ESI;
  short *psVar8;
  short *psVar9;
  byte bVar10;
  float10 fVar11;
  
  bVar10 = 0;
  uVar6 = *(ushort *)((int)unaff_ESI + 8);
  uVar5 = uVar6 & 0x7fff;
  if ((uVar6 & 0x7fff) == 0) {
LAB_0040c837:
    uVar6 = 0;
  }
  else {
    if (uVar5 != 0x7fff) {
      fVar11 = *unaff_ESI;
      *(int *)(unaff_EBP + -8) = ((int)((uVar5 - 0x3fff) * 0x4d10) >> 0x10) + 1;
      fVar11 = ABS(fVar11);
      FUN_00405f3c(0x12 - *(int *)(unaff_EBP + -8));
      fVar11 = ROUND(fVar11);
      *(ushort *)(unaff_EBP + -4) =
           (ushort)(_DAT_0040c230 < fVar11) << 8 | (ushort)(NAN(_DAT_0040c230) || NAN(fVar11)) << 10
           | (ushort)(_DAT_0040c230 == fVar11) << 0xe;
      if ((*(ushort *)(unaff_EBP + -4) & 0x4100) != 0) {
        fVar11 = fVar11 / (float10)DAT_0040c220;
        *(int *)(unaff_EBP + -8) = *(int *)(unaff_EBP + -8) + 1;
      }
      Var2 = to_bcd(fVar11);
      *(unkbyte10 *)(unaff_EBP + -0x1a) = Var2;
      iVar7 = 9;
      psVar8 = (short *)((int)unaff_EBX + 3);
      do {
        bVar3 = *(byte *)(unaff_EBP + -0x1b + iVar7);
        psVar9 = psVar8 + (uint)bVar10 * -2 + 1;
        *psVar8 = (CONCAT11(bVar3,bVar3 >> 4) & 0xfff) + 0x3030;
        iVar7 = iVar7 + -1;
        psVar8 = psVar9;
      } while (iVar7 != 0);
      *(undefined1 *)psVar9 = 0;
      uVar5 = *(int *)(unaff_EBP + -8) + *(int *)(unaff_EBP + 8);
      if ((int)uVar5 < 0) {
        uVar5 = 0;
        goto LAB_0040c837;
      }
      if (*(uint *)(unaff_EBP + 0xc) <= uVar5) {
        uVar5 = *(uint *)(unaff_EBP + 0xc);
      }
      if (uVar5 < 0x12) {
        if (*(byte *)((int)unaff_EBX + uVar5 + 3) < 0x35) goto LAB_0040c8ee;
        do {
          *(undefined1 *)((int)unaff_EBX + uVar5 + 3) = 0;
          if ((int)(uVar5 - 1) < 0) {
            *(undefined2 *)((int)unaff_EBX + 3) = 0x31;
            *(int *)(unaff_EBP + -8) = *(int *)(unaff_EBP + -8) + 1;
            break;
          }
          pcVar1 = (char *)((int)unaff_EBX + uVar5 + 2);
          *pcVar1 = *pcVar1 + '\x01';
          iVar7 = uVar5 + 2;
          uVar5 = uVar5 - 1;
        } while (0x39 < *(byte *)((int)unaff_EBX + iVar7));
      }
      else {
        uVar5 = 0x12;
LAB_0040c8ee:
        do {
          *(undefined1 *)((int)unaff_EBX + uVar5 + 3) = 0;
          if ((int)(uVar5 - 1) < 0) {
            bVar10 = 0;
            goto LAB_0040c901;
          }
          iVar7 = uVar5 + 2;
          uVar5 = uVar5 - 1;
        } while (*(char *)((int)unaff_EBX + iVar7) == '0');
      }
      bVar10 = (byte)((ushort)*(undefined2 *)((int)unaff_ESI + 8) >> 8);
LAB_0040c901:
      uVar4 = (undefined2)*(undefined4 *)(unaff_EBP + -8);
      goto LAB_0040c904;
    }
    if ((((unkuint10)*unaff_ESI & 0x8000000000000000) != 0) &&
       ((*(int *)unaff_ESI != 0 || (*(int *)((int)unaff_ESI + 4) != -0x80000000)))) {
      uVar5 = 0x8000;
      goto LAB_0040c837;
    }
  }
  bVar10 = (byte)(uVar6 >> 8);
  uVar4 = (undefined2)uVar5;
  *(undefined1 *)((int)unaff_EBX + 3) = 0;
LAB_0040c904:
  *unaff_EBX = uVar4;
  *(byte *)(unaff_EBX + 1) = bVar10 >> 7;
  return;
}



void FUN_0040c913(void)

{
  unkbyte10 Var1;
  uint uVar2;
  uint uVar3;
  int iVar4;
  byte bVar5;
  short sVar6;
  uint uVar7;
  int iVar8;
  byte bVar9;
  uint uVar10;
  short *unaff_EBX;
  int unaff_EBP;
  uint *unaff_ESI;
  int iVar11;
  short *psVar12;
  short *psVar13;
  bool bVar14;
  float10 fVar15;
  
  uVar7 = *unaff_ESI;
  uVar10 = unaff_ESI[1];
  if (uVar7 != 0 || uVar10 != 0) {
    if ((int)uVar10 < 0) {
      bVar14 = uVar7 != 0;
      uVar7 = -uVar7;
      uVar10 = -(uint)bVar14 - uVar10;
    }
    iVar8 = 0;
    iVar11 = *(int *)(unaff_EBP + 8);
    if (iVar11 < 0) {
      iVar11 = 0;
    }
    if (3 < iVar11) {
      iVar11 = 4;
      uVar3 = uVar7;
      iVar4 = iVar8;
      do {
        iVar8 = iVar4;
        uVar7 = uVar3;
        bVar14 = 0xde0b6b2 < uVar10;
        uVar2 = uVar10 + 0xf21f494d;
        uVar10 = uVar2 - (uVar7 < 0xa7640000);
        uVar3 = uVar7 + 0x589c0000;
        iVar4 = iVar8 + 1;
      } while (bVar14 && (uVar7 < 0xa7640000) <= uVar2);
      uVar10 = uVar10 + 0xde0b6b3 + (uint)(0x589bffff < uVar7 + 0x589c0000);
    }
    *(uint *)(unaff_EBP + -0x10) = uVar7;
    *(uint *)(unaff_EBP + -0xc) = uVar10;
    fVar15 = (float10)*(longlong *)(unaff_EBP + -0x10);
    if (4 - iVar11 != 0) {
      fVar15 = fVar15 / (float10)(int)(&DAT_0040c21c)[4 - iVar11];
    }
    Var1 = to_bcd(fVar15);
    *(unkbyte10 *)(unaff_EBP + -0x1a) = Var1;
    psVar12 = (short *)((int)unaff_EBX + 3);
    if (iVar8 != 0) {
      psVar13 = unaff_EBX + 2;
      *(char *)psVar12 = (char)iVar8 + '0';
      iVar8 = 9;
      goto LAB_0040c9a7;
    }
    iVar8 = 9;
    do {
      bVar9 = *(byte *)(unaff_EBP + -0x1b + iVar8);
      bVar5 = bVar9 >> 4;
      psVar13 = psVar12;
      if (bVar5 != 0) goto LAB_0040c9b0;
      if ((bVar9 & 0xf) != 0) goto LAB_0040c9b7;
      iVar8 = iVar8 + -1;
    } while (iVar8 != 0);
  }
  sVar6 = 0;
  bVar9 = 0;
  *(undefined1 *)((int)unaff_EBX + 3) = 0;
LAB_0040c9dd:
  *unaff_EBX = sVar6;
  *(byte *)(unaff_EBX + 1) = bVar9;
  return;
LAB_0040c9b7:
  while( true ) {
    psVar13 = (short *)((int)psVar12 + 1);
    *(byte *)psVar12 = (bVar9 & 0xf) + 0x30;
    iVar8 = iVar8 + -1;
    if (iVar8 == 0) break;
LAB_0040c9a7:
    bVar9 = *(byte *)(unaff_EBP + -0x1b + iVar8);
    bVar5 = bVar9 >> 4;
LAB_0040c9b0:
    psVar12 = (short *)((int)psVar13 + 1);
    *(byte *)psVar13 = bVar5 + 0x30;
  }
  sVar6 = (short)psVar13 - ((short)unaff_EBX + 3 + (short)iVar11);
  do {
    *(char *)psVar13 = '\0';
    psVar13 = (short *)((int)psVar13 + -1);
  } while (*(char *)psVar13 == '0');
  bVar9 = (byte)(unaff_ESI[1] >> 0x1f);
  goto LAB_0040c9dd;
}



undefined4 FUN_0040c9e4(byte *param_1,float10 *param_2,char param_3)

{
  byte bVar1;
  int iVar2;
  undefined2 extraout_var;
  byte *extraout_ECX;
  byte *extraout_ECX_00;
  byte *pbVar3;
  int extraout_EDX;
  ushort in_FPUStatusWord;
  ushort uVar4;
  float10 fVar5;
  
  uVar4 = (in_FPUStatusWord >> 8 & 0x7f) << 8;
  fVar5 = (float10)0;
  FUN_0040ca8f();
  bVar1 = *param_1;
  if ((bVar1 == 0x2b) || (bVar1 == 0x2d)) {
    param_1 = param_1 + 1;
  }
  FUN_0040ca9a();
  pbVar3 = extraout_ECX;
  if (*param_1 == DAT_004764f7) {
    param_1 = param_1 + 1;
    FUN_0040ca9a();
    pbVar3 = extraout_ECX_00;
  }
  if (pbVar3 != param_1) {
    if ((*param_1 & 0xdf) == 0x45) {
      param_1 = param_1 + 1;
      FUN_0040cab6();
    }
    FUN_0040ca8f();
    if (*param_1 == 0) {
      iVar2 = extraout_EDX;
      if (param_3 == '\x01') {
        iVar2 = extraout_EDX + 4;
      }
      FUN_00405f3c(iVar2);
      if (bVar1 == 0x2d) {
        fVar5 = -fVar5;
      }
      if (param_3 == '\0') {
        *param_2 = fVar5;
      }
      else {
        *(longlong *)param_2 = (longlong)ROUND(fVar5);
      }
      if ((uVar4 & 9) == 0) {
        return CONCAT31((int3)(CONCAT22(extraout_var,uVar4) >> 8),1);
      }
    }
  }
  return 0;
}



void FUN_0040ca8f(void)

{
  char cVar1;
  char *unaff_ESI;
  
  do {
    cVar1 = *unaff_ESI;
    if (cVar1 == '\0') {
      return;
    }
    unaff_ESI = unaff_ESI + 1;
  } while (cVar1 == ' ');
  return;
}



void FUN_0040ca9a(void)

{
  int unaff_EBP;
  char *unaff_ESI;
  
  while( true ) {
    if ((byte)(*unaff_ESI - 0x3aU) < 0xf6) break;
    *(uint *)(unaff_EBP + -4) = (uint)(byte)(*unaff_ESI - 0x30);
    unaff_ESI = unaff_ESI + 1;
  }
  return;
}



void FUN_0040cab6(void)

{
  char cVar1;
  uint uVar2;
  char *unaff_ESI;
  
  uVar2 = 0;
  if ((*unaff_ESI == '+') || (*unaff_ESI == '-')) {
    unaff_ESI = unaff_ESI + 1;
  }
  do {
    cVar1 = *unaff_ESI;
    if ((byte)(cVar1 - 0x3aU) < 0xf6) {
      return;
    }
    unaff_ESI = unaff_ESI + 1;
    uVar2 = uVar2 * 10 + (uint)(byte)(cVar1 - 0x30);
  } while (uVar2 < 500);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0040cc28(void)

{
  undefined4 *in_FS_OFFSET;
  bool bVar1;
  undefined4 uStack_10;
  undefined1 *puStack_c;
  undefined1 *puStack_8;
  
  puStack_8 = &stack0xfffffffc;
  puStack_c = &LAB_0040cc90;
  uStack_10 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_10;
  bVar1 = _DAT_004765f8 == 0;
  _DAT_004765f8 = _DAT_004765f8 + -1;
  if (bVar1) {
    FUN_004039e4((int *)&DAT_0040bf50);
    FUN_00403a00((int *)&DAT_0040c03c);
    if (DAT_004764cd != '\0') {
      FUN_00403c30((int *)&PTR_DAT_00474128,(undefined4 *)&LAB_0040cca4);
    }
    FUN_0040b0cc();
    FUN_0040b8b0();
    FUN_0040b204();
    FUN_0040bd0c();
  }
  *in_FS_OFFSET = uStack_10;
  return;
}



int FUN_0040d0fc(int param_1)

{
  return param_1 + 2 + (uint)*(byte *)(param_1 + 1);
}



int FUN_0040d108(int param_1,int param_2)

{
  int *piVar1;
  int iVar2;
  uint uVar3;
  undefined1 *puVar4;
  
  if (param_2 != 0) {
    iVar2 = **(int **)(param_1 + 0xb + (uint)*(byte *)(param_1 + 1));
    uVar3 = (uint)*(byte *)(iVar2 + 1);
    puVar4 = (undefined1 *)(iVar2 + 0xf + uVar3);
    piVar1 = (int *)(iVar2 + 7 + uVar3);
    iVar2 = 0;
    do {
      uVar3 = CONCAT31((int3)(uVar3 >> 8),*puVar4);
      if (uVar3 == *(uint *)(param_2 + -4)) {
        while (((*(byte *)(param_2 + -1 + uVar3) ^ puVar4[uVar3]) & 0xdf) == 0) {
          uVar3 = uVar3 - 1;
          if (uVar3 == 0) {
            return iVar2;
          }
        }
        uVar3 = CONCAT31((int3)(uVar3 >> 8),*puVar4);
      }
      iVar2 = iVar2 + 1;
      puVar4 = puVar4 + uVar3 + 1;
    } while (iVar2 <= *piVar1);
  }
  return -1;
}



void FUN_0040d154(char *param_1,byte *param_2)

{
  if (*param_1 == '\x01') {
    FUN_00408508(param_2);
    return;
  }
  FUN_0040d108((int)param_1,(int)param_2);
  return;
}



void FUN_0040d168(int param_1,undefined1 *param_2)

{
  int iVar1;
  int iVar2;
  undefined1 uVar3;
  byte bVar5;
  undefined1 *puVar4;
  undefined2 uVar6;
  uint uVar7;
  undefined1 *puVar8;
  int iVar9;
  uint uVar10;
  
  puVar4 = param_2;
  if (param_2 != (undefined1 *)0x0) {
    puVar4 = (undefined1 *)(CONCAT11(*param_2,param_2[-4]) & 0xdfff);
  }
  while( true ) {
    iVar1 = param_1 + 2 + (uint)*(byte *)(param_1 + 1);
    uVar7 = (uint)*(byte *)(iVar1 + 10);
    uVar10 = (uint)*(ushort *)(iVar1 + 0xb + uVar7);
    if (uVar10 != 0) {
      iVar2 = iVar1 + 0xd + uVar7;
      do {
        puVar8 = (undefined1 *)
                 (CONCAT22((short)(uVar7 >> 0x10),*(undefined2 *)(iVar2 + 0x1a)) & 0xffffdfff);
        if (puVar8 == puVar4) {
          iVar9 = CONCAT22((short)((uint)puVar8 >> 0x10),(ushort)(byte)puVar8);
          while( true ) {
            uVar6 = (undefined2)((uint)puVar4 >> 0x10);
            uVar3 = SUB41(puVar4,0);
            bVar5 = param_2[iVar9 + -1] ^ *(byte *)(iVar2 + 0x1a + iVar9);
            puVar4 = (undefined1 *)CONCAT22(uVar6,CONCAT11(bVar5,uVar3));
            if ((bVar5 & 0xdf) != 0) break;
            iVar9 = iVar9 + -1;
            if (iVar9 == 0) {
              return;
            }
          }
          puVar4 = (undefined1 *)(CONCAT22(uVar6,CONCAT11(*param_2,uVar3)) & 0xffffdfff);
          puVar8 = (undefined1 *)CONCAT31((int3)((uint)iVar9 >> 8),*(undefined1 *)(iVar2 + 0x1a));
        }
        uVar7 = CONCAT22((short)((uint)puVar8 >> 0x10),(ushort)(byte)puVar8);
        uVar10 = uVar10 - 1;
        iVar2 = iVar2 + 0x1b + uVar7;
      } while (uVar10 != 0);
    }
    if (*(int **)(iVar1 + 4) == (int *)0x0) break;
    param_1 = **(int **)(iVar1 + 4);
  }
  return;
}



void FUN_0040d1d4(int param_1,undefined4 *param_2)

{
  int iVar1;
  uint uVar2;
  undefined3 uVar4;
  int iVar3;
  undefined4 *puVar5;
  int iVar6;
  
  puVar5 = param_2;
  for (uVar2 = (uint)*(ushort *)(param_1 + 10 + (uint)*(byte *)(param_1 + 1)); uVar2 != 0;
      uVar2 = uVar2 - 1) {
    *puVar5 = 0;
    puVar5 = puVar5 + 1;
  }
  while( true ) {
    uVar4 = (undefined3)(uVar2 >> 8);
    iVar1 = param_1 + 2 + CONCAT31(uVar4,*(undefined1 *)(param_1 + 1));
    iVar3 = CONCAT31(uVar4,*(undefined1 *)(iVar1 + 10));
    uVar2 = (uint)*(ushort *)(iVar1 + 0xb + iVar3);
    if (uVar2 != 0) {
      iVar6 = iVar1 + 0xd + iVar3;
      do {
        iVar3 = CONCAT31((int3)((uint)iVar3 >> 8),*(undefined1 *)(iVar6 + 0x1a));
        if (param_2[*(ushort *)(iVar6 + 0x18)] == 0) {
          param_2[*(ushort *)(iVar6 + 0x18)] = iVar6;
        }
        iVar6 = iVar6 + 0x1b + iVar3;
        uVar2 = uVar2 - 1;
      } while (uVar2 != 0);
    }
    uVar2 = 0;
    if (*(int **)(iVar1 + 4) == (int *)0x0) break;
    param_1 = **(int **)(iVar1 + 4);
  }
  return;
}



uint FUN_0040d228(int *param_1,undefined4 *param_2)

{
  char *pcVar1;
  code *pcVar2;
  uint uVar3;
  uint uVar4;
  uint *puVar5;
  byte bVar6;
  
  pcVar1 = *(char **)*param_2;
  bVar6 = 4;
  if (*pcVar1 != '\a') {
    bVar6 = pcVar1[(byte)pcVar1[1] + 2];
  }
  pcVar2 = (code *)param_2[1];
  if (*(byte *)((int)param_2 + 7) < 0xfe) {
    uVar3 = (*pcVar2)(param_1,param_2[4]);
  }
  else if (*(byte *)((int)param_2 + 7) == 0xff) {
    puVar5 = (uint *)(((uint)pcVar2 & 0xffffff) + (int)param_1);
    uVar3 = CONCAT31((int3)((uint)param_1 >> 8),(char)*puVar5);
    if ((1 < bVar6) && (uVar3 = CONCAT22((short)((uint)param_1 >> 0x10),(short)*puVar5), 3 < bVar6))
    {
      uVar3 = *puVar5;
    }
  }
  else {
    uVar3 = (**(code **)((int)(short)pcVar2 + *param_1))();
  }
  uVar4 = uVar3;
  if (bVar6 < 4) {
    if (bVar6 < 2) {
      uVar4 = (uint)(char)uVar3;
      if (bVar6 != 0) {
        return uVar3 & 0xff;
      }
    }
    else {
      uVar4 = (uint)(short)uVar3;
      if (bVar6 != 2) {
        uVar4 = uVar3 & 0xffff;
      }
    }
  }
  return uVar4;
}



void FUN_0040d29c(int *param_1,undefined4 *param_2,int param_3)

{
  char *pcVar1;
  code *pcVar2;
  int *piVar3;
  int iVar4;
  byte bVar5;
  
  pcVar1 = *(char **)*param_2;
  bVar5 = 4;
  if (*pcVar1 != '\a') {
    bVar5 = pcVar1[(byte)pcVar1[1] + 2];
  }
  iVar4 = param_2[4];
  if (param_2[4] == -0x80000000) {
    iVar4 = param_3;
  }
  pcVar2 = (code *)param_2[2];
  if (*(byte *)((int)param_2 + 0xb) == 0xff) {
    piVar3 = (int *)((int)param_1 + ((uint)pcVar2 & 0xffffff));
    *(char *)piVar3 = (char)param_3;
    if ((1 < bVar5) && (*(short *)piVar3 = (short)param_3, 3 < bVar5)) {
      *piVar3 = param_3;
    }
  }
  else if (*(byte *)((int)param_2 + 0xb) < 0xfe) {
    (*pcVar2)(param_1,iVar4);
  }
  else {
    (**(code **)((int)(short)pcVar2 + *param_1))();
  }
  return;
}



void FUN_0040d2f8(int *param_1,undefined4 *param_2,byte *param_3)

{
  byte *pbVar1;
  byte bVar2;
  code *pcVar3;
  byte bVar4;
  uint uVar5;
  byte *pbVar6;
  
  pbVar6 = (byte *)param_2[4];
  if ((byte *)param_2[4] == (byte *)0x80000000) {
    pbVar6 = param_3;
  }
  pcVar3 = (code *)param_2[2];
  if (*(byte *)((int)param_2 + 0xb) != 0xff) {
    if (0xfd < *(byte *)((int)param_2 + 0xb)) {
      (**(code **)((int)(short)pcVar3 + *param_1))();
      return;
    }
    (*pcVar3)(param_1,pbVar6);
    return;
  }
  pbVar6 = (byte *)(((uint)pcVar3 & 0xffffff) + (int)param_1);
  bVar2 = *(byte *)(*(int *)*param_2 + 2 + (uint)*(byte *)(*(int *)*param_2 + 1));
  bVar4 = *param_3;
  if (bVar2 <= *param_3) {
    bVar4 = bVar2;
  }
  *pbVar6 = bVar4;
  pbVar1 = param_3 + 1;
  for (uVar5 = (uint)bVar4; pbVar6 = pbVar6 + 1, uVar5 != 0; uVar5 = uVar5 - 1) {
    *pbVar6 = *pbVar1;
    pbVar1 = pbVar1 + 1;
  }
  return;
}



void FUN_0040d34c(int *param_1,undefined4 *param_2,undefined4 *param_3)

{
  byte abStack_10c [256];
  
  FUN_00403e38(abStack_10c,param_3,0xff);
  FUN_0040d2f8(param_1,param_2,abStack_10c);
  return;
}



void FUN_0040d380(int *param_1,undefined4 *param_2)

{
  FUN_00403c30(param_1,param_2);
  return;
}



void FUN_0040d394(int *param_1,int param_2,undefined4 *param_3)

{
  code *pcVar1;
  undefined4 *puVar2;
  
  puVar2 = *(undefined4 **)(param_2 + 0x10);
  if (*(undefined4 **)(param_2 + 0x10) == (undefined4 *)0x80000000) {
    puVar2 = param_3;
  }
  pcVar1 = *(code **)(param_2 + 8);
  if (*(byte *)(param_2 + 0xb) != 0xff) {
    if (0xfd < *(byte *)(param_2 + 0xb)) {
      (**(code **)((int)(short)pcVar1 + *param_1))();
      return;
    }
    (*pcVar1)(param_1,puVar2);
    return;
  }
  FUN_0040d380((int *)((int)param_1 + ((uint)pcVar1 & 0xffffff)),param_3);
  return;
}



void FUN_0040d3d4(BSTR *param_1,OLECHAR *param_2)

{
  FUN_00404270(param_1,param_2);
  return;
}



void FUN_0040d3e8(int *param_1,int param_2,OLECHAR *param_3)

{
  code *pcVar1;
  OLECHAR *pOVar2;
  
  pOVar2 = *(OLECHAR **)(param_2 + 0x10);
  if (*(OLECHAR **)(param_2 + 0x10) == (OLECHAR *)0x80000000) {
    pOVar2 = param_3;
  }
  pcVar1 = *(code **)(param_2 + 8);
  if (*(byte *)(param_2 + 0xb) != 0xff) {
    if (0xfd < *(byte *)(param_2 + 0xb)) {
      (**(code **)((int)(short)pcVar1 + *param_1))();
      return;
    }
    (*pcVar1)(param_1,pOVar2);
    return;
  }
  FUN_0040d3d4((BSTR *)((int)param_1 + ((uint)pcVar1 & 0xffffff)),param_3);
  return;
}



void FUN_0040d428(int *param_1,int param_2,LPCSTR param_3)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  OLECHAR *local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_8 = (OLECHAR *)0x0;
  puStack_1c = &LAB_0040d470;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  FUN_0040433c((BSTR)&local_8,param_3);
  FUN_0040d3e8(param_1,param_2,local_8);
  *in_FS_OFFSET = uStack_20;
  puStack_18 = &LAB_0040d477;
  puStack_1c = (undefined1 *)0x40d46f;
  FUN_00404234(&local_8);
  return;
}



void FUN_0040d480(int *param_1,undefined4 *param_2,LPCSTR param_3)

{
  char cVar1;
  
  cVar1 = **(char **)*param_2;
  if (cVar1 == '\x05') {
    FUN_0040d34c(param_1,param_2,(undefined4 *)param_3);
    return;
  }
  if (cVar1 == '\n') {
    FUN_0040d394(param_1,(int)param_2,(undefined4 *)param_3);
    return;
  }
  if (cVar1 == '\v') {
    FUN_0040d428(param_1,(int)param_2,param_3);
  }
  return;
}



// WARNING: Unable to track spacebase fully for stack

void FUN_0040d4ac(undefined4 param_1,undefined4 *param_2)

{
  code *pcVar1;
  undefined4 uVar2;
  int *piVar3;
  code *extraout_ECX;
  int extraout_EDX;
  int iVar4;
  undefined1 *puVar5;
  undefined4 uStack_10;
  
  iVar4 = (uint)*(byte *)(*(int *)*param_2 + 2 + (uint)*(byte *)(*(int *)*param_2 + 1)) * 4;
  if (*(char *)((int)param_2 + 0xb) == -1) {
    uStack_10 = 0x40d53d;
    (**(code **)(&DAT_0040d505 + iVar4))(param_1,param_2,param_2[2] & 0xffffff);
  }
  else {
    pcVar1 = *(code **)(&DAT_0040d505 + iVar4);
    puVar5 = (undefined1 *)((int)&uStack_10 + -*(int *)(&DAT_0040d4f1 + iVar4));
    *(undefined4 *)((int)&uStack_10 + -*(int *)(&DAT_0040d4f1 + iVar4)) = 0x40d4db;
    piVar3 = (int *)(*pcVar1)();
    uVar2 = *(undefined4 *)(extraout_EDX + 0x10);
    if (*(byte *)(extraout_EDX + 0xb) < 0xfe) {
      *(undefined4 *)(puVar5 + -4) = 0x40d4ef;
      (*extraout_ECX)(piVar3,uVar2);
    }
    else {
      pcVar1 = *(code **)((int)(short)extraout_ECX + *piVar3);
      *(undefined4 *)(puVar5 + -4) = 0x40d4eb;
      (*pcVar1)();
    }
  }
  return;
}



void FUN_0040d544(VARIANT *param_1,VARIANTARG *param_2)

{
  FUN_0040495c(param_1,param_2);
  return;
}



void FUN_0040d558(int *param_1,int param_2,VARIANTARG *param_3)

{
  code *pcVar1;
  VARIANTARG *pVVar2;
  
  pVVar2 = *(VARIANTARG **)(param_2 + 0x10);
  if (*(VARIANTARG **)(param_2 + 0x10) == (VARIANTARG *)0x80000000) {
    pVVar2 = param_3;
  }
  pcVar1 = *(code **)(param_2 + 8);
  if (*(byte *)(param_2 + 0xb) != 0xff) {
    if (0xfd < *(byte *)(param_2 + 0xb)) {
      (**(code **)((int)(short)pcVar1 + *param_1))();
      return;
    }
    (*pcVar1)(param_1,pVVar2);
    return;
  }
  FUN_0040d544((VARIANT *)((int)param_1 + ((uint)pcVar1 & 0xffffff)),param_3);
  return;
}



void FUN_0040d598(int *param_1,int param_2,undefined4 *param_3)

{
  code *pcVar1;
  undefined4 uVar2;
  undefined4 *puVar3;
  
  pcVar1 = *(code **)(param_2 + 8);
  if (*(byte *)(param_2 + 0xb) == 0xff) {
    puVar3 = (undefined4 *)((int)param_1 + ((uint)pcVar1 & 0xffffff));
    uVar2 = param_3[1];
    *puVar3 = *param_3;
    puVar3[1] = uVar2;
    return;
  }
  if (0xfd < *(byte *)(param_2 + 0xb)) {
    (**(code **)((int)(short)pcVar1 + *param_1))();
    return;
  }
  (*pcVar1)(param_1,*(undefined4 *)(param_2 + 0x10),param_3,*param_3,param_3[1]);
  return;
}



void FUN_0040d5d0(int *param_1,int param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5)

{
  code *pcVar1;
  undefined4 *puVar2;
  
  pcVar1 = *(code **)(param_2 + 8);
  if (*(byte *)(param_2 + 0xb) == 0xff) {
    puVar2 = (undefined4 *)((int)param_1 + ((uint)pcVar1 & 0xffffff));
    *puVar2 = param_4;
    puVar2[1] = param_5;
  }
  else if (*(byte *)(param_2 + 0xb) < 0xfe) {
    (*pcVar1)(param_1,*(undefined4 *)(param_2 + 0x10),pcVar1,param_4,param_5);
  }
  else {
    (**(code **)((int)(short)pcVar1 + *param_1))();
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0040d60c(void)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_10;
  undefined1 *puStack_c;
  undefined1 *puStack_8;
  
  puStack_8 = &stack0xfffffffc;
  puStack_c = &LAB_0040d652;
  uStack_10 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_10;
  _DAT_00476610 = _DAT_00476610 + 1;
  if (_DAT_00476610 == 0) {
    FUN_00403bdc((int *)&PTR_DAT_004742f4);
    FUN_004044ac((VARIANTARG *)&PTR_s_False_004742ec,PTR_DAT_00401094,2);
  }
  *in_FS_OFFSET = uStack_10;
  return;
}



void FUN_0040ea58(undefined4 param_1,undefined4 param_2,undefined4 *param_3)

{
  *param_3 = param_1;
  param_3[1] = param_2;
  return;
}



undefined4 FUN_0040ea60(undefined2 param_1,undefined2 param_2)

{
  undefined4 local_4;
  
  local_4 = CONCAT22(param_2,param_1);
  return local_4;
}



void FUN_0040ea70(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 *param_4,
                 undefined4 param_5)

{
  *param_4 = param_1;
  param_4[1] = param_2;
  param_4[2] = param_3;
  param_4[3] = param_5;
  return;
}



void FUN_0040ea8c(int param_1,int param_2,int param_3,int *param_4,int param_5)

{
  *param_4 = param_1;
  param_4[1] = param_2;
  param_4[2] = param_3 + param_1;
  param_4[3] = param_2 + param_5;
  return;
}



int FUN_0040eaa8(int param_1)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + -0x38);
  if (iVar1 != 0) {
    iVar1 = *(int *)(iVar1 + 2);
  }
  return iVar1;
}



void FUN_0040eab4(undefined4 param_1)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uVar1;
  undefined4 *puVar2;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  byte *local_10;
  undefined4 local_c;
  undefined1 local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_10 = (byte *)0x0;
  puStack_1c = &LAB_0040eb14;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  local_8 = 0xb;
  puVar2 = &local_c;
  uVar1 = 0;
  local_c = param_1;
  FUN_004054e4((undefined4 *)PTR_PTR_00475868,(int *)&local_10);
  uVar1 = FUN_0040aa4c((int)PTR_DAT_0040d9c8,'\x01',local_10,uVar1,puVar2);
  FUN_004036ac(uVar1);
  *in_FS_OFFSET = puStack_18;
  local_10 = &LAB_0040eb1b;
  FUN_00403bdc((int *)&local_10);
  return;
}



int FUN_0040eb20(int param_1)

{
  char cVar1;
  undefined4 *puVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  
  puStack_1c = (undefined1 *)0x40eb36;
  puVar2 = (undefined4 *)FUN_0040f8a8(DAT_00476620);
  puStack_20 = &LAB_0040ebbd;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  iVar5 = puVar2[2];
  puStack_1c = &stack0xfffffffc;
  if (-1 < iVar5 + -1) {
    iVar4 = 0;
    puStack_1c = &stack0xfffffffc;
    do {
      iVar3 = FUN_0040f4e8(puVar2,iVar4);
      cVar1 = FUN_00402eb4(iVar3,param_1);
      if (cVar1 != '\0') {
        FUN_0040374c();
        return iVar3;
      }
      iVar4 = iVar4 + 1;
      iVar5 = iVar5 + -1;
    } while (iVar5 != 0);
  }
  iVar5 = (**(code **)(*DAT_00476624 + 0x50))(DAT_00476624,param_1);
  if (-1 < iVar5) {
    iVar5 = (**(code **)(*DAT_00476624 + 0x18))(DAT_00476624,iVar5);
    FUN_0040374c();
    return iVar5;
  }
  *in_FS_OFFSET = uStack_24;
  puStack_1c = (undefined1 *)0x40ebc4;
  puStack_20 = (undefined1 *)0x40ebbc;
  iVar5 = FUN_0040f90c(DAT_00476620);
  return iVar5;
}



int FUN_0040ebd0(int param_1)

{
  int iVar1;
  
  iVar1 = FUN_0040eb20(param_1);
  if (iVar1 == 0) {
    FUN_0040eab4(param_1);
  }
  return iVar1;
}



void FUN_0040ebf0(undefined4 *param_1,char *param_2)

{
  short *psVar1;
  undefined4 uVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_12c;
  undefined1 *puStack_128;
  undefined1 *puStack_124;
  byte local_114 [256];
  char *local_14;
  int *local_10;
  int local_c;
  char *local_8;
  
  puStack_124 = &stack0xfffffffc;
  local_14 = (char *)0x0;
  puStack_128 = &LAB_0040eca9;
  uStack_12c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_12c;
  local_8 = param_2;
  for (local_10 = (int *)FUN_00402e9c(param_1); local_10 != (int *)PTR_PTR_0040ddb8;
      local_10 = FUN_00402edc((int)local_10)) {
    psVar1 = (short *)FUN_0040eaa8((int)local_10);
    if ((psVar1 != (short *)0x0) && (iVar3 = (int)*psVar1, -1 < iVar3 + -1)) {
      local_c = 0;
      do {
        FUN_00402ea0(**(int **)(psVar1 + local_c * 2 + 1),local_114);
        FUN_00403e00((int *)&local_14,local_114);
        uVar2 = FUN_0040831c(local_14,local_8);
        if ((char)uVar2 != '\0') goto LAB_0040ec93;
        local_c = local_c + 1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
  }
  FUN_0040eb20((int)local_8);
LAB_0040ec93:
  *in_FS_OFFSET = uStack_12c;
  puStack_124 = &LAB_0040ecb0;
  puStack_128 = (undefined1 *)0x40eca8;
  FUN_00403bdc((int *)&local_14);
  return;
}



void FUN_0040ecbc(int *param_1)

{
  int *piVar1;
  undefined4 uVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_130;
  undefined1 *puStack_12c;
  undefined1 *puStack_128;
  undefined4 uStack_124;
  undefined1 *puStack_120;
  undefined1 *puStack_11c;
  int local_110;
  undefined1 local_10c;
  byte local_108 [256];
  int local_8;
  
  puStack_11c = &stack0xfffffffc;
  local_8 = 0;
  puStack_120 = &LAB_0040edaa;
  uStack_124 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_124;
  puStack_128 = (undefined1 *)0x40ece6;
  piVar1 = (int *)FUN_0040f8a8(DAT_00476620);
  puStack_12c = &LAB_0040ed8d;
  uStack_130 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_130;
  puStack_128 = &stack0xfffffffc;
  while( true ) {
    iVar3 = FUN_0040f544((int)piVar1,(int)param_1);
    if (iVar3 != -1) break;
    FUN_00402ea0((int)param_1,local_108);
    FUN_00403e00(&local_8,local_108);
    iVar3 = FUN_0040eb20(local_8);
    if (iVar3 != 0) {
      local_110 = local_8;
      local_10c = 0xb;
      uVar2 = FUN_0040ab08((int)PTR_DAT_0040d8c0,'\x01',(undefined4 *)PTR_PTR_004757d0,0,&local_110)
      ;
      FUN_004036ac(uVar2);
    }
    FUN_0040f38c(piVar1,(int)param_1);
    if (param_1 == (int *)PTR_PTR_0040ddb8) break;
    param_1 = FUN_00402edc((int)param_1);
  }
  *in_FS_OFFSET = uStack_130;
  puStack_128 = &LAB_0040ed94;
  puStack_12c = (undefined1 *)0x40ed8c;
  FUN_0040f90c(DAT_00476620);
  return;
}



void FUN_0040edb8(undefined4 param_1,int param_2)

{
  int iVar1;
  undefined4 *puVar2;
  
  iVar1 = param_2;
  if (-1 < param_2) {
    do {
      iVar1 = iVar1 + -1;
    } while (-1 < iVar1);
  }
  puVar2 = (undefined4 *)&stack0xfffffff4;
  if (-1 < param_2) {
    iVar1 = param_2 + 1;
    do {
      FUN_0040ecbc((int *)*puVar2);
      puVar2 = puVar2 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  return;
}



void FUN_0040edec(PVOID param_1)

{
  undefined1 *puVar1;
  int *piVar2;
  LPCVOID pvVar3;
  int iVar4;
  undefined4 *in_FS_OFFSET;
  _MEMORY_BASIC_INFORMATION *p_Var5;
  SIZE_T SVar6;
  undefined4 uStack_38;
  undefined1 *puStack_34;
  undefined1 *puStack_30;
  _MEMORY_BASIC_INFORMATION local_20;
  
  puStack_30 = (undefined1 *)0x40ee01;
  piVar2 = (int *)FUN_0040f8a8(DAT_00476620);
  puStack_34 = &LAB_0040eea4;
  uStack_38 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_38;
  iVar4 = piVar2[2] + -1;
  puStack_30 = &stack0xfffffffc;
  puVar1 = &stack0xfffffffc;
  if (-1 < iVar4) {
    do {
      SVar6 = 0x1c;
      p_Var5 = &local_20;
      pvVar3 = (LPCVOID)FUN_0040f4e8(piVar2,iVar4);
      VirtualQuery(pvVar3,p_Var5,SVar6);
      if ((param_1 == (PVOID)0x0) || (param_1 == local_20.AllocationBase)) {
        FUN_0040f3d8(piVar2,iVar4);
      }
      iVar4 = iVar4 + -1;
      puVar1 = puStack_30;
    } while (iVar4 != -1);
  }
  puStack_30 = puVar1;
  iVar4 = (**(code **)(*DAT_00476624 + 0x14))();
  iVar4 = iVar4 + -1;
  if (-1 < iVar4) {
    do {
      SVar6 = 0x1c;
      p_Var5 = &local_20;
      pvVar3 = (LPCVOID)(**(code **)(*DAT_00476624 + 0x18))(DAT_00476624,iVar4);
      VirtualQuery(pvVar3,p_Var5,SVar6);
      if ((param_1 == (PVOID)0x0) || (param_1 == local_20.AllocationBase)) {
        (**(code **)(*DAT_00476624 + 0x44))(DAT_00476624,iVar4);
      }
      iVar4 = iVar4 + -1;
    } while (iVar4 != -1);
  }
  *in_FS_OFFSET = uStack_38;
  puStack_30 = &LAB_0040eeab;
  puStack_34 = (undefined1 *)0x40eea3;
  FUN_0040f90c(DAT_00476620);
  return;
}



void FUN_0040ef0c(int *param_1,char param_2,int param_3,int param_4,int param_5)

{
  int extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffec,in_stack_fffffff0);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  param_1[1] = param_3;
  param_1[2] = param_5;
  param_1[3] = param_4;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffec;
  }
  return;
}



void FUN_0040ef44(int param_1,int param_2,int param_3)

{
  int iVar1;
  
  iVar1 = FUN_0040ef0c((int *)PTR_LAB_0040eeb4,'\x01',param_1,param_3,param_2);
  FUN_0040f820(DAT_00476628,iVar1);
  return;
}



undefined4 FUN_0040ef70(int param_1)

{
  undefined4 *puVar1;
  int iVar2;
  undefined4 uVar3;
  int iVar4;
  int iVar5;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  
  puStack_1c = (undefined1 *)0x40ef8b;
  puVar1 = (undefined4 *)FUN_0040f8a8(DAT_00476628);
  puStack_20 = &LAB_0040efe0;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  iVar4 = puVar1[2];
  if (-1 < iVar4 + -1) {
    iVar5 = 0;
    puStack_1c = &stack0xfffffffc;
    do {
      iVar2 = FUN_0040f4e8(puVar1,iVar5);
      if (*(int *)(iVar2 + 4) == param_1) {
        uVar3 = *(undefined4 *)(iVar2 + 8);
        FUN_0040374c();
        return uVar3;
      }
      iVar5 = iVar5 + 1;
      iVar4 = iVar4 + -1;
    } while (iVar4 != 0);
  }
  *in_FS_OFFSET = uStack_24;
  puStack_1c = (undefined1 *)0x40efe7;
  puStack_20 = (undefined1 *)0x40efdf;
  uVar3 = FUN_0040f90c(DAT_00476628);
  return uVar3;
}



undefined4 FUN_0040eff4(char *param_1,undefined4 *param_2,int param_3,int param_4)

{
  undefined4 uVar1;
  undefined4 *puVar2;
  int iVar3;
  
  if (-1 < param_4) {
    iVar3 = param_4 + 1;
    puVar2 = (undefined4 *)(param_3 + 4);
    do {
      uVar1 = FUN_0040831c((char *)*puVar2,param_1);
      if ((char)uVar1 != '\0') {
        *param_2 = puVar2[-1];
        return CONCAT31((int3)((uint)uVar1 >> 8),1);
      }
      puVar2 = puVar2 + 2;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  return 0;
}



undefined1 FUN_0040f034(int param_1,int *param_2,int *param_3,int param_4)

{
  int iVar1;
  
  if (-1 < param_4) {
    iVar1 = param_4 + 1;
    do {
      if (param_1 == *param_3) {
        FUN_00403c30(param_2,(undefined4 *)param_3[1]);
        return 1;
      }
      param_3 = param_3 + 2;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  return 0;
}



void FUN_0040f078(undefined *param_1,HMODULE param_2,undefined4 *param_3)

{
  LPCSTR lpName;
  HRSRC pHVar1;
  int *piVar2;
  undefined4 uVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar4;
  LPCSTR lpType;
  
  if (param_2 == (HMODULE)0x0) {
    param_2 = DAT_004764d8;
  }
  lpType = &DAT_0000000a;
  lpName = FUN_00404020(param_1);
  pHVar1 = FindResourceA(param_2,lpName,lpType);
  if (pHVar1 != (HRSRC)0x0) {
    piVar2 = FUN_00411a50((int *)PTR_LAB_0040e440,'\x01',param_2,&DAT_0000000a,param_1);
    uVar4 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffffe0;
    uVar3 = FUN_004116f4((int)piVar2,(int *)*param_3);
    *param_3 = uVar3;
    *in_FS_OFFSET = uVar4;
    FUN_00402f54(piVar2);
    return;
  }
  return;
}



void FUN_0040f0fc(void)

{
  int iVar1;
  LPVOID pvVar2;
  undefined4 uVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  
  pvVar2 = FUN_00406670();
  if (*(int *)((int)pvVar2 + 0xc) == 0) {
    uVar3 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX);
    pvVar2 = FUN_00406670();
    *(undefined4 *)((int)pvVar2 + 0xc) = uVar3;
  }
  pvVar2 = FUN_00406670();
  iVar1 = *(int *)((int)pvVar2 + 8);
  pvVar2 = FUN_00406670();
  FUN_0040f38c(*(int **)((int)pvVar2 + 0xc),iVar1);
  uVar3 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX_00);
  pvVar2 = FUN_00406670();
  *(undefined4 *)((int)pvVar2 + 8) = uVar3;
  return;
}



void FUN_0040f15c(void)

{
  undefined4 *puVar1;
  LPVOID pvVar2;
  int *piVar3;
  int iVar4;
  int iVar5;
  
  pvVar2 = FUN_00406670();
  puVar1 = *(undefined4 **)((int)pvVar2 + 8);
  iVar4 = puVar1[2];
  if (-1 < iVar4 + -1) {
    iVar5 = 0;
    do {
      piVar3 = (int *)FUN_0040f4e8(puVar1,iVar5);
      (**(code **)(*piVar3 + 0xc))();
      iVar5 = iVar5 + 1;
      iVar4 = iVar4 + -1;
    } while (iVar4 != 0);
  }
  return;
}



void FUN_0040f18c(void)

{
  int iVar1;
  LPVOID pvVar2;
  undefined4 uVar3;
  
  pvVar2 = FUN_00406670();
  FUN_00402f54(*(int **)((int)pvVar2 + 8));
  pvVar2 = FUN_00406670();
  uVar3 = FUN_0040f5d0(*(undefined4 **)((int)pvVar2 + 0xc));
  pvVar2 = FUN_00406670();
  *(undefined4 *)((int)pvVar2 + 8) = uVar3;
  pvVar2 = FUN_00406670();
  iVar1 = *(int *)(*(int *)((int)pvVar2 + 0xc) + 8);
  pvVar2 = FUN_00406670();
  FUN_0040f3d8(*(int **)((int)pvVar2 + 0xc),iVar1 + -1);
  pvVar2 = FUN_00406670();
  if (*(int *)(*(int *)((int)pvVar2 + 0xc) + 8) == 0) {
    pvVar2 = FUN_00406670();
    FUN_0040bebc((undefined4 *)((int)pvVar2 + 0xc));
  }
  return;
}



void FUN_0040f200(undefined *param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int *piVar1;
  int iVar2;
  HMODULE pHVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined *puVar4;
  undefined4 uStack_11c;
  undefined1 *puStack_118;
  undefined1 *puStack_114;
  byte local_108 [256];
  undefined *local_8;
  
  puStack_114 = &stack0xfffffffc;
  local_8 = (undefined *)0x0;
  puStack_118 = &LAB_0040f296;
  uStack_11c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_11c;
  if ((param_1 != PTR_PTR_0040e784) && (param_1 != *(undefined **)(param_4 + -8))) {
    iVar2 = param_4;
    piVar1 = FUN_00402edc((int)param_1);
    FUN_0040f200((undefined *)piVar1,extraout_EDX,extraout_ECX,iVar2);
    FUN_00402ea0((int)param_1,local_108);
    FUN_00403e00((int *)&local_8,local_108);
    puVar4 = local_8;
    iVar2 = FUN_00404f94(param_1);
    pHVar3 = (HMODULE)FUN_00404f9c(iVar2);
    FUN_0040f078(puVar4,pHVar3,(undefined4 *)(param_4 + -4));
  }
  *in_FS_OFFSET = uStack_11c;
  puStack_114 = &LAB_0040f29d;
  puStack_118 = (undefined1 *)0x40f295;
  FUN_00403bdc((int *)&local_8);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0040f2a8(undefined4 *param_1,undefined4 param_2)

{
  undefined *puVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined1 *puVar2;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  char local_e;
  undefined1 local_d;
  undefined4 local_c;
  undefined4 *local_8;
  
  puVar2 = &stack0xfffffffc;
  puStack_14 = (undefined1 *)0x40f2be;
  local_c = param_2;
  local_8 = param_1;
  FUN_0040be4c(DAT_00476614);
  puStack_18 = &LAB_0040f356;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  local_e = DAT_0040f368 == (*(ushort *)(local_8 + 8) & _DAT_0040f364);
  puStack_14 = &stack0xfffffffc;
  if ((bool)local_e) {
    puStack_20 = (undefined1 *)0x40f2f3;
    puStack_14 = &stack0xfffffffc;
    FUN_0040f0fc();
  }
  puStack_24 = &LAB_0040f337;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  puStack_20 = &stack0xfffffffc;
  puVar1 = (undefined *)FUN_00402e9c(local_8);
  local_d = FUN_0040f200(puVar1,extraout_EDX,extraout_ECX,(int)puVar2);
  if (local_e != '\0') {
    FUN_0040f15c();
  }
  *in_FS_OFFSET = uStack_28;
  puStack_20 = &LAB_0040f33e;
  if (local_e != '\0') {
    puStack_24 = (undefined1 *)0x40f336;
    FUN_0040f18c();
  }
  return;
}



void FUN_0040f36c(int *param_1,char param_2)

{
  int *piVar1;
  char extraout_DL;
  
  piVar1 = FUN_004032b4(param_1,param_2);
  (**(code **)(*piVar1 + 8))();
  if ('\0' < extraout_DL) {
    FUN_004032a4(piVar1);
  }
  return;
}



int FUN_0040f38c(int *param_1,int param_2)

{
  int iVar1;
  
  iVar1 = param_1[2];
  if (iVar1 == param_1[3]) {
    (**(code **)*param_1)();
  }
  *(int *)(param_1[1] + iVar1 * 4) = param_2;
  param_1[2] = param_1[2] + 1;
  if (param_2 != 0) {
    (**(code **)(*param_1 + 4))(param_1,param_2,0);
  }
  return iVar1;
}



void FUN_0040f3c0(int *param_1)

{
  FUN_0040f6dc(param_1,0);
  FUN_0040f6a0(param_1,0);
  return;
}



void FUN_0040f3d8(int *param_1,int param_2)

{
  int iVar1;
  
  if ((param_2 < 0) || (param_1[2] <= param_2)) {
    FUN_0040f474(*param_1,(undefined4 *)PTR_PTR_0047581c,param_2);
  }
  iVar1 = FUN_0040f4e8(param_1,param_2);
  param_1[2] = param_1[2] + -1;
  if (param_2 < param_1[2]) {
    FUN_00402920((undefined4 *)(param_1[1] + 4 + param_2 * 4),
                 (undefined4 *)(param_1[1] + param_2 * 4),(param_1[2] - param_2) * 4);
  }
  if (iVar1 != 0) {
    (**(code **)(*param_1 + 4))(param_1,iVar1,2);
  }
  return;
}



undefined4 FUN_0040f438(void)

{
  int unaff_EBP;
  
  return *(undefined4 *)(unaff_EBP + 4);
}



void FUN_0040f43c(undefined4 param_1,byte *param_2,undefined4 param_3)

{
  undefined4 uVar1;
  undefined4 local_10;
  undefined1 local_c;
  
  FUN_0040f438();
  local_c = 0;
  local_10 = param_3;
  uVar1 = FUN_0040aa4c((int)PTR_DAT_0040da80,'\x01',param_2,0,&local_10);
  FUN_004036ac(uVar1);
  return;
}



void FUN_0040f474(undefined4 param_1,undefined4 *param_2,undefined4 param_3)

{
  undefined4 unaff_EBX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  byte *local_8;
  
  puStack_14 = &stack0xfffffffc;
  local_8 = (byte *)0x0;
  puStack_18 = &LAB_0040f4bc;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  FUN_004054e4(param_2,(int *)&local_8);
  FUN_0040f43c(PTR_PTR_0040dca8,local_8,param_3);
  *in_FS_OFFSET = unaff_EBX;
  local_8 = (byte *)0x40f4bb;
  FUN_00403bdc((int *)&local_8);
  return;
}



undefined4 * FUN_0040f4c8(undefined4 *param_1)

{
  if (param_1[2] == param_1[3]) {
    (**(code **)*param_1)();
  }
  return param_1;
}



void FUN_0040f4e0(undefined4 *param_1)

{
  FUN_0040f4e8(param_1,0);
  return;
}



undefined4 FUN_0040f4e8(undefined4 *param_1,int param_2)

{
  if ((param_2 < 0) || ((int)param_1[2] <= param_2)) {
    FUN_0040f474(*param_1,(undefined4 *)PTR_PTR_0047581c,param_2);
  }
  return *(undefined4 *)(param_1[1] + param_2 * 4);
}



int FUN_0040f544(int param_1,int param_2)

{
  int iVar1;
  
  for (iVar1 = 0;
      (iVar1 < *(int *)(param_1 + 8) && (param_2 != *(int *)(*(int *)(param_1 + 4) + iVar1 * 4)));
      iVar1 = iVar1 + 1) {
  }
  if (iVar1 == *(int *)(param_1 + 8)) {
    iVar1 = -1;
  }
  return iVar1;
}



void FUN_0040f564(int *param_1,int param_2,int param_3)

{
  if ((param_2 < 0) || (param_1[2] < param_2)) {
    FUN_0040f474(*param_1,(undefined4 *)PTR_PTR_0047581c,param_2);
  }
  if (param_1[2] == param_1[3]) {
    (**(code **)*param_1)();
  }
  if (param_2 < param_1[2]) {
    FUN_00402920((undefined4 *)(param_1[1] + param_2 * 4),
                 (undefined4 *)(param_1[1] + 4 + param_2 * 4),(param_1[2] - param_2) * 4);
  }
  *(int *)(param_1[1] + param_2 * 4) = param_3;
  param_1[2] = param_1[2] + 1;
  if (param_3 != 0) {
    (**(code **)(*param_1 + 4))(param_1,param_3,0);
  }
  return;
}



void FUN_0040f5d0(undefined4 *param_1)

{
  FUN_0040f4e8(param_1,param_1[2] + -1);
  return;
}



void FUN_0040f5dc(int *param_1,int param_2,int param_3)

{
  undefined4 uVar1;
  
  if (param_3 != param_2) {
    if ((param_3 < 0) || (param_1[2] <= param_3)) {
      FUN_0040f474(*param_1,(undefined4 *)PTR_PTR_0047581c,param_3);
    }
    uVar1 = FUN_0040f4e8(param_1,param_2);
    *(undefined4 *)(param_1[1] + param_2 * 4) = 0;
    FUN_0040f3d8(param_1,param_2);
    FUN_0040f564(param_1,param_3,0);
    *(undefined4 *)(param_1[1] + param_3 * 4) = uVar1;
  }
  return;
}



void FUN_0040f634(int *param_1,int param_2,int param_3)

{
  int iVar1;
  
  if ((param_2 < 0) || (param_1[2] <= param_2)) {
    FUN_0040f474(*param_1,(undefined4 *)PTR_PTR_0047581c,param_2);
  }
  iVar1 = *(int *)(param_1[1] + param_2 * 4);
  *(int *)(param_1[1] + param_2 * 4) = param_3;
  if (iVar1 != 0) {
    (**(code **)(*param_1 + 4))(param_1,param_3,2);
  }
  if (param_3 != 0) {
    (**(code **)(*param_1 + 4))(param_1,param_3,0);
  }
  return;
}



int FUN_0040f680(int *param_1,int param_2)

{
  int iVar1;
  
  iVar1 = FUN_0040f544((int)param_1,param_2);
  if (-1 < iVar1) {
    FUN_0040f3d8(param_1,iVar1);
  }
  return iVar1;
}



void FUN_0040f6a0(undefined4 *param_1,int param_2)

{
  if ((param_2 < (int)param_1[2]) || (0x7ffffff < param_2)) {
    FUN_0040f474(*param_1,(undefined4 *)PTR_PTR_00475770,param_2);
  }
  if (param_2 != param_1[3]) {
    FUN_00402724(param_1 + 1,param_2 << 2);
    param_1[3] = param_2;
  }
  return;
}



void FUN_0040f6dc(int *param_1,int param_2)

{
  int iVar1;
  int iVar2;
  
  if ((param_2 < 0) || (0x7ffffff < param_2)) {
    FUN_0040f474(*param_1,(undefined4 *)PTR_PTR_004756f0,param_2);
  }
  if (param_1[3] < param_2) {
    FUN_0040f6a0(param_1,param_2);
  }
  iVar1 = param_1[2];
  if (iVar1 < param_2) {
    FUN_00402c14((undefined4 *)(param_1[1] + iVar1 * 4),(param_2 - iVar1) * 4,0);
  }
  else {
    iVar1 = iVar1 + -1;
    if (param_2 - iVar1 == 0 || param_2 < iVar1) {
      iVar2 = (param_2 - iVar1) + -1;
      do {
        FUN_0040f3d8(param_1,iVar1);
        iVar1 = iVar1 + -1;
        iVar2 = iVar2 + 1;
      } while (iVar2 != 0);
    }
  }
  param_1[2] = param_2;
  return;
}



int * FUN_0040f750(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00402f24(param_1,'\0',param_3);
  InitializeCriticalSection((LPCRITICAL_SECTION)(param_1 + 2));
  iVar1 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX_00);
  param_1[1] = iVar1;
  *(undefined1 *)(param_1 + 8) = 0;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_0040f820(int param_1,int param_2)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  
  puStack_10 = (undefined1 *)0x40f832;
  FUN_0040f8a8(param_1);
  puStack_14 = &LAB_0040f89c;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  puStack_10 = &stack0xfffffffc;
  if (*(char *)(param_1 + 0x20) != '\x01') {
    puStack_10 = &stack0xfffffffc;
    iVar1 = FUN_0040f544(*(int *)(param_1 + 4),param_2);
    if (iVar1 != -1) {
      if (*(char *)(param_1 + 0x20) == '\x02') {
        FUN_0040f474(**(undefined4 **)(param_1 + 4),(undefined4 *)PTR_LAB_004756d8,param_2);
      }
      goto LAB_0040f886;
    }
  }
  FUN_0040f38c(*(int **)(param_1 + 4),param_2);
LAB_0040f886:
  *in_FS_OFFSET = uStack_18;
  puStack_10 = &LAB_0040f8a3;
  puStack_14 = (undefined1 *)0x40f89b;
  FUN_0040f90c(param_1);
  return;
}



undefined4 FUN_0040f8a8(int param_1)

{
  EnterCriticalSection((LPCRITICAL_SECTION)(param_1 + 8));
  return *(undefined4 *)(param_1 + 4);
}



void FUN_0040f8bc(int param_1,int param_2)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  
  puStack_10 = (undefined1 *)0x40f8ce;
  FUN_0040f8a8(param_1);
  puStack_14 = &LAB_0040f8ff;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  puStack_10 = &stack0xfffffffc;
  FUN_0040f680(*(int **)(param_1 + 4),param_2);
  *in_FS_OFFSET = uStack_18;
  puStack_10 = &LAB_0040f906;
  puStack_14 = (undefined1 *)0x40f8fe;
  FUN_0040f90c(param_1);
  return;
}



void FUN_0040f90c(int param_1)

{
  LeaveCriticalSection((LPCRITICAL_SECTION)(param_1 + 8));
  return;
}



void FUN_0040f948(void)

{
  int *piVar1;
  
  piVar1 = FUN_0040aacc((int *)PTR_DAT_0040dad8,'\x01',(undefined4 *)PTR_PTR_00475850);
  FUN_004036ac(piVar1);
  return;
}



int FUN_0040f960(int param_1,int param_2)

{
  if (param_2 < param_1) {
    param_1 = param_2;
  }
  return param_1;
}



void FUN_0040f96c(int param_1,int param_2)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  undefined4 local_14;
  
  if (param_2 != *(int *)(param_1 + 4)) {
    if (param_2 < 0) {
      FUN_0040f948();
    }
    iVar1 = param_2 + 0x1f;
    if (iVar1 < 0) {
      iVar1 = param_2 + 0x3e;
    }
    uVar3 = (iVar1 >> 5) << 2;
    iVar1 = *(int *)(param_1 + 4) + 0x1f;
    if (iVar1 < 0) {
      iVar1 = *(int *)(param_1 + 4) + 0x3e;
    }
    uVar2 = (iVar1 >> 5) << 2;
    if (uVar2 != uVar3) {
      local_14 = (undefined4 *)0x0;
      if (uVar3 != 0) {
        local_14 = (undefined4 *)FUN_004026f4(uVar3);
        FUN_00402c14(local_14,uVar3,0);
      }
      if (uVar2 != 0) {
        if (local_14 != (undefined4 *)0x0) {
          uVar3 = FUN_0040f960(uVar2,uVar3);
          FUN_00402920(*(undefined4 **)(param_1 + 8),local_14,uVar3);
        }
        FUN_0040270c(*(int *)(param_1 + 8));
      }
      *(undefined4 **)(param_1 + 8) = local_14;
    }
    *(int *)(param_1 + 4) = param_2;
  }
  return;
}



void FUN_0040fa10(int param_1,uint param_2,char param_3)

{
  byte *pbVar1;
  int *piVar2;
  
  if (*(uint *)(param_1 + 4) <= param_2) {
    if ((int)param_2 < 0) {
      piVar2 = FUN_0040aacc((int *)PTR_DAT_0040dad8,'\x01',(undefined4 *)PTR_PTR_00475850);
      FUN_004036ac(piVar2);
      return;
    }
    FUN_0040f96c(param_1,param_2 + 1);
  }
  if (param_3 != '\0') {
    pbVar1 = (byte *)(*(int *)(param_1 + 8) + ((int)param_2 >> 3));
    *pbVar1 = *pbVar1 | '\x01' << (param_2 & 7);
    return;
  }
  pbVar1 = (byte *)(*(int *)(param_1 + 8) + ((int)param_2 >> 3));
  *pbVar1 = *pbVar1 & ~('\x01' << (param_2 & 7));
  return;
}



uint FUN_0040fa3c(int param_1,uint param_2)

{
  int *piVar1;
  uint uVar2;
  
  if (param_2 < *(uint *)(param_1 + 4)) {
    return -(uint)((*(byte *)(*(int *)(param_1 + 8) + ((int)param_2 >> 3)) >> (param_2 & 7) & 1) !=
                  0) & 1;
  }
  piVar1 = FUN_0040aacc((int *)PTR_DAT_0040dad8,'\x01',(undefined4 *)PTR_PTR_00475850);
  uVar2 = FUN_004036ac(piVar1);
  return uVar2;
}



int FUN_0040fa54(int param_1)

{
  uint uVar1;
  int iVar2;
  bool bVar3;
  int local_10;
  
  local_10 = *(int *)(param_1 + 4) + 0x1f;
  if (local_10 < 0) {
    local_10 = *(int *)(param_1 + 4) + 0x3e;
  }
  local_10 = local_10 >> 5;
  if (-1 < local_10 + -1) {
    iVar2 = 0;
    do {
      if (DAT_0040fac8 != *(int *)(*(int *)(param_1 + 8) + iVar2 * 4)) {
        uVar1 = 0;
        do {
          bVar3 = (byte)uVar1 < 0x1f;
          if ((byte)uVar1 < 0x20) {
            bVar3 = (*(uint *)(*(int *)(param_1 + 8) + iVar2 * 4) >> (uVar1 & 0x1f) & 1) != 0;
          }
          if (!bVar3) {
            iVar2 = iVar2 * 0x20 + (uVar1 & 0x7f);
            if (iVar2 < *(int *)(param_1 + 4)) {
              return iVar2;
            }
            return *(int *)(param_1 + 4);
          }
          uVar1 = uVar1 + 1;
        } while ((char)uVar1 != ' ');
      }
      iVar2 = iVar2 + 1;
      local_10 = local_10 + -1;
    } while (local_10 != 0);
  }
  return *(int *)(param_1 + 4);
}



void FUN_0040facc(int *param_1,char param_2)

{
  int *piVar1;
  byte extraout_DL;
  
  piVar1 = FUN_004032b4(param_1,param_2);
  FUN_0041210c((int)piVar1);
  FUN_00402f44(piVar1,extraout_DL & 0xfc);
  if ('\0' < (char)extraout_DL) {
    FUN_004032a4(piVar1);
  }
  return;
}



void FUN_0040faf8(int *param_1,undefined4 *param_2)

{
  if (param_2 != (undefined4 *)0x0) {
    (**(code **)*param_2)(param_2,param_1);
    return;
  }
  FUN_0040fb0c(param_1,(int *)0x0);
  return;
}



void FUN_0040fb0c(int *param_1,int *param_2)

{
  undefined4 uVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_12c;
  undefined1 *puStack_128;
  undefined1 *puStack_124;
  int local_118;
  undefined1 local_114;
  byte *local_110;
  undefined1 local_10c;
  byte local_108 [256];
  int local_8;
  
  puStack_124 = &stack0xfffffffc;
  local_8 = 0;
  puStack_128 = &LAB_0040fbc2;
  uStack_12c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_12c;
  if (param_2 == (int *)0x0) {
    FUN_00403c74(&local_8,0x40fbd8);
  }
  else {
    puStack_124 = &stack0xfffffffc;
    FUN_00402ea0(*param_2,local_108);
    FUN_00403e00(&local_8,local_108);
  }
  local_118 = local_8;
  local_114 = 0xb;
  FUN_00402ea0(*param_1,local_108);
  local_110 = local_108;
  local_10c = 4;
  uVar1 = FUN_0040ab08((int)PTR_DAT_00407cac,'\x01',(undefined4 *)PTR_PTR_00475708,1,&local_118);
  FUN_004036ac(uVar1);
  *in_FS_OFFSET = puStack_124;
  FUN_00403bdc(&local_8);
  return;
}



void FUN_0040fbdc(int *param_1,int *param_2)

{
  FUN_0040fb0c(param_2,param_1);
  return;
}



int * FUN_0040fc9c(int *param_1,char param_2,int *param_3)

{
  int *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0040fe20(param_1,param_3,param_3);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_0040fd04(int param_1,char param_2)

{
  int *piVar1;
  
  piVar1 = *(int **)(param_1 + 4);
  if ((piVar1 != (int *)0x0) && (piVar1[3] == 0)) {
    if (param_2 != '\0') {
      param_1 = 0;
    }
    (**(code **)(*piVar1 + 0x10))(piVar1,param_1);
  }
  return;
}



int FUN_0040fd28(int param_1)

{
  int iVar1;
  
  if (*(int *)(param_1 + 4) != 0) {
    iVar1 = FUN_0040f544(*(int *)(*(int *)(param_1 + 4) + 8),param_1);
    return iVar1;
  }
  return -1;
}



void FUN_0040fd40(int *param_1,int *param_2)

{
  byte abStack_108 [256];
  
  FUN_00402ea0(*param_1,abStack_108);
  FUN_00403e00(param_2,abStack_108);
  return;
}



void FUN_0040fd68(int *param_1,int *param_2)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_130;
  undefined1 *puStack_12c;
  undefined1 *puStack_128;
  byte local_118 [256];
  int local_18;
  int local_14;
  undefined1 local_10;
  int local_c;
  undefined1 local_8;
  
  puStack_128 = &stack0xfffffffc;
  local_18 = 0;
  puStack_12c = &LAB_0040fdfd;
  uStack_130 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_130;
  if (param_1[1] == 0) {
    FUN_00402ea0(*param_1,local_118);
    FUN_00403e00(param_2,local_118);
  }
  else {
    puStack_128 = &stack0xfffffffc;
    FUN_00403130((int *)param_1[1],&local_18,0);
    local_14 = local_18;
    local_10 = 0xb;
    local_c = FUN_0040fd28((int)param_1);
    local_8 = 0;
    FUN_00409224((byte *)s__s__d__0040fe14,&local_14,1,param_2);
  }
  *in_FS_OFFSET = uStack_130;
  puStack_128 = &LAB_0040fe04;
  puStack_12c = (undefined1 *)0x40fdfc;
  FUN_00403bdc(&local_18);
  return;
}



void FUN_0040fe20(int *param_1,int *param_2,undefined4 param_3)

{
  int *piVar1;
  
  piVar1 = (int *)param_1[1];
  if (param_2 != piVar1) {
    if (piVar1 != (int *)0x0) {
      FUN_004103b8(piVar1,(int)param_1,param_3);
    }
    if (param_2 != (int *)0x0) {
      FUN_0041035c(param_2,param_1);
    }
  }
  return;
}



int * FUN_0040fe80(int *param_1,char param_2,int param_3)

{
  int iVar1;
  int extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  param_1[1] = param_3;
  iVar1 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',param_3);
  param_1[2] = iVar1;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_0040ff04(int param_1)

{
  (**(code **)(*(int *)(param_1 + 4) + 0x18))(*(int *)(param_1 + 4),1,param_1);
  return;
}



void FUN_0040ff10(int *param_1,int *param_2)

{
  undefined1 *puVar1;
  int *piVar2;
  int iVar3;
  undefined4 uVar4;
  int iVar5;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  
  puStack_18 = (undefined1 *)0x40ff29;
  piVar2 = FUN_004030cc(param_2,(int)PTR_PTR_0040df08);
  if ((char)piVar2 != '\0') {
    puStack_18 = (undefined1 *)0x40ff35;
    (**(code **)(*param_1 + 0x14))();
    puStack_1c = &LAB_0040ff8e;
    uStack_20 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_20;
    puStack_18 = &stack0xfffffffc;
    FUN_0040ffbc(param_1);
    iVar3 = FUN_00410060((int)param_2);
    if (-1 < iVar3 + -1) {
      iVar5 = 0;
      do {
        uVar4 = FUN_00410068((int)param_2,iVar5);
        piVar2 = (int *)FUN_0040ff04((int)param_1);
        (**(code **)(*piVar2 + 8))(piVar2,uVar4);
        iVar5 = iVar5 + 1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
    puVar1 = puStack_18;
    *in_FS_OFFSET = uStack_20;
    puStack_18 = (undefined1 *)0x40ff9f;
    puStack_1c = (undefined1 *)0x40ff8d;
    (**(code **)(*param_1 + 0x18))(param_1,*param_1,puVar1);
    return;
  }
  puStack_18 = (undefined1 *)0x40ff9f;
  FUN_0040faf8(param_1,param_2);
  return;
}



void FUN_0040ffac(int *param_1)

{
  if (param_1[3] == 0) {
    (**(code **)(*param_1 + 0x10))(param_1,0);
  }
  return;
}



void FUN_0040ffbc(int *param_1)

{
  undefined1 *puVar1;
  int *piVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  
  if (0 < *(int *)(param_1[2] + 8)) {
    puStack_10 = (undefined1 *)0x40ffd8;
    (**(code **)(*param_1 + 0x14))();
    puStack_14 = &LAB_00410016;
    uStack_18 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_18;
    puStack_10 = &stack0xfffffffc;
    while (puVar1 = puStack_10, 0 < (int)((undefined4 *)param_1[2])[2]) {
      piVar2 = (int *)FUN_0040f5d0((undefined4 *)param_1[2]);
      FUN_00402f54(piVar2);
    }
    *in_FS_OFFSET = uStack_18;
    puStack_10 = (undefined1 *)0x41001d;
    puStack_14 = (undefined1 *)0x410015;
    (**(code **)(*param_1 + 0x18))(param_1,*param_1,puVar1);
    return;
  }
  return;
}



void FUN_00410040(int param_1,undefined4 param_2,int param_3,undefined4 param_4)

{
  int *piVar1;
  
  piVar1 = (int *)FUN_00410068(param_1,param_3);
  (**(code **)(*piVar1 + 0xc))(piVar1,param_4);
  return;
}



undefined4 FUN_00410060(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 8) + 8);
}



void FUN_00410068(int param_1,int param_2)

{
  FUN_0040f4e8(*(undefined4 **)(param_1 + 8),param_2);
  return;
}



void FUN_0041007c(int *param_1,int *param_2)

{
  int iVar1;
  int *piVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  int *in_FS_OFFSET;
  int iStack_130;
  int iStack_124;
  undefined1 *puStack_120;
  undefined1 *puStack_11c;
  byte local_10c [256];
  int local_c;
  int local_8;
  
  puStack_11c = &stack0xfffffffc;
  local_8 = 0;
  local_c = 0;
  puStack_120 = &LAB_0041012a;
  iStack_124 = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)&iStack_124;
  FUN_00402ea0(*param_1,local_10c);
  FUN_00403e00(param_2,local_10c);
  iVar1 = FUN_00403130(param_1,extraout_EDX,extraout_ECX);
  if (iVar1 != 0) {
    piVar2 = (int *)FUN_00403130(param_1,extraout_EDX_00,extraout_ECX_00);
    FUN_00403130(piVar2,&local_8,extraout_ECX_01);
    if (local_8 != 0) {
      FUN_00410144(param_1,&local_c);
      if (local_c != 0) {
        iStack_130 = local_c;
        FUN_00403f1c(param_2,3);
      }
    }
  }
  *in_FS_OFFSET = iStack_130;
  FUN_00403c00(&local_c,2);
  return;
}



void FUN_00410144(int *param_1,int *param_2)

{
  undefined4 *puVar1;
  int *piVar2;
  int iVar3;
  undefined4 *puVar4;
  int iVar5;
  int *piVar6;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_2c;
  undefined1 *puStack_28;
  undefined1 *puStack_24;
  
  puStack_24 = (undefined1 *)0x410161;
  FUN_00403c30(param_2,(undefined4 *)param_1[5]);
  puStack_24 = (undefined1 *)0x41016d;
  piVar2 = (int *)FUN_00403130(param_1,extraout_EDX,extraout_ECX);
  if ((*param_2 == 0) && (piVar2 != (int *)0x0)) {
    puStack_24 = (undefined1 *)0x410190;
    iVar3 = FUN_00403174(*piVar2);
    if (iVar3 != 0) {
      puStack_24 = (undefined1 *)0x4101a2;
      iVar3 = FUN_00403174(*piVar2);
      puStack_24 = (undefined1 *)0x4101a7;
      iVar3 = FUN_0040d0fc(iVar3);
      if ((iVar3 != 0) && (*(short *)(iVar3 + 8) != 0)) {
        puStack_24 = (undefined1 *)0x4101c8;
        puVar4 = (undefined4 *)FUN_004026f4((int)*(short *)(iVar3 + 8) << 2);
        puStack_28 = &LAB_00410241;
        uStack_2c = *in_FS_OFFSET;
        *in_FS_OFFSET = &uStack_2c;
        puStack_24 = &stack0xfffffffc;
        iVar5 = FUN_00403174(*piVar2);
        FUN_0040d1d4(iVar5,puVar4);
        iVar3 = (int)*(short *)(iVar3 + 8);
        if (-1 < iVar3 + -1) {
          iVar5 = 0;
          do {
            puVar1 = (undefined4 *)puVar4[iVar5];
            if (**(char **)*puVar1 == '\a') {
              piVar6 = (int *)FUN_0040d228(piVar2,(undefined4 *)puVar4[iVar5]);
              if (piVar6 == param_1) {
                FUN_00403e00(param_1 + 5,(byte *)((int)puVar1 + 0x1a));
              }
            }
            iVar5 = iVar5 + 1;
            iVar3 = iVar3 + -1;
          } while (iVar3 != 0);
        }
        *in_FS_OFFSET = uStack_2c;
        puStack_24 = &LAB_00410248;
        puStack_28 = (undefined1 *)0x410240;
        FUN_0040270c((int)puVar4);
        return;
      }
    }
  }
  return;
}



void FUN_00410260(int *param_1,int *param_2)

{
  int *piVar1;
  int *piVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  if (param_2 != (int *)0x0) {
    *param_2 = 0;
  }
  FUN_0040553c(param_2);
  if (param_1 != (int *)0x0) {
    piVar1 = (int *)FUN_00403130(param_1,extraout_EDX,extraout_ECX);
    if (piVar1 == (int *)0x0) {
      piVar1 = FUN_004030cc(param_1,(int)PTR_PTR_0040e784);
      if (((char)piVar1 != '\0') && ((*(byte *)(param_1 + 8) & 0x10) != 0)) {
        FUN_0040553c(param_2);
        (**(code **)(*param_1 + 0x28))();
      }
    }
    else {
      piVar2 = FUN_004030cc(param_1,(int)PTR_PTR_0040e784);
      if (((char)piVar2 == '\0') || ((*(byte *)(param_1 + 8) & 0x10) != 0)) {
        piVar2 = FUN_0040553c(param_2);
        FUN_00410260(piVar1,piVar2);
      }
    }
  }
  return;
}



void FUN_004102f8(int *param_1,undefined4 param_2,undefined4 param_3)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  int *local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_8 = (int *)0x0;
  puStack_1c = &LAB_0041034d;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  piVar1 = FUN_0040553c((int *)&local_8);
  FUN_00410260(param_1,piVar1);
  if (local_8 != (int *)0x0) {
    (**(code **)(*local_8 + 0x10))(local_8,param_2,param_3);
  }
  *in_FS_OFFSET = uStack_20;
  puStack_18 = &LAB_00410354;
  puStack_1c = (undefined1 *)0x41034c;
  FUN_0040553c((int *)&local_8);
  return;
}



void FUN_0041035c(int *param_1,int *param_2)

{
  int *piVar1;
  
  piVar1 = FUN_004030cc(param_2,param_1[1]);
  if ((char)piVar1 == '\0') {
    FUN_0040f474(PTR_PTR_0040dca8,(undefined4 *)PTR_PTR_0047579c,0);
  }
  FUN_0040f38c((int *)param_1[2],(int)param_2);
  param_2[1] = (int)param_1;
  param_2[2] = param_1[4];
  param_1[4] = param_1[4] + 1;
  (**(code **)(*param_1 + 0xc))(param_1,param_2);
  FUN_0040ffac(param_1);
  FUN_004102f8(param_1,param_2,0);
  return;
}



void FUN_004103b8(int *param_1,int param_2,undefined4 param_3)

{
  FUN_004102f8(param_1,param_2,CONCAT31((int3)((uint)param_3 >> 8),1));
  FUN_0040f680((int *)param_1[2],param_2);
  *(undefined4 *)(param_2 + 4) = 0;
  FUN_0040ffac(param_1);
  return;
}



void FUN_004103ec(int *param_1,char param_2)

{
  int *piVar1;
  byte extraout_DL;
  
  piVar1 = FUN_004032b4(param_1,param_2);
  FUN_00410df8((int)piVar1,(int *)0x0);
  FUN_0040facc(piVar1,extraout_DL & 0xfc);
  if ('\0' < (char)extraout_DL) {
    FUN_004032a4(piVar1);
  }
  return;
}



void FUN_0041058c(int *param_1)

{
  if (param_1[1] == 0) {
    (**(code **)(*param_1 + 0x30))(param_1,1);
  }
  param_1[1] = param_1[1] + 1;
  return;
}



byte FUN_004105a4(void)

{
  int *piVar1;
  byte bVar2;
  int *piVar3;
  int iVar4;
  int in_stack_00000004;
  
  piVar1 = *(int **)(*(int *)(in_stack_00000004 + -4) + 0x20);
  if (piVar1 == (int *)0x0) {
    iVar4 = (**(code **)(**(int **)(in_stack_00000004 + -8) + 0x14))();
    bVar2 = 0 < iVar4;
  }
  else {
    bVar2 = 1;
    piVar3 = FUN_004030cc(piVar1,(int)PTR_PTR_0040e004);
    if ((char)piVar3 != '\0') {
      bVar2 = FUN_0041065c(*(int **)(in_stack_00000004 + -8),piVar1);
      bVar2 = bVar2 ^ 1;
    }
  }
  return bVar2;
}



void FUN_00410648(int *param_1)

{
  param_1[1] = param_1[1] + -1;
  if (param_1[1] == 0) {
    (**(code **)(*param_1 + 0x30))(param_1,0);
  }
  return;
}



void FUN_0041065c(int *param_1,int *param_2)

{
  uint *puVar1;
  int iVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  undefined1 uVar4;
  undefined4 uStack_30;
  undefined1 *puStack_2c;
  undefined1 *puStack_28;
  uint *local_18;
  uint *local_14;
  undefined1 local_d;
  int *local_c;
  int *local_8;
  
  puStack_28 = &stack0xfffffffc;
  local_14 = (uint *)0x0;
  local_18 = (uint *)0x0;
  puStack_2c = &LAB_004106f1;
  uStack_30 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_30;
  local_d = 0;
  local_c = param_2;
  local_8 = param_1;
  iVar2 = (**(code **)(*param_1 + 0x14))();
  iVar3 = (**(code **)(*local_c + 0x14))();
  if (iVar2 == iVar3) {
    if (-1 < iVar2 + -1) {
      iVar3 = 0;
      uVar4 = true;
      do {
        (**(code **)(*local_8 + 0xc))(local_8,iVar3,&local_14);
        puVar1 = local_14;
        (**(code **)(*local_c + 0xc))(local_c,iVar3,&local_18);
        FUN_00403f6c(puVar1,local_18);
        if (!(bool)uVar4) goto LAB_004106d6;
        iVar3 = iVar3 + 1;
        iVar2 = iVar2 + -1;
        uVar4 = iVar2 == 0;
      } while (!(bool)uVar4);
    }
    local_d = 1;
  }
LAB_004106d6:
  *in_FS_OFFSET = uStack_30;
  puStack_28 = &LAB_004106f8;
  puStack_2c = (undefined1 *)0x4106f0;
  FUN_00403c00((int *)&local_18,2);
  return;
}



undefined4 FUN_00410704(void)

{
  int unaff_EBP;
  
  return *(undefined4 *)(unaff_EBP + 4);
}



void FUN_00410708(undefined4 param_1,byte *param_2,undefined4 param_3)

{
  undefined4 uVar1;
  undefined4 local_10;
  undefined1 local_c;
  
  FUN_00410704();
  local_c = 0;
  local_10 = param_3;
  uVar1 = FUN_0040aa4c((int)PTR_DAT_0040db30,'\x01',param_2,0,&local_10);
  FUN_004036ac(uVar1);
  return;
}



void FUN_00410740(undefined4 param_1,undefined4 *param_2,undefined4 param_3)

{
  undefined4 unaff_ESI;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  byte *local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_8 = (byte *)0x0;
  puStack_1c = &LAB_00410788;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  FUN_004054e4(param_2,(int *)&local_8);
  FUN_00410708(param_1,local_8,param_3);
  *in_FS_OFFSET = unaff_ESI;
  local_8 = &LAB_0041078f;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_0041088c(int *param_1)

{
  char *pcVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  undefined *local_8;
  
  puStack_10 = &stack0xfffffffc;
  local_8 = (undefined *)0x0;
  puStack_14 = &LAB_004108d1;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  (**(code **)(*param_1 + 0x1c))(param_1,&local_8);
  pcVar1 = FUN_00404020(local_8);
  FUN_00408d10(pcVar1);
  *in_FS_OFFSET = uStack_18;
  puStack_10 = &LAB_004108d8;
  puStack_14 = (undefined1 *)0x4108d0;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_004109c8(int *param_1,undefined *param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  undefined *local_10;
  undefined *local_c;
  int *local_8;
  
  puStack_20 = &stack0xfffffffc;
  local_10 = (undefined *)0x0;
  puStack_24 = &LAB_00410a35;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  local_c = param_2;
  local_8 = param_1;
  iVar1 = (**(code **)(*param_1 + 0x14))();
  if (-1 < iVar1 + -1) {
    iVar3 = 0;
    do {
      (**(code **)(*local_8 + 0xc))(local_8,iVar3,&local_10);
      iVar2 = FUN_004083e0(local_10,local_c);
      if (iVar2 == 0) break;
      iVar3 = iVar3 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  *in_FS_OFFSET = uStack_28;
  puStack_20 = &LAB_00410a3c;
  puStack_24 = (undefined1 *)0x410a34;
  FUN_00403bdc((int *)&local_10);
  return;
}



int FUN_00410a48(int *param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  iVar1 = (**(code **)(*param_1 + 0x14))();
  if (-1 < iVar1 + -1) {
    iVar3 = 0;
    do {
      iVar2 = (**(code **)(*param_1 + 0x18))(param_1,iVar3);
      if (param_2 == iVar2) {
        return iVar3;
      }
      iVar3 = iVar3 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  return -1;
}



void FUN_00410a7c(int *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  (**(code **)(*param_1 + 0x54))(param_1,param_2,param_3);
  (**(code **)(*param_1 + 0x24))(param_1,param_2,param_4);
  return;
}



void FUN_00410b00(int *param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_2c;
  undefined1 *puStack_28;
  undefined1 *puStack_24;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  int local_c;
  int *local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_c = 0;
  puStack_1c = &LAB_00410b9e;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  puStack_24 = (undefined1 *)0x410b28;
  local_8 = param_1;
  FUN_0041058c(param_1);
  puStack_28 = &LAB_00410b81;
  uStack_2c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_2c;
  puStack_24 = &stack0xfffffffc;
  iVar1 = FUN_00411598(param_2);
  iVar2 = FUN_0041157c(param_2);
  FUN_00403cc4(&local_c,(undefined4 *)0x0,iVar1 - iVar2);
  (**(code **)(*param_2 + 4))(param_2,local_c,iVar1 - iVar2);
  (**(code **)(*local_8 + 0x2c))(local_8,local_c);
  *in_FS_OFFSET = uStack_2c;
  puStack_24 = &LAB_00410b88;
  puStack_28 = (undefined1 *)0x410b80;
  FUN_00410648(local_8);
  return;
}



void FUN_00410bac(int *param_1,int param_2,int param_3)

{
  undefined4 uVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_30;
  undefined1 *puStack_2c;
  undefined1 *puStack_28;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  int local_c;
  int *local_8;
  
  puStack_1c = &stack0xfffffffc;
  local_c = 0;
  puStack_20 = &LAB_00410c4d;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  local_8 = param_1;
  if (param_3 != param_2) {
    puStack_28 = (undefined1 *)0x410bdb;
    FUN_0041058c(param_1);
    puStack_2c = &LAB_00410c30;
    uStack_30 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_30;
    puStack_28 = &stack0xfffffffc;
    (**(code **)(*local_8 + 0xc))(local_8,param_2,&local_c);
    uVar1 = (**(code **)(*local_8 + 0x18))(local_8,param_2);
    (**(code **)(*local_8 + 0x44))(local_8,param_2);
    FUN_00410a7c(local_8,param_3,local_c,uVar1);
    *in_FS_OFFSET = uStack_30;
    puStack_28 = (undefined1 *)0x410c37;
    puStack_2c = (undefined1 *)0x410c2f;
    FUN_00410648(local_8);
    return;
  }
  *in_FS_OFFSET = uStack_24;
  puStack_1c = &LAB_00410c54;
  puStack_20 = (undefined1 *)0x410c4c;
  FUN_00403bdc(&local_c);
  return;
}



void FUN_00410c5c(int *param_1,undefined4 param_2,undefined4 param_3)

{
  undefined4 uVar1;
  
  uVar1 = (**(code **)(*param_1 + 0x18))(param_1,param_2);
  (**(code **)(*param_1 + 0x44))(param_1,param_2);
  FUN_00410a7c(param_1,param_2,param_3,uVar1);
  return;
}



void FUN_00410d40(int *param_1,undefined *param_2)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY_18;
  undefined1 *puStackY_14;
  
  puStackY_14 = (undefined1 *)0x410d5a;
  piVar1 = FUN_004117a0((int *)PTR_PTR_0040e2f8,'\x01',param_2,0xffff);
  puStackY_14 = &LAB_00410d8b;
  uStackY_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY_18;
  (**(code **)(*param_1 + 0x68))(param_1,piVar1);
  *in_FS_OFFSET = uStackY_18;
  puStackY_14 = (undefined1 *)0x410d8a;
  FUN_00402f54(piVar1);
  return;
}



void FUN_00410df8(int param_1,int *param_2)

{
  if (*(int *)(param_1 + 8) != 0) {
    (**(code **)(**(int **)(param_1 + 8) + 0x10))();
  }
  FUN_00405554((int *)(param_1 + 8),param_2);
  if (*(int *)(param_1 + 8) != 0) {
    (**(code **)(**(int **)(param_1 + 8) + 0xc))(*(int **)(param_1 + 8),param_1);
  }
  return;
}



void FUN_00410e7c(int *param_1,char *param_2)

{
  char cVar1;
  char *pcVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  int local_c;
  int *local_8;
  
  puStack_14 = &stack0xfffffffc;
  local_c = 0;
  puStack_18 = &LAB_00410f30;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  puStack_20 = (undefined1 *)0x410ea3;
  local_8 = param_1;
  FUN_0041058c(param_1);
  puStack_24 = &LAB_00410f13;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  puStack_20 = &stack0xfffffffc;
  (**(code **)(*local_8 + 0x40))();
  if (param_2 != (char *)0x0) {
    while (pcVar2 = param_2, *param_2 != '\0') {
      for (; ((cVar1 = *pcVar2, cVar1 != '\0' && (cVar1 != '\n')) && (cVar1 != '\r'));
          pcVar2 = pcVar2 + 1) {
      }
      FUN_00403cc4(&local_c,(undefined4 *)param_2,(int)pcVar2 - (int)param_2);
      (**(code **)(*local_8 + 0x34))(local_8,local_c);
      param_2 = pcVar2;
      if (*pcVar2 == '\r') {
        param_2 = pcVar2 + 1;
      }
      if (*param_2 == '\n') {
        param_2 = param_2 + 1;
      }
    }
  }
  *in_FS_OFFSET = uStack_28;
  puStack_20 = &LAB_00410f1a;
  puStack_24 = (undefined1 *)0x410f12;
  FUN_00410648(local_8);
  return;
}



void FUN_0041114c(int *param_1,int param_2,int param_3)

{
  if ((param_2 < 0) || (param_1[4] <= param_2)) {
    FUN_00410740(param_1,(undefined4 *)PTR_PTR_0047581c,param_2);
  }
  if ((param_3 < 0) || (param_1[4] <= param_3)) {
    FUN_00410740(param_1,(undefined4 *)PTR_PTR_0047581c,param_3);
  }
  (**(code **)(*param_1 + 0x74))();
  FUN_004111a4((int)param_1,param_2,param_3);
  (**(code **)(*param_1 + 0x70))();
  return;
}



void FUN_004111a4(int param_1,int param_2,int param_3)

{
  undefined4 *puVar1;
  undefined4 *puVar2;
  undefined4 uVar3;
  
  puVar1 = (undefined4 *)(*(int *)(param_1 + 0xc) + param_2 * 8);
  puVar2 = (undefined4 *)(*(int *)(param_1 + 0xc) + param_3 * 8);
  uVar3 = *puVar1;
  *puVar1 = *puVar2;
  *puVar2 = uVar3;
  uVar3 = puVar1[1];
  puVar1[1] = puVar2[1];
  puVar2[1] = uVar3;
  return;
}



undefined1 FUN_004111c8(int param_1,undefined *param_2,uint *param_3)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  int iVar4;
  undefined1 local_14;
  
  local_14 = 0;
  uVar3 = 0;
  iVar4 = *(int *)(param_1 + 0x10) + -1;
  if (-1 < iVar4) {
    do {
      uVar2 = iVar4 + uVar3 >> 1;
      iVar1 = FUN_004083e0(*(undefined **)(*(int *)(param_1 + 0xc) + uVar2 * 8),param_2);
      if (iVar1 < 0) {
        uVar3 = uVar2 + 1;
      }
      else {
        iVar4 = uVar2 - 1;
        if ((iVar1 == 0) && (local_14 = 1, *(char *)(param_1 + 0x19) != '\x01')) {
          uVar3 = uVar2;
        }
      }
    } while ((int)uVar3 <= iVar4);
  }
  *param_3 = uVar3;
  return local_14;
}



void FUN_00411294(int *param_1)

{
  int iVar1;
  int iVar2;
  
  iVar1 = param_1[5];
  if (iVar1 < 0x41) {
    if (iVar1 < 9) {
      iVar2 = 4;
    }
    else {
      iVar2 = 0x10;
    }
  }
  else {
    iVar2 = iVar1;
    if (iVar1 < 0) {
      iVar2 = iVar1 + 3;
    }
    iVar2 = iVar2 >> 2;
  }
  (**(code **)(*param_1 + 0x28))(param_1,iVar2 + iVar1);
  return;
}



void FUN_00411300(int *param_1,int param_2,undefined4 *param_3)

{
  if ((char)param_1[6] != '\0') {
    FUN_00410740(param_1,(undefined4 *)PTR_PTR_004756ec,0);
  }
  if ((param_2 < 0) || (param_1[4] < param_2)) {
    FUN_00410740(param_1,(undefined4 *)PTR_PTR_0047581c,param_2);
  }
  FUN_00411348(param_1,param_2,param_3);
  return;
}



void FUN_00411348(int *param_1,int param_2,undefined4 *param_3)

{
  int *piVar1;
  
  (**(code **)(*param_1 + 0x74))();
  if (param_1[4] == param_1[5]) {
    FUN_00411294(param_1);
  }
  if (param_2 < param_1[4]) {
    FUN_00402920((undefined4 *)(param_1[3] + param_2 * 8),
                 (undefined4 *)(param_1[3] + 8 + param_2 * 8),(param_1[4] - param_2) * 8);
  }
  piVar1 = (int *)(param_1[3] + param_2 * 8);
  *piVar1 = 0;
  piVar1[1] = 0;
  FUN_00403c30(piVar1,param_3);
  param_1[4] = param_1[4] + 1;
  (**(code **)(*param_1 + 0x70))();
  return;
}



void FUN_00411444(int param_1,uint param_2,uint param_3,undefined *param_4)

{
  uint uVar1;
  int iVar2;
  uint uVar3;
  uint uVar4;
  uint local_14;
  uint local_c;
  
  local_c = param_2;
  do {
    local_14 = local_c + param_3 >> 1;
    uVar3 = local_c;
    uVar4 = param_3;
    do {
      while (iVar2 = (*(code *)param_4)(param_1,uVar3,local_14), iVar2 < 0) {
        uVar3 = uVar3 + 1;
      }
      while (iVar2 = (*(code *)param_4)(param_1,uVar4,local_14), 0 < iVar2) {
        uVar4 = uVar4 - 1;
      }
      if ((int)uVar3 <= (int)uVar4) {
        FUN_004111a4(param_1,uVar3,uVar4);
        uVar1 = uVar4;
        if ((uVar3 != local_14) && (uVar1 = local_14, uVar4 == local_14)) {
          uVar1 = uVar3;
        }
        local_14 = uVar1;
        uVar3 = uVar3 + 1;
        uVar4 = uVar4 - 1;
      }
    } while ((int)uVar3 <= (int)uVar4);
    if ((int)local_c < (int)uVar4) {
      FUN_00411444(param_1,local_c,uVar4,param_4);
    }
    local_c = uVar3;
  } while ((int)uVar3 < (int)param_3);
  return;
}



void FUN_004114f4(int *param_1,char param_2)

{
  if (param_2 != (char)param_1[6]) {
    if (param_2 != '\0') {
      (**(code **)(*param_1 + 0x7c))();
    }
    *(char *)(param_1 + 6) = param_2;
  }
  return;
}



void FUN_0041157c(int *param_1)

{
  (**(code **)(*param_1 + 0xc))(param_1,0,1);
  return;
}



void FUN_0041158c(int *param_1,undefined4 param_2)

{
  (**(code **)(*param_1 + 0xc))(param_1,param_2,0);
  return;
}



undefined4 FUN_00411598(int *param_1)

{
  undefined4 uVar1;
  undefined4 uVar2;
  undefined2 extraout_var;
  
  uVar1 = (**(code **)(*param_1 + 0xc))(param_1,0,1);
  uVar2 = (**(code **)(*param_1 + 0xc))(param_1,0,CONCAT22(extraout_var,2));
  (**(code **)(*param_1 + 0xc))(param_1,uVar1,0);
  return uVar2;
}



void FUN_004115d0(int *param_1,undefined4 param_2,int param_3)

{
  int iVar1;
  int *piVar2;
  
  if (param_3 != 0) {
    iVar1 = (**(code **)(*param_1 + 4))(param_1,param_2,param_3);
    if (param_3 != iVar1) {
      piVar2 = FUN_0040aacc((int *)PTR_DAT_0040d918,'\x01',(undefined4 *)PTR_PTR_0047587c);
      FUN_004036ac(piVar2);
    }
  }
  return;
}



void FUN_00411608(int *param_1,undefined4 param_2,int param_3)

{
  int iVar1;
  int *piVar2;
  
  if (param_3 != 0) {
    iVar1 = (**(code **)(*param_1 + 8))(param_1,param_2,param_3);
    if (param_3 != iVar1) {
      piVar2 = FUN_0040aacc((int *)PTR_DAT_0040d970,'\x01',(undefined4 *)PTR_PTR_00475750);
      FUN_004036ac(piVar2);
    }
  }
  return;
}



void FUN_00411640(int *param_1,int *param_2,int param_3)

{
  int iVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_30;
  undefined1 *puStack_2c;
  undefined1 *puStack_28;
  int local_14;
  
  if (param_3 == 0) {
    puStack_28 = (undefined1 *)0x41165f;
    FUN_0041158c(param_2,0);
    puStack_28 = (undefined1 *)0x411667;
    param_3 = FUN_00411598(param_2);
  }
  local_14 = param_3;
  if (0xf000 < param_3) {
    local_14 = 0xf000;
  }
  puStack_28 = (undefined1 *)0x411688;
  iVar1 = FUN_004026f4(local_14);
  puStack_2c = &LAB_004116e3;
  uStack_30 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_30;
  puStack_28 = &stack0xfffffffc;
  for (; param_3 != 0; param_3 = param_3 - iVar2) {
    iVar2 = param_3;
    if (local_14 < param_3) {
      iVar2 = local_14;
    }
    FUN_004115d0(param_2,iVar1,iVar2);
    FUN_00411608(param_1,iVar1,iVar2);
  }
  *in_FS_OFFSET = uStack_30;
  puStack_28 = &LAB_004116ea;
  puStack_2c = (undefined1 *)0x4116e2;
  FUN_0040270c(iVar1);
  return;
}



void FUN_004116f4(int param_1,int *param_2)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY_1c;
  undefined1 *puStackY_18;
  
  puStackY_18 = (undefined1 *)0x411710;
  piVar1 = FUN_00411bd4((int *)PTR_PTR_0040e6ac,'\x01',param_1,0x1000);
  puStackY_18 = &LAB_00411744;
  uStackY_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY_1c;
  FUN_00413950(piVar1,param_2);
  *in_FS_OFFSET = uStackY_1c;
  puStackY_18 = (undefined1 *)0x411743;
  FUN_00402f54(piVar1);
  return;
}



void FUN_00411780(int *param_1,undefined4 param_2)

{
  BOOL BVar1;
  
  (**(code **)(*param_1 + 0xc))(param_1,param_2,0);
  BVar1 = SetEndOfFile((HANDLE)param_1[1]);
  FUN_0040bcc0(BVar1);
  return;
}



int * FUN_004117a0(int *param_1,char param_2,undefined *param_3,ushort param_4)

{
  int iVar1;
  undefined4 uVar2;
  undefined *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffd4;
  undefined4 in_stack_ffffffd8;
  undefined *local_10;
  undefined1 local_c;
  char local_5;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffd4,in_stack_ffffffd8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  local_5 = param_2;
  if (param_4 == 0xffff) {
    iVar1 = FUN_0040859c(param_3);
    param_1[1] = iVar1;
    if (iVar1 < 0) {
      local_c = 0xb;
      local_10 = param_3;
      uVar2 = FUN_0040ab08((int)PTR_DAT_0040d80c,'\x01',(undefined4 *)PTR_PTR_00475828,0,&local_10);
      FUN_004036ac(uVar2);
    }
  }
  else {
    iVar1 = FUN_0040855c(param_3,(uint)param_4);
    param_1[1] = iVar1;
    if (param_1[1] < 0) {
      local_c = 0xb;
      local_10 = param_3;
      uVar2 = FUN_0040ab08((int)PTR_DAT_0040d868,'\x01',(undefined4 *)PTR_PTR_00475838,0,&local_10);
      FUN_004036ac(uVar2);
    }
  }
  if (local_5 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffd4;
  }
  return param_1;
}



void FUN_00411880(int param_1,undefined4 param_2,undefined4 param_3)

{
  *(undefined4 *)(param_1 + 4) = param_2;
  *(undefined4 *)(param_1 + 8) = param_3;
  return;
}



uint FUN_00411888(int param_1,undefined4 *param_2,uint param_3)

{
  int iVar1;
  uint uVar2;
  
  iVar1 = *(int *)(param_1 + 0xc);
  if (((iVar1 < 0) || ((int)param_3 < 0)) || (uVar2 = *(int *)(param_1 + 8) - iVar1, (int)uVar2 < 1)
     ) {
    uVar2 = 0;
  }
  else {
    if ((int)param_3 < (int)uVar2) {
      uVar2 = param_3;
    }
    FUN_00402920((undefined4 *)(*(int *)(param_1 + 4) + iVar1),param_2,uVar2);
    *(int *)(param_1 + 0xc) = *(int *)(param_1 + 0xc) + uVar2;
  }
  return uVar2;
}



void FUN_00411910(int *param_1)

{
  FUN_00411928(param_1,0);
  param_1[2] = 0;
  param_1[3] = 0;
  return;
}



void FUN_00411928(int *param_1,int param_2)

{
  undefined4 uVar1;
  int local_8;
  
  local_8 = param_2;
  uVar1 = (**(code **)(*param_1 + 0x10))(param_1,&local_8);
  FUN_00411880((int)param_1,uVar1,param_1[2]);
  param_1[4] = local_8;
  return;
}



LPCVOID FUN_0041197c(int param_1,SIZE_T *param_2)

{
  int *piVar1;
  LPCVOID pvVar2;
  LPCVOID extraout_ECX;
  
  if (0 < (int)*param_2) {
    *param_2 = *param_2 + 0x1fff & 0xffffe000;
  }
  pvVar2 = *(LPCVOID *)(param_1 + 4);
  if (*param_2 != *(SIZE_T *)(param_1 + 0x10)) {
    if (*param_2 == 0) {
      FUN_00407164(pvVar2);
      pvVar2 = (LPCVOID)0x0;
    }
    else {
      if (*(SIZE_T *)(param_1 + 0x10) == 0) {
        pvVar2 = (LPCVOID)FUN_00407138((uint)*(ushort *)PTR_DAT_0047582c,*param_2);
      }
      else {
        pvVar2 = (LPCVOID)FUN_00407148(pvVar2,*param_2,(uint)*(ushort *)PTR_DAT_0047582c);
      }
      if (pvVar2 == (LPCVOID)0x0) {
        piVar1 = FUN_0040aacc((int *)PTR_DAT_0040d7b0,'\x01',(undefined4 *)PTR_PTR_004758a4);
        FUN_004036ac(piVar1);
        pvVar2 = extraout_ECX;
      }
    }
  }
  return pvVar2;
}



int * FUN_00411a50(int *param_1,char param_2,HMODULE param_3,LPCSTR param_4,undefined *param_5)

{
  LPCSTR pCVar1;
  HMODULE extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00402f24(param_1,'\0',param_3);
  pCVar1 = FUN_00404020(param_5);
  FUN_00411b18((int)param_1,param_3,pCVar1,param_4);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



void FUN_00411aa8(void)

{
  undefined4 *in_FS_OFFSET;
  int in_stack_00000004;
  undefined4 uVar1;
  undefined1 **ppuVar2;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  byte *local_10;
  undefined1 *local_c;
  undefined1 local_8;
  
  puStack_14 = &stack0xfffffffc;
  local_10 = (byte *)0x0;
  puStack_18 = &LAB_00411b0b;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  local_c = *(undefined1 **)(in_stack_00000004 + -4);
  local_8 = 6;
  ppuVar2 = &local_c;
  uVar1 = 0;
  FUN_004054e4((undefined4 *)PTR_PTR_00475718,(int *)&local_10);
  uVar1 = FUN_0040aa4c((int)PTR_DAT_0040da24,'\x01',local_10,uVar1,ppuVar2);
  FUN_004036ac(uVar1);
  *in_FS_OFFSET = puStack_14;
  local_c = &LAB_00411b12;
  local_10 = (byte *)0x411b0a;
  FUN_00403bdc((int *)&local_10);
  return;
}



void FUN_00411b18(int param_1,HMODULE param_2,LPCSTR param_3,LPCSTR param_4)

{
  HRSRC pHVar1;
  HGLOBAL pvVar2;
  DWORD DVar3;
  LPVOID pvVar4;
  
  pHVar1 = FindResourceA(param_2,param_3,param_4);
  *(HRSRC *)(param_1 + 0x10) = pHVar1;
  if (pHVar1 == (HRSRC)0x0) {
    FUN_00411aa8();
  }
  pvVar2 = LoadResource(param_2,*(HRSRC *)(param_1 + 0x10));
  *(HGLOBAL *)(param_1 + 0x14) = pvVar2;
  if (pvVar2 == (HGLOBAL)0x0) {
    FUN_00411aa8();
  }
  DVar3 = SizeofResource(param_2,*(HRSRC *)(param_1 + 0x10));
  pvVar4 = LockResource(*(HGLOBAL *)(param_1 + 0x14));
  FUN_00411880(param_1,pvVar4,DVar3);
  return;
}



int * FUN_00411bd4(int *param_1,char param_2,int param_3,int param_4)

{
  int iVar1;
  int extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  param_1[1] = param_3;
  iVar1 = FUN_004026f4(param_4);
  param_1[2] = iVar1;
  param_1[3] = param_4;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



void FUN_00411c1c(int *param_1,char param_2)

{
  int *piVar1;
  char extraout_DL;
  
  piVar1 = FUN_004032b4(param_1,param_2);
  if (piVar1[2] != 0) {
    FUN_0040270c(piVar1[2]);
  }
  if ('\0' < extraout_DL) {
    FUN_004032a4(piVar1);
  }
  return;
}



int * FUN_00411cbc(int *param_1,char param_2,int param_3,undefined4 *param_4,undefined4 *param_5,
                  int param_6,int param_7)

{
  int extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  param_1[1] = param_3;
  param_1[2] = param_7;
  param_1[3] = param_6;
  FUN_00403c30(param_1 + 4,param_5);
  FUN_00403c30(param_1 + 5,param_4);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



bool FUN_00411d14(int param_1)

{
  char cVar1;
  char *pcVar2;
  char *pcVar3;
  
  pcVar2 = *(char **)(param_1 + 0x14);
  for (pcVar3 = pcVar2; (*pcVar3 != '\0' && (*pcVar3 != '.')); pcVar3 = pcVar3 + 1) {
  }
  cVar1 = *pcVar3;
  if (cVar1 != '\0') {
    FUN_00403cc4((int *)(param_1 + 0x10),(undefined4 *)pcVar2,(int)pcVar3 - (int)pcVar2);
    FUN_004040a4((int *)(param_1 + 0x14),1,((int)pcVar3 - (int)pcVar2) + 1);
  }
  return cVar1 != '\0';
}



void FUN_00411d5c(int param_1,char *param_2)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  char *pcVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  char *local_c;
  int local_8;
  
  puStack_1c = &stack0xfffffffc;
  local_c = (char *)0x0;
  puStack_20 = &LAB_00411e02;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  local_8 = 0;
  iVar1 = local_8;
  if (param_2 != (char *)0x0) {
    while (pcVar4 = param_2, iVar1 = param_1, *param_2 != '\0') {
      for (; (*pcVar4 != '\0' && (1 < (byte)(*pcVar4 - 0x2dU))); pcVar4 = pcVar4 + 1) {
      }
      FUN_00403cc4((int *)&local_c,(undefined4 *)param_2,(int)pcVar4 - (int)param_2);
      iVar2 = FUN_00414974(param_1,local_c);
      if ((iVar2 == 0) && (uVar3 = FUN_0040831c(local_c,s_Owner_00411e1c), (char)uVar3 != '\0')) {
        iVar2 = param_1;
      }
      iVar1 = local_8;
      if (iVar2 == 0) break;
      param_2 = pcVar4;
      if (*pcVar4 == '.') {
        param_2 = pcVar4 + 1;
      }
      if (*param_2 == '-') {
        param_2 = param_2 + 1;
      }
      param_1 = iVar2;
      if (*param_2 == '>') {
        param_2 = param_2 + 1;
      }
    }
  }
  local_8 = iVar1;
  *in_FS_OFFSET = uStack_24;
  puStack_1c = &LAB_00411e09;
  puStack_20 = (undefined1 *)0x411e01;
  FUN_00403bdc((int *)&local_c);
  return;
}



void FUN_00411e24(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int iVar1;
  
  iVar1 = FUN_0040f544(*(int *)(param_4 + -4),param_1);
  if (iVar1 < 0) {
    iVar1 = FUN_0040f544(*(int *)(param_4 + -8),param_1);
    if (-1 < iVar1) {
      FUN_0040f38c(*(int **)(param_4 + -4),param_1);
    }
  }
  return;
}



void FUN_00411e5c(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int iVar1;
  
  iVar1 = FUN_0040f544(*(int *)(param_4 + -4),param_1);
  if (iVar1 != -1) {
    FUN_0040f3d8(*(int **)(param_4 + -4),iVar1);
  }
  iVar1 = FUN_0040f544(*(int *)(param_4 + -8),param_1);
  if (iVar1 < 0) {
    FUN_0040f38c(*(int **)(param_4 + -8),param_1);
  }
  return;
}



void FUN_00411ea4(void)

{
  int *piVar1;
  int *piVar2;
  int *piVar3;
  int iVar4;
  uint uVar5;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_ECX_03;
  undefined4 uVar6;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 uVar7;
  int iVar8;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_4c;
  undefined1 *puStack_48;
  undefined1 *puStack_44;
  undefined4 uStack_40;
  undefined1 *puStack_3c;
  undefined1 *puStack_38;
  undefined4 uStack_34;
  undefined1 *puStack_30;
  undefined1 *puStack_2c;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  
  if (DAT_00476618 == (code *)0x0) {
    return;
  }
  puStack_20 = (undefined1 *)0x411ec4;
  FUN_0040be4c(DAT_00476614);
  puStack_24 = &LAB_0041204f;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  puStack_2c = (undefined1 *)0x411edc;
  puStack_20 = &stack0xfffffffc;
  piVar1 = (int *)FUN_0040f8a8(DAT_0047662c);
  puStack_30 = &LAB_00412030;
  uStack_34 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_34;
  if (piVar1[2] < 1) {
    *in_FS_OFFSET = uStack_34;
    puStack_2c = &LAB_00412037;
    puStack_30 = (undefined1 *)0x41202f;
    FUN_0040f90c(DAT_0047662c);
    return;
  }
  puStack_38 = (undefined1 *)0x411f02;
  puStack_2c = &stack0xfffffffc;
  FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX);
  puStack_3c = &LAB_00412011;
  uStack_40 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_40;
  puStack_44 = (undefined1 *)0x411f1f;
  puStack_38 = &stack0xfffffffc;
  piVar2 = (int *)FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX_00);
  puStack_48 = &LAB_00411fbf;
  uStack_4c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_4c;
  iVar8 = 0;
  puStack_44 = &stack0xfffffffc;
  do {
    while( true ) {
      if (piVar1[2] <= iVar8) {
        *in_FS_OFFSET = uStack_4c;
        puStack_44 = &LAB_00411fc6;
        puStack_48 = (undefined1 *)0x411fbe;
        FUN_00402f54(piVar2);
        return;
      }
      piVar3 = (int *)FUN_0040f4e8(piVar1,iVar8);
      iVar4 = (*DAT_00476618)(piVar3[4]);
      uVar6 = extraout_ECX_01;
      uVar7 = extraout_EDX;
      if (iVar4 == 0) break;
LAB_00411f60:
      if (iVar4 != 0) {
        iVar4 = FUN_00411d5c(iVar4,(char *)piVar3[5]);
        FUN_0040d29c((int *)piVar3[1],(undefined4 *)piVar3[3],iVar4);
        uVar6 = extraout_ECX_03;
        uVar7 = extraout_EDX_01;
      }
      FUN_00411e24(piVar3[1],uVar7,uVar6,(int)&stack0xfffffffc);
      FUN_0040f3d8(piVar1,iVar8);
      FUN_00402f54(piVar3);
    }
    uVar5 = FUN_0040d228((int *)piVar3[1],(undefined4 *)piVar3[3]);
    uVar6 = extraout_ECX_02;
    uVar7 = extraout_EDX_00;
    if (uVar5 != 0) goto LAB_00411f60;
    FUN_00411e5c(piVar3[1],extraout_EDX_00,extraout_ECX_02,(int)&stack0xfffffffc);
    iVar8 = iVar8 + 1;
  } while( true );
}



void FUN_00412060(int param_1,char *param_2)

{
  int *piVar1;
  int *piVar2;
  undefined4 uVar3;
  int iVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  
  if (DAT_0047662c == 0) {
    return;
  }
  puStack_1c = (undefined1 *)0x412086;
  piVar1 = (int *)FUN_0040f8a8(DAT_0047662c);
  puStack_20 = &LAB_004120fb;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  iVar4 = piVar1[2] + -1;
  puStack_1c = &stack0xfffffffc;
  if (-1 < iVar4) {
    do {
      piVar2 = (int *)FUN_0040f4e8(piVar1,iVar4);
      if ((param_1 == 0) || (piVar2[2] == param_1)) {
        if (param_2 != (char *)0x0) {
          uVar3 = FUN_0040831c(param_2,(char *)piVar2[4]);
          if ((char)uVar3 == '\0') goto LAB_004120dd;
        }
        FUN_0040f3d8(piVar1,iVar4);
        FUN_00402f54(piVar2);
      }
LAB_004120dd:
      iVar4 = iVar4 + -1;
    } while (iVar4 != -1);
  }
  *in_FS_OFFSET = uStack_24;
  puStack_1c = (undefined1 *)0x412102;
  puStack_20 = (undefined1 *)0x4120fa;
  FUN_0040f90c(DAT_0047662c);
  return;
}



void FUN_0041210c(int param_1)

{
  int *piVar1;
  int *piVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  
  if (DAT_0047662c != 0) {
    puStack_18 = (undefined1 *)0x412129;
    piVar1 = (int *)FUN_0040f8a8(DAT_0047662c);
    puStack_1c = &LAB_00412183;
    uStack_20 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_20;
    iVar3 = piVar1[2] + -1;
    puStack_18 = &stack0xfffffffc;
    if (-1 < iVar3) {
      do {
        piVar2 = (int *)FUN_0040f4e8(piVar1,iVar3);
        if (piVar2[1] == param_1) {
          FUN_0040f3d8(piVar1,iVar3);
          FUN_00402f54(piVar2);
        }
        iVar3 = iVar3 + -1;
      } while (iVar3 != -1);
    }
    *in_FS_OFFSET = uStack_20;
    puStack_18 = (undefined1 *)0x41218a;
    puStack_1c = (undefined1 *)0x412182;
    FUN_0040f90c(DAT_0047662c);
    return;
  }
  return;
}



void FUN_00412190(undefined4 *param_1)

{
  int *piVar1;
  
  piVar1 = FUN_0040aacc((int *)PTR_DAT_0040d918,'\x01',param_1);
  FUN_004036ac(piVar1);
  return;
}



void FUN_004121a8(void)

{
  FUN_00412190((undefined4 *)PTR_PTR_004757a8);
  return;
}



void FUN_004121b4(void)

{
  FUN_00412190((undefined4 *)PTR_PTR_004755e8);
  return;
}



int FUN_004121c0(char *param_1,byte *param_2)

{
  int iVar1;
  
  iVar1 = FUN_0040d154(param_1,param_2);
  if (iVar1 == -1) {
    FUN_004121a8();
  }
  return iVar1;
}



void FUN_00412214(int param_1,undefined4 param_2,uint param_3)

{
  uint uVar1;
  uint extraout_ECX;
  undefined4 extraout_EDX;
  
  uVar1 = FUN_00413db8(param_1,param_2,param_3);
  if ((char)param_2 != (char)uVar1) {
    *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + -1;
    FUN_00413f18(param_1,extraout_EDX,extraout_ECX);
    FUN_004121a8();
  }
  return;
}



void FUN_00412238(int param_1,char *param_2)

{
  undefined4 uVar1;
  code *in_stack_0000000c;
  undefined4 in_stack_00000010;
  
  uVar1 = FUN_0040831c(param_2,*(char **)(param_1 + 0x70));
  if (((char)uVar1 != '\0') && (in_stack_0000000c._2_2_ != 0)) {
    (*in_stack_0000000c)(in_stack_00000010,param_1);
    FUN_00403bdc((int *)(param_1 + 0x70));
  }
  return;
}



void FUN_0041226c(int param_1,char *param_2)

{
  undefined4 uVar1;
  uint uVar2;
  uint extraout_ECX;
  uint extraout_ECX_00;
  uint extraout_ECX_01;
  uint uVar3;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 *in_FS_OFFSET;
  code *in_stack_0000000c;
  undefined4 in_stack_00000010;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  uint local_10;
  int *local_c;
  int local_8;
  
  puStack_18 = (undefined1 *)0x412285;
  local_8 = param_1;
  uVar1 = FUN_0040831c(param_2,*(char **)(param_1 + 0x70));
  if (((char)uVar1 != '\0') && (in_stack_0000000c._2_2_ != 0)) {
    puStack_18 = (undefined1 *)0x4122a0;
    uVar2 = FUN_00413db8(local_8,extraout_EDX,extraout_ECX);
    uVar3 = extraout_ECX_00;
    if ((char)uVar2 != '\n') {
      *(int *)(local_8 + 0x10) = *(int *)(local_8 + 0x10) + -1;
      puStack_18 = (undefined1 *)0x4122b2;
      FUN_00413f18(local_8,extraout_EDX_00,extraout_ECX_00);
      *(undefined1 *)(local_8 + 0x74) = 1;
      puStack_18 = (undefined1 *)0x4122be;
      FUN_004121a8();
      uVar3 = extraout_ECX_01;
    }
    puStack_18 = (undefined1 *)0x4122ca;
    local_c = (int *)FUN_00402f24((int *)PTR_PTR_0040e3d0,'\x01',uVar3);
    puStack_1c = &LAB_0041232c;
    uStack_20 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_20;
    puStack_18 = &stack0xfffffffc;
    FUN_00412614(local_8,&local_10,4);
    (**(code **)*local_c)(local_c,local_10);
    FUN_00412614(local_8,(undefined4 *)local_c[1],local_10);
    *(undefined1 *)(local_8 + 0x74) = 1;
    (*in_stack_0000000c)(in_stack_00000010,local_c);
    *in_FS_OFFSET = uStack_20;
    puStack_18 = &DAT_00412333;
    puStack_1c = (undefined1 *)0x41232b;
    FUN_00402f54(local_c);
    return;
  }
  return;
}



bool FUN_00412348(int param_1,undefined4 param_2,uint param_3)

{
  uint uVar1;
  
  uVar1 = FUN_00413db8(param_1,param_2,param_3);
  *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + -1;
  return (char)uVar1 == '\0';
}



int FUN_0041237c(int param_1,int *param_2,undefined4 *param_3)

{
  int local_114;
  char local_110 [4];
  byte local_10c [256];
  
  FUN_00403e38(local_10c,param_3,0xff);
  local_114 = FUN_004031b4(*param_2,local_10c);
  local_110[0] = local_114 == 0;
  if (*(short *)(param_1 + 0x3a) != 0) {
    (**(code **)(param_1 + 0x38))
              (*(undefined4 *)(param_1 + 0x3c),param_1,param_3,local_110,&local_114);
  }
  if (local_110[0] != '\0') {
    FUN_004121a8();
  }
  return local_114;
}



void FUN_004123e4(int param_1)

{
  int *piVar1;
  int *piVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  puStack_14 = (undefined1 *)0x4123f6;
  piVar1 = (int *)FUN_0040f8a8(DAT_0047662c);
  puStack_18 = &LAB_00412454;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  iVar3 = piVar1[2] + -1;
  puStack_14 = &stack0xfffffffc;
  if (-1 < iVar3) {
    do {
      piVar2 = (int *)FUN_0040f4e8(piVar1,iVar3);
      if ((piVar2[1] == *(int *)(param_1 + 4)) && (piVar2[3] == *(int *)(param_1 + 0xc))) {
        FUN_00402f54(piVar2);
        FUN_0040f3d8(piVar1,iVar3);
      }
      iVar3 = iVar3 + -1;
    } while (iVar3 != -1);
  }
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_0041245b;
  puStack_18 = (undefined1 *)0x412453;
  FUN_0040f90c(DAT_0047662c);
  return;
}



void FUN_00412460(int *param_1)

{
  bool bVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_34;
  undefined1 *puStack_30;
  undefined1 *puStack_2c;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  int local_10;
  char *local_c;
  int *local_8;
  
  puStack_20 = &stack0xfffffffc;
  puStack_2c = &stack0xfffffffc;
  local_c = (char *)0x0;
  puStack_24 = &LAB_00412574;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  iVar5 = param_1[0xc];
  local_8 = param_1;
  if (iVar5 == 0) {
    *in_FS_OFFSET = uStack_28;
    puStack_20 = &LAB_0041257b;
    puStack_24 = (undefined1 *)0x412573;
    FUN_00403bdc((int *)&local_c);
    return;
  }
  puStack_30 = &LAB_00412557;
  uStack_34 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_34;
  local_10 = *(int *)(iVar5 + 8);
  if (-1 < local_10 + -1) {
    iVar5 = 0;
    puStack_20 = &stack0xfffffffc;
    do {
      iVar2 = FUN_0040f4e8((undefined4 *)local_8[0xc],iVar5);
      FUN_00403c74((int *)&local_c,*(int *)(iVar2 + 0x14));
      (**(code **)(*local_8 + 0x20))(local_8,&local_c);
      iVar3 = FUN_00411d5c(*(int *)(iVar2 + 8),local_c);
      iVar4 = FUN_0040f4e8((undefined4 *)local_8[0xc],iVar5);
      FUN_004123e4(iVar4);
      if (iVar3 == 0) {
        bVar1 = FUN_00411d14(iVar2);
        if (!bVar1) goto LAB_0041252a;
        iVar2 = FUN_0040f4e8((undefined4 *)local_8[0xc],iVar5);
        FUN_0040f820(DAT_0047662c,iVar2);
        FUN_0040f634((int *)local_8[0xc],iVar5,0);
      }
      else {
LAB_0041252a:
        FUN_0040d29c(*(int **)(iVar2 + 4),*(undefined4 **)(iVar2 + 0xc),iVar3);
      }
      iVar5 = iVar5 + 1;
      local_10 = local_10 + -1;
    } while (local_10 != 0);
  }
  *in_FS_OFFSET = uStack_34;
  puStack_2c = (undefined1 *)0x41255e;
  puStack_30 = (undefined1 *)0x412556;
  FUN_004125a4((int)local_8);
  return;
}



void FUN_004125a4(int param_1)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  if (*(int *)(param_1 + 0x30) != 0) {
    iVar2 = *(int *)(*(int *)(param_1 + 0x30) + 8);
    if (-1 < iVar2 + -1) {
      iVar3 = 0;
      do {
        piVar1 = (int *)FUN_0040f4e8(*(undefined4 **)(param_1 + 0x30),iVar3);
        FUN_00402f54(piVar1);
        iVar3 = iVar3 + 1;
        iVar2 = iVar2 + -1;
      } while (iVar2 != 0);
    }
    FUN_00402f54(*(int **)(param_1 + 0x30));
    *(undefined4 *)(param_1 + 0x30) = 0;
  }
  return;
}



int FUN_004125e0(int param_1)

{
  int iVar1;
  
  iVar1 = FUN_0041157c(*(int **)(param_1 + 4));
  return iVar1 - (*(int *)(param_1 + 0x14) - *(int *)(param_1 + 0x10));
}



void FUN_004125f8(int param_1,undefined4 param_2,uint param_3)

{
  FUN_00413db8(param_1,param_2,param_3);
  *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + -1;
  return;
}



void FUN_00412608(int param_1,undefined4 param_2,uint param_3)

{
  FUN_00413f18(param_1,param_2,param_3);
  FUN_004121b4();
  return;
}



void FUN_00412614(int param_1,undefined4 *param_2,uint param_3)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  undefined4 *puVar4;
  
  while (param_3 != 0) {
    uVar2 = *(uint *)(param_1 + 0x14) - *(uint *)(param_1 + 0x10);
    if (*(uint *)(param_1 + 0x14) < *(uint *)(param_1 + 0x10) || uVar2 == 0) {
      FUN_00412660(param_1);
      uVar2 = *(uint *)(param_1 + 0x14);
    }
    if (param_3 <= uVar2) {
      uVar2 = param_3;
    }
    param_3 = param_3 - uVar2;
    iVar1 = *(int *)(param_1 + 0x10);
    *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + uVar2;
    puVar4 = (undefined4 *)(*(int *)(param_1 + 8) + iVar1);
    for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {
      *param_2 = *puVar4;
      puVar4 = puVar4 + 1;
      param_2 = param_2 + 1;
    }
    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {
      *(undefined1 *)param_2 = *(undefined1 *)puVar4;
      puVar4 = (undefined4 *)((int)puVar4 + 1);
      param_2 = (undefined4 *)((int)param_2 + 1);
    }
  }
  return;
}



void FUN_00412660(int param_1)

{
  int iVar1;
  int *piVar2;
  
  iVar1 = (**(code **)(**(int **)(param_1 + 4) + 4))
                    (*(int **)(param_1 + 4),*(undefined4 *)(param_1 + 8),
                     *(undefined4 *)(param_1 + 0xc));
  *(int *)(param_1 + 0x14) = iVar1;
  if (iVar1 == 0) {
    piVar2 = FUN_0040aacc((int *)PTR_DAT_0040d918,'\x01',(undefined4 *)PTR_PTR_0047587c);
    FUN_004036ac(piVar2);
  }
  *(undefined4 *)(param_1 + 0x10) = 0;
  return;
}



bool FUN_0041269c(int param_1,undefined4 param_2,uint param_3)

{
  uint uVar1;
  
  uVar1 = FUN_00413db8(param_1,param_2,param_3);
  return (char)uVar1 == '\t';
}



void FUN_004126b0(int param_1,undefined4 param_2,uint param_3)

{
  uint extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  int local_c;
  char local_5;
  
  puStack_14 = &stack0xfffffffc;
  local_c = 0;
  puStack_18 = &LAB_00412722;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  FUN_00412214(param_1,6,param_3);
  FUN_00412614(param_1,(undefined4 *)&local_5,1);
  if (local_5 != '\x01') {
    *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + -1;
    FUN_00413cd4(param_1,&local_c,extraout_ECX);
    FUN_004121a8();
  }
  FUN_00412614(param_1,(undefined4 *)&local_5,1);
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_00412729;
  puStack_18 = (undefined1 *)0x412721;
  FUN_00403bdc(&local_c);
  return;
}



void FUN_00412734(int param_1,int *param_2)

{
  undefined1 *puVar1;
  bool bVar2;
  char cVar3;
  int *piVar4;
  uint extraout_ECX;
  uint extraout_ECX_00;
  uint extraout_ECX_01;
  uint extraout_ECX_02;
  uint extraout_ECX_03;
  uint extraout_ECX_04;
  uint extraout_ECX_05;
  uint extraout_ECX_06;
  uint extraout_ECX_07;
  uint uVar5;
  uint extraout_ECX_08;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 extraout_EDX_03;
  undefined4 extraout_EDX_04;
  undefined4 extraout_EDX_05;
  undefined4 extraout_EDX_06;
  undefined4 extraout_EDX_07;
  undefined4 uVar6;
  undefined4 extraout_EDX_08;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  puStack_14 = (undefined1 *)0x412747;
  (**(code **)(*param_2 + 0x14))();
  puStack_18 = &LAB_004127d4;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  puStack_14 = &stack0xfffffffc;
  bVar2 = FUN_00412348(param_1,extraout_EDX,extraout_ECX);
  uVar5 = extraout_ECX_00;
  uVar6 = extraout_EDX_00;
  if (!bVar2) {
    FUN_0040ffbc(param_2);
    uVar5 = extraout_ECX_01;
    uVar6 = extraout_EDX_01;
  }
  while( true ) {
    bVar2 = FUN_00412348(param_1,uVar6,uVar5);
    if (bVar2) break;
    cVar3 = FUN_004125f8(param_1,extraout_EDX_08,extraout_ECX_08);
    if ((byte)(cVar3 - 2U) < 3) {
      FUN_00412fd8(param_1,extraout_EDX_02,extraout_ECX_02);
    }
    piVar4 = (int *)FUN_0040ff04((int)param_2);
    FUN_00413088(param_1,extraout_EDX_03,extraout_ECX_03);
    uVar5 = extraout_ECX_04;
    uVar6 = extraout_EDX_04;
    while( true ) {
      bVar2 = FUN_00412348(param_1,uVar6,uVar5);
      if (bVar2) break;
      FUN_004131f4((int *)param_1,piVar4);
      uVar5 = extraout_ECX_05;
      uVar6 = extraout_EDX_05;
    }
    FUN_00413090(param_1,extraout_EDX_06,extraout_ECX_06);
    uVar5 = extraout_ECX_07;
    uVar6 = extraout_EDX_07;
  }
  FUN_00413090(param_1,extraout_EDX_08,extraout_ECX_08);
  puVar1 = puStack_14;
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_004127db;
  puStack_18 = (undefined1 *)0x4127d3;
  (**(code **)(*param_2 + 0x18))(param_2,*param_2,puVar1);
  return;
}



undefined4 FUN_004127e0(void)

{
  int in_stack_00000004;
  
  if (((*(byte *)(in_stack_00000004 + -1) & 1) == 0) && (*(int *)(in_stack_00000004 + -8) == 0)) {
    return CONCAT31((int3)((uint)in_stack_00000004 >> 8),1);
  }
  return 0;
}



void FUN_00412860(undefined4 param_1,undefined4 param_2,int param_3,int param_4)

{
  ushort *puVar1;
  int iVar2;
  undefined4 uVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  puStack_14 = &stack0xfffffffc;
  puStack_18 = &LAB_00412946;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  puStack_20 = (undefined1 *)0x412885;
  iVar2 = FUN_00414268(*(int *)(param_4 + -0xc),*(char **)(param_4 + -0x14),param_3);
  *(undefined4 *)(param_4 + -0x10) = 0;
  if (*(short *)(*(int *)(param_4 + -0xc) + 0x6a) != 0) {
    puStack_20 = (undefined1 *)(param_4 + -0x10);
    puStack_24 = (undefined1 *)0x4128b7;
    (**(code **)(*(int *)(param_4 + -0xc) + 0x68))
              (*(undefined4 *)(*(int *)(param_4 + -0xc) + 0x6c),*(undefined4 *)(param_4 + -0xc),
               iVar2);
  }
  if (*(int *)(param_4 + -0x10) == 0) {
    puStack_20 = (undefined1 *)0x4128c5;
    uVar3 = (**(code **)(iVar2 + -0xc))();
    *(undefined4 *)(param_4 + -0x10) = uVar3;
    if ((*(byte *)(param_4 + -1) & 4) != 0) {
      puVar1 = (ushort *)(*(int *)(param_4 + -0x10) + 0x20);
      *puVar1 = *puVar1 | 1;
      puVar1 = (ushort *)(*(int *)(param_4 + -0x10) + 0x20);
      *puVar1 = *puVar1 | 0x200;
    }
    puStack_24 = &LAB_0041291a;
    uStack_28 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_28;
    puStack_20 = &stack0xfffffffc;
    (**(code **)(**(int **)(param_4 + -0x10) + 0x2c))
              (*(int **)(param_4 + -0x10),0xffffffff,
               *(undefined4 *)(*(int *)(param_4 + -0xc) + 0x28));
    *in_FS_OFFSET = uStack_28;
  }
  puVar1 = (ushort *)(*(int *)(param_4 + -0x10) + 0x20);
  *puVar1 = *puVar1 | 1;
  *in_FS_OFFSET = uStack_1c;
  return;
}



void FUN_00412970(undefined4 param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  ushort *puVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  puStack_14 = &stack0xfffffffc;
  puStack_18 = &LAB_004129e6;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  FUN_00403130(*(int **)(param_4 + -0x10),*(undefined4 *)(*(int *)(param_4 + -0xc) + 0x2c),param_3);
  (**(code **)(**(int **)(param_4 + -0xc) + 0x1c))
            (*(int **)(param_4 + -0xc),*(undefined4 *)(param_4 + -0x10),param_4 + -0x18);
  if (DAT_00476618 != (code *)0x0) {
    iVar2 = (*DAT_00476618)(*(undefined4 *)(param_4 + -0x18));
    if (iVar2 == *(int *)(param_4 + -0x10)) {
      puVar1 = (ushort *)(*(int *)(param_4 + -0x10) + 0x20);
      *puVar1 = *puVar1 | 0x200;
    }
  }
  *in_FS_OFFSET = uStack_1c;
  return;
}



void FUN_00412a10(undefined4 param_1,undefined4 param_2,int param_3,int param_4)

{
  int iVar1;
  undefined4 uVar2;
  undefined4 extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  puStack_14 = &stack0xfffffffc;
  puStack_18 = &LAB_00412a8b;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  iVar1 = FUN_00414268(*(int *)(param_4 + -0xc),*(char **)(param_4 + -0x14),param_3);
  uVar2 = (**(code **)(**(int **)(param_4 + -0xc) + 0x14))
                    (*(int **)(param_4 + -0xc),*(undefined4 *)(param_4 + -0x18),iVar1);
  *(undefined4 *)(param_4 + -0x10) = uVar2;
  iVar1 = FUN_00403130(*(int **)(param_4 + -0x10),param_4,extraout_ECX);
  *(int *)(*(int *)(param_4 + -0xc) + 0x2c) = iVar1;
  if (iVar1 == 0) {
    *(undefined4 *)(*(int *)(param_4 + -0xc) + 0x2c) =
         *(undefined4 *)(*(int *)(param_4 + -0xc) + 0x18);
  }
  *in_FS_OFFSET = uStack_1c;
  return;
}



void FUN_00412ab4(int *param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  uint extraout_ECX;
  uint extraout_ECX_00;
  undefined1 *extraout_ECX_01;
  undefined1 *puVar4;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 uVar5;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_58;
  undefined1 *puStack_54;
  undefined4 uStack_4c;
  undefined1 *puStack_48;
  undefined1 *puStack_44;
  undefined4 uStack_40;
  undefined1 *puStack_3c;
  undefined1 *puStack_38;
  undefined4 local_20;
  int local_1c [2];
  int *local_14;
  int *local_10;
  int *local_c;
  byte local_5;
  
  puStack_38 = &stack0xfffffffc;
  local_1c[1] = 0;
  local_1c[0] = 0;
  puStack_3c = &LAB_00412c79;
  uStack_40 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_40;
  puStack_44 = (undefined1 *)0x412ae7;
  local_10 = param_1;
  local_c = param_2;
  (**(code **)(*param_1 + 0x24))(param_1,&local_5,&local_20);
  puStack_44 = (undefined1 *)0x412af2;
  FUN_00413cd4((int)local_10,local_1c + 1,extraout_ECX);
  puStack_44 = (undefined1 *)0x412afd;
  FUN_00413cd4((int)local_10,local_1c,extraout_ECX_00);
  iVar1 = local_10[0xb];
  iVar2 = local_10[7];
  puStack_48 = &LAB_00412c57;
  uStack_4c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_4c;
  local_14 = local_c;
  puVar4 = extraout_ECX_01;
  uVar5 = extraout_EDX;
  puStack_44 = &stack0xfffffffc;
  if (local_c == (int *)0x0) {
    if ((local_5 & 1) == 0) {
      puStack_54 = (undefined1 *)0x412b3e;
      puVar4 = &stack0xfffffffc;
      puStack_44 = &stack0xfffffffc;
      FUN_00412860(0,extraout_EDX,(int)extraout_ECX_01,(int)&stack0xfffffffc);
      uVar5 = extraout_EDX_01;
    }
    else {
      puStack_54 = (undefined1 *)0x412b35;
      puVar4 = &stack0xfffffffc;
      puStack_44 = &stack0xfffffffc;
      FUN_00412a10(0,extraout_EDX,(int)extraout_ECX_01,(int)&stack0xfffffffc);
      uVar5 = extraout_EDX_00;
    }
  }
  if (local_14 != (int *)0x0) {
    puStack_54 = &LAB_00412c15;
    uStack_58 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_58;
    *(ushort *)(local_14 + 8) = *(ushort *)(local_14 + 8) | 1;
    if ((local_5 & 1) == 0) {
      FUN_00412970(local_14,uVar5,puVar4,(int)&stack0xfffffffc);
    }
    if (local_14 == (int *)0x0) {
      *in_FS_OFFSET = uStack_58;
      FUN_0040374c();
      *in_FS_OFFSET = uStack_40;
      puStack_38 = &LAB_00412c80;
      puStack_3c = (undefined1 *)0x412c78;
      FUN_00403c00(local_1c,2);
      return;
    }
    if ((*(byte *)((int)local_14 + 0x21) & 2) != 0) {
      local_10[7] = (int)local_14;
    }
    *(ushort *)(local_14 + 8) = *(ushort *)(local_14 + 8) | 2;
    (**(code **)(*local_14 + 0x14))(local_14,local_10);
    *(ushort *)(local_14 + 8) = *(ushort *)(local_14 + 8) & 0xfffd;
    if ((local_5 & 2) != 0) {
      FUN_00403130((int *)local_10[0xb],local_14,local_20);
    }
    if (((local_5 & 1) == 0) && ((*(byte *)((int)local_14 + 0x21) & 2) == 0)) {
      FUN_0040f38c((int *)local_10[0xd],(int)local_14);
    }
    else {
      iVar3 = FUN_0040f544(local_10[0xd],(int)local_14);
      if (iVar3 < 0) {
        FUN_0040f38c((int *)local_10[0xd],(int)local_14);
      }
    }
    *in_FS_OFFSET = uStack_58;
  }
  *in_FS_OFFSET = uStack_4c;
  local_10[0xb] = iVar1;
  local_10[7] = iVar2;
  return;
}



void FUN_00412c8c(int *param_1,int *param_2,uint param_3)

{
  int iVar1;
  uint extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  
  if (param_1[0xc] == 0) {
    puStack_10 = (undefined1 *)0x412cab;
    iVar1 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',param_3);
    param_1[0xc] = iVar1;
    puStack_14 = &LAB_00412ce7;
    uStack_18 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_18;
    puStack_10 = &stack0xfffffffc;
    FUN_00412cfc(param_1,param_2,extraout_ECX);
    FUN_00412460(param_1);
    *in_FS_OFFSET = uStack_18;
    puStack_10 = (undefined1 *)0x412cf8;
    puStack_14 = (undefined1 *)0x412ce6;
    FUN_004125a4((int)param_1);
    return;
  }
  puStack_10 = (undefined1 *)0x412cf8;
  FUN_00412cfc(param_1,param_2,param_3);
  return;
}



void FUN_00412cfc(int *param_1,int *param_2,uint param_3)

{
  int iVar1;
  int iVar2;
  bool bVar3;
  int iVar4;
  uint extraout_ECX;
  uint extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  uint extraout_ECX_03;
  uint extraout_ECX_04;
  uint uVar5;
  uint extraout_ECX_05;
  int *extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  int *extraout_EDX_02;
  int *extraout_EDX_03;
  int *piVar6;
  undefined4 extraout_EDX_04;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  
  piVar6 = param_2;
  while( true ) {
    puStack_20 = (undefined1 *)0x412d1e;
    bVar3 = FUN_00412348((int)param_1,piVar6,param_3);
    if (bVar3) break;
    puStack_20 = (undefined1 *)0x412d16;
    FUN_004131f4(param_1,param_2);
    param_3 = extraout_ECX;
    piVar6 = extraout_EDX;
  }
  puStack_20 = (undefined1 *)0x412d2a;
  FUN_00413090((int)param_1,extraout_EDX_00,extraout_ECX_00);
  iVar1 = param_1[0xb];
  iVar2 = param_1[10];
  puStack_20 = (undefined1 *)0x412d47;
  iVar4 = FUN_00403130(param_2,extraout_EDX_01,extraout_ECX_01);
  param_1[0xb] = iVar4;
  puStack_24 = &LAB_00412dbe;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  puStack_20 = &stack0xfffffffc;
  iVar4 = FUN_00403130(param_2,param_1,extraout_ECX_02);
  param_1[10] = iVar4;
  uVar5 = extraout_ECX_03;
  piVar6 = extraout_EDX_02;
  if (iVar4 == 0) {
    param_1[10] = param_1[6];
    piVar6 = param_1;
  }
  while( true ) {
    bVar3 = FUN_00412348((int)param_1,piVar6,uVar5);
    if (bVar3) break;
    FUN_00412ab4(param_1,(int *)0x0);
    uVar5 = extraout_ECX_04;
    piVar6 = extraout_EDX_03;
  }
  FUN_00413090((int)param_1,extraout_EDX_04,extraout_ECX_05);
  *in_FS_OFFSET = uStack_28;
  param_1[0xb] = iVar1;
  param_1[10] = iVar2;
  return;
}



void FUN_00412dcc(int param_1,undefined4 param_2,uint param_3)

{
  uint uVar1;
  uint extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 local_14 [4];
  
  uVar1 = FUN_00413db8(param_1,param_2,param_3);
  if ((char)uVar1 == '\x05') {
    FUN_00412614(param_1,local_14,10);
  }
  else {
    *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + -1;
    FUN_00412fd8(param_1,extraout_EDX,extraout_ECX);
  }
  return;
}



void FUN_00412e0c(int param_1,undefined4 param_2,uint param_3)

{
  uint uVar1;
  uint extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 local_c [2];
  
  uVar1 = FUN_00413db8(param_1,param_2,param_3);
  if ((char)uVar1 == '\x0f') {
    FUN_00412614(param_1,local_c,4);
  }
  else {
    *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + -1;
    FUN_00412fd8(param_1,extraout_EDX,extraout_ECX);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00412e4c(int param_1,undefined4 param_2,uint param_3)

{
  uint uVar1;
  uint extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 local_10 [3];
  
  uVar1 = FUN_00413db8(param_1,param_2,param_3);
  if ((char)uVar1 == '\x10') {
    FUN_00412614(param_1,local_10,8);
  }
  else {
    *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + -1;
    FUN_00412fd8(param_1,extraout_EDX,extraout_ECX);
  }
  return;
}



void FUN_00412e98(int param_1,undefined4 param_2,uint param_3)

{
  uint uVar1;
  uint extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 local_10 [3];
  
  uVar1 = FUN_00413db8(param_1,param_2,param_3);
  if ((char)uVar1 == '\x11') {
    FUN_00412614(param_1,local_10,8);
  }
  else {
    *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + -1;
    FUN_00412fd8(param_1,extraout_EDX,extraout_ECX);
  }
  return;
}



void FUN_00412ed8(int param_1,int *param_2,uint param_3)

{
  uint uVar1;
  undefined4 *puVar2;
  uint local_c;
  
  local_c = param_3;
  uVar1 = FUN_00413db8(param_1,param_2,param_3);
  switch(uVar1 & 0x7f) {
  case 0:
    FUN_00403c30(param_2,(undefined4 *)&DAT_00412fd0);
    break;
  default:
    FUN_004121a8();
    break;
  case 7:
    FUN_00412614(param_1,&local_c,1);
    FUN_00403cc4(param_2,(undefined4 *)0x0,local_c & 0xff);
    puVar2 = (undefined4 *)FUN_0040402c(param_2);
    FUN_00412614(param_1,puVar2,local_c & 0xff);
    break;
  case 8:
    FUN_00403c30(param_2,(undefined4 *)s_False_00412fa4);
    break;
  case 9:
    FUN_00403c30(param_2,(undefined4 *)&DAT_00412fb4);
    break;
  case 0xd:
    FUN_00403c30(param_2,(undefined4 *)&DAT_00412fc4);
  }
  return;
}



int FUN_00412fd8(int param_1,undefined4 param_2,uint param_3)

{
  char cVar1;
  uint uVar2;
  int local_c;
  char local_8 [2];
  short local_6;
  
  uVar2 = FUN_00413db8(param_1,param_2,param_3);
  cVar1 = (char)uVar2;
  if (cVar1 == '\x02') {
    FUN_00412614(param_1,(undefined4 *)local_8,1);
    local_c = (int)local_8[0];
  }
  else if (cVar1 == '\x03') {
    FUN_00412614(param_1,(undefined4 *)&local_6,2);
    local_c = (int)local_6;
  }
  else if (cVar1 == '\x04') {
    FUN_00412614(param_1,&local_c,4);
  }
  else {
    FUN_004121a8();
  }
  return local_c;
}



int FUN_00413044(int param_1,undefined4 param_2,uint param_3)

{
  char cVar1;
  uint extraout_ECX;
  undefined4 extraout_EDX;
  int local_c [2];
  
  cVar1 = FUN_004125f8(param_1,param_2,param_3);
  if (cVar1 == '\x13') {
    FUN_00413db8(param_1,extraout_EDX,extraout_ECX);
    FUN_00412614(param_1,local_c,8);
  }
  else {
    local_c[0] = FUN_00412fd8(param_1,extraout_EDX,extraout_ECX);
  }
  return local_c[0];
}



void FUN_00413088(int param_1,undefined4 param_2,uint param_3)

{
  FUN_00412214(param_1,CONCAT31((int3)((uint)param_2 >> 8),1),param_3);
  return;
}



void FUN_00413090(int param_1,undefined4 param_2,uint param_3)

{
  FUN_00412214(param_1,0,param_3);
  return;
}



void FUN_00413098(int param_1,byte *param_2,int *param_3)

{
  byte bVar1;
  uint uVar2;
  int iVar3;
  uint extraout_ECX;
  uint extraout_ECX_00;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  
  *param_2 = DAT_004130d4;
  bVar1 = FUN_004125f8(param_1,param_2,(uint)param_3);
  if ((bVar1 & 0xf0) == 0xf0) {
    uVar2 = FUN_00413db8(param_1,extraout_EDX,extraout_ECX);
    *param_2 = (byte)uVar2 & 0xf;
    if ((*param_2 & 2) != 0) {
      iVar3 = FUN_00412fd8(param_1,extraout_EDX_00,extraout_ECX_00);
      *param_3 = iVar3;
    }
  }
  return;
}



void FUN_004131d8(undefined4 param_1,undefined4 param_2,uint param_3,int param_4)

{
  FUN_00413f18(*(int *)(param_4 + -0xc),param_2,param_3);
  FUN_00412190((undefined4 *)PTR_PTR_00475854);
  return;
}



void FUN_004131f4(int *param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  int *piVar4;
  uint extraout_ECX;
  uint extraout_ECX_00;
  uint extraout_ECX_01;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  int iVar5;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_48;
  undefined1 *puStack_44;
  undefined1 *puStack_40;
  undefined4 local_3c;
  undefined1 *puStack_38;
  undefined1 *puStack_34;
  undefined4 local_30;
  undefined1 *puStack_2c;
  undefined1 *puStack_28;
  int *local_18;
  int *local_14;
  int local_c;
  int *local_8;
  
  puStack_28 = &stack0xfffffffc;
  puStack_34 = &stack0xfffffffc;
  local_c = 0;
  puStack_2c = &LAB_004133b8;
  local_30 = *in_FS_OFFSET;
  *in_FS_OFFSET = &local_30;
  puStack_38 = &LAB_0041336d;
  local_3c = *in_FS_OFFSET;
  *in_FS_OFFSET = &local_3c;
  puStack_40 = (undefined1 *)0x41322f;
  local_8 = param_2;
  FUN_00413cd4((int)param_1,&local_c,0);
  puStack_44 = &LAB_00413346;
  uStack_48 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_48;
  iVar5 = 1;
  puStack_40 = &stack0xfffffffc;
  iVar1 = FUN_00403e5c(local_c);
  local_14 = local_8;
  *(undefined1 *)(param_1 + 0x1d) = 1;
  iVar2 = iVar5;
  while( true ) {
    for (; (iVar5 <= iVar1 && (*(char *)(local_c + -1 + iVar5) != '.')); iVar5 = iVar5 + 1) {
    }
    FUN_00404064(local_c,iVar2,iVar5 - iVar2,param_1 + 0x1c);
    if (iVar1 < iVar5) break;
    iVar2 = FUN_00403174(*local_14);
    puVar3 = (undefined4 *)FUN_0040d168(iVar2,(undefined1 *)param_1[0x1c]);
    if (puVar3 == (undefined4 *)0x0) {
      FUN_00412608((int)param_1,extraout_EDX,extraout_ECX);
    }
    local_18 = (int *)0x0;
    if (**(char **)*puVar3 == '\a') {
      local_18 = (int *)FUN_0040d228(local_14,puVar3);
    }
    piVar4 = FUN_004030cc(local_18,(int)PTR_PTR_0040ddb8);
    if ((char)piVar4 == '\0') {
      FUN_004131d8(piVar4,extraout_EDX_00,extraout_ECX_00,(int)&stack0xfffffffc);
    }
    local_14 = local_18;
    iVar5 = iVar5 + 1;
    iVar2 = iVar5;
  }
  iVar2 = FUN_00403174(*local_14);
  puVar3 = (undefined4 *)FUN_0040d168(iVar2,(undefined1 *)param_1[0x1c]);
  if (puVar3 == (undefined4 *)0x0) {
    *(undefined1 *)(param_1 + 0x1d) = 0;
    (**(code **)(*local_14 + 4))(local_14,param_1);
    *(undefined1 *)(param_1 + 0x1d) = 1;
    if (param_1[0x1c] != 0) {
      FUN_00412608((int)param_1,extraout_EDX_01,extraout_ECX_01);
    }
  }
  else {
    FUN_00413648(param_1,local_14,puVar3);
  }
  *in_FS_OFFSET = uStack_48;
  *in_FS_OFFSET = local_3c;
  *in_FS_OFFSET = local_30;
  puStack_28 = &LAB_004133bf;
  puStack_2c = (undefined1 *)0x4133b7;
  FUN_00403bdc(&local_c);
  return;
}



void FUN_004133c8(int *param_1,undefined4 *param_2,undefined4 param_3)

{
  char cVar1;
  code *pcVar2;
  int local_c;
  int *local_8;
  
  local_8 = param_1;
  pcVar2 = (code *)FUN_0040ef70(*(int *)*param_2);
  if ((pcVar2 != (code *)0x0) && (cVar1 = (*pcVar2)(param_3,&local_c), cVar1 != '\0')) {
    FUN_0040d29c(local_8,param_2,local_c);
    return;
  }
  FUN_004121a8();
  return;
}



void FUN_00413410(int param_1,int param_2,undefined4 *param_3,int param_4)

{
  int *piVar1;
  
  piVar1 = FUN_00411cbc((int *)PTR_DAT_00411c48,'\x01',param_1,param_3,(undefined4 *)0x0,param_2,
                        *(int *)(*(int *)(param_4 + -4) + 0x18));
  FUN_0040f38c(*(int **)(*(int *)(param_4 + -4) + 0x30),(int)piVar1);
  return;
}



void FUN_00413450(undefined4 param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  byte bVar1;
  uint uVar2;
  int iVar3;
  int *piVar4;
  uint extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  float10 in_ST0;
  undefined4 uStack_2c;
  undefined1 *puStack_28;
  undefined1 *puStack_24;
  OLECHAR *local_1c;
  undefined4 *local_18;
  undefined1 local_14 [16];
  
  puStack_24 = &stack0xfffffffc;
  local_14._8_8_ = (_union_2685)0x0;
  local_14._4_4_ = 0;
  local_14._0_4_ = 0;
  local_18 = (undefined4 *)0x0;
  local_1c = (OLECHAR *)0x0;
  puStack_28 = &LAB_0041363b;
  uStack_2c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_2c;
  bVar1 = FUN_004125f8(*(int *)(param_4 + -4),param_2,0);
  switch(bVar1) {
  case 0:
  case 0xd:
    uVar2 = FUN_00413db8(*(int *)(param_4 + -4),extraout_EDX,extraout_ECX);
    if ((char)uVar2 == '\r') {
      FUN_00404918((VARIANTARG *)local_14);
    }
    else {
      FUN_0040495c((VARIANT *)local_14,(VARIANTARG *)PTR_DAT_00475590);
    }
    break;
  default:
    piVar4 = FUN_0040aacc((int *)PTR_DAT_0040d918,'\x01',(undefined4 *)PTR_PTR_0047587c);
    FUN_004036ac(piVar4);
    break;
  case 2:
    iVar3 = FUN_00412fd8(*(int *)(param_4 + -4),extraout_EDX,extraout_ECX);
    local_14[8] = (char)iVar3;
    break;
  case 3:
    iVar3 = FUN_00412fd8(*(int *)(param_4 + -4),extraout_EDX,extraout_ECX);
    local_14._8_2_ = (short)iVar3;
    break;
  case 4:
    iVar3 = FUN_00412fd8(*(int *)(param_4 + -4),extraout_EDX,extraout_ECX);
    local_14._8_4_ = iVar3;
    break;
  case 5:
    FUN_00412dcc(*(int *)(param_4 + -4),extraout_EDX,extraout_ECX);
    local_14._8_8_ = (undefined8)in_ST0;
    break;
  case 6:
  case 0xc:
    FUN_00413d10(*(int *)(param_4 + -4),(int *)&local_18,extraout_ECX);
    FUN_00404ca0((VARIANTARG *)local_14,local_18);
    break;
  case 8:
  case 9:
    uVar2 = FUN_00413db8(*(int *)(param_4 + -4),extraout_EDX,extraout_ECX);
    local_14._8_2_ = -(ushort)((char)uVar2 == '\t');
    break;
  case 0xf:
    FUN_00412e0c(*(int *)(param_4 + -4),extraout_EDX,extraout_ECX);
    local_14._8_4_ = (float)in_ST0;
    break;
  case 0x10:
    FUN_00412e4c(*(int *)(param_4 + -4),extraout_EDX,extraout_ECX);
    local_14._8_8_ = (undefined8)ROUND(in_ST0);
    break;
  case 0x11:
    FUN_00412e98(*(int *)(param_4 + -4),extraout_EDX,extraout_ECX);
    local_14._8_8_ = (undefined8)in_ST0;
    break;
  case 0x12:
    FUN_00413d70(*(int *)(param_4 + -4),(uint *)&local_1c,extraout_ECX);
    FUN_00404ce0((VARIANTARG *)local_14,local_1c);
  }
  local_14._0_2_ = *(undefined2 *)(&DAT_00474308 + (uint)bVar1 * 4);
  FUN_0040d558(*(int **)(param_4 + -8),*(int *)(param_4 + -0xc),(VARIANTARG *)local_14);
  *in_FS_OFFSET = local_1c;
  local_14._0_4_ = &LAB_00413642;
  local_18 = (undefined4 *)0x41362a;
  FUN_00404234(&local_1c);
  local_18 = (undefined4 *)0x413632;
  FUN_00403bdc((int *)&local_18);
  local_18 = (undefined4 *)0x41363a;
  FUN_00404d14((VARIANTARG *)local_14);
  return;
}



void FUN_00413648(int *param_1,int *param_2,undefined4 *param_3)

{
  byte *pbVar1;
  undefined1 *puVar2;
  byte bVar3;
  char cVar4;
  int *piVar5;
  int iVar6;
  undefined4 *extraout_ECX;
  uint extraout_ECX_00;
  uint extraout_ECX_01;
  uint extraout_ECX_02;
  undefined4 extraout_ECX_03;
  int *extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 extraout_EDX_03;
  undefined4 *in_FS_OFFSET;
  undefined1 *puVar7;
  undefined4 uStack_3c;
  undefined1 *puStack_38;
  undefined1 *puStack_34;
  int local_2c;
  undefined4 *local_28;
  LPCSTR local_24;
  byte *local_20;
  int local_1c;
  int local_18;
  int local_14;
  undefined4 *local_10;
  int *local_c;
  int *local_8;
  
  puStack_34 = &stack0xfffffffc;
  puVar7 = &stack0xfffffffc;
  local_2c = 0;
  local_28 = (undefined4 *)0x0;
  local_24 = (LPCSTR)0x0;
  local_20 = (byte *)0x0;
  local_1c = 0;
  puStack_38 = &LAB_004138d4;
  uStack_3c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_3c;
  puVar2 = &stack0xfffffffc;
  local_10 = param_3;
  local_c = param_2;
  local_8 = param_1;
  if (param_3[2] == 0) {
    FUN_00412190((undefined4 *)PTR_PTR_004757f0);
    param_3 = extraout_ECX;
    param_2 = extraout_EDX;
    puVar2 = puStack_34;
  }
  puStack_34 = puVar2;
  pbVar1 = *(byte **)*local_10;
  switch((uint)*pbVar1) {
  case 1:
    cVar4 = FUN_004125f8((int)local_8,param_2,(uint)param_3);
    if (cVar4 == '\a') {
      FUN_00412ed8((int)local_8,&local_1c,extraout_ECX_00);
      FUN_004133c8(local_c,local_10,local_1c);
    }
    else {
      iVar6 = FUN_00412fd8((int)local_8,extraout_EDX_00,extraout_ECX_00);
      FUN_0040d29c(local_c,local_10,iVar6);
    }
    break;
  case 2:
    bVar3 = FUN_004126b0((int)local_8,param_2,(uint)param_3);
    FUN_0040d29c(local_c,local_10,(uint)bVar3);
    break;
  case 3:
    FUN_00412ed8((int)local_8,(int *)&local_20,(uint)param_3);
    iVar6 = FUN_004121c0((char *)pbVar1,local_20);
    FUN_0040d29c(local_c,local_10,iVar6);
    break;
  case 4:
    FUN_00412dcc((int)local_8,param_2,(uint)param_3);
    FUN_0040d4ac(local_c,local_10);
    break;
  case 5:
  case 10:
  case 0xb:
    FUN_00413d10((int)local_8,(int *)&local_24,(uint)param_3);
    FUN_0040d480(local_c,local_10,local_24);
    break;
  case 6:
    iVar6 = FUN_00413bf4((int)local_8,(int)pbVar1);
    FUN_0040d29c(local_c,local_10,iVar6);
    break;
  case 7:
    cVar4 = FUN_004125f8((int)local_8,param_2,(uint)param_3);
    if (cVar4 == '\r') {
      FUN_00413db8((int)local_8,extraout_EDX_01,extraout_ECX_01);
      FUN_0040d29c(local_c,local_10,0);
    }
    else if (cVar4 == '\x0e') {
      FUN_00413db8((int)local_8,extraout_EDX_01,extraout_ECX_01);
      piVar5 = (int *)FUN_0040d228(local_c,local_10);
      FUN_00412734((int)local_8,piVar5);
    }
    else {
      FUN_00412ed8((int)local_8,(int *)&local_28,extraout_ECX_01);
      FUN_00413410((int)local_c,(int)local_10,local_28,(int)puVar7);
    }
    break;
  case 8:
    cVar4 = FUN_004125f8((int)local_8,param_2,(uint)param_3);
    if (cVar4 == '\r') {
      FUN_00413db8((int)local_8,extraout_EDX_02,extraout_ECX_02);
      FUN_0040d598(local_c,(int)local_10,(undefined4 *)&DAT_00474300);
    }
    else {
      FUN_00412ed8((int)local_8,&local_2c,extraout_ECX_02);
      local_18 = (**(code **)(*local_8 + 0x18))(local_8,local_8[6],local_2c);
      local_14 = local_8[6];
      if (local_18 != 0) {
        FUN_0040d598(local_c,(int)local_10,&local_18);
      }
    }
    break;
  case 0xc:
    FUN_00413450((uint)*pbVar1,param_2,param_3,(int)&stack0xfffffffc);
    break;
  case 0x10:
    iVar6 = FUN_00413044((int)local_8,param_2,(uint)param_3);
    FUN_0040d5d0(local_c,(int)local_10,extraout_ECX_03,iVar6,extraout_EDX_03);
  }
  *in_FS_OFFSET = uStack_3c;
  puStack_34 = &LAB_004138db;
  puStack_38 = (undefined1 *)0x4138d3;
  FUN_00403c00(&local_2c,5);
  return;
}



void FUN_004138e0(undefined4 *param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  undefined4 *local_14;
  undefined1 local_10;
  int local_c;
  undefined1 local_8;
  
  iVar2 = 0;
  FUN_00403bdc(param_2);
  if (DAT_00476618 != (code *)0x0) {
    FUN_00403c30(param_2,param_1);
    while( true ) {
      iVar1 = (*DAT_00476618)(*param_2);
      if (iVar1 == 0) break;
      iVar2 = iVar2 + 1;
      local_10 = 0xb;
      local_8 = 0;
      local_14 = param_1;
      local_c = iVar2;
      FUN_00409224((byte *)s__s__d_00413948,&local_14,1,param_2);
    }
  }
  return;
}



void FUN_00413950(int *param_1,int *param_2)

{
  LPVOID pvVar1;
  int *piVar2;
  int iVar3;
  uint extraout_ECX;
  uint extraout_ECX_00;
  uint extraout_ECX_01;
  undefined4 extraout_ECX_02;
  int unaff_EDI;
  int *in_FS_OFFSET;
  int iStack_4c;
  undefined1 *puStack_48;
  undefined1 *puStack_44;
  int iStack_40;
  undefined1 *puStack_3c;
  undefined1 *puStack_38;
  int iStack_34;
  undefined4 *local_30;
  undefined1 *local_2c;
  int local_28;
  undefined1 *local_24;
  undefined1 *local_20;
  int iVar4;
  int *local_10;
  
  local_20 = &stack0xfffffffc;
  iVar3 = 5;
  do {
    iVar3 = iVar3 + -1;
  } while (iVar3 != 0);
  local_24 = &LAB_00413be2;
  local_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)&local_28;
  local_2c = (undefined1 *)0x41397f;
  FUN_00413cb0((int)param_1,param_2,0);
  local_2c = (undefined1 *)0x41398e;
  FUN_0040be4c(DAT_00476614);
  local_30 = (undefined4 *)&LAB_00413bc0;
  iStack_34 = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)&iStack_34;
  puStack_3c = &LAB_00413b81;
  iStack_40 = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)&iStack_40;
  puStack_44 = (undefined1 *)0x4139b8;
  puStack_38 = &stack0xfffffffc;
  local_2c = &stack0xfffffffc;
  (**(code **)(*param_1 + 0x24))(param_1,&stack0xffffffeb,&stack0xffffffec);
  if (param_2 == (int *)0x0) {
    puStack_44 = (undefined1 *)0x4139c9;
    FUN_00413cd4((int)param_1,(int *)&stack0xffffffe4,extraout_ECX);
    puStack_44 = (undefined1 *)0x4139d1;
    iVar3 = FUN_0040ebd0(unaff_EDI);
    puStack_44 = (undefined1 *)0x4139d8;
    local_10 = (int *)(**(code **)(iVar3 + 0x2c))(iVar3,1,0);
    puStack_44 = (undefined1 *)0x4139e6;
    FUN_00413cd4((int)param_1,(int *)&local_20,extraout_ECX_00);
    puStack_44 = (undefined1 *)0x4139f1;
    (**(code **)(*local_10 + 0x18))(local_10,local_20);
  }
  else {
    puStack_44 = (undefined1 *)0x413a04;
    FUN_00413cd4((int)param_1,(int *)&local_24,extraout_ECX);
    local_10 = param_2;
    if ((*(byte *)(param_2 + 8) & 0x10) == 0) {
      *(ushort *)(param_2 + 8) = *(ushort *)(param_2 + 8) | 1;
      *(ushort *)(param_2 + 8) = *(ushort *)(param_2 + 8) | 2;
      puStack_44 = (undefined1 *)0x413a35;
      FUN_00413cd4((int)param_1,(int *)&local_30,extraout_ECX_01);
      puStack_44 = (undefined1 *)0x413a40;
      FUN_004138e0(local_30,(int *)&local_2c);
      puStack_44 = (undefined1 *)0x413a4b;
      (**(code **)(*param_2 + 0x18))(param_2,local_2c);
    }
    else {
      puStack_44 = (undefined1 *)0x413a18;
      FUN_00413cd4((int)param_1,&local_28,extraout_ECX_01);
    }
  }
  param_1[6] = (int)local_10;
  param_1[7] = (int)local_10;
  puStack_44 = (undefined1 *)0x413a62;
  pvVar1 = FUN_00406670();
  if (*(int *)((int)pvVar1 + 8) == 0) {
    puStack_44 = (undefined1 *)0x413a8a;
    iVar3 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX_02);
    param_1[0xd] = iVar3;
  }
  else {
    puStack_44 = (undefined1 *)0x413a70;
    pvVar1 = FUN_00406670();
    param_1[0xd] = *(int *)((int)pvVar1 + 8);
  }
  puStack_48 = &LAB_00413b6b;
  iStack_4c = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)&iStack_4c;
  puStack_44 = &stack0xfffffffc;
  iVar3 = FUN_0040f544(param_1[0xd],param_1[6]);
  if (iVar3 < 0) {
    FUN_0040f38c((int *)param_1[0xd],param_1[6]);
  }
  param_1[10] = param_1[6];
  *(ushort *)(param_1[6] + 0x20) = *(ushort *)(param_1[6] + 0x20) | 1;
  *(ushort *)(param_1[6] + 0x20) = *(ushort *)(param_1[6] + 0x20) | 2;
  (**(code **)(*(int *)param_1[6] + 0x14))((int *)param_1[6],param_1);
  *(ushort *)(param_1[6] + 0x20) = *(ushort *)(param_1[6] + 0x20) & 0xfffd;
  pvVar1 = FUN_00406670();
  if ((*(int *)((int)pvVar1 + 8) == 0) && (iVar3 = *(int *)(param_1[0xd] + 8), -1 < iVar3 + -1)) {
    iVar4 = 0;
    do {
      piVar2 = (int *)FUN_0040f4e8((undefined4 *)param_1[0xd],iVar4);
      (**(code **)(*piVar2 + 0xc))();
      iVar4 = iVar4 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  *in_FS_OFFSET = iStack_4c;
  puStack_44 = &LAB_00413b72;
  puStack_48 = (undefined1 *)0x413b4e;
  pvVar1 = FUN_00406670();
  if (*(int *)((int)pvVar1 + 8) == 0) {
    puStack_48 = (undefined1 *)0x413b62;
    FUN_00402f54((int *)param_1[0xd]);
  }
  param_1[0xd] = 0;
  return;
}



void FUN_00413bf4(int param_1,int param_2)

{
  char *pcVar1;
  uint uVar2;
  int iVar3;
  uint extraout_ECX;
  uint extraout_ECX_00;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_30;
  undefined1 *puStack_2c;
  undefined1 *puStack_28;
  undefined4 local_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  byte *local_c;
  int local_8;
  
  puStack_1c = &stack0xfffffffc;
  puStack_28 = &stack0xfffffffc;
  local_c = (byte *)0x0;
  puStack_20 = &LAB_00413c9e;
  local_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &local_24;
  puStack_2c = &LAB_00413c71;
  uStack_30 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_30;
  local_8 = param_1;
  uVar2 = FUN_00413db8(param_1,param_2,0);
  if ((char)uVar2 != '\v') {
    FUN_004121a8();
  }
  iVar3 = FUN_0040d0fc(param_2);
  pcVar1 = (char *)**(undefined4 **)(iVar3 + 1);
  uVar2 = extraout_ECX;
  while (FUN_00413cd4(local_8,(int *)&local_c,uVar2), local_c != (byte *)0x0) {
    FUN_004121c0(pcVar1,local_c);
    uVar2 = extraout_ECX_00;
  }
  *in_FS_OFFSET = uStack_30;
  *in_FS_OFFSET = local_24;
  puStack_1c = &LAB_00413ca5;
  puStack_20 = (undefined1 *)0x413c9d;
  FUN_00403bdc((int *)&local_c);
  return;
}



void FUN_00413cb0(int param_1,undefined4 param_2,int param_3)

{
  int local_4;
  
  local_4 = param_3;
  FUN_00412614(param_1,&local_4,4);
  if (local_4 != DAT_004742fc) {
    FUN_00412190((undefined4 *)PTR_PTR_004756fc);
  }
  return;
}



void FUN_00413cd4(int param_1,int *param_2,uint param_3)

{
  undefined4 *puVar1;
  uint local_c;
  
  local_c = param_3;
  FUN_00412614(param_1,&local_c,1);
  FUN_00403cc4(param_2,(undefined4 *)0x0,local_c & 0xff);
  puVar1 = (undefined4 *)FUN_0040402c(param_2);
  FUN_00412614(param_1,puVar1,local_c & 0xff);
  return;
}



void FUN_00413d10(int param_1,int *param_2,uint param_3)

{
  uint uVar1;
  uint local_c;
  
  local_c = 0;
  uVar1 = FUN_00413db8(param_1,param_2,param_3);
  if ((char)uVar1 == '\x06') {
    FUN_00412614(param_1,&local_c,1);
  }
  else if ((char)uVar1 == '\f') {
    FUN_00412614(param_1,&local_c,4);
  }
  else {
    FUN_004121a8();
  }
  FUN_00403cc4(param_2,(undefined4 *)0x0,local_c);
  FUN_00412614(param_1,(undefined4 *)*param_2,local_c);
  return;
}



void FUN_00413d70(int param_1,uint *param_2,uint param_3)

{
  uint uVar1;
  UINT local_c;
  
  local_c = 0;
  uVar1 = FUN_00413db8(param_1,param_2,param_3);
  if ((char)uVar1 != '\x12') {
    FUN_004121a8();
  }
  FUN_00412614(param_1,&local_c,4);
  FUN_00404370(param_2,local_c);
  FUN_00412614(param_1,(undefined4 *)*param_2,local_c * 2);
  return;
}



uint FUN_00413db8(int param_1,undefined4 param_2,uint param_3)

{
  undefined4 uVar1;
  uint local_4;
  
  local_4 = param_3;
  uVar1 = FUN_00412614(param_1,&local_4,1);
  return CONCAT31((int3)((uint)uVar1 >> 8),(undefined1)local_4);
}



void FUN_00413dcc(int param_1,undefined4 param_2,uint param_3)

{
  uint extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  int local_8;
  
  puStack_10 = &stack0xfffffffc;
  local_8 = 0;
  puStack_14 = &LAB_00413e08;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  do {
    FUN_00413cd4(param_1,&local_8,param_3);
    param_3 = extraout_ECX;
  } while (local_8 != 0);
  *in_FS_OFFSET = uStack_18;
  puStack_10 = &LAB_00413e0f;
  puStack_14 = (undefined1 *)0x413e07;
  FUN_00403bdc(&local_8);
  return;
}



void FUN_00413e14(undefined4 param_1,undefined4 param_2,uint param_3,int param_4)

{
  bool bVar1;
  uint extraout_ECX;
  uint extraout_ECX_00;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  int *piVar2;
  
  piVar2 = (int *)(param_4 + -4);
  while( true ) {
    bVar1 = FUN_00412348(*piVar2,param_2,param_3);
    if (bVar1) break;
    FUN_00413f18(*piVar2,extraout_EDX_00,extraout_ECX_00);
    param_3 = extraout_ECX;
    param_2 = extraout_EDX;
  }
  FUN_00413090(*piVar2,extraout_EDX_00,extraout_ECX_00);
  return;
}



void FUN_00413e3c(uint param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  undefined4 local_104 [64];
  
  if (0 < (int)param_1) {
    do {
      if ((int)param_1 < 0x101) {
        FUN_00412614(*(int *)(param_4 + -4),local_104,param_1);
        param_1 = 0;
      }
      else {
        FUN_00412614(*(int *)(param_4 + -4),local_104,0x100);
        param_1 = param_1 - 0x100;
      }
    } while (0 < (int)param_1);
  }
  return;
}



void FUN_00413e90(undefined4 param_1,undefined4 param_2,uint param_3,int param_4)

{
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  uint local_8;
  
  local_8 = param_3;
  FUN_00412614(*(int *)(param_4 + -4),&local_8,4);
  FUN_00413e3c(local_8,extraout_EDX,extraout_ECX,param_4);
  return;
}



void FUN_00413eb8(undefined4 param_1,undefined4 param_2,uint param_3,uint param_4)

{
  char cVar1;
  bool bVar2;
  uint extraout_ECX;
  uint extraout_ECX_00;
  uint uVar3;
  uint extraout_ECX_01;
  uint uVar4;
  uint extraout_ECX_02;
  uint extraout_ECX_03;
  uint extraout_ECX_04;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 uVar5;
  undefined4 extraout_EDX_03;
  undefined4 extraout_EDX_04;
  undefined4 extraout_EDX_05;
  int *piVar6;
  
  piVar6 = (int *)(param_4 - 4);
  while( true ) {
    bVar2 = FUN_00412348(*piVar6,param_2,param_3);
    if (bVar2) break;
    cVar1 = FUN_004125f8(*piVar6,extraout_EDX_05,extraout_ECX_04);
    uVar3 = extraout_ECX;
    uVar5 = extraout_EDX;
    if ((byte)(cVar1 - 2U) < 3) {
      FUN_00413f18(*piVar6,extraout_EDX,extraout_ECX);
      uVar3 = extraout_ECX_00;
      uVar5 = extraout_EDX_00;
    }
    uVar4 = param_4;
    FUN_00413e3c(1,uVar5,uVar3,param_4);
    uVar5 = extraout_EDX_01;
    while( true ) {
      bVar2 = FUN_00412348(*piVar6,uVar5,uVar4);
      if (bVar2) break;
      FUN_00414080(*piVar6,extraout_EDX_03,extraout_ECX_02);
      uVar4 = extraout_ECX_01;
      uVar5 = extraout_EDX_02;
    }
    FUN_00413090(*piVar6,extraout_EDX_03,extraout_ECX_02);
    param_3 = extraout_ECX_03;
    param_2 = extraout_EDX_04;
  }
  FUN_00413090(*piVar6,extraout_EDX_05,extraout_ECX_04);
  return;
}



void FUN_00413f18(int param_1,undefined4 param_2,uint param_3)

{
  uint uVar1;
  uint extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  int local_c;
  int local_8;
  
  puStack_10 = &stack0xfffffffc;
  local_c = 0;
  puStack_14 = &LAB_00414075;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  local_8 = param_1;
  uVar1 = FUN_00413db8(param_1,0,param_3);
  uVar1 = uVar1 & 0x7f;
  switch(uVar1) {
  case 1:
    FUN_00413e14(uVar1,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
    break;
  case 2:
    FUN_00413e3c(1,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
    break;
  case 3:
    FUN_00413e3c(2,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
    break;
  case 4:
    FUN_00413e3c(4,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
    break;
  case 5:
    FUN_00413e3c(10,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
    break;
  case 6:
  case 7:
    FUN_00413cd4(local_8,&local_c,extraout_ECX);
    break;
  case 10:
    FUN_00413e90(uVar1,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
    break;
  case 0xb:
    FUN_00413dcc(local_8,extraout_EDX,extraout_ECX);
    break;
  case 0xc:
    FUN_00413e90(uVar1,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
    break;
  case 0xe:
    FUN_00413eb8(uVar1,extraout_EDX,extraout_ECX,(uint)&stack0xfffffffc);
    break;
  case 0xf:
    FUN_00413e3c(4,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
    break;
  case 0x10:
    FUN_00413e3c(8,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
    break;
  case 0x11:
    FUN_00413e3c(8,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
    break;
  case 0x12:
    FUN_00413e90(uVar1,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
    break;
  case 0x13:
    FUN_00413e3c(8,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
  }
  *in_FS_OFFSET = uStack_18;
  puStack_10 = &LAB_0041407c;
  puStack_14 = (undefined1 *)0x414074;
  FUN_00403bdc(&local_c);
  return;
}



void FUN_00414080(int param_1,undefined4 param_2,uint param_3)

{
  uint extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  int local_8;
  
  puStack_10 = &stack0xfffffffc;
  local_8 = 0;
  puStack_14 = &LAB_004140bd;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  FUN_00413cd4(param_1,&local_8,param_3);
  FUN_00413f18(param_1,extraout_EDX,extraout_ECX);
  *in_FS_OFFSET = uStack_18;
  puStack_10 = &LAB_004140c4;
  puStack_14 = (undefined1 *)0x4140bc;
  FUN_00403bdc(&local_8);
  return;
}



void FUN_004140c8(int *param_1,undefined4 param_2)

{
  undefined1 *puVar1;
  bool bVar2;
  uint uVar3;
  uint extraout_ECX;
  uint extraout_ECX_00;
  uint extraout_ECX_01;
  uint extraout_ECX_02;
  uint extraout_ECX_03;
  uint extraout_ECX_04;
  uint extraout_ECX_05;
  uint extraout_ECX_06;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 extraout_EDX_03;
  undefined4 uVar4;
  undefined4 extraout_EDX_04;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  int local_14 [2];
  undefined1 local_c [7];
  undefined1 local_5;
  
  puStack_20 = &stack0xfffffffc;
  uVar3 = 0;
  local_14[0] = 0;
  local_14[1] = 0;
  puStack_24 = &LAB_00414160;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  puVar1 = &stack0xfffffffc;
  if ((char)param_2 != '\0') {
    (**(code **)(*param_1 + 0x24))(param_1,&local_5,local_c);
    FUN_00413cd4((int)param_1,local_14 + 1,extraout_ECX);
    FUN_00413cd4((int)param_1,local_14,extraout_ECX_00);
    uVar3 = extraout_ECX_01;
    param_2 = extraout_EDX;
    puVar1 = puStack_20;
  }
  while( true ) {
    puStack_20 = puVar1;
    bVar2 = FUN_00412348((int)param_1,param_2,uVar3);
    if (bVar2) break;
    FUN_00414080((int)param_1,extraout_EDX_01,extraout_ECX_03);
    uVar3 = extraout_ECX_02;
    param_2 = extraout_EDX_00;
    puVar1 = puStack_20;
  }
  FUN_00413090((int)param_1,extraout_EDX_01,extraout_ECX_03);
  uVar3 = extraout_ECX_04;
  uVar4 = extraout_EDX_02;
  while( true ) {
    bVar2 = FUN_00412348((int)param_1,uVar4,uVar3);
    if (bVar2) break;
    FUN_004140c8(param_1,CONCAT31((int3)((uint)extraout_EDX_04 >> 8),1));
    uVar3 = extraout_ECX_05;
    uVar4 = extraout_EDX_03;
  }
  FUN_00413090((int)param_1,extraout_EDX_04,extraout_ECX_06);
  *in_FS_OFFSET = uStack_28;
  puStack_20 = &LAB_00414167;
  puStack_24 = (undefined1 *)0x41415f;
  FUN_00403c00(local_14,2);
  return;
}



int FUN_00414268(int param_1,char *param_2,int param_3)

{
  int *piVar1;
  int local_c;
  
  local_c = param_3;
  local_c = FUN_0040ebf0(*(undefined4 **)(param_1 + 0x18),param_2);
  if (((local_c == 0) && (*(int *)(param_1 + 0x1c) != 0)) &&
     (*(int *)(param_1 + 0x1c) != *(int *)(param_1 + 0x18))) {
    local_c = FUN_0040ebf0(*(undefined4 **)(param_1 + 0x1c),param_2);
  }
  if (*(short *)(param_1 + 0x62) != 0) {
    (**(code **)(param_1 + 0x60))(*(undefined4 *)(param_1 + 100),param_1,param_2,&local_c);
  }
  if ((local_c != 0) &&
     (piVar1 = thunk_FUN_00403164(local_c,(int)PTR_PTR_0040e784), (char)piVar1 != '\0')) {
    return local_c;
  }
  FUN_0040eab4(param_2);
  return local_c;
}



void FUN_004142d8(int param_1,undefined4 *param_2,uint param_3)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  undefined4 *puVar4;
  
  while (param_3 != 0) {
    uVar2 = *(uint *)(param_1 + 0xc) - *(uint *)(param_1 + 0x10);
    if (*(uint *)(param_1 + 0xc) < *(uint *)(param_1 + 0x10) || uVar2 == 0) {
      FUN_00414324(param_1);
      uVar2 = *(uint *)(param_1 + 0xc);
    }
    if (param_3 <= uVar2) {
      uVar2 = param_3;
    }
    param_3 = param_3 - uVar2;
    iVar1 = *(int *)(param_1 + 0x10);
    *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + uVar2;
    puVar4 = (undefined4 *)(*(int *)(param_1 + 8) + iVar1);
    for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {
      *puVar4 = *param_2;
      param_2 = param_2 + 1;
      puVar4 = puVar4 + 1;
    }
    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {
      *(undefined1 *)puVar4 = *(undefined1 *)param_2;
      param_2 = (undefined4 *)((int)param_2 + 1);
      puVar4 = (undefined4 *)((int)puVar4 + 1);
    }
  }
  return;
}



void FUN_00414324(int param_1)

{
  FUN_00411608(*(int **)(param_1 + 4),*(undefined4 *)(param_1 + 8),*(int *)(param_1 + 0x10));
  *(undefined4 *)(param_1 + 0x10) = 0;
  return;
}



void FUN_0041433c(int param_1,char param_2,undefined4 param_3)

{
  if (param_2 != '\0') {
    FUN_00414430(param_1,9,param_3);
    return;
  }
  FUN_00414430(param_1,8,param_3);
  return;
}



void FUN_00414350(int param_1,int param_2,undefined4 param_3)

{
  int local_8;
  
  local_8 = param_2;
  if ((-0x81 < param_2) && (param_2 < 0x80)) {
    FUN_00414430(param_1,2,param_3);
    FUN_004142d8(param_1,&local_8,1);
    return;
  }
  if ((param_2 < -0x8000) || (0x7fff < param_2)) {
    FUN_00414430(param_1,4,param_3);
    FUN_004142d8(param_1,&local_8,4);
  }
  else {
    FUN_00414430(param_1,3,param_3);
    FUN_004142d8(param_1,&local_8,2);
  }
  return;
}



void FUN_004143c4(int param_1,undefined4 param_2,undefined4 param_3)

{
  FUN_00414430(param_1,1,param_3);
  return;
}



void FUN_004143cc(int param_1,undefined4 param_2,undefined4 param_3)

{
  FUN_00414430(param_1,0,param_3);
  return;
}



void FUN_004143d4(int param_1,undefined4 *param_2,uint param_3)

{
  undefined4 extraout_ECX;
  uint local_c;
  
  local_c = param_3;
  local_c = FUN_00403e5c((int)param_2);
  if ((int)local_c < 0x100) {
    FUN_00414430(param_1,6,extraout_ECX);
    FUN_004142d8(param_1,&local_c,1);
  }
  else {
    FUN_00414430(param_1,0xc,extraout_ECX);
    FUN_004142d8(param_1,&local_c,4);
  }
  FUN_004142d8(param_1,param_2,local_c);
  return;
}



void FUN_00414430(int param_1,undefined1 param_2,undefined4 param_3)

{
  undefined1 local_4;
  undefined3 uStack_3;
  
  _local_4 = CONCAT31((int3)((uint)param_3 >> 8),param_2);
  FUN_004142d8(param_1,(undefined4 *)&local_4,1);
  return;
}



void FUN_00414444(void)

{
  if (DAT_00476648 != (HWND)0x0) {
    DestroyWindow(DAT_00476648);
    DAT_00476648 = (HWND)0x0;
  }
  return;
}



int * FUN_00414460(int *param_1,char param_2,int *param_3)

{
  int *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  *(undefined1 *)((int)param_1 + 0x22) = DAT_004144a8;
  if (param_3 != (int *)0x0) {
    FUN_00414628(param_3,param_1,param_3);
  }
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_004144ac(int *param_1,char param_2)

{
  int *piVar1;
  int *piVar2;
  byte extraout_DL;
  int iVar3;
  
  piVar1 = FUN_004032b4(param_1,param_2);
  FUN_00414710((int)piVar1);
  if (piVar1[5] != 0) {
    iVar3 = *(int *)(piVar1[5] + 8) + -1;
    if (-1 < iVar3) {
      do {
        piVar2 = (int *)FUN_0040f4e8((undefined4 *)piVar1[5],iVar3);
        (**(code **)(*piVar2 + 0x10))(piVar2,piVar1,1);
        if (piVar1[5] == 0) break;
        iVar3 = iVar3 + -1;
      } while (iVar3 != -1);
    }
    FUN_00402f54((int *)piVar1[5]);
    piVar1[5] = 0;
  }
  FUN_004146b8(piVar1);
  if ((int *)piVar1[1] != (int *)0x0) {
    FUN_00414680((int *)piVar1[1],(int)piVar1);
  }
  FUN_0040facc(piVar1,extraout_DL & 0xfc);
  if ('\0' < (char)extraout_DL) {
    FUN_004032a4(piVar1);
  }
  return;
}



void FUN_00414540(int param_1,int param_2,undefined4 param_3)

{
  undefined4 uVar1;
  int iVar2;
  undefined4 extraout_ECX;
  
  if ((*(int *)(param_1 + 4) == 0) || (*(int *)(param_1 + 4) != *(int *)(param_2 + 4))) {
    if (*(int *)(param_1 + 0x14) == 0) {
      uVar1 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',param_3);
      *(undefined4 *)(param_1 + 0x14) = uVar1;
    }
    iVar2 = FUN_0040f544(*(int *)(param_1 + 0x14),param_2);
    if (iVar2 < 0) {
      FUN_0040f38c(*(int **)(param_1 + 0x14),param_2);
      FUN_00414540(param_2,param_1,extraout_ECX);
    }
  }
  *(ushort *)(param_1 + 0x20) = *(ushort *)(param_1 + 0x20) | 0x100;
  return;
}



void FUN_004145d4(int param_1,int param_2,undefined4 param_3)

{
  undefined4 uVar1;
  
  if (*(int *)(param_1 + 0x10) == 0) {
    uVar1 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',param_3);
    *(undefined4 *)(param_1 + 0x10) = uVar1;
  }
  FUN_0040f38c(*(int **)(param_1 + 0x10),param_2);
  *(int *)(param_2 + 4) = param_1;
  return;
}



void FUN_00414600(int param_1,int param_2)

{
  *(undefined4 *)(param_2 + 4) = 0;
  FUN_0040f680(*(int **)(param_1 + 0x10),param_2);
  if ((*(int **)(param_1 + 0x10))[2] == 0) {
    FUN_00402f54(*(int **)(param_1 + 0x10));
    *(undefined4 *)(param_1 + 0x10) = 0;
  }
  return;
}



void FUN_00414628(int *param_1,int *param_2,undefined4 param_3)

{
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  FUN_00403130(param_2,param_1,param_3);
  (**(code **)(*param_1 + 0x20))(param_1,param_2,0,param_2[2]);
  FUN_004145d4((int)param_1,(int)param_2,extraout_ECX);
  FUN_00414b44((int)param_2,'\x01');
  if ((*(byte *)(param_1 + 8) & 0x10) != 0) {
    FUN_00414af4((int)param_2,CONCAT31((int3)((uint)extraout_EDX >> 8),1),'\x01');
  }
  (**(code **)(*param_1 + 0x10))(param_1,param_2,0);
  return;
}



void FUN_00414680(int *param_1,int param_2)

{
  (**(code **)(*param_1 + 0x20))(param_1,param_2,*(undefined4 *)(param_2 + 8),0);
  (**(code **)(*param_1 + 0x10))(param_1,param_2,1);
  FUN_00414b44(param_2,'\0');
  FUN_00414600((int)param_1,param_2);
  return;
}



void FUN_004146b8(int *param_1)

{
  int *piVar1;
  
  while ((undefined4 *)param_1[4] != (undefined4 *)0x0) {
    piVar1 = (int *)FUN_0040f5d0((undefined4 *)param_1[4]);
    if (((*(byte *)((int)piVar1 + 0x21) & 1) == 0) &&
       (DAT_0041470c != (DAT_0041470c & *(ushort *)(param_1 + 8)))) {
      FUN_00414600((int)param_1,(int)piVar1);
    }
    else {
      FUN_00414680(param_1,(int)piVar1);
    }
    (**(code **)(*piVar1 + -4))(piVar1,1);
  }
  return;
}



void FUN_00414710(int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  if ((*(byte *)(param_1 + 0x20) & 8) == 0) {
    *(ushort *)(param_1 + 0x20) = *(ushort *)(param_1 + 0x20) | 8;
    if ((*(int *)(param_1 + 0x10) != 0) &&
       (iVar2 = *(int *)(*(int *)(param_1 + 0x10) + 8), -1 < iVar2 + -1)) {
      iVar3 = 0;
      do {
        iVar1 = FUN_0040f4e8(*(undefined4 **)(param_1 + 0x10),iVar3);
        FUN_00414710(iVar1);
        iVar3 = iVar3 + 1;
        iVar2 = iVar2 + -1;
      } while (iVar2 != 0);
    }
  }
  return;
}



void FUN_0041474c(int param_1,int param_2)

{
  if (*(int **)(param_1 + 0x14) != (int *)0x0) {
    FUN_0040f680(*(int **)(param_1 + 0x14),param_2);
    if ((*(int **)(param_1 + 0x14))[2] == 0) {
      FUN_00402f54(*(int **)(param_1 + 0x14));
      *(undefined4 *)(param_1 + 0x14) = 0;
    }
  }
  return;
}



void FUN_00414770(int param_1,int param_2)

{
  FUN_0041474c(param_1,param_2);
  FUN_0041474c(param_2,param_1);
  return;
}



void FUN_0041478c(int param_1,int param_2,char param_3)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  if ((param_3 == '\x01') && (param_2 != 0)) {
    FUN_00414770(param_1,param_2);
  }
  if ((*(int *)(param_1 + 0x10) != 0) &&
     (iVar2 = *(int *)(*(int *)(param_1 + 0x10) + 8), -1 < iVar2 + -1)) {
    iVar3 = 0;
    do {
      piVar1 = (int *)FUN_0040f4e8(*(undefined4 **)(param_1 + 0x10),iVar3);
      (**(code **)(*piVar1 + 0x10))(piVar1,param_2,param_3);
      iVar3 = iVar3 + 1;
      iVar2 = iVar2 + -1;
    } while (iVar2 != 0);
  }
  return;
}



void FUN_004147e8(int param_1,int *param_2)

{
  undefined4 local_8;
  
  local_8 = 0;
  if (param_2[8] != 0) {
    local_8 = *(undefined4 *)(param_2[8] + 0x18);
  }
  (**(code **)(*param_2 + 4))
            (param_2,&DAT_0041485c,*(short *)(param_1 + 0x18) != (short)local_8,&LAB_004145bc,
             param_1,&LAB_00414594,param_1);
  (**(code **)(*param_2 + 4))
            (param_2,&DAT_0041486c,local_8._2_2_ != *(short *)(param_1 + 0x1a),&LAB_004145c8,param_1
             ,&LAB_004145a8,param_1);
  return;
}



undefined4 FUN_00414870(void)

{
  return 0;
}



void FUN_00414874(void)

{
  return;
}



undefined4 FUN_004148a0(void)

{
  return 0;
}



void FUN_004148c0(int param_1)

{
  *(ushort *)(param_1 + 0x20) = *(ushort *)(param_1 + 0x20) & 0xfffe;
  return;
}



void FUN_004148cc(int *param_1,int *param_2,uint param_3)

{
  FUN_00412c8c(param_2,param_1,param_3);
  return;
}



void FUN_004148dc(int param_1,int param_2,char *param_3,char *param_4)

{
  undefined4 uVar1;
  int iVar2;
  char *local_10;
  undefined1 local_c;
  char *local_8;
  
  local_8 = param_3;
  if (param_2 != 0) {
    uVar1 = FUN_0040831c(param_3,param_4);
    if (((char)uVar1 == '\0') && (param_1 == *(int *)(param_2 + 4))) {
      iVar2 = FUN_00414974(param_1,param_4);
      if (iVar2 != 0) {
        local_10 = param_4;
        local_c = 0xb;
        uVar1 = FUN_0040ab08((int)PTR_DAT_0040db90,'\x01',(undefined4 *)PTR_PTR_0047578c,0,&local_10
                            );
        FUN_004036ac(uVar1);
      }
    }
  }
  if (((*(byte *)(param_1 + 0x20) & 0x10) != 0) && (*(int *)(param_1 + 4) != 0)) {
    (**(code **)(**(int **)(param_1 + 4) + 0x20))(*(int **)(param_1 + 4),param_2,local_8,param_4);
  }
  return;
}



void FUN_0041495c(undefined4 param_1,int *param_2,undefined4 param_3)

{
  FUN_00403130(param_2,param_1,param_3);
  return;
}



int FUN_00414974(int param_1,char *param_2)

{
  int iVar1;
  undefined4 uVar2;
  int iVar3;
  int iVar4;
  
  if (((param_2 != (char *)0x0) && (*(int *)(param_1 + 0x10) != 0)) &&
     (iVar3 = *(int *)(*(int *)(param_1 + 0x10) + 8), -1 < iVar3 + -1)) {
    iVar4 = 0;
    do {
      iVar1 = FUN_0040f4e8(*(undefined4 **)(param_1 + 0x10),iVar4);
      uVar2 = FUN_0040831c(*(char **)(iVar1 + 8),param_2);
      if ((char)uVar2 != '\0') {
        return iVar1;
      }
      iVar4 = iVar4 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  return 0;
}



void FUN_004149c4(int *param_1,uint *param_2)

{
  int *piVar1;
  undefined4 uVar2;
  bool bVar3;
  uint *local_14;
  uint *local_10;
  
  bVar3 = &stack0x00000000 == (undefined1 *)0x14;
  FUN_00403f6c((uint *)param_1[2],param_2);
  if (!bVar3) {
    if (param_2 != (uint *)0x0) {
      uVar2 = FUN_00408474((char *)param_2);
      if ((char)uVar2 == '\0') {
        local_10 = (uint *)CONCAT31(local_10._1_3_,0xb);
        local_14 = param_2;
        uVar2 = FUN_0040ab08((int)PTR_DAT_0040db90,'\x01',(undefined4 *)PTR_PTR_00475730,0,&local_14
                            );
        FUN_004036ac(uVar2);
      }
    }
    piVar1 = (int *)param_1[1];
    local_10 = param_2;
    if (piVar1 == (int *)0x0) {
      local_14 = (uint *)0x414a2e;
      (**(code **)(*param_1 + 0x20))(param_1,0,param_1[2]);
    }
    else {
      local_14 = (uint *)0x414a1f;
      (**(code **)(*piVar1 + 0x20))(piVar1,param_1,param_1[2]);
    }
    local_14 = (uint *)0x414a37;
    FUN_00414b44((int)param_1,'\0');
    local_14 = (uint *)0x414a40;
    FUN_00414a50((int)param_1,param_2);
    local_14 = (uint *)0x414a49;
    FUN_00414b44((int)param_1,'\x01');
  }
  return;
}



void FUN_00414a50(int param_1,undefined4 *param_2)

{
  FUN_00403c30((int *)(param_1 + 8),param_2);
  return;
}



void FUN_00414a64(int param_1,int param_2)

{
  if (*(int *)(param_1 + 0x10) == 0) {
    FUN_0040f474(PTR_PTR_0040dca8,(undefined4 *)PTR_PTR_0047581c,param_2);
  }
  FUN_0040f4e8(*(undefined4 **)(param_1 + 0x10),param_2);
  return;
}



undefined4 FUN_00414a90(int param_1)

{
  if (*(int *)(param_1 + 0x10) != 0) {
    return *(undefined4 *)(*(int *)(param_1 + 0x10) + 8);
  }
  return 0;
}



void FUN_00414aa0(int param_1,int param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  if (*(int *)(param_1 + 4) != 0) {
    iVar3 = FUN_0040f544(*(int *)(*(int *)(param_1 + 4) + 0x10),param_1);
    if (-1 < iVar3) {
      piVar1 = *(int **)(*(int *)(param_1 + 4) + 0x10);
      iVar2 = piVar1[2];
      if (param_2 < 0) {
        param_2 = 0;
      }
      if (iVar2 <= param_2) {
        param_2 = iVar2 + -1;
      }
      if (iVar3 != param_2) {
        FUN_0040f3d8(piVar1,iVar3);
        FUN_0040f564(*(int **)(*(int *)(param_1 + 4) + 0x10),param_2,param_1);
      }
    }
  }
  return;
}



void FUN_00414af4(int param_1,undefined4 param_2,char param_3)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  if ((char)param_2 == '\0') {
    *(ushort *)(param_1 + 0x20) = *(ushort *)(param_1 + 0x20) & 0xffef;
  }
  else {
    *(ushort *)(param_1 + 0x20) = *(ushort *)(param_1 + 0x20) | 0x10;
  }
  if (param_3 != '\0') {
    iVar1 = FUN_00414a90(param_1);
    if (-1 < iVar1 + -1) {
      iVar3 = 0;
      do {
        iVar2 = FUN_00414a64(param_1,iVar3);
        FUN_00414af4(iVar2,param_2,'\x01');
        iVar3 = iVar3 + 1;
        iVar1 = iVar1 + -1;
      } while (iVar1 != 0);
    }
  }
  return;
}



void FUN_00414b44(int param_1,char param_2)

{
  int *piVar1;
  char acStack_10c [256];
  
  piVar1 = *(int **)(param_1 + 4);
  if (piVar1 != (int *)0x0) {
    FUN_00403e38(acStack_10c,*(undefined4 **)(param_1 + 8),0xff);
    piVar1 = (int *)FUN_00403204(piVar1,acStack_10c);
    if (piVar1 != (int *)0x0) {
      if (param_2 == '\0') {
        *piVar1 = 0;
      }
      else {
        *piVar1 = param_1;
      }
    }
  }
  return;
}



undefined4 FUN_00414b8c(undefined4 param_1,int *param_2)

{
  char cVar1;
  undefined4 uVar2;
  
  cVar1 = (**(code **)(*param_2 + 0x38))(param_2,param_1);
  if (cVar1 != '\0') {
    uVar2 = (**(code **)(*param_2 + 0x40))(param_2,param_1);
    return CONCAT31((int3)((uint)uVar2 >> 8),1);
  }
  return 0;
}



void FUN_00414bf4(void)

{
  return;
}



undefined4 FUN_00414bfc(void)

{
  char cVar1;
  undefined4 uVar2;
  int *in_stack_00000004;
  int *in_stack_00000008;
  int *in_stack_0000000c;
  
  if (in_stack_00000004[7] == 0) {
    cVar1 = FUN_00402fe8(in_stack_00000004,in_stack_00000008,in_stack_0000000c);
    if (cVar1 == '\0') {
      uVar2 = 0x80004002;
    }
    else {
      uVar2 = 0;
    }
  }
  else {
    uVar2 = (*(code *)**(undefined4 **)in_stack_00000004[7])();
  }
  return uVar2;
}



int * FUN_00414c3c(int *param_1,char param_2,undefined4 param_3)

{
  undefined4 extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00402f24(param_1,'\0',param_3);
  (**(code **)*param_1)(param_1,param_3);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



undefined1 FUN_00414d0c(void)

{
  return 1;
}



void FUN_00414d10(void)

{
  return;
}



int * FUN_00414d24(int *param_1,char param_2,int *param_3)

{
  int iVar1;
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00414460(param_1,'\0',param_3);
  iVar1 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX_00);
  param_1[0x10] = iVar1;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_00414d68(int *param_1,char param_2)

{
  int *piVar1;
  int iVar2;
  byte extraout_DL;
  
  piVar1 = FUN_004032b4(param_1,param_2);
  FUN_004144ac(piVar1,extraout_DL & 0xfc);
  while (0 < (int)((undefined4 *)piVar1[0x10])[2]) {
    iVar2 = FUN_0040f5d0((undefined4 *)piVar1[0x10]);
    FUN_00414e6c((int)piVar1,iVar2);
  }
  FUN_00402f54((int *)piVar1[0x10]);
  if ('\0' < (char)extraout_DL) {
    FUN_004032a4(piVar1);
  }
  return;
}



undefined4 FUN_00414dc0(int param_1)

{
  undefined4 uVar1;
  
  if (*(short *)(param_1 + 0x32) != 0) {
    uVar1 = (**(code **)(param_1 + 0x30))(*(undefined4 *)(param_1 + 0x34),param_1);
    return CONCAT31((int3)((uint)uVar1 >> 8),1);
  }
  return 0;
}



undefined4 FUN_00414ddc(int param_1)

{
  undefined4 uVar1;
  
  if (*(short *)(param_1 + 0x3a) != 0) {
    uVar1 = (**(code **)(param_1 + 0x38))(*(undefined4 *)(param_1 + 0x3c),param_1);
    return CONCAT31((int3)((uint)uVar1 >> 8),1);
  }
  return 0;
}



void FUN_00414e60(int param_1,int param_2)

{
  *(int *)(param_2 + 0x10) = param_1;
  FUN_0040f38c(*(int **)(param_1 + 0x40),param_2);
  return;
}



void FUN_00414e6c(int param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  iVar3 = *(int *)(*(int *)(param_1 + 0x40) + 8);
  if (-1 < iVar3 + -1) {
    iVar2 = 0;
    do {
      iVar1 = FUN_0040f4e8(*(undefined4 **)(param_1 + 0x40),iVar2);
      if (param_2 == iVar1) {
        *(undefined4 *)(param_2 + 0x10) = 0;
        FUN_0040f3d8(*(int **)(param_1 + 0x40),iVar2);
        return;
      }
      iVar2 = iVar2 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  return;
}



int * FUN_00414eac(int *param_1,char param_2,int param_3,undefined1 param_4)

{
  int extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00402f24(param_1,'\0',param_3);
  param_1[3] = param_3;
  *(undefined1 *)(param_1 + 4) = param_4;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



undefined4 FUN_00414f2c(void)

{
  undefined4 uVar1;
  undefined4 *in_FS_OFFSET;
  int in_stack_00000004;
  int in_stack_00000008;
  undefined4 in_stack_0000000c;
  undefined4 *in_stack_00000010;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  puStack_14 = &stack0xfffffffc;
  puStack_18 = &LAB_00414f7b;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  if (in_stack_00000008 == 0) {
    uVar1 = 0x80030009;
    *in_FS_OFFSET = uStack_1c;
  }
  else {
    uVar1 = (**(code **)(**(int **)(in_stack_00000004 + 0xc) + 4))
                      (*(int **)(in_stack_00000004 + 0xc),in_stack_00000008,in_stack_0000000c);
    if (in_stack_00000010 != (undefined4 *)0x0) {
      *in_stack_00000010 = uVar1;
    }
    uVar1 = 0;
    *in_FS_OFFSET = uStack_1c;
  }
  return uVar1;
}



undefined4 FUN_004152d8(void)

{
  return 0x80030001;
}



undefined4 FUN_004152e4(void)

{
  return 0x80030001;
}



undefined4 FUN_004152f0(void)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  int in_stack_00000004;
  int in_stack_00000008;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  puStack_14 = &stack0xfffffffc;
  puStack_18 = &LAB_00415355;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  if (in_stack_00000008 != 0) {
    *(undefined4 *)(in_stack_00000008 + 4) = 2;
    iVar1 = FUN_00411598(*(int **)(in_stack_00000004 + 0xc));
    *(int *)(in_stack_00000008 + 8) = iVar1;
    *(int *)(in_stack_00000008 + 0xc) = iVar1 >> 0x1f;
    *(undefined4 *)(in_stack_00000008 + 0x10) = 0;
    *(undefined4 *)(in_stack_00000008 + 0x14) = 0;
    *(undefined4 *)(in_stack_00000008 + 0x18) = 0;
    *(undefined4 *)(in_stack_00000008 + 0x1c) = 0;
    *(undefined4 *)(in_stack_00000008 + 0x20) = 0;
    *(undefined4 *)(in_stack_00000008 + 0x24) = 0;
    *(undefined4 *)(in_stack_00000008 + 0x2c) = 1;
  }
  *in_FS_OFFSET = uStack_1c;
  return 0;
}



void FUN_00415388(void)

{
  undefined4 *puVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  puStack_14 = (undefined1 *)0x415398;
  puVar1 = (undefined4 *)FUN_0040f8a8(DAT_00476628);
  puStack_18 = &LAB_004153dd;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  iVar3 = puVar1[2];
  if (-1 < iVar3 + -1) {
    iVar4 = 0;
    puStack_14 = &stack0xfffffffc;
    do {
      piVar2 = (int *)FUN_0040f4e8(puVar1,iVar4);
      FUN_00402f54(piVar2);
      iVar4 = iVar4 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_004153e4;
  puStack_18 = (undefined1 *)0x4153dc;
  FUN_0040f90c(DAT_00476628);
  return;
}



void FUN_0041638c(HGDIOBJ param_1)

{
  if ((param_1 != (HGDIOBJ)0x0) && (param_1 != DAT_0047664c)) {
    DeleteObject(param_1);
  }
  return;
}



uint FUN_00416400(byte *param_1,int param_2)

{
  short sVar1;
  uint uVar2;
  
  uVar2 = 0;
  do {
    sVar1 = (short)uVar2 << 5;
    uVar2 = (uint)CONCAT11((char)((ushort)sVar1 >> 8),
                           ((byte)sVar1 | (byte)(uVar2 >> 8) >> 3) ^ *param_1);
    param_1 = param_1 + 1;
    param_2 = param_2 + -1;
  } while (param_2 != 0);
  return uVar2;
}



int * FUN_00416414(int *param_1,char param_2,undefined4 param_3)

{
  undefined4 extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  *(short *)(param_1 + 8) = (short)param_3;
  InitializeCriticalSection((LPCRITICAL_SECTION)(param_1 + 2));
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_00416474(int param_1)

{
  EnterCriticalSection((LPCRITICAL_SECTION)(param_1 + 8));
  return;
}



void FUN_00416480(int param_1)

{
  LeaveCriticalSection((LPCRITICAL_SECTION)(param_1 + 8));
  return;
}



void FUN_0041648c(int param_1,byte *param_2)

{
  uint uVar1;
  undefined4 uVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  undefined4 *local_c;
  
  puStack_18 = (undefined1 *)0x4164a7;
  uVar1 = FUN_00416400(param_2,(uint)*(ushort *)(param_1 + 0x20));
  puStack_18 = (undefined1 *)0x4164b1;
  FUN_00416474(param_1);
  puStack_1c = &LAB_00416560;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  puStack_18 = &stack0xfffffffc;
  for (local_c = *(undefined4 **)(param_1 + 4); local_c != (undefined4 *)0x0;
      local_c = (undefined4 *)*local_c) {
    if ((short)uVar1 == *(short *)(local_c + 3)) {
      uVar2 = FUN_004082a8(local_c + 4,(int *)param_2,(uint)*(ushort *)(param_1 + 0x20));
      if ((char)uVar2 != '\0') break;
    }
  }
  if (local_c == (undefined4 *)0x0) {
    local_c = (undefined4 *)FUN_004026f4(*(ushort *)(param_1 + 0x20) + 0x10);
    *local_c = *(undefined4 *)(param_1 + 4);
    local_c[1] = 0;
    local_c[2] = *(undefined4 *)param_2;
    *(short *)(local_c + 3) = (short)uVar1;
    FUN_00402920((undefined4 *)param_2,local_c + 4,(uint)*(ushort *)(param_1 + 0x20));
    *(undefined4 **)(param_1 + 4) = local_c;
  }
  local_c[1] = local_c[1] + 1;
  *in_FS_OFFSET = uStack_20;
  puStack_18 = &LAB_00416567;
  puStack_1c = (undefined1 *)0x41655f;
  FUN_00416480(param_1);
  return;
}



void FUN_00416570(int param_1,undefined4 *param_2)

{
  undefined4 *puVar1;
  undefined4 *puVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined4 uStack_1c;
  undefined *puStack_18;
  undefined4 *local_14;
  undefined1 local_d;
  undefined4 *local_c;
  int local_8;
  
  if (param_2 == (undefined4 *)0x0) {
    return;
  }
  puStack_18 = (undefined *)0x416594;
  local_14 = param_2;
  local_c = param_2;
  local_8 = param_1;
  FUN_00416474(param_1);
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  local_14[1] = local_14[1] + -1;
  local_d = local_14[1] == 0;
  if ((bool)local_d) {
    puVar1 = *(undefined4 **)(local_8 + 4);
    if (*(undefined4 **)(local_8 + 4) == local_c) {
      *(undefined4 *)(local_8 + 4) = *local_c;
    }
    else {
      do {
        puVar2 = puVar1;
        puVar1 = (undefined4 *)*puVar2;
      } while (puVar1 != local_c);
      *puVar2 = *local_c;
    }
  }
  *in_FS_OFFSET = uStack_20;
  puStack_18 = &DAT_004165fe;
  uStack_1c = 0x4165f6;
  FUN_00416480(local_8);
  return;
}



void FUN_00416620(int param_1,int *param_2,byte *param_3)

{
  undefined4 *puVar1;
  undefined4 *puVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  
  puStack_1c = (undefined1 *)0x416639;
  FUN_00416474(param_1);
  puStack_20 = &LAB_00416689;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  puVar1 = (undefined4 *)param_2[4];
  puStack_1c = &stack0xfffffffc;
  puVar2 = (undefined4 *)FUN_0041648c(param_1,param_3);
  param_2[4] = (int)puVar2;
  if (puVar1 != puVar2) {
    FUN_00403130(param_2,extraout_EDX,extraout_ECX);
  }
  FUN_00416570(param_1,puVar1);
  *in_FS_OFFSET = uStack_24;
  puStack_1c = &LAB_00416690;
  puStack_20 = (undefined1 *)0x416688;
  FUN_00416480(param_1);
  return;
}



void FUN_00416698(int param_1,int *param_2,undefined4 *param_3)

{
  undefined4 *puVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  
  puStack_18 = (undefined1 *)0x4166ae;
  FUN_00416474(param_1);
  puStack_1c = &LAB_004166f4;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  puVar1 = (undefined4 *)param_2[4];
  if (param_3 != puVar1) {
    param_3[1] = param_3[1] + 1;
    param_2[4] = (int)param_3;
    puStack_18 = &stack0xfffffffc;
    FUN_00403130(param_2,extraout_EDX,extraout_ECX);
    FUN_00416570(param_1,puVar1);
  }
  *in_FS_OFFSET = uStack_20;
  puStack_18 = &LAB_004166fb;
  puStack_1c = (undefined1 *)0x4166f3;
  FUN_00416480(param_1);
  return;
}



void FUN_00416704(int param_1)

{
  undefined4 *puVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  puStack_14 = (undefined1 *)0x416715;
  FUN_00416474(param_1);
  puStack_18 = &LAB_00416763;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  puStack_14 = &stack0xfffffffc;
  for (puVar1 = *(undefined4 **)(param_1 + 4); puVar1 != (undefined4 *)0x0;
      puVar1 = (undefined4 *)*puVar1) {
    if (((HGDIOBJ)puVar1[2] != (HGDIOBJ)0x0) && ((int)puVar1[5] < 0)) {
      DeleteObject((HGDIOBJ)puVar1[2]);
      puVar1[2] = 0;
    }
  }
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_0041676a;
  puStack_18 = (undefined1 *)0x416762;
  FUN_00416480(param_1);
  return;
}



void FUN_00416770(void)

{
  undefined4 *puVar1;
  int iVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  int local_8;
  
  local_8 = 0;
  puStack_18 = (undefined1 *)0x416787;
  puVar1 = (undefined4 *)FUN_0040f8a8(DAT_004766a4);
  puStack_1c = &LAB_0041680d;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  puStack_18 = &stack0xfffffffc;
  while (local_8 < (int)puVar1[2]) {
    iVar3 = FUN_0040f4e8(puVar1,local_8);
    FUN_00417f24(iVar3);
    local_8 = local_8 + 1;
    FUN_004183f4(iVar3);
  }
  FUN_00416704(DAT_0047669c);
  FUN_00416704(DAT_004766a0);
  *in_FS_OFFSET = uStack_20;
  puStack_18 = &LAB_00416814;
  if (-1 < local_8 + -1) {
    iVar3 = 0;
    do {
      puStack_1c = (undefined1 *)0x4167f9;
      iVar2 = FUN_0040f4e8(puVar1,iVar3);
      puStack_1c = (undefined1 *)0x4167fe;
      FUN_004182cc(iVar2);
      iVar3 = iVar3 + 1;
      local_8 = local_8 + -1;
    } while (local_8 != 0);
  }
  puStack_1c = (undefined1 *)0x41680c;
  FUN_0040f90c(DAT_004766a4);
  return;
}



void FUN_00416b74(uint param_1)

{
  if ((int)param_1 < 0) {
    GetSysColor(param_1 & 0xff);
  }
  return;
}



void FUN_00416ba4(int param_1)

{
  if (*(short *)(param_1 + 10) != 0) {
    (**(code **)(param_1 + 8))(*(undefined4 *)(param_1 + 0xc),param_1);
  }
  return;
}



void FUN_00416bb8(int param_1)

{
  if (*(LPCRITICAL_SECTION *)(param_1 + 0x14) != (LPCRITICAL_SECTION)0x0) {
    EnterCriticalSection(*(LPCRITICAL_SECTION *)(param_1 + 0x14));
  }
  return;
}



void FUN_00416bc8(int param_1)

{
  if (*(LPCRITICAL_SECTION *)(param_1 + 0x14) != (LPCRITICAL_SECTION)0x0) {
    LeaveCriticalSection(*(LPCRITICAL_SECTION *)(param_1 + 0x14));
  }
  return;
}



void FUN_00416dac(HANDLE param_1,undefined4 *param_2)

{
  int iVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  undefined4 local_6c [4];
  int local_5c;
  char local_58;
  char local_57;
  char local_56;
  undefined1 local_55;
  byte local_51;
  char local_50 [32];
  byte local_30 [36];
  
  puVar2 = &DAT_00474358;
  puVar3 = param_2;
  for (iVar1 = 0xb; iVar1 != 0; iVar1 = iVar1 + -1) {
    *puVar3 = *puVar2;
    puVar2 = puVar2 + 1;
    puVar3 = puVar3 + 1;
  }
  if (param_1 != (HANDLE)0x0) {
    iVar1 = GetObjectA(param_1,0x3c,local_6c);
    if (iVar1 != 0) {
      param_2[1] = local_6c[0];
      if (699 < local_5c) {
        *(byte *)((int)param_2 + 9) = *(byte *)((int)param_2 + 9) | 1;
      }
      if (local_58 == '\x01') {
        *(byte *)((int)param_2 + 9) = *(byte *)((int)param_2 + 9) | 2;
      }
      if (local_57 == '\x01') {
        *(byte *)((int)param_2 + 9) = *(byte *)((int)param_2 + 9) | 4;
      }
      if (local_56 == '\x01') {
        *(byte *)((int)param_2 + 9) = *(byte *)((int)param_2 + 9) | 8;
      }
      *(undefined1 *)((int)param_2 + 10) = local_55;
      FUN_00402d18((char *)local_30,local_50,0x20);
      FUN_00402af0((byte *)((int)param_2 + 0xb),local_30,0x1f);
      if ((local_51 & 0xf) == 1) {
        *(undefined1 *)(param_2 + 2) = 2;
      }
      else if ((local_51 & 0xf) == 2) {
        *(undefined1 *)(param_2 + 2) = 1;
      }
      else {
        *(undefined1 *)(param_2 + 2) = 0;
      }
      *param_2 = param_1;
    }
  }
  return;
}



int * FUN_00416e60(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_2 = extraout_DL;
  }
  DAT_00474358 = 0;
  iVar1 = FUN_0041648c(DAT_00476698,(byte *)&DAT_00474358);
  param_1[4] = iVar1;
  param_1[6] = -0x7ffffff8;
  param_1[7] = DAT_00476654;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_00416fcc(int param_1,undefined4 *param_2)

{
  int iVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  
  puVar2 = (undefined4 *)(*(int *)(param_1 + 0x10) + 0x10);
  puVar3 = param_2;
  for (iVar1 = 0xb; iVar1 != 0; iVar1 = iVar1 + -1) {
    *puVar3 = *puVar2;
    puVar2 = puVar2 + 1;
    puVar3 = puVar3 + 1;
  }
  *param_2 = 0;
  return;
}



void FUN_00416fe4(int *param_1,byte *param_2)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  
  puStack_10 = (undefined1 *)0x416ff6;
  FUN_00416bb8((int)param_1);
  puStack_14 = &LAB_00417029;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  puStack_10 = &stack0xfffffffc;
  FUN_00416620(DAT_00476698,param_1,param_2);
  *in_FS_OFFSET = uStack_18;
  puStack_10 = &LAB_00417030;
  puStack_14 = (undefined1 *)0x417028;
  FUN_00416bc8((int)param_1);
  return;
}



void FUN_00417034(int *param_1,int param_2,undefined4 param_3)

{
  if (param_2 != param_1[6]) {
    param_1[6] = param_2;
    FUN_00403130(param_1,param_2,param_3);
  }
  return;
}



void FUN_00417048(int param_1)

{
  int iVar1;
  undefined4 uVar2;
  HFONT pHVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_6c;
  undefined1 *puStack_68;
  undefined1 *puStack_64;
  undefined4 uStack_60;
  undefined1 *puStack_5c;
  undefined1 *puStack_58;
  undefined *local_50;
  undefined *local_4c;
  undefined *local_48;
  LOGFONTA local_44;
  int local_8;
  
  puStack_58 = &stack0xfffffffc;
  local_50 = (undefined *)0x0;
  local_4c = (undefined *)0x0;
  local_48 = (undefined *)0x0;
  puStack_5c = &LAB_004171d1;
  uStack_60 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_60;
  local_8 = *(int *)(param_1 + 0x10);
  if (*(int *)(local_8 + 8) == 0) {
    puStack_64 = (undefined1 *)0x417087;
    FUN_00416474(DAT_00476698);
    puStack_68 = &LAB_004171a9;
    uStack_6c = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_6c;
    if (*(int *)(local_8 + 8) == 0) {
      local_44.lfHeight = *(LONG *)(local_8 + 0x14);
      local_44.lfWidth = 0;
      local_44.lfEscapement = 0;
      local_44.lfOrientation = 0;
      if ((*(byte *)(local_8 + 0x19) & 1) == 0) {
        local_44.lfWeight = 400;
      }
      else {
        local_44.lfWeight = 700;
      }
      local_44.lfItalic = (*(byte *)(local_8 + 0x19) & 2) != 0;
      local_44.lfUnderline = (*(byte *)(local_8 + 0x19) & 4) != 0;
      local_44.lfStrikeOut = (*(byte *)(local_8 + 0x19) & 8) != 0;
      local_44.lfCharSet = *(BYTE *)(local_8 + 0x1a);
      puStack_64 = &stack0xfffffffc;
      FUN_00403e00((int *)&local_48,(byte *)(local_8 + 0x1b));
      iVar1 = FUN_004083e0(local_48,s_Default_004171e8);
      if (iVar1 == 0) {
        FUN_00403e00((int *)&local_4c,(byte *)s_MS_Sans_Serif_00474363);
        FUN_00408bb8(local_44.lfFaceName,local_4c);
      }
      else {
        FUN_00403e00((int *)&local_50,(byte *)(local_8 + 0x1b));
        FUN_00408bb8(local_44.lfFaceName,local_50);
      }
      local_44.lfQuality = '\0';
      local_44.lfOutPrecision = '\0';
      local_44.lfClipPrecision = '\0';
      uVar2 = FUN_0041732c(param_1);
      if ((char)uVar2 == '\x01') {
        local_44.lfPitchAndFamily = '\x02';
      }
      else if ((char)uVar2 == '\x02') {
        local_44.lfPitchAndFamily = '\x01';
      }
      else {
        local_44.lfPitchAndFamily = '\0';
      }
      pHVar3 = CreateFontIndirectA(&local_44);
      *(HFONT *)(local_8 + 8) = pHVar3;
    }
    *in_FS_OFFSET = uStack_6c;
    puStack_64 = (undefined1 *)0x4171b0;
    puStack_68 = (undefined1 *)0x4171a8;
    FUN_00416480(DAT_00476698);
    return;
  }
  *in_FS_OFFSET = uStack_60;
  puStack_58 = &LAB_004171d8;
  puStack_5c = (undefined1 *)0x4171d0;
  FUN_00403c00((int *)&local_50,3);
  return;
}



void FUN_004171f0(int *param_1,HANDLE param_2)

{
  byte abStack_34 [44];
  
  FUN_00416dac(param_2,(undefined4 *)abStack_34);
  FUN_00416fe4(param_1,abStack_34);
  return;
}



undefined4 FUN_00417214(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 0x10) + 0x14);
}



void FUN_0041721c(int *param_1,undefined4 param_2)

{
  byte abStack_34 [4];
  undefined4 local_30;
  
  FUN_00416fcc((int)param_1,(undefined4 *)abStack_34);
  local_30 = param_2;
  FUN_00416fe4(param_1,abStack_34);
  return;
}



int FUN_004172b8(int param_1)

{
  int nNumber;
  int iVar1;
  int nNumerator;
  
  iVar1 = *(int *)(param_1 + 0x1c);
  nNumerator = 0x48;
  nNumber = FUN_00417214(param_1);
  iVar1 = MulDiv(nNumber,nNumerator,iVar1);
  return -iVar1;
}



void FUN_004172d4(int *param_1,int param_2)

{
  int iVar1;
  
  iVar1 = MulDiv(param_2,param_1[7],0x48);
  FUN_0041721c(param_1,-iVar1);
  return;
}



undefined1 FUN_004172f4(int param_1)

{
  return *(undefined1 *)(*(int *)(param_1 + 0x10) + 0x19);
}



void FUN_00417300(int *param_1,undefined1 param_2)

{
  byte local_30 [9];
  undefined1 local_27;
  
  FUN_00416fcc((int)param_1,(undefined4 *)local_30);
  local_27 = param_2;
  FUN_00416fe4(param_1,local_30);
  return;
}



undefined4 FUN_0041732c(int param_1)

{
  return CONCAT31((int3)((uint)*(int *)(param_1 + 0x10) >> 8),
                  *(undefined1 *)(*(int *)(param_1 + 0x10) + 0x18));
}



int * FUN_0041738c(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_2 = extraout_DL;
  }
  iVar1 = FUN_0041648c(DAT_0047669c,&DAT_00474568);
  param_1[4] = iVar1;
  *(undefined1 *)(param_1 + 6) = 4;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_004174b0(int param_1,undefined4 *param_2)

{
  int iVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  
  puVar2 = (undefined4 *)(*(int *)(param_1 + 0x10) + 0x10);
  puVar3 = param_2;
  for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {
    *puVar3 = *puVar2;
    puVar2 = puVar2 + 1;
    puVar3 = puVar3 + 1;
  }
  *param_2 = 0;
  return;
}



void FUN_004174c8(int *param_1,byte *param_2)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  
  puStack_10 = (undefined1 *)0x4174da;
  FUN_00416bb8((int)param_1);
  puStack_14 = &LAB_0041750d;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  puStack_10 = &stack0xfffffffc;
  FUN_00416620(DAT_0047669c,param_1,param_2);
  *in_FS_OFFSET = uStack_18;
  puStack_10 = &LAB_00417514;
  puStack_14 = (undefined1 *)0x41750c;
  FUN_00416bc8((int)param_1);
  return;
}



void FUN_00417520(int *param_1,undefined4 param_2)

{
  byte abStack_18 [4];
  undefined4 local_14;
  
  FUN_004174b0((int)param_1,(undefined4 *)abStack_18);
  local_14 = param_2;
  FUN_004174c8(param_1,abStack_18);
  return;
}



undefined4 FUN_00417548(int param_1)

{
  HPEN pHVar1;
  undefined4 uVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  LOGPEN local_18;
  int local_8;
  
  local_8 = *(int *)(param_1 + 0x10);
  if (*(int *)(local_8 + 8) == 0) {
    puStack_1c = (undefined1 *)0x417567;
    FUN_00416474(DAT_0047669c);
    puStack_20 = &LAB_004175ce;
    uStack_24 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_24;
    if (*(int *)(local_8 + 8) == 0) {
      local_18.lopnStyle = (UINT)*(ushort *)(&DAT_00474578 + (uint)*(byte *)(local_8 + 0x1c) * 2);
      local_18.lopnWidth.x = *(LONG *)(local_8 + 0x18);
      puStack_1c = &stack0xfffffffc;
      local_18.lopnColor = FUN_00416b74(*(uint *)(local_8 + 0x14));
      pHVar1 = CreatePenIndirect(&local_18);
      *(HPEN *)(local_8 + 8) = pHVar1;
    }
    *in_FS_OFFSET = uStack_24;
    puStack_1c = (undefined1 *)0x4175d5;
    puStack_20 = (undefined1 *)0x4175cd;
    uVar2 = FUN_00416480(DAT_0047669c);
    return uVar2;
  }
  return *(undefined4 *)(local_8 + 8);
}



void FUN_004175e0(int *param_1,undefined4 param_2,undefined4 param_3)

{
  if ((char)param_2 != (char)param_1[6]) {
    *(char *)(param_1 + 6) = (char)param_2;
    FUN_00403130(param_1,param_2,param_3);
  }
  return;
}



void FUN_004175fc(int *param_1,undefined1 param_2)

{
  byte abStack_18 [12];
  undefined1 local_c;
  
  FUN_004174b0((int)param_1,(undefined4 *)abStack_18);
  local_c = param_2;
  FUN_004174c8(param_1,abStack_18);
  return;
}



void FUN_0041762c(int *param_1,int param_2)

{
  byte abStack_18 [8];
  int local_10;
  
  if (-1 < param_2) {
    FUN_004174b0((int)param_1,(undefined4 *)abStack_18);
    local_10 = param_2;
    FUN_004174c8(param_1,abStack_18);
  }
  return;
}



int * FUN_00417658(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_2 = extraout_DL;
  }
  iVar1 = FUN_0041648c(DAT_004766a0,(byte *)&DAT_00474588);
  param_1[4] = iVar1;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_00417768(int param_1,undefined4 *param_2)

{
  int iVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  
  puVar2 = (undefined4 *)(*(int *)(param_1 + 0x10) + 0x10);
  puVar3 = param_2;
  for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {
    *puVar3 = *puVar2;
    puVar2 = puVar2 + 1;
    puVar3 = puVar3 + 1;
  }
  *param_2 = 0;
  param_2[2] = 0;
  return;
}



void FUN_00417788(int *param_1,byte *param_2)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  
  puStack_10 = (undefined1 *)0x41779a;
  FUN_00416bb8((int)param_1);
  puStack_14 = &LAB_004177cd;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  puStack_10 = &stack0xfffffffc;
  FUN_00416620(DAT_004766a0,param_1,param_2);
  *in_FS_OFFSET = uStack_18;
  puStack_10 = &LAB_004177d4;
  puStack_14 = (undefined1 *)0x4177cc;
  FUN_00416bc8((int)param_1);
  return;
}



void FUN_004177d8(int *param_1,undefined4 param_2)

{
  int iVar1;
  undefined4 *puVar2;
  byte *pbVar3;
  byte abStack_18 [8];
  undefined4 local_10;
  
  puVar2 = &DAT_00474588;
  pbVar3 = abStack_18;
  for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {
    *(undefined4 *)pbVar3 = *puVar2;
    puVar2 = puVar2 + 1;
    pbVar3 = (byte *)((int)pbVar3 + 4);
  }
  local_10 = param_2;
  FUN_00417788(param_1,abStack_18);
  return;
}



undefined4 FUN_004177fc(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 0x10) + 0x14);
}



void FUN_00417804(int *param_1,undefined4 param_2)

{
  byte abStack_18 [4];
  undefined4 local_14;
  char local_c;
  
  FUN_00417768((int)param_1,(undefined4 *)abStack_18);
  if (local_c == '\x01') {
    local_c = '\0';
  }
  local_14 = param_2;
  FUN_00417788(param_1,abStack_18);
  return;
}



undefined4 FUN_00417838(int param_1)

{
  byte bVar1;
  int *piVar2;
  HBRUSH pHVar3;
  undefined4 uVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  LOGBRUSH local_14;
  int local_8;
  
  local_8 = *(int *)(param_1 + 0x10);
  if (*(int *)(local_8 + 8) == 0) {
    puStack_18 = (undefined1 *)0x41785b;
    FUN_00416474(DAT_004766a0);
    puStack_1c = &LAB_00417905;
    uStack_20 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_20;
    if (*(int *)(local_8 + 8) == 0) {
      piVar2 = *(int **)(local_8 + 0x18);
      if (piVar2 == (int *)0x0) {
        local_14.lbHatch = 0;
        bVar1 = *(byte *)(local_8 + 0x1c);
        if (bVar1 == 0) {
          local_14.lbStyle = 0;
          puStack_18 = &stack0xfffffffc;
        }
        else if (bVar1 == 1) {
          local_14.lbStyle = 1;
          puStack_18 = &stack0xfffffffc;
        }
        else {
          local_14.lbStyle = 2;
          local_14.lbHatch = (bVar1 & 0x7f) - 2;
          puStack_18 = &stack0xfffffffc;
        }
      }
      else {
        local_14.lbStyle = 3;
        puStack_18 = &stack0xfffffffc;
        (**(code **)(*piVar2 + 0x68))(piVar2,1);
        local_14.lbHatch = (**(code **)(**(int **)(local_8 + 0x18) + 0x60))();
      }
      local_14.lbColor = FUN_00416b74(*(uint *)(local_8 + 0x14));
      pHVar3 = CreateBrushIndirect(&local_14);
      *(HBRUSH *)(local_8 + 8) = pHVar3;
    }
    *in_FS_OFFSET = uStack_20;
    puStack_18 = (undefined1 *)0x41790c;
    puStack_1c = (undefined1 *)0x417904;
    uVar4 = FUN_00416480(DAT_004766a0);
    return uVar4;
  }
  return *(undefined4 *)(local_8 + 8);
}



undefined4 FUN_00417918(int param_1)

{
  return CONCAT31((int3)((uint)*(int *)(param_1 + 0x10) >> 8),
                  *(undefined1 *)(*(int *)(param_1 + 0x10) + 0x1c));
}



void FUN_00417920(int *param_1,char param_2)

{
  byte abStack_18 [4];
  undefined4 local_14;
  char local_c;
  
  FUN_00417768((int)param_1,(undefined4 *)abStack_18);
  if (param_2 == '\x01') {
    local_14 = 0xffffff;
  }
  local_c = param_2;
  FUN_00417788(param_1,abStack_18);
  return;
}



int * FUN_00417954(int *param_1,char param_2,undefined4 param_3)

{
  int *piVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00402f24(param_1,'\0',param_3);
  InitializeCriticalSection((LPCRITICAL_SECTION)(param_1 + 0xe));
  piVar1 = FUN_00416e60((int *)PTR_PTR_00415928,'\x01',extraout_ECX_00);
  param_1[3] = (int)piVar1;
  piVar1[3] = (int)param_1;
  piVar1[2] = (int)&LAB_0041861c;
  piVar1[5] = (int)(param_1 + 0xe);
  piVar1 = FUN_0041738c((int *)PTR_PTR_00415aa4,'\x01',extraout_ECX_01);
  param_1[4] = (int)piVar1;
  piVar1[3] = (int)param_1;
  piVar1[2] = (int)&LAB_0041863c;
  piVar1[5] = (int)(param_1 + 0xe);
  piVar1 = FUN_00417658((int *)PTR_PTR_00415ba4,'\x01',extraout_ECX_02);
  param_1[5] = (int)piVar1;
  piVar1[3] = (int)param_1;
  piVar1[2] = (int)&LAB_0041865c;
  piVar1[5] = (int)(param_1 + 0xe);
  param_1[8] = 0xcc0020;
  *(undefined1 *)(param_1 + 2) = DAT_00417a14;
  FUN_0040f820(DAT_004766a4,(int)param_1);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_00417a18(int *param_1,char param_2)

{
  int *piVar1;
  byte extraout_DL;
  
  piVar1 = FUN_004032b4(param_1,param_2);
  FUN_0040f8bc(DAT_004766a4,(int)piVar1);
  FUN_00418454(piVar1,0);
  FUN_00402f54((int *)piVar1[3]);
  FUN_00402f54((int *)piVar1[4]);
  FUN_00402f54((int *)piVar1[5]);
  DeleteCriticalSection((LPCRITICAL_SECTION)(piVar1 + 0xe));
  FUN_0040facc(piVar1,extraout_DL & 0xfc);
  if ('\0' < (char)extraout_DL) {
    FUN_004032a4(piVar1);
  }
  return;
}



void FUN_00417a74(int *param_1,int *param_2,int *param_3,uint param_4,int *param_5)

{
  int iVar1;
  int hDest;
  int hSrc;
  uint uVar2;
  HGDIOBJ h;
  int *piVar3;
  undefined4 uVar4;
  int iVar5;
  int iVar6;
  COLORREF color;
  COLORREF color_00;
  undefined4 extraout_ECX;
  int wSrc;
  undefined4 *in_FS_OFFSET;
  int xSrc;
  int wSrc_00;
  int hSrc_00;
  DWORD rop;
  undefined4 uVar7;
  undefined4 uStack_50;
  undefined1 *puStack_4c;
  undefined1 *puStack_48;
  undefined4 uStack_44;
  undefined1 *puStack_40;
  undefined1 *puStack_3c;
  HGDIOBJ local_2c;
  int *local_28;
  HDC local_24;
  
  if (param_3 != (int *)0x0) {
    puStack_3c = (undefined1 *)0x417a9a;
    FUN_00417f24((int)param_1);
    puStack_40 = &LAB_00417d1a;
    uStack_44 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_44;
    puStack_48 = (undefined1 *)0x417ab0;
    puStack_3c = &stack0xfffffffc;
    (**(code **)(*param_1 + 0x10))();
    puStack_48 = (undefined1 *)0x417abe;
    FUN_004184a8(param_1,DAT_00417d2c);
    puStack_48 = (undefined1 *)0x417ac6;
    iVar1 = FUN_0041c784(param_3);
    puStack_48 = (undefined1 *)0x417acb;
    FUN_00417f24(iVar1);
    puStack_4c = &LAB_00417cf5;
    uStack_50 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_50;
    iVar1 = param_2[2] - *param_2;
    hDest = param_2[3] - param_2[1];
    wSrc = param_5[2] - *param_5;
    hSrc = param_5[3] - param_5[1];
    puStack_48 = &stack0xfffffffc;
    uVar2 = FUN_0041c954(param_3);
    if (uVar2 == param_4) {
      local_28 = (int *)0x0;
      h = (HGDIOBJ)(**(code **)(*param_3 + 100))();
      local_24 = CreateCompatibleDC((HDC)0x0);
      local_2c = SelectObject(local_24,h);
    }
    else {
      local_28 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX);
      (**(code **)(*local_28 + 8))(local_28,param_3);
      FUN_0041ca38(local_28,param_4);
      piVar3 = (int *)FUN_0041c784(local_28);
      FUN_004184a8(piVar3,DAT_00417d30);
      iVar5 = FUN_0041c784(local_28);
      local_24 = *(HDC *)(iVar5 + 4);
      local_2c = (HGDIOBJ)0x0;
    }
    uVar7 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffffa4;
    piVar3 = (int *)FUN_0041c784(param_3);
    FUN_004184a8(piVar3,DAT_00417d30);
    uVar4 = FUN_00417918(param_1[5]);
    if ((char)uVar4 == '\x01') {
      iVar5 = FUN_0041c784(param_3);
      FUN_00418970((HDC)param_1[1],*param_2,param_2[1],param_5[1],*param_5,local_24,hSrc,wSrc,
                   param_5[1],*param_5,*(HDC *)(iVar5 + 4),hDest,iVar1);
    }
    else {
      rop = 0xcc0020;
      iVar5 = param_5[1];
      xSrc = *param_5;
      wSrc_00 = wSrc;
      hSrc_00 = hSrc;
      iVar6 = FUN_0041c784(param_3);
      StretchBlt((HDC)param_1[1],*param_2,param_2[1],iVar1,hDest,*(HDC *)(iVar6 + 4),xSrc,iVar5,
                 wSrc_00,hSrc_00,rop);
      color = SetTextColor((HDC)param_1[1],0);
      color_00 = SetBkColor((HDC)param_1[1],0xffffff);
      StretchBlt((HDC)param_1[1],*param_2,param_2[1],iVar1,hDest,local_24,*param_5,param_5[1],wSrc,
                 hSrc,0xe20746);
      SetTextColor((HDC)param_1[1],color);
      SetBkColor((HDC)param_1[1],color_00);
    }
    *in_FS_OFFSET = uVar7;
    if (local_28 == (int *)0x0) {
      if (local_2c != (HGDIOBJ)0x0) {
        SelectObject(local_24,local_2c);
      }
      DeleteDC(local_24);
    }
    else {
      FUN_00402f54(local_28);
    }
    return;
  }
  return;
}



void FUN_00417d34(int *param_1,int *param_2,int *param_3,int *param_4)

{
  (**(code **)(*param_1 + 0x10))();
  FUN_004184a8(param_1,DAT_00417db4);
  FUN_004184a8(param_3,DAT_00417db8);
  StretchBlt((HDC)param_1[1],*param_2,param_2[1],param_2[2] - *param_2,param_2[3] - param_2[1],
             (HDC)param_3[1],*param_4,param_4[1],param_4[2] - *param_4,param_4[3] - param_4[1],
             param_1[8]);
  (**(code **)(*param_1 + 0xc))();
  return;
}



void FUN_00417dbc(int *param_1,int param_2,int param_3,int *param_4)

{
  char cVar1;
  uint uVar2;
  COLORREF CVar3;
  int iVar4;
  int iVar5;
  undefined4 *puVar6;
  undefined4 local_18 [4];
  int local_8;
  
  if (param_4 != (int *)0x0) {
    local_8 = param_3;
    cVar1 = (**(code **)(*param_4 + 0x1c))();
    if (cVar1 == '\0') {
      (**(code **)(*param_1 + 0x10))();
      FUN_004184a8(param_1,DAT_00417e64);
      uVar2 = FUN_004177fc(param_1[5]);
      CVar3 = FUN_00416b74(uVar2);
      SetBkColor((HDC)param_1[1],CVar3);
      CVar3 = FUN_00416b74(*(uint *)(param_1[3] + 0x18));
      SetTextColor((HDC)param_1[1],CVar3);
      iVar4 = (**(code **)(*param_4 + 0x20))();
      iVar4 = iVar4 + local_8;
      puVar6 = local_18;
      iVar5 = (**(code **)(*param_4 + 0x2c))();
      FUN_0040ea70(param_2,local_8,iVar5 + param_2,puVar6,iVar4);
      (**(code **)(*param_4 + 0x14))(param_4,param_1,local_18);
      (**(code **)(*param_1 + 0xc))();
    }
  }
  return;
}



void FUN_00417e68(int *param_1,int param_2,int param_3,int param_4,int param_5)

{
  (**(code **)(*param_1 + 0x10))();
  FUN_004184a8(param_1,DAT_00417eac);
  Ellipse((HDC)param_1[1],param_2,param_3,param_5,param_4);
  (**(code **)(*param_1 + 0xc))();
  return;
}



void FUN_00417eb0(int *param_1,RECT *param_2)

{
  HBRUSH hbr;
  
  (**(code **)(*param_1 + 0x10))();
  FUN_004184a8(param_1,DAT_00417ee8);
  hbr = (HBRUSH)FUN_00417838(param_1[5]);
  FillRect((HDC)param_1[1],param_2,hbr);
  (**(code **)(*param_1 + 0xc))();
  return;
}



void FUN_00417eec(int *param_1,int param_2,int param_3)

{
  (**(code **)(*param_1 + 0x10))();
  FUN_004184a8(param_1,DAT_00417f20);
  LineTo((HDC)param_1[1],param_2,param_3);
  (**(code **)(*param_1 + 0xc))();
  return;
}



void FUN_00417f24(int param_1)

{
  EnterCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476680);
  *(int *)(param_1 + 0x50) = *(int *)(param_1 + 0x50) + 1;
  LeaveCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476680);
  EnterCriticalSection((LPCRITICAL_SECTION)(param_1 + 0x38));
  return;
}



void FUN_00417f4c(int *param_1,int param_2,int param_3)

{
  FUN_004184a8(param_1,DAT_00417f74);
  MoveToEx((HDC)param_1[1],param_2,param_3,(LPPOINT)0x0);
  return;
}



void FUN_00417f78(int *param_1,int param_2,int param_3,int param_4,int param_5,int param_6,
                 int param_7,int param_8,int param_9)

{
  (**(code **)(*param_1 + 0x10))();
  FUN_004184a8(param_1,DAT_00417fcc);
  Pie((HDC)param_1[1],param_2,param_3,param_9,param_8,param_7,param_6,param_5,param_4);
  (**(code **)(*param_1 + 0xc))();
  return;
}



void FUN_00417fd0(int *param_1,POINT *param_2,int param_3)

{
  (**(code **)(*param_1 + 0x10))();
  FUN_004184a8(param_1,DAT_00418004);
  Polyline((HDC)param_1[1],param_2,param_3 + 1);
  (**(code **)(*param_1 + 0xc))();
  return;
}



void FUN_00418008(int *param_1,int param_2,int param_3,int param_4,int param_5)

{
  (**(code **)(*param_1 + 0x10))();
  FUN_004184a8(param_1,DAT_0041804c);
  Rectangle((HDC)param_1[1],param_2,param_3,param_5,param_4);
  (**(code **)(*param_1 + 0xc))();
  return;
}



void FUN_00418050(int param_1)

{
  FUN_004183f4(param_1);
  return;
}



void FUN_00418058(int *param_1,undefined4 param_2,int *param_3)

{
  if (param_3 != (int *)0x0) {
    (**(code **)(*param_1 + 0x10))();
    FUN_004184a8(param_1,DAT_00418090);
    (**(code **)(*param_3 + 0x14))(param_3,param_1,param_2);
    (**(code **)(*param_1 + 0xc))();
  }
  return;
}



undefined4 FUN_00418094(int *param_1)

{
  HDC hdc;
  undefined4 uVar1;
  tagPOINT *lppoint;
  tagPOINT local_10;
  
  lppoint = &local_10;
  uVar1 = 0;
  if ((*(byte *)(param_1 + 0x15) & 0x80) != 0) {
    hdc = (HDC)FUN_004183d4(param_1);
    GetWindowOrgEx(hdc,lppoint);
    if (local_10.x != 0) {
      uVar1 = 1;
    }
  }
  return uVar1;
}



void FUN_004180c0(int *param_1,int param_2,int param_3,undefined *param_4)

{
  undefined4 uVar1;
  LONG LVar2;
  UINT c;
  LPCSTR lpString;
  INT *lpDx;
  
  (**(code **)(*param_1 + 0x10))();
  FUN_004184a8(param_1,DAT_00418148);
  uVar1 = FUN_00418094(param_1);
  if ((char)uVar1 == '\x01') {
    LVar2 = FUN_00418234(param_1,param_4);
    param_2 = param_2 + LVar2 + 1;
  }
  lpDx = (INT *)0x0;
  c = FUN_00403e5c((int)param_4);
  lpString = FUN_00404020(param_4);
  ExtTextOutA((HDC)param_1[1],param_2,param_3,param_1[0x15],(RECT *)0x0,lpString,c,lpDx);
  LVar2 = FUN_00418234(param_1,param_4);
  FUN_00417f4c(param_1,LVar2 + param_2,param_3);
  (**(code **)(*param_1 + 0xc))();
  return;
}



void FUN_0041814c(int *param_1,LONG *param_2,int param_3,undefined *param_4,int param_5)

{
  undefined4 uVar1;
  LONG LVar2;
  UINT c;
  LPCSTR lpString;
  int iVar3;
  RECT *pRVar4;
  UINT options;
  INT *lpDx;
  RECT local_18;
  int local_8;
  
  pRVar4 = &local_18;
  for (iVar3 = 4; iVar3 != 0; iVar3 = iVar3 + -1) {
    pRVar4->left = *param_2;
    param_2 = param_2 + 1;
    pRVar4 = (RECT *)&pRVar4->top;
  }
  local_8 = param_3;
  (**(code **)(*param_1 + 0x10))();
  FUN_004184a8(param_1,DAT_004181ec);
  options = param_1[0x15] | 4;
  uVar1 = FUN_00417918(param_1[5]);
  if ((char)uVar1 != '\x01') {
    options = options + 2;
  }
  if ((*(byte *)(param_1 + 0x15) & 0x80) != 0) {
    uVar1 = FUN_00418094(param_1);
    if ((char)uVar1 == '\x01') {
      LVar2 = FUN_00418234(param_1,param_4);
      local_8 = local_8 + LVar2 + 1;
    }
  }
  lpDx = (INT *)0x0;
  c = FUN_00403e5c((int)param_4);
  lpString = FUN_00404020(param_4);
  ExtTextOutA((HDC)param_1[1],local_8,param_5,options,&local_18,lpString,c,lpDx);
  (**(code **)(*param_1 + 0xc))();
  return;
}



void FUN_004181f0(int *param_1,undefined *param_2,LPSIZE param_3)

{
  int c;
  LPCSTR lpString;
  
  FUN_004184a8(param_1,DAT_00418230);
  param_3->cx = 0;
  param_3->cy = 0;
  c = FUN_00403e5c((int)param_2);
  lpString = FUN_00404020(param_2);
  GetTextExtentPoint32A((HDC)param_1[1],lpString,c,param_3);
  return;
}



LONG FUN_00418234(int *param_1,undefined *param_2)

{
  tagSIZE local_10;
  
  FUN_004181f0(param_1,param_2,&local_10);
  return local_10.cx;
}



LONG FUN_00418250(int *param_1,undefined *param_2)

{
  tagSIZE tStack_10;
  
  FUN_004181f0(param_1,param_2,&tStack_10);
  return tStack_10.cy;
}



void FUN_00418270(int param_1)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY_18;
  
  EnterCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476680);
  uStackY_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY_18;
  if (*(int *)(param_1 + 0x50) == 0) {
    FUN_00417f24(param_1);
  }
  *in_FS_OFFSET = uStackY_18;
  uStackY_18 = 0x4182bb;
  LeaveCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476680);
  return;
}



void FUN_004182cc(int param_1)

{
  LeaveCriticalSection((LPCRITICAL_SECTION)(param_1 + 0x38));
  EnterCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476680);
  *(int *)(param_1 + 0x50) = *(int *)(param_1 + 0x50) + -1;
  LeaveCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476680);
  return;
}



void FUN_004182f4(int param_1)

{
  (**(code **)(**(int **)(param_1 + 0xc) + 8))();
  return;
}



void FUN_00418310(int param_1)

{
  (**(code **)(**(int **)(param_1 + 0x14) + 8))();
  return;
}



void FUN_0041831c(int *param_1,LPPOINT param_2)

{
  FUN_004184a8(param_1,DAT_0041833c);
  GetCurrentPositionEx((HDC)param_1[1],param_2);
  return;
}



void FUN_00418340(int *param_1,int *param_2)

{
  FUN_00417f4c(param_1,*param_2,param_2[1]);
  return;
}



void FUN_00418360(int *param_1,int param_2,int param_3)

{
  FUN_004184a8(param_1,DAT_00418388);
  GetPixel((HDC)param_1[1],param_2,param_3);
  return;
}



void FUN_0041838c(int *param_1,int param_2,int param_3,uint param_4)

{
  COLORREF color;
  
  (**(code **)(*param_1 + 0x10))();
  FUN_004184a8(param_1,DAT_004183d0);
  color = FUN_00416b74(param_4);
  SetPixel((HDC)param_1[1],param_2,param_3,color);
  (**(code **)(*param_1 + 0xc))();
  return;
}



int FUN_004183d4(int *param_1)

{
  (**(code **)(*param_1 + 0x10))();
  FUN_004184a8(param_1,DAT_004183f0);
  return param_1[1];
}



void FUN_004183f4(int param_1)

{
  if ((*(HDC *)(param_1 + 4) != (HDC)0x0) &&
     (*(byte *)(param_1 + 8) != (~DAT_0041844c & *(byte *)(param_1 + 8)))) {
    SelectObject(*(HDC *)(param_1 + 4),DAT_00476658);
    SelectObject(*(HDC *)(param_1 + 4),DAT_0047665c);
    SelectObject(*(HDC *)(param_1 + 4),DAT_00476660);
    *(byte *)(param_1 + 8) = ~DAT_0041844c & *(byte *)(param_1 + 8);
  }
  return;
}



void FUN_00418450(void)

{
  return;
}



void FUN_00418454(int *param_1,int param_2)

{
  tagPOINT local_10;
  
  if (param_2 != param_1[1]) {
    if (param_1[1] != 0) {
      FUN_004183f4((int)param_1);
      FUN_0041831c(param_1,&local_10);
      param_1[6] = local_10.x;
      param_1[7] = local_10.y;
      param_1[1] = 0;
      *(byte *)(param_1 + 2) = *(byte *)(param_1 + 2) & 0xfe;
    }
    if (param_2 != 0) {
      *(byte *)(param_1 + 2) = *(byte *)(param_1 + 2) | 1;
      param_1[1] = param_2;
      FUN_00418340(param_1,param_1 + 6);
    }
  }
  return;
}



void FUN_004184a8(int *param_1,byte param_2)

{
  int *piVar1;
  byte bVar2;
  
  bVar2 = ~*(byte *)(param_1 + 2) & param_2;
  if (DAT_00418518 != bVar2) {
    if ((bVar2 & 1) != 0) {
      (**(code **)(*param_1 + 0x14))();
      if (param_1[1] == 0) {
        piVar1 = FUN_0040aacc((int *)PTR_DAT_0040dc48,'\x01',(undefined4 *)PTR_PTR_004756a8);
        FUN_004036ac(piVar1);
      }
    }
    if ((bVar2 & 2) != 0) {
      FUN_00418544((int)param_1);
    }
    if ((bVar2 & 4) != 0) {
      FUN_00418570((int)param_1);
    }
    if ((bVar2 & 8) != 0) {
      FUN_004185a0((int)param_1);
    }
    *(byte *)(param_1 + 2) = bVar2 | *(byte *)(param_1 + 2);
  }
  return;
}



void FUN_0041851c(int param_1)

{
  if (*(short *)(param_1 + 0x32) != 0) {
    (**(code **)(param_1 + 0x30))(*(undefined4 *)(param_1 + 0x34),param_1);
  }
  return;
}



void FUN_00418544(int param_1)

{
  HGDIOBJ h;
  COLORREF color;
  
  h = (HGDIOBJ)FUN_00417048(*(int *)(param_1 + 0xc));
  SelectObject(*(HDC *)(param_1 + 4),h);
  color = FUN_00416b74(*(uint *)(*(int *)(param_1 + 0xc) + 0x18));
  SetTextColor(*(HDC *)(param_1 + 4),color);
  return;
}



void FUN_00418570(int param_1)

{
  HGDIOBJ h;
  
  h = (HGDIOBJ)FUN_00417548(*(int *)(param_1 + 0x10));
  SelectObject(*(HDC *)(param_1 + 4),h);
  SetROP2(*(HDC *)(param_1 + 4),
          (uint)*(ushort *)(&DAT_00474598 + (uint)*(byte *)(*(int *)(param_1 + 0x10) + 0x18) * 2));
  return;
}



void FUN_004185a0(int param_1)

{
  HGDIOBJ pvVar1;
  undefined4 uVar2;
  uint uVar3;
  COLORREF color;
  
  pvVar1 = (HGDIOBJ)FUN_00417838(*(int *)(param_1 + 0x14));
  UnrealizeObject(pvVar1);
  pvVar1 = (HGDIOBJ)FUN_00417838(*(int *)(param_1 + 0x14));
  SelectObject(*(HDC *)(param_1 + 4),pvVar1);
  uVar2 = FUN_00417918(*(int *)(param_1 + 0x14));
  if ((char)uVar2 == '\0') {
    uVar3 = FUN_004177fc(*(int *)(param_1 + 0x14));
    color = FUN_00416b74(uVar3);
    SetBkColor(*(HDC *)(param_1 + 4),color);
    SetBkMode(*(HDC *)(param_1 + 4),2);
    return;
  }
  uVar3 = FUN_004177fc(*(int *)(param_1 + 0x14));
  uVar3 = FUN_00416b74(uVar3);
  SetBkColor(*(HDC *)(param_1 + 4),~uVar3);
  SetBkMode(*(HDC *)(param_1 + 4),1);
  return;
}



void FUN_0041867c(undefined4 *param_1)

{
  int *piVar1;
  
  piVar1 = FUN_0040aacc((int *)PTR_DAT_0041559c,'\x01',param_1);
  FUN_004036ac(piVar1);
  return;
}



void FUN_00418694(undefined4 *param_1)

{
  int *piVar1;
  
  piVar1 = FUN_0040aacc((int *)PTR_DAT_00415540,'\x01',param_1);
  FUN_004036ac(piVar1);
  return;
}



void FUN_004186ac(void)

{
  FUN_00418694((undefined4 *)PTR_PTR_0047566c);
  return;
}



void FUN_004186b8(void)

{
  FUN_00418694((undefined4 *)PTR_PTR_0047567c);
  return;
}



void FUN_004186c4(void)

{
  FUN_00418694((undefined4 *)PTR_PTR_004757d8);
  return;
}



void FUN_004186d0(void)

{
  int *piVar1;
  undefined4 unaff_EBP;
  undefined4 *in_FS_OFFSET;
  undefined1 *puStack00000004;
  undefined4 uStack_14;
  undefined1 *puStack_10;
  undefined1 *puStack_c;
  undefined4 *local_8;
  
  puStack_c = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  puStack_10 = &LAB_0041871a;
  uStack_14 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_14;
  FUN_004054e4((undefined4 *)PTR_PTR_004755c0,(int *)&local_8);
  piVar1 = FUN_0040aa10((int *)PTR_DAT_0040dbec,'\x01',local_8);
  FUN_004036ac(piVar1);
  *in_FS_OFFSET = unaff_EBP;
  puStack00000004 = &LAB_00418721;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_00418724(void)

{
  DWORD DVar1;
  int *piVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_118;
  undefined1 *puStack_114;
  undefined1 *puStack_110;
  undefined4 *local_108;
  CHAR local_104 [4];
  undefined1 *puStack_100;
  
  puStack_110 = &stack0xfffffffc;
  local_108 = (undefined4 *)0x0;
  puStack_114 = &LAB_004187c0;
  uStack_118 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_118;
  DVar1 = GetLastError();
  if (DVar1 != 0) {
    DVar1 = FormatMessageA(0x1000,(LPCVOID)0x0,DVar1,0x400,local_104,0x100,(va_list *)0x0);
    if (DVar1 != 0) {
      FUN_00403e0c((int *)&local_108,local_104,0x100);
      piVar2 = FUN_0040aa10((int *)PTR_DAT_0040dbec,'\x01',local_108);
      FUN_004036ac(piVar2);
      goto LAB_004187a7;
    }
  }
  FUN_004186d0();
LAB_004187a7:
  *in_FS_OFFSET = local_108;
  puStack_100 = &LAB_004187c7;
  local_104[0] = -0x41;
  local_104[1] = -0x79;
  local_104[2] = 'A';
  local_104[3] = '\0';
  FUN_00403bdc((int *)&local_108);
  return;
}



int FUN_004187cc(int param_1)

{
  if (param_1 == 0) {
    FUN_00418724();
  }
  return param_1;
}



void FUN_004187dc(HANDLE param_1,int *param_2,char param_3)

{
  HGDIOBJ h;
  HGDIOBJ h_00;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar1;
  undefined4 uStack_50;
  undefined1 local_38 [4];
  int local_34;
  int local_30;
  HDC local_20;
  HDC local_1c;
  HDC local_18;
  HBITMAP local_14;
  int local_10;
  int local_c;
  HANDLE local_8;
  
  local_10 = *param_2;
  local_c = param_2[1];
  local_8 = param_1;
  local_1c = CreateCompatibleDC((HDC)0x0);
  local_20 = CreateCompatibleDC((HDC)0x0);
  uStack_50 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_50;
  GetObjectA(local_8,0x18,local_38);
  if (param_3 != '\0') {
    local_14 = CreateBitmap(local_10,local_c,1,1,(void *)0x0);
    if (local_14 != (HBITMAP)0x0) {
      h = SelectObject(local_1c,local_8);
      h_00 = SelectObject(local_20,local_14);
      StretchBlt(local_20,0,0,local_10,local_c,local_1c,0,0,local_34,local_30,0xcc0020);
      if (h != (HGDIOBJ)0x0) {
        SelectObject(local_1c,h);
      }
      if (h_00 != (HGDIOBJ)0x0) {
        SelectObject(local_20,h_00);
      }
    }
    *in_FS_OFFSET = uStack_50;
    uStack_50 = 0x418920;
    DeleteDC(local_1c);
    uStack_50 = 0x418929;
    DeleteDC(local_20);
    return;
  }
  local_18 = GetDC((HWND)0x0);
  if (local_18 == (HDC)0x0) {
    FUN_00418724();
  }
  uVar1 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffffa4;
  local_14 = CreateCompatibleBitmap(local_18,local_10,local_c);
  if (local_14 == (HBITMAP)0x0) {
    FUN_00418724();
  }
  *in_FS_OFFSET = uVar1;
  ReleaseDC((HWND)0x0,local_18);
  return;
}



int FUN_0041893c(short param_1)

{
  if (((param_1 != 1) && (param_1 != 4)) && (param_1 != 8)) {
    return 0;
  }
  return 1 << ((byte)param_1 & 0x1f);
}



int FUN_0041895c(int param_1,int param_2,int param_3)

{
  uint uVar1;
  
  uVar1 = param_1 * param_2 + (param_3 - 1U) & ~(param_3 - 1U);
  if ((int)uVar1 < 0) {
    uVar1 = uVar1 + 7;
  }
  return (int)uVar1 >> 3;
}



void FUN_00418970(HDC param_1,int param_2,int param_3,int param_4,int param_5,HDC param_6,
                 int param_7,int param_8,int param_9,int param_10,HDC param_11,int param_12,
                 int param_13)

{
  HBITMAP pHVar1;
  HGDIOBJ pvVar2;
  uint rop;
  HDC pHVar3;
  HGDIOBJ h;
  HPALETTE hPal;
  COLORREF color;
  COLORREF color_00;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar4;
  HPALETTE local_28;
  
  if (((*(int *)PTR_DAT_004758f8 == 2) && (param_8 == param_13)) && (param_7 == param_12)) {
    pHVar1 = CreateCompatibleBitmap(param_11,1,1);
    pvVar2 = (HGDIOBJ)FUN_004187cc((int)pHVar1);
    pHVar1 = (HBITMAP)SelectObject(param_6,pvVar2);
    uVar4 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffffc0;
    rop = FUN_00407178(0xaa0029,0xcc0020);
    MaskBlt(param_1,param_2,param_3,param_13,param_12,param_11,param_10,param_9,pHVar1,param_5,
            param_4,rop);
    *in_FS_OFFSET = uVar4;
    pvVar2 = SelectObject(param_6,pHVar1);
    DeleteObject(pvVar2);
    return;
  }
  pHVar3 = CreateCompatibleDC((HDC)0x0);
  pHVar3 = (HDC)FUN_004187cc((int)pHVar3);
  uVar4 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffffc0;
  pHVar1 = CreateCompatibleBitmap(param_11,param_8,param_7);
  pvVar2 = (HGDIOBJ)FUN_004187cc((int)pHVar1);
  h = SelectObject(pHVar3,pvVar2);
  hPal = SelectPalette(param_11,DAT_0047664c,0);
  SelectPalette(param_11,hPal,0);
  if (hPal == (HPALETTE)0x0) {
    local_28 = SelectPalette(pHVar3,DAT_0047664c,-1);
  }
  else {
    local_28 = SelectPalette(pHVar3,hPal,-1);
  }
  RealizePalette(pHVar3);
  StretchBlt(pHVar3,0,0,param_8,param_7,param_6,param_5,param_4,param_8,param_7,0xcc0020);
  StretchBlt(pHVar3,0,0,param_8,param_7,param_11,param_10,param_9,param_8,param_7,0x440328);
  color = SetTextColor(param_1,0);
  color_00 = SetBkColor(param_1,0xffffff);
  StretchBlt(param_1,param_2,param_3,param_13,param_12,param_6,param_5,param_4,param_8,param_7,
             0x8800c6);
  StretchBlt(param_1,param_2,param_3,param_13,param_12,pHVar3,0,0,param_8,param_7,0x660046);
  SetTextColor(param_1,color);
  SetBkColor(param_1,color_00);
  if (h != (HGDIOBJ)0x0) {
    SelectObject(pHVar3,h);
  }
  DeleteObject(pvVar2);
  *in_FS_OFFSET = uVar4;
  if (local_28 != (HPALETTE)0x0) {
    SelectPalette(pHVar3,local_28,0);
  }
  DeleteDC(pHVar3);
  return;
}



void FUN_00418c04(int param_1)

{
  undefined1 *puVar1;
  undefined1 *puVar2;
  int iVar3;
  
  iVar3 = 0xff;
  do {
    puVar1 = (undefined1 *)(param_1 + iVar3 * 4);
    puVar2 = (undefined1 *)(param_1 + iVar3 * 3);
    puVar1[2] = puVar2[2];
    puVar1[1] = puVar2[1];
    *puVar1 = *puVar2;
    puVar1[3] = 0;
    iVar3 = iVar3 + -1;
  } while (iVar3 != 0);
  *(undefined1 *)(param_1 + 3) = 0;
  return;
}



void FUN_00418c3c(int param_1,int *param_2)

{
  undefined1 *puVar1;
  undefined1 *puVar2;
  int iVar3;
  int iVar4;
  
  iVar4 = *param_2 + -1;
  if (0 < iVar4) {
    iVar3 = 1;
    do {
      puVar1 = (undefined1 *)(param_1 + iVar3 * 4);
      puVar2 = (undefined1 *)(param_1 + iVar3 * 3);
      puVar2[2] = puVar1[2];
      puVar2[1] = puVar1[1];
      *puVar2 = *puVar1;
      iVar3 = iVar3 + 1;
      iVar4 = iVar4 + -1;
    } while (iVar4 != 0);
  }
  if (*param_2 < 0x100) {
    FUN_00402c14((undefined4 *)(param_1 + *param_2 * 3),(0x100 - *param_2) * 3,0);
    *param_2 = 0x100;
  }
  return;
}



void FUN_00418cb4(int param_1,int param_2)

{
  uint uVar1;
  undefined4 uVar2;
  _SYSTEM_INFO local_30;
  int local_c;
  int local_8;
  
  local_c = param_2;
  local_8 = param_1;
  GetSystemInfo(&local_30);
  local_c = local_c + -1;
  if (-1 < local_c) {
    if (local_30.wProcessorLevel == 3) {
      do {
        uVar2 = *(undefined4 *)(local_8 + local_c * 4);
        *(uint *)(local_8 + local_c * 4) =
             (uint)CONCAT21(CONCAT11((char)uVar2,(char)((uint)uVar2 >> 8)),
                            (char)((uint)uVar2 >> 0x10));
        local_c = local_c + -1;
      } while (-1 < local_c);
    }
    else {
      do {
        uVar1 = *(uint *)(local_8 + local_c * 4);
        *(uint *)(local_8 + local_c * 4) =
             ((uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) >> 8;
        local_c = local_c + -1;
      } while (-1 < local_c);
    }
  }
  return;
}



int FUN_00418e24(int param_1)

{
  HDC hdc;
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar2;
  
  if (DAT_0047664c != (HPALETTE)0x0) {
    hdc = GetDC((HWND)0x0);
    uVar2 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffffe4;
    iVar1 = GetDeviceCaps(hdc,0x68);
    if (0xf < iVar1) {
      GetPaletteEntries(DAT_0047664c,0,8,(LPPALETTEENTRY)(param_1 + 4));
      GetPaletteEntries(DAT_0047664c,8,8,
                        (LPPALETTEENTRY)(param_1 + -0x1c + (uint)*(ushort *)(param_1 + 2) * 4));
    }
    *in_FS_OFFSET = uVar2;
    iVar1 = ReleaseDC((HWND)0x0,hdc);
    return iVar1;
  }
  return param_1 & 0xffffff00;
}



HPALETTE FUN_00418ebc(HGDIOBJ param_1,undefined4 *param_2,int param_3)

{
  HDC hdc;
  HGDIOBJ h;
  UINT UVar1;
  int iVar2;
  HPALETTE pHVar3;
  LOGPALETTE local_410 [128];
  
  local_410[0].palVersion = 0x300;
  if (param_1 == (HGDIOBJ)0x0) {
    local_410[0].palNumEntries = (WORD)param_3;
    FUN_00402920(param_2,local_410[0].palPalEntry,param_3 << 2);
  }
  else {
    hdc = CreateCompatibleDC((HDC)0x0);
    h = SelectObject(hdc,param_1);
    UVar1 = GetDIBColorTable(hdc,0,0x100,(RGBQUAD *)local_410[0].palPalEntry);
    local_410[0].palNumEntries = (WORD)UVar1;
    SelectObject(hdc,h);
    DeleteDC(hdc);
  }
  if (local_410[0].palNumEntries != 0) {
    if ((local_410[0].palNumEntries != 0x10) ||
       (iVar2 = FUN_00418e24((int)local_410), (char)iVar2 == '\0')) {
      FUN_00418cb4((int)local_410[0].palPalEntry,(uint)local_410[0].palNumEntries);
    }
    pHVar3 = CreatePalette(local_410);
    return pHVar3;
  }
  return (HPALETTE)0x0;
}



UINT FUN_00418f60(HPALETTE param_1,LPPALETTEENTRY param_2,int param_3)

{
  int iVar1;
  UINT local_10;
  
  local_10 = 0;
  if (param_1 != (HPALETTE)0x0) {
    iVar1 = GetObjectA(param_1,4,&local_10);
    if ((iVar1 != 0) && (local_10 != 0)) {
      if ((int)(param_3 + 1U) < (int)local_10) {
        local_10 = param_3 + 1U;
      }
      GetPaletteEntries(param_1,0,local_10,param_2);
      FUN_00418cb4((int)param_2,local_10);
    }
  }
  return local_10;
}



void FUN_00418fb4(BITMAPINFOHEADER *param_1,undefined4 *param_2,undefined4 param_3,int *param_4)

{
  int iVar1;
  HDC hdc;
  HBITMAP pHVar2;
  HANDLE ho;
  undefined4 uVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar4;
  undefined4 uStack_30;
  undefined1 *puStack_2c;
  
  param_1->biHeight = (uint)param_1->biHeight >> 1;
  iVar1 = FUN_0041895c(param_1->biWidth,(uint)param_1->biBitCount,0x20);
  param_1->biSizeImage = iVar1 * param_1->biHeight;
  iVar1 = FUN_0041893c(param_1->biBitCount);
  puStack_2c = (undefined1 *)0x419003;
  hdc = GetDC((HWND)0x0);
  if (hdc == (HDC)0x0) {
    FUN_004186d0();
  }
  puStack_2c = &LAB_00419160;
  uStack_30 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_30;
  pHVar2 = CreateDIBitmap(hdc,param_1,4,&param_1[1].biSize + iVar1,(BITMAPINFO *)param_1,0);
  ho = (HANDLE)FUN_004187cc((int)pHVar2);
  uVar4 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffffc4;
  uVar3 = FUN_004187dc(ho,param_4,'\0');
  *param_2 = uVar3;
  *in_FS_OFFSET = uVar4;
  DeleteObject(ho);
  return;
}



int FUN_00419170(int param_1)

{
  if (param_1 == 0) {
    param_1 = 0x7fffffff;
  }
  return param_1;
}



undefined4 FUN_0041917c(byte *param_1,byte *param_2,undefined4 param_3,int param_4)

{
  uint uVar1;
  int iVar2;
  undefined4 uVar3;
  uint uVar4;
  uint uVar5;
  uint uVar6;
  
  uVar4 = (uint)*param_2 - **(int **)(param_4 + 8);
  uVar5 = (uint)param_2[1] - *(int *)(*(int *)(param_4 + 8) + 4);
  uVar6 = (uint)*param_1 - **(int **)(param_4 + 8);
  uVar1 = (uint)param_1[1] - *(int *)(*(int *)(param_4 + 8) + 4);
  if ((((int)((uVar6 ^ (int)uVar6 >> 0x1f) - ((int)uVar6 >> 0x1f)) <
        (int)((uVar4 ^ (int)uVar4 >> 0x1f) - ((int)uVar4 >> 0x1f))) ||
      (((0 < (int)uVar4 && ((int)uVar6 < (int)uVar4)) ||
       (iVar2 = (uVar1 ^ (int)uVar1 >> 0x1f) - ((int)uVar1 >> 0x1f),
       iVar2 < (int)((uVar5 ^ (int)uVar5 >> 0x1f) - ((int)uVar5 >> 0x1f)))))) ||
     ((0 < (int)uVar5 && ((int)uVar1 < (int)uVar5)))) {
    uVar3 = 0;
  }
  else {
    uVar3 = CONCAT31((int3)((uint)iVar2 >> 8),1);
  }
  return uVar3;
}



void FUN_0041920c(int *param_1,undefined4 param_2,int param_3,int *param_4,int *param_5)

{
  undefined4 *puVar1;
  int iVar2;
  HDC hdc;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar3;
  undefined4 uStack_8c;
  undefined1 *puStack_88;
  undefined1 *puStack_84;
  
  puStack_84 = (undefined1 *)0x419232;
  puVar1 = FUN_004081e8(param_3 << 4);
  puStack_88 = &LAB_00419503;
  uStack_8c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_8c;
  puStack_84 = &stack0xfffffffc;
  (**(code **)(*param_1 + 4))(param_1,puVar1,param_3 << 4);
  if (*param_5 == 0 && param_5[1] == 0) {
    iVar2 = GetSystemMetrics(0xb);
    *param_4 = iVar2;
    iVar2 = GetSystemMetrics(0xc);
    param_4[1] = iVar2;
  }
  else {
    *param_4 = *param_5;
    param_4[1] = param_5[1];
  }
  hdc = GetDC((HWND)0x0);
  if (hdc == (HDC)0x0) {
    FUN_004186d0();
  }
  uVar3 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffff68;
  GetDeviceCaps(hdc,0xe);
  GetDeviceCaps(hdc,0xc);
  *in_FS_OFFSET = uVar3;
  ReleaseDC((HWND)0x0,hdc);
  return;
}



ushort FUN_00419514(ushort *param_1)

{
  ushort *puVar1;
  ushort uVar2;
  
  uVar2 = 0;
  puVar1 = param_1 + 10;
  for (; (int)param_1 < (int)puVar1; param_1 = param_1 + 1) {
    uVar2 = uVar2 ^ *param_1;
  }
  return uVar2;
}



void FUN_0041952c(HANDLE param_1,uint *param_2,uint param_3)

{
  int iVar1;
  uint uVar2;
  uint *puVar3;
  uint *puVar4;
  undefined1 auStack_60 [4];
  uint local_5c;
  uint local_58;
  short local_50;
  short local_4e;
  uint local_48 [15];
  
  local_48[0] = 0;
  iVar1 = GetObjectA(param_1,0x54,auStack_60);
  if (iVar1 == 0) {
    FUN_004186ac();
  }
  else if ((iVar1 < 0x40) || (local_48[0] < 0x28)) {
    FUN_00402c14(param_2,0x28,0);
    *param_2 = 0x28;
    param_2[1] = local_5c;
    param_2[2] = local_58;
  }
  else {
    puVar3 = local_48;
    puVar4 = param_2;
    for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {
      *puVar4 = *puVar3;
      puVar3 = puVar3 + 1;
      puVar4 = puVar4 + 1;
    }
  }
  if (param_3 == 2) {
    *(undefined2 *)((int)param_2 + 0xe) = 1;
  }
  else if (param_3 - 3 < 0xe) {
    *(undefined2 *)((int)param_2 + 0xe) = 4;
    param_2[8] = param_3;
  }
  else if (param_3 - 0x11 < 0xf0) {
    *(undefined2 *)((int)param_2 + 0xe) = 8;
    param_2[8] = param_3;
  }
  else {
    *(short *)((int)param_2 + 0xe) = local_4e * local_50;
  }
  *(undefined2 *)(param_2 + 3) = 1;
  if (param_2[8] < param_2[9]) {
    param_2[9] = param_2[8];
  }
  if (param_2[5] == 0) {
    iVar1 = FUN_0041895c(param_2[1],(uint)*(ushort *)((int)param_2 + 0xe),0x20);
    uVar2 = (int)param_2[2] >> 0x1f;
    param_2[5] = iVar1 * ((param_2[2] ^ uVar2) - uVar2);
  }
  return;
}



void FUN_00419610(HANDLE param_1,int *param_2,undefined4 *param_3,uint param_4)

{
  uint local_2c [3];
  ushort local_1e;
  byte local_1c;
  undefined4 local_18;
  int local_c;
  
  FUN_0041952c(param_1,local_2c,param_4);
  if (local_1e < 9) {
    if (local_c == 0) {
      *param_2 = (1 << ((byte)local_1e & 0x1f)) * 4 + 0x28;
    }
    else {
      *param_2 = local_c * 4 + 0x28;
    }
  }
  else {
    *param_2 = 0x28;
    if ((local_1c & 3) != 0) {
      *param_2 = *param_2 + 0xc;
    }
  }
  *param_3 = local_18;
  return;
}



void FUN_00419674(HANDLE param_1,int *param_2,undefined4 *param_3)

{
  FUN_00419610(param_1,param_2,param_3,0);
  return;
}



void FUN_0041967c(HBITMAP param_1,HPALETTE param_2,LPBITMAPINFO param_3,uint param_4,LPVOID param_5)

{
  HDC hdc;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar1;
  HPALETTE local_c;
  
  FUN_0041952c(param_1,(uint *)param_3,param_4);
  local_c = (HPALETTE)0x0;
  hdc = CreateCompatibleDC((HDC)0x0);
  uVar1 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffffd8;
  if (param_2 != (HPALETTE)0x0) {
    local_c = SelectPalette(hdc,param_2,0);
    RealizePalette(hdc);
  }
  GetDIBits(hdc,param_1,0,(param_3->bmiHeader).biHeight,param_5,param_3,0);
  *in_FS_OFFSET = uVar1;
  if (local_c != (HPALETTE)0x0) {
    SelectPalette(hdc,local_c,0);
  }
  DeleteDC(hdc);
  return;
}



void FUN_0041972c(HBITMAP param_1,HPALETTE param_2,LPBITMAPINFO param_3,LPVOID param_4)

{
  FUN_0041967c(param_1,param_2,param_3,0,param_4);
  return;
}



void FUN_00419740(void)

{
  return;
}



void FUN_00419744(int param_1)

{
  if (param_1 == 0) {
    FUN_00419740();
  }
  return;
}



void FUN_00419750(int *param_1,HICON param_2,char param_3)

{
  LONG *pLVar1;
  LPBITMAPINFO ptVar2;
  BOOL BVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar4;
  undefined4 uStack_7c;
  undefined1 *puStack_78;
  undefined4 uStack_70;
  undefined4 local_58;
  int local_50;
  undefined4 local_4c;
  ICONINFO local_48;
  int local_34;
  undefined4 local_2e;
  undefined2 local_2a;
  undefined4 *local_28;
  LPBITMAPINFO local_24;
  undefined4 *local_20;
  LPBITMAPINFO local_1c;
  uint local_18;
  uint local_14;
  uint local_10;
  uint local_c;
  char local_5;
  
  local_5 = param_3;
  FUN_00402c14(&local_2e,6,0);
  FUN_00402c14(&local_58,0x10,0);
  uStack_70 = 0x419788;
  BVar3 = GetIconInfo(param_2,&local_48);
  FUN_00419744(BVar3);
  uStack_70 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_70;
  puStack_78 = (undefined1 *)0x4197ab;
  FUN_00419610(local_48.hbmMask,(int *)&local_c,&local_14,2);
  puStack_78 = (undefined1 *)0x4197bb;
  FUN_00419610(local_48.hbmColor,(int *)&local_10,&local_18,0x10);
  local_1c = (LPBITMAPINFO)0x0;
  local_20 = (undefined4 *)0x0;
  local_24 = (LPBITMAPINFO)0x0;
  local_28 = (undefined4 *)0x0;
  puStack_78 = &LAB_00419917;
  uStack_7c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_7c;
  local_1c = (LPBITMAPINFO)FUN_004081e8(local_c);
  local_20 = FUN_004081e8(local_14);
  local_24 = (LPBITMAPINFO)FUN_004081e8(local_10);
  local_28 = FUN_004081e8(local_18);
  FUN_0041967c(local_48.hbmMask,(HPALETTE)0x0,local_1c,2,local_20);
  uVar4 = 0x10;
  FUN_0041967c(local_48.hbmColor,(HPALETTE)0x0,local_24,0x10,local_28);
  if (local_5 != '\0') {
    local_34 = local_10 + 0x16 + local_18 + local_14;
    (**(code **)(*param_1 + 8))(param_1,&local_34,4);
  }
  local_2e._2_2_ = 1;
  local_2a = 1;
  (**(code **)(*param_1 + 8))(param_1,&local_2e,6);
  ptVar2 = local_24;
  local_58._0_1_ = (undefined1)(local_24->bmiHeader).biWidth;
  local_58._1_1_ = (undefined1)(local_24->bmiHeader).biHeight;
  local_58._2_2_ = (local_24->bmiHeader).biPlanes * (local_24->bmiHeader).biBitCount;
  local_50 = local_10 + local_18 + local_14;
  local_4c = 0x16;
  (**(code **)(*param_1 + 8))(param_1,&local_58,0x10);
  pLVar1 = &(ptVar2->bmiHeader).biHeight;
  *pLVar1 = *pLVar1 + (ptVar2->bmiHeader).biHeight;
  (**(code **)(*param_1 + 8))(param_1,local_24,local_10);
  (**(code **)(*param_1 + 8))(param_1,local_28,local_18);
  (**(code **)(*param_1 + 8))(param_1,local_20,local_14);
  *in_FS_OFFSET = uVar4;
  FUN_0040270c((int)local_24);
  FUN_0040270c((int)local_28);
  FUN_0040270c((int)local_1c);
  FUN_0040270c((int)local_20);
  return;
}



int * FUN_0041994c(int *param_1,char param_2,undefined4 param_3)

{
  undefined4 extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00402f24(param_1,'\0',param_3);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_00419984(int param_1)

{
  *(undefined1 *)(param_1 + 0x18) = 1;
  if (*(short *)(param_1 + 10) != 0) {
    (**(code **)(param_1 + 8))(*(undefined4 *)(param_1 + 0xc),param_1);
  }
  return;
}



uint FUN_0041999c(void)

{
  int *piVar1;
  int *piVar2;
  uint uVar3;
  int in_stack_00000004;
  
  if (*(int *)(*(int *)(in_stack_00000004 + -4) + 0x20) == 0) {
    uVar3 = (**(code **)(**(int **)(in_stack_00000004 + -8) + 0x1c))();
    return uVar3 ^ 1;
  }
  piVar1 = *(int **)(*(int *)(in_stack_00000004 + -4) + 0x20);
  piVar2 = FUN_004030cc(piVar1,(int)PTR_LAB_00415df0);
  if (((char)piVar2 != '\0') &&
     (piVar2 = (int *)(**(code **)(**(int **)(in_stack_00000004 + -8) + 0x18))
                                (*(int **)(in_stack_00000004 + -8),piVar1), (char)piVar2 != '\0')) {
    return 0;
  }
  return CONCAT31((int3)((uint)piVar2 >> 8),1);
}



void FUN_004199f4(int *param_1,int *param_2)

{
  uint uVar1;
  undefined4 uVar2;
  undefined4 uVar3;
  int *piVar4;
  
  uVar3 = *(undefined4 *)(*param_1 + 0x30);
  uVar2 = *(undefined4 *)(*param_1 + 0x44);
  piVar4 = param_1;
  uVar1 = FUN_0041999c();
  (**(code **)(*param_2 + 8))(param_2,&DAT_00419a38,uVar1,uVar2,param_1,uVar3,piVar4);
  return;
}



undefined1 FUN_00419a40(int *param_1,int *param_2)

{
  bool bVar1;
  char cVar2;
  undefined1 uVar3;
  int iVar4;
  int iVar5;
  int *piVar6;
  int *piVar7;
  uint uVar8;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_34;
  undefined1 *puStack_30;
  undefined1 *puStack_2c;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  
  if (param_2 != (int *)0x0) {
    puStack_20 = (undefined1 *)0x419a58;
    iVar4 = FUN_00402e9c(param_1);
    puStack_20 = (undefined1 *)0x419a61;
    iVar5 = FUN_00402e9c(param_2);
    if (iVar4 == iVar5) {
      bVar1 = true;
      goto LAB_00419a6b;
    }
  }
  bVar1 = false;
LAB_00419a6b:
  puStack_20 = (undefined1 *)0x419a75;
  cVar2 = (**(code **)(*param_1 + 0x1c))();
  if (cVar2 == '\0') {
    puStack_20 = (undefined1 *)0x419a80;
    cVar2 = (**(code **)(*param_2 + 0x1c))();
    if (cVar2 == '\0') {
      if (!bVar1) {
        return 0;
      }
      puStack_20 = (undefined1 *)0x419abe;
      piVar6 = (int *)FUN_00402f24((int *)PTR_PTR_0040e3d0,'\x01',extraout_ECX);
      puStack_24 = &LAB_00419b71;
      uStack_28 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack_28;
      puStack_2c = (undefined1 *)0x419ad9;
      puStack_20 = &stack0xfffffffc;
      (**(code **)(*param_1 + 0x44))(param_1,piVar6);
      puStack_2c = (undefined1 *)0x419ae5;
      piVar7 = (int *)FUN_00402f24((int *)PTR_PTR_0040e3d0,'\x01',extraout_ECX_00);
      puStack_30 = &LAB_00419b54;
      uStack_34 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack_34;
      puStack_2c = &stack0xfffffffc;
      (**(code **)(*param_2 + 0x44))(param_2,piVar7);
      iVar4 = FUN_00411598(piVar6);
      iVar5 = FUN_00411598(piVar7);
      if (iVar4 == iVar5) {
        uVar8 = FUN_00411598(piVar6);
        FUN_004082a8((int *)piVar6[1],(int *)piVar7[1],uVar8);
      }
      *in_FS_OFFSET = uStack_34;
      puStack_2c = &LAB_00419b5b;
      puStack_30 = (undefined1 *)0x419b53;
      uVar3 = FUN_00402f54(piVar7);
      return uVar3;
    }
  }
  puStack_20 = (undefined1 *)0x419a8b;
  cVar2 = (**(code **)(*param_1 + 0x1c))();
  if (cVar2 != '\0') {
    puStack_20 = (undefined1 *)0x419a96;
    cVar2 = (**(code **)(*param_2 + 0x1c))();
    if (cVar2 != '\0') {
      return 1;
    }
  }
  return 0;
}



void FUN_00419be0(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
                 undefined4 param_5,undefined1 param_6,undefined1 param_7)

{
  if (*(short *)(param_1 + 0x12) != 0) {
    (**(code **)(param_1 + 0x10))
              (*(undefined4 *)(param_1 + 0x14),param_2,param_3,param_4,param_5,param_6,param_7);
  }
  return;
}



void FUN_00419c14(int *param_1,undefined *param_2)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY_18;
  undefined1 *puStackY_14;
  
  puStackY_14 = (undefined1 *)0x419c2e;
  piVar1 = FUN_004117a0((int *)PTR_PTR_0040e2f8,'\x01',param_2,0xffff);
  puStackY_14 = &LAB_00419c5f;
  uStackY_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY_18;
  (**(code **)(*param_1 + 0x54))(param_1,piVar1);
  *in_FS_OFFSET = uStackY_18;
  puStackY_14 = (undefined1 *)0x419c5e;
  FUN_00402f54(piVar1);
  return;
}



void FUN_00419d28(int *param_1,char param_2)

{
  undefined4 uVar1;
  undefined4 extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined *puVar2;
  undefined4 uStack_38;
  undefined1 *puStack_34;
  undefined1 *puStack_30;
  undefined4 in_stack_ffffffd4;
  undefined4 in_stack_ffffffd8;
  undefined4 *local_14;
  undefined4 *local_10;
  undefined4 *local_c;
  undefined4 *local_8;
  
  uVar1 = 0;
  local_8 = (undefined4 *)0x0;
  local_c = (undefined4 *)0x0;
  local_10 = (undefined4 *)0x0;
  local_14 = (undefined4 *)0x0;
  if (param_2 != '\0') {
    puStack_30 = (undefined1 *)0x419d3f;
    param_1 = (int *)FUN_00403254((int)param_1,param_2,0,in_stack_ffffffd4,in_stack_ffffffd8);
    uVar1 = extraout_ECX;
  }
  puStack_34 = &LAB_00419e05;
  uStack_38 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_38;
  puStack_30 = &stack0xfffffffc;
  FUN_00402f24(param_1,'\0',uVar1);
  uVar1 = 0;
  puVar2 = PTR_PTR_0041603c;
  FUN_004054e4((undefined4 *)PTR_PTR_00475758,(int *)&local_8);
  FUN_00419ea8(param_1,&DAT_00419e34,local_8,puVar2,uVar1);
  uVar1 = 0;
  puVar2 = PTR_PTR_0041603c;
  FUN_004054e4((undefined4 *)PTR_PTR_004755d0,(int *)&local_c);
  FUN_00419ea8(param_1,&DAT_00419e40,local_c,puVar2,uVar1);
  uVar1 = 0;
  puVar2 = PTR_PTR_004162b8;
  FUN_004054e4((undefined4 *)PTR_PTR_004755cc,(int *)&local_10);
  FUN_00419ea8(param_1,&DAT_00419e4c,local_10,puVar2,uVar1);
  uVar1 = 0;
  puVar2 = PTR_PTR_00416178;
  FUN_004054e4((undefined4 *)PTR_PTR_004755c8,(int *)&local_14);
  FUN_00419ea8(param_1,&LAB_00419e58,local_14,puVar2,uVar1);
  *in_FS_OFFSET = puVar2;
  FUN_00403c00((int *)&local_14,4);
  return;
}



void FUN_00419ea8(int *param_1,undefined *param_2,undefined4 *param_3,undefined4 param_4,
                 undefined4 param_5)

{
  undefined4 *puVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  undefined4 *local_10;
  undefined4 *local_c;
  undefined *local_8;
  
  puStack_20 = &stack0xfffffffc;
  local_10 = (undefined4 *)0x0;
  puStack_24 = &LAB_00419f2b;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  local_c = param_3;
  local_8 = param_2;
  puVar1 = FUN_004047b0(0x10,PTR_DAT_00419c8c);
  FUN_00408374(local_8,(int *)&local_10);
  FUN_00403c30(puVar1 + 1,local_10);
  *puVar1 = param_4;
  FUN_00403c30(puVar1 + 2,local_c);
  puVar1[3] = param_5;
  FUN_0040f38c(param_1,(int)puVar1);
  *in_FS_OFFSET = uStack_28;
  puStack_20 = &LAB_00419f32;
  puStack_24 = (undefined1 *)0x419f2a;
  FUN_00403bdc((int *)&local_10);
  return;
}



void FUN_00419f3c(undefined4 *param_1,uint *param_2)

{
  int *piVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined1 uVar3;
  undefined4 uStack_124;
  undefined1 *puStack_120;
  undefined1 *puStack_11c;
  byte local_10c [256];
  uint *local_c;
  uint *local_8;
  
  puStack_11c = &stack0xfffffffc;
  local_c = (uint *)0x0;
  puStack_120 = &LAB_00419fba;
  uStack_124 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_124;
  iVar2 = param_1[2] + -1;
  uVar3 = iVar2 == 0;
  local_8 = param_2;
  if (-1 < iVar2) {
    do {
      piVar1 = (int *)FUN_0040f4e8(param_1,iVar2);
      FUN_00402ea0(*piVar1,local_10c);
      FUN_00403e00((int *)&local_c,local_10c);
      FUN_00403f6c(local_c,local_8);
      if ((bool)uVar3) break;
      iVar2 = iVar2 + -1;
      uVar3 = iVar2 == -1;
    } while (!(bool)uVar3);
  }
  *in_FS_OFFSET = uStack_124;
  puStack_11c = &LAB_00419fc1;
  puStack_120 = (undefined1 *)0x419fb9;
  FUN_00403bdc((int *)&local_c);
  return;
}



void FUN_00419fcc(int *param_1,int param_2)

{
  VARIANTARG *pVVar1;
  int *piVar2;
  int iVar3;
  
  iVar3 = param_1[2] + -1;
  if (-1 < iVar3) {
    do {
      pVVar1 = (VARIANTARG *)FUN_0040f4e8(param_1,iVar3);
      piVar2 = thunk_FUN_00403164(*(int *)&pVVar1->n1,param_2);
      if ((char)piVar2 != '\0') {
        FUN_004047c4(pVVar1,PTR_DAT_00419c8c);
        FUN_0040f3d8(param_1,iVar3);
      }
      iVar3 = iVar3 + -1;
    } while (iVar3 != -1);
  }
  return;
}



int * FUN_0041a078(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined2 extraout_var;
  undefined2 extraout_var_00;
  undefined2 extraout_var_01;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  iVar1 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',param_3);
  param_1[1] = iVar1;
  iVar1 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX_00);
  param_1[2] = iVar1;
  FUN_0041a124((int)param_1,CONCAT22(extraout_var,3),(int)PTR_PTR_0041603c);
  FUN_0041a124((int)param_1,CONCAT22(extraout_var_00,0xe),(int)PTR_PTR_0041603c);
  FUN_0041a124((int)param_1,CONCAT22(extraout_var_01,2),(int)PTR_PTR_00416178);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_0041a124(int param_1,uint param_2,int param_3)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  
  puStack_1c = (undefined1 *)0x41a13f;
  FUN_0040f38c(*(int **)(param_1 + 4),param_3);
  puStack_20 = &LAB_0041a168;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  puStack_1c = &stack0xfffffffc;
  FUN_0040f38c(*(int **)(param_1 + 8),param_2 & 0xffff);
  *in_FS_OFFSET = uStack_24;
  return;
}



void FUN_0041a18c(int param_1,int param_2)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  
  iVar3 = *(int *)(*(int *)(param_1 + 4) + 8) + -1;
  if (-1 < iVar3) {
    do {
      iVar1 = FUN_0040f4e8(*(undefined4 **)(param_1 + 4),iVar3);
      piVar2 = thunk_FUN_00403164(iVar1,param_2);
      if ((char)piVar2 != '\0') {
        FUN_0040f3d8(*(int **)(param_1 + 4),iVar3);
        FUN_0040f3d8(*(int **)(param_1 + 8),iVar3);
      }
      iVar3 = iVar3 + -1;
    } while (iVar3 != -1);
  }
  return;
}



int FUN_0041a1d4(void)

{
  if (DAT_004745bc == 0) {
    DAT_004745bc = FUN_00419d28((int *)PTR_PTR_00419cb8,'\x01');
  }
  return DAT_004745bc;
}



int * FUN_0041a1f4(undefined4 param_1,undefined4 param_2,undefined4 param_3)

{
  if (DAT_004745b8 == (int *)0x0) {
    DAT_004745b8 = FUN_0041a078((int *)PTR_DAT_0041a018,'\x01',param_3);
  }
  return DAT_004745b8;
}



int * FUN_0041a214(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00402f24(param_1,'\0',param_3);
  iVar1 = FUN_0041a1d4();
  FUN_0041a1f4(iVar1,extraout_EDX,extraout_ECX_00);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_0041a2b8(int *param_1,int param_2)

{
  int *piVar1;
  int *piVar2;
  int iVar3;
  undefined4 uVar4;
  undefined4 extraout_ECX;
  undefined2 extraout_var;
  undefined2 extraout_var_00;
  
  piVar1 = (int *)param_1[1];
  piVar2 = FUN_004030cc(piVar1,param_2);
  if ((char)piVar2 == '\0') {
    FUN_00402f54(piVar1);
    param_1[1] = 0;
    iVar3 = (**(code **)(param_2 + 0xc))(param_2,1);
    param_1[1] = iVar3;
    *(int **)(iVar3 + 0xc) = param_1;
    uVar4 = FUN_00403148(param_1,CONCAT22(extraout_var,0xfffd));
    *(undefined4 *)(iVar3 + 8) = uVar4;
    *(int **)(iVar3 + 0x14) = param_1;
    uVar4 = FUN_00403148(param_1,CONCAT22(extraout_var_00,0xfffc));
    *(undefined4 *)(iVar3 + 0x10) = uVar4;
    FUN_00403130(param_1,param_1,extraout_ECX);
  }
  return;
}



int FUN_0041a31c(int *param_1)

{
  FUN_0041a2b8(param_1,(int)PTR_PTR_004162b8);
  return param_1[1];
}



void FUN_0041a334(int *param_1,undefined4 *param_2)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined2 extraout_var;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  int *piStack_18;
  int *local_8;
  
  local_8 = (int *)0x0;
  if (param_2 != (undefined4 *)0x0) {
    piStack_18 = (int *)0x41a34f;
    iVar1 = FUN_00402e9c(param_2);
    piStack_18 = (int *)0x41a354;
    local_8 = (int *)(**(code **)(iVar1 + 0xc))(iVar1,1);
    piStack_18 = (int *)0x41a361;
    (**(code **)(*local_8 + 8))(local_8,param_2);
    local_8[3] = (int)param_1;
    puStack_1c = (undefined1 *)0x41a373;
    piStack_18 = local_8;
    iVar1 = FUN_00403148(param_1,CONCAT22(extraout_var,0xfffd));
    piStack_18[2] = iVar1;
    local_8[5] = (int)param_1;
    puStack_1c = (undefined1 *)0x41a38b;
    piStack_18 = local_8;
    iVar1 = FUN_00403148(param_1,CONCAT22((short)((uint)iVar1 >> 0x10),0xfffc));
    piStack_18[4] = iVar1;
  }
  puStack_1c = &LAB_0041a3c4;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  piStack_18 = (int *)&stack0xfffffffc;
  FUN_00402f54((int *)param_1[1]);
  param_1[1] = (int)local_8;
  FUN_00403130(param_1,param_1,extraout_ECX);
  *in_FS_OFFSET = uStack_20;
  return;
}



void FUN_0041a440(undefined4 param_1,undefined *param_2,undefined4 *param_3,undefined4 param_4)

{
  int *piVar1;
  undefined4 uVar2;
  
  uVar2 = 0;
  piVar1 = (int *)FUN_0041a1d4();
  FUN_00419ea8(piVar1,param_2,param_3,param_4,uVar2);
  return;
}



void FUN_0041a464(undefined4 param_1,int param_2)

{
  if (DAT_004745bc != (int *)0x0) {
    FUN_00419fcc(DAT_004745bc,param_2);
  }
  if (DAT_004745b8 != 0) {
    FUN_0041a18c(DAT_004745b8,param_2);
  }
  return;
}



void FUN_0041a494(int param_1)

{
  if (*(short *)(param_1 + 10) != 0) {
    (**(code **)(param_1 + 8))(*(undefined4 *)(param_1 + 0xc),param_1);
  }
  if (*(int *)(param_1 + 0x10) != 0) {
    (**(code **)(**(int **)(param_1 + 0x10) + 0xc))();
  }
  return;
}



bool FUN_0041a654(void)

{
  int *piVar1;
  char cVar2;
  int *piVar3;
  bool bVar4;
  int in_stack_00000004;
  
  piVar1 = *(int **)(*(int *)(in_stack_00000004 + -4) + 0x20);
  if (piVar1 == (int *)0x0) {
    bVar4 = *(int *)(*(int *)(in_stack_00000004 + -8) + 4) != 0;
  }
  else {
    bVar4 = true;
    piVar3 = FUN_004030cc(piVar1,(int)PTR_PTR_00415ed4);
    if ((char)piVar3 != '\0') {
      if ((*(int *)(*(int *)(in_stack_00000004 + -8) + 4) == piVar1[1]) ||
         (((piVar3 = *(int **)(*(int *)(in_stack_00000004 + -8) + 4), piVar3 != (int *)0x0 &&
           (piVar1[1] != 0)) &&
          (cVar2 = (**(code **)(*piVar3 + 0x18))(piVar3,piVar1[1]), cVar2 != '\0')))) {
        bVar4 = false;
      }
      else {
        bVar4 = true;
      }
    }
  }
  return bVar4;
}



void FUN_0041a6d0(undefined4 param_1,int *param_2)

{
  bool bVar1;
  undefined1 *puVar2;
  undefined1 *puVar3;
  undefined4 uVar4;
  
  puVar3 = &LAB_0041a4e0;
  puVar2 = &LAB_0041a5f8;
  uVar4 = param_1;
  bVar1 = FUN_0041a654();
  (**(code **)(*param_2 + 8))(param_2,&DAT_0041a714,bVar1,puVar2,param_1,puVar3,uVar4);
  return;
}



undefined4 FUN_0041a71c(int param_1)

{
  undefined4 uVar1;
  
  uVar1 = 0;
  if (*(int **)(param_1 + 4) != (int *)0x0) {
    uVar1 = (**(code **)(**(int **)(param_1 + 4) + 0x2c))();
  }
  return uVar1;
}



undefined4 FUN_0041a734(int param_1)

{
  undefined4 uVar1;
  
  uVar1 = 0;
  if (*(int **)(param_1 + 4) != (int *)0x0) {
    uVar1 = (**(code **)(**(int **)(param_1 + 4) + 0x20))();
  }
  return uVar1;
}



void FUN_0041a898(int *param_1,int *param_2,LONG *param_3)

{
  HPALETTE pHVar1;
  HDC pHVar2;
  int iVar3;
  HPALETTE pHVar4;
  RECT *pRVar5;
  byte bVar6;
  HENHMETAFILE hmf;
  BOOL BVar7;
  RECT RStack_20;
  
  bVar6 = 0;
  if (param_1[8] != 0) {
    pHVar1 = (HPALETTE)(**(code **)(*param_1 + 0x24))();
    pHVar4 = (HPALETTE)0x0;
    if (pHVar1 != (HPALETTE)0x0) {
      BVar7 = -1;
      pHVar4 = pHVar1;
      pHVar2 = (HDC)FUN_004183d4(param_2);
      pHVar4 = SelectPalette(pHVar2,pHVar4,BVar7);
      pHVar2 = (HDC)FUN_004183d4(param_2);
      RealizePalette(pHVar2);
    }
    pRVar5 = &RStack_20;
    for (iVar3 = 4; iVar3 != 0; iVar3 = iVar3 + -1) {
      pRVar5->left = *param_3;
      param_3 = param_3 + (uint)bVar6 * -2 + 1;
      pRVar5 = (RECT *)((int)pRVar5 + ((uint)bVar6 * -2 + 1) * 4);
    }
    RStack_20.right = RStack_20.right + -1;
    RStack_20.bottom = RStack_20.bottom + -1;
    pRVar5 = &RStack_20;
    hmf = *(HENHMETAFILE *)(param_1[8] + 8);
    pHVar2 = (HDC)FUN_004183d4(param_2);
    PlayEnhMetaFile(pHVar2,hmf,pRVar5);
    if (pHVar1 != (HPALETTE)0x0) {
      BVar7 = -1;
      pHVar2 = (HDC)FUN_004183d4(param_2);
      SelectPalette(pHVar2,pHVar4,BVar7);
    }
  }
  return;
}



void FUN_0041aadc(int param_1)

{
  int iVar1;
  undefined4 extraout_ECX;
  
  FUN_0041b77c(*(int **)(param_1 + 0x20));
  iVar1 = FUN_00402f24((int *)PTR_PTR_00415fdc,'\x01',extraout_ECX);
  *(int *)(param_1 + 0x20) = iVar1;
  FUN_0041b778(iVar1);
  return;
}



void FUN_0041ab04(int *param_1,int *param_2,int param_3)

{
  undefined4 uVar1;
  int iVar2;
  int iStack_10;
  
  iStack_10 = param_3;
  (**(code **)(*param_2 + 4))(param_2,&iStack_10,4);
  if (iStack_10 < 5) {
    (**(code **)(*param_1 + 8))(param_1,0);
  }
  else {
    uVar1 = FUN_0041afcc(param_1,param_2);
    if ((char)uVar1 == '\0') {
      FUN_0041ac40((int)param_1,param_2,iStack_10 + -4);
    }
    else {
      FUN_0041ab70((int)param_1,param_2);
    }
  }
  iVar2 = (**(code **)(*param_1 + 0x24))();
  *(bool *)((int)param_1 + 0x1a) = iVar2 != 0;
  (**(code **)(*param_1 + 0x10))(param_1,param_1);
  return;
}



void FUN_0041ab70(int param_1,int *param_2)

{
  int iVar1;
  HENHMETAFILE pHVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_84;
  undefined1 *puStack_80;
  undefined1 *puStack_7c;
  undefined4 local_6c [6];
  int local_54;
  int local_50;
  int local_4c;
  int local_48;
  int local_44;
  UINT local_3c;
  BYTE *local_8;
  
  puStack_7c = (undefined1 *)0x41ab84;
  FUN_0041aadc(param_1);
  puStack_7c = (undefined1 *)0x41ab93;
  FUN_004115d0(param_2,local_6c,100);
  if (local_44 != 0x464d4520) {
    puStack_7c = (undefined1 *)0x41aba1;
    FUN_004186c4();
  }
  puStack_7c = (undefined1 *)0x41aba9;
  local_8 = (BYTE *)FUN_004026f4(local_3c);
  iVar1 = *(int *)(param_1 + 0x20);
  puStack_80 = &LAB_0041ac30;
  uStack_84 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_84;
  puStack_7c = &stack0xfffffffc;
  FUN_00402920(local_6c,(undefined4 *)local_8,100);
  FUN_004115d0(param_2,local_8 + 100,local_3c - 100);
  pHVar2 = SetEnhMetaFileBits(local_3c,local_8);
  *(HENHMETAFILE *)(iVar1 + 8) = pHVar2;
  if (pHVar2 == (HENHMETAFILE)0x0) {
    FUN_004186c4();
  }
  *(undefined2 *)(iVar1 + 0x18) = 0;
  *(int *)(iVar1 + 0xc) = local_4c - local_54;
  *(int *)(iVar1 + 0x10) = local_48 - local_50;
  *(undefined1 *)(param_1 + 0x24) = 1;
  *in_FS_OFFSET = uStack_84;
  puStack_7c = &LAB_0041ac37;
  puStack_80 = (undefined1 *)0x41ac2f;
  FUN_0040270c((int)local_8);
  return;
}



void FUN_0041ac40(int param_1,int *param_2,int param_3)

{
  int iVar1;
  ushort uVar2;
  int iVar3;
  HENHMETAFILE pHVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_b4;
  undefined1 *puStack_b0;
  undefined1 *puStack_ac;
  undefined1 local_9a [104];
  LONG local_32;
  LONG local_2e;
  undefined4 local_2a;
  int local_26;
  short local_20;
  short local_1e;
  short local_1c;
  short local_1a;
  ushort local_18;
  ushort local_12;
  BYTE *local_10;
  UINT local_c;
  int *local_8;
  
  puStack_ac = (undefined1 *)0x41ac5b;
  local_c = param_3;
  local_8 = param_2;
  FUN_0041aadc(param_1);
  puStack_ac = (undefined1 *)0x41ac6b;
  (**(code **)(*local_8 + 4))(local_8,&local_26,0x16);
  if (local_26 == -0x65393229) {
    puStack_ac = (undefined1 *)0x41ac7c;
    uVar2 = FUN_00419514((ushort *)&local_26);
    if (uVar2 == local_12) goto LAB_0041ac87;
  }
  puStack_ac = (undefined1 *)0x41ac87;
  FUN_004186c4();
LAB_0041ac87:
  local_c = local_c - 0x16;
  puStack_ac = (undefined1 *)0x41ac93;
  local_10 = (BYTE *)FUN_004026f4(local_c);
  iVar1 = *(int *)(param_1 + 0x20);
  puStack_b0 = &LAB_0041adaf;
  uStack_b4 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_b4;
  puStack_ac = &stack0xfffffffc;
  (**(code **)(*local_8 + 4))(local_8,local_10,local_c);
  *(ushort *)(*(int *)(param_1 + 0x20) + 0x18) = local_18;
  if (local_18 == 0) {
    local_18 = 0x60;
  }
  iVar3 = MulDiv((int)local_1c - (int)local_20,0x9ec,(uint)local_18);
  *(int *)(iVar1 + 0xc) = iVar3;
  iVar3 = MulDiv((int)local_1a - (int)local_1e,0x9ec,(uint)local_18);
  *(int *)(iVar1 + 0x10) = iVar3;
  local_9a._100_4_ = 8;
  local_32 = 0;
  local_2e = 0;
  local_2a = 0;
  pHVar4 = SetWinMetaFileBits(local_c,local_10,(HDC)0x0,(METAFILEPICT *)(local_9a + 100));
  *(HENHMETAFILE *)(iVar1 + 8) = pHVar4;
  if (pHVar4 == (HENHMETAFILE)0x0) {
    FUN_004186c4();
  }
  GetEnhMetaFileHeader(*(HENHMETAFILE *)(iVar1 + 8),100,(LPENHMETAHEADER)local_9a);
  local_9a._100_4_ = 8;
  local_32 = local_9a._32_4_;
  local_2e = local_9a._36_4_;
  local_2a = 0;
  DeleteEnhMetaFile(*(HENHMETAFILE *)(iVar1 + 8));
  pHVar4 = SetWinMetaFileBits(local_c,local_10,(HDC)0x0,(METAFILEPICT *)(local_9a + 100));
  *(HENHMETAFILE *)(iVar1 + 8) = pHVar4;
  if (pHVar4 == (HENHMETAFILE)0x0) {
    FUN_004186c4();
  }
  *(undefined1 *)(param_1 + 0x24) = 0;
  *in_FS_OFFSET = uStack_b4;
  puStack_ac = &LAB_0041adb6;
  puStack_b0 = (undefined1 *)0x41adae;
  FUN_0040270c((int)local_10);
  return;
}



void FUN_0041aedc(int *param_1,int param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  
  if (param_1[8] == 0) {
    FUN_0041aadc((int)param_1);
    param_3 = extraout_ECX;
  }
  iVar1 = param_1[8];
  *(undefined4 *)(iVar1 + 0x20) = 0;
  if (param_2 != *(int *)(iVar1 + 0x10)) {
    FUN_0041b02c((int)param_1,0,param_3);
    *(int *)(param_1[8] + 0x10) = param_2;
    (**(code **)(*param_1 + 0x10))(param_1,param_1);
  }
  return;
}



void FUN_0041af18(int *param_1,int param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  
  if (param_1[8] == 0) {
    FUN_0041aadc((int)param_1);
    param_3 = extraout_ECX;
  }
  iVar1 = param_1[8];
  *(undefined4 *)(iVar1 + 0x1c) = 0;
  if (param_2 != *(int *)(iVar1 + 0xc)) {
    FUN_0041b02c((int)param_1,0,param_3);
    *(int *)(param_1[8] + 0xc) = param_2;
    (**(code **)(*param_1 + 0x10))(param_1,param_1);
  }
  return;
}



undefined4 FUN_0041afcc(undefined4 param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  undefined2 extraout_var;
  int local_70 [10];
  int local_48;
  
  iVar1 = FUN_00411598(param_2);
  iVar2 = FUN_0041157c(param_2);
  if (100 < iVar1 - iVar2) {
    (**(code **)(*param_2 + 4))(param_2,local_70,100);
    uVar3 = (**(code **)(*param_2 + 0xc))(param_2,0xffffff9c,CONCAT22(extraout_var,1));
    if ((local_70[0] == 1) && (local_48 == 0x464d4520)) {
      return CONCAT31((int3)((uint)uVar3 >> 8),1);
    }
  }
  return 0;
}



void FUN_0041b02c(int param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  HENHMETAFILE pHVar2;
  
  if (*(int *)(param_1 + 0x20) == 0) {
    FUN_0041aadc(param_1);
  }
  else if (1 < *(int *)(*(int *)(param_1 + 0x20) + 4)) {
    iVar1 = FUN_00402f24((int *)PTR_PTR_00415fdc,'\x01',param_3);
    pHVar2 = *(HENHMETAFILE *)(*(int *)(param_1 + 0x20) + 8);
    if (pHVar2 != (HENHMETAFILE)0x0) {
      pHVar2 = CopyEnhMetaFileA(pHVar2,(LPCSTR)0x0);
      *(HENHMETAFILE *)(iVar1 + 8) = pHVar2;
    }
    *(undefined4 *)(iVar1 + 0x10) = *(undefined4 *)(*(int *)(param_1 + 0x20) + 0x10);
    *(undefined4 *)(iVar1 + 0xc) = *(undefined4 *)(*(int *)(param_1 + 0x20) + 0xc);
    *(undefined2 *)(iVar1 + 0x18) = *(undefined2 *)(*(int *)(param_1 + 0x20) + 0x18);
    *(undefined4 *)(iVar1 + 0x1c) = *(undefined4 *)(*(int *)(param_1 + 0x20) + 0x1c);
    *(undefined4 *)(iVar1 + 0x20) = *(undefined4 *)(*(int *)(param_1 + 0x20) + 0x20);
    FUN_0041b77c(*(int **)(param_1 + 0x20));
    *(int *)(param_1 + 0x20) = iVar1;
    FUN_0041b778(iVar1);
  }
  return;
}



void FUN_0041b0b0(int param_1,int *param_2)

{
  int iVar1;
  undefined2 extraout_var;
  int local_10;
  
  if (*(int *)(param_1 + 0x20) != 0) {
    local_10 = 0;
    (**(code **)(*param_2 + 8))(param_2,&local_10,4);
    local_10 = FUN_0041157c(param_2);
    local_10 = local_10 + -4;
    if (*(char *)(param_1 + 0x24) == '\0') {
      FUN_0041b1c0(param_1,param_2);
    }
    else {
      FUN_0041b134(param_1,param_2);
    }
    (**(code **)(*param_2 + 0xc))(param_2,local_10,0);
    iVar1 = FUN_00411598(param_2);
    local_10 = iVar1 - local_10;
    (**(code **)(*param_2 + 8))(param_2,&local_10,4);
    (**(code **)(*param_2 + 0xc))(param_2,0,CONCAT22(extraout_var,2));
  }
  return;
}



void FUN_0041b134(int param_1,int *param_2)

{
  UINT nSize;
  LPBYTE lpData;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar1;
  
  if (*(int *)(param_1 + 0x20) != 0) {
    nSize = GetEnhMetaFileBits(*(HENHMETAFILE *)(*(int *)(param_1 + 0x20) + 8),0,(LPBYTE)0x0);
    if (nSize != 0) {
      lpData = (LPBYTE)FUN_004026f4(nSize);
      uVar1 = *in_FS_OFFSET;
      *in_FS_OFFSET = &stack0xffffffe0;
      GetEnhMetaFileBits(*(HENHMETAFILE *)(*(int *)(param_1 + 0x20) + 8),nSize,lpData);
      FUN_00411608(param_2,lpData,nSize);
      *in_FS_OFFSET = uVar1;
      FUN_0040270c((int)lpData);
      return;
    }
  }
  return;
}



void FUN_0041b1c0(int param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  UINT UVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar4;
  ushort local_26 [5];
  undefined2 local_1c;
  undefined2 local_1a;
  ushort local_18;
  ushort local_12;
  HDC local_10;
  UINT local_c;
  LPBYTE local_8;
  
  if (*(int *)(param_1 + 0x20) == 0) {
    return;
  }
  FUN_00402c14((undefined4 *)local_26,0x16,0);
  iVar1 = *(int *)(param_1 + 0x20);
  local_26[0] = 0xcdd7;
  local_26[1] = 0x9ac6;
  local_18 = *(ushort *)(iVar1 + 0x18);
  if (local_18 == 0) {
    local_18 = 0x60;
  }
  iVar2 = MulDiv(*(int *)(iVar1 + 0xc),(uint)local_18,0x9ec);
  local_1c = (undefined2)iVar2;
  iVar2 = MulDiv(*(int *)(iVar1 + 0x10),(uint)local_18,0x9ec);
  local_1a = (undefined2)iVar2;
  local_12 = FUN_00419514(local_26);
  local_10 = GetDC((HWND)0x0);
  *in_FS_OFFSET = &stack0xffffffc4;
  local_c = GetWinMetaFileBits(*(HENHMETAFILE *)(iVar1 + 8),0,(LPBYTE)0x0,8,local_10);
  local_8 = (LPBYTE)FUN_004026f4(local_c);
  uVar4 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffffb8;
  UVar3 = GetWinMetaFileBits(*(HENHMETAFILE *)(iVar1 + 8),local_c,local_8,8,local_10);
  if (UVar3 < local_c) {
    FUN_00418724();
  }
  FUN_00411608(param_2,local_26,0x16);
  FUN_00411608(param_2,local_8,local_c);
  *in_FS_OFFSET = uVar4;
  FUN_0040270c((int)local_8);
  return;
}



void FUN_0041b308(int *param_1)

{
  HENHMETAFILE pHVar1;
  int iVar2;
  int local_50;
  int local_4c;
  int local_48;
  int local_44;
  
  pHVar1 = (HENHMETAFILE)GetClipboardData(0xe);
  if (pHVar1 == (HENHMETAFILE)0x0) {
    FUN_00418694((undefined4 *)PTR_PTR_004757c8);
  }
  FUN_0041aadc((int)param_1);
  iVar2 = param_1[8];
  pHVar1 = CopyEnhMetaFileA(pHVar1,(LPCSTR)0x0);
  *(HENHMETAFILE *)(iVar2 + 8) = pHVar1;
  GetEnhMetaFileHeader(*(HENHMETAFILE *)(iVar2 + 8),100,(LPENHMETAHEADER)&stack0xffffff98);
  *(int *)(iVar2 + 0xc) = local_48 - local_50;
  *(int *)(iVar2 + 0x10) = local_44 - local_4c;
  *(undefined2 *)(iVar2 + 0x18) = 0;
  *(undefined1 *)(param_1 + 9) = 1;
  iVar2 = (**(code **)(*param_1 + 0x24))();
  *(bool *)((int)param_1 + 0x1a) = iVar2 != 0;
  (**(code **)(*param_1 + 0x10))(param_1,param_1);
  return;
}



void FUN_0041b38c(int param_1,undefined2 *param_2,undefined4 *param_3,undefined4 *param_4)

{
  int iVar1;
  HENHMETAFILE pHVar2;
  
  iVar1 = *(int *)(param_1 + 0x20);
  if (iVar1 != 0) {
    *param_2 = 0xe;
    *param_4 = 0;
    pHVar2 = CopyEnhMetaFileA(*(HENHMETAFILE *)(iVar1 + 8),(LPCSTR)0x0);
    *param_3 = pHVar2;
  }
  return;
}



void FUN_0041b45c(void)

{
  int iVar1;
  char cVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  int *local_10;
  undefined4 *local_c;
  int local_8;
  
  puStack_14 = (undefined1 *)0x41b46c;
  local_c = (undefined4 *)FUN_0040f8a8(DAT_004745c0);
  puStack_18 = &LAB_0041b4fa;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  puStack_14 = &stack0xfffffffc;
  iVar1 = local_c[2] + -1;
  if (-1 < local_c[2] + -1) {
    do {
      local_8 = iVar1;
      puStack_20 = (undefined1 *)0x41b497;
      local_10 = (int *)FUN_0040f4e8(local_c,local_8);
      puStack_20 = (undefined1 *)0x41b4a2;
      cVar2 = FUN_00418270((int)local_10);
      if (cVar2 != '\0') {
        puStack_24 = &LAB_0041b4d2;
        uStack_28 = *in_FS_OFFSET;
        *in_FS_OFFSET = &uStack_28;
        puStack_20 = &stack0xfffffffc;
        FUN_0041b5ec(local_10);
        *in_FS_OFFSET = uStack_28;
        puStack_20 = (undefined1 *)0x41b4d9;
        puStack_24 = (undefined1 *)0x41b4d1;
        FUN_004182cc((int)local_10);
        return;
      }
      local_8 = local_8 + -1;
      iVar1 = local_8;
    } while (local_8 != -1);
  }
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_0041b501;
  puStack_18 = (undefined1 *)0x41b4f9;
  FUN_0040f90c(DAT_004745c0);
  return;
}



void FUN_0041b508(int param_1)

{
  undefined4 *puVar1;
  int *piVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  if (param_1 != 0) {
    puStack_14 = (undefined1 *)0x41b521;
    puVar1 = (undefined4 *)FUN_0040f8a8(DAT_004745c0);
    puStack_18 = &LAB_0041b578;
    uStack_1c = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_1c;
    iVar3 = puVar1[2] + -1;
    puStack_14 = &stack0xfffffffc;
    if (-1 < iVar3) {
      do {
        piVar2 = (int *)FUN_0040f4e8(puVar1,iVar3);
        if ((piVar2[0x16] != 0) && (*(int *)(*(int *)(piVar2[0x16] + 0x20) + 8) == param_1)) {
          FUN_0041b5ec(piVar2);
        }
        iVar3 = iVar3 + -1;
      } while (iVar3 != -1);
    }
    *in_FS_OFFSET = uStack_1c;
    puStack_14 = (undefined1 *)0x41b57f;
    puStack_18 = (undefined1 *)0x41b577;
    FUN_0040f90c(DAT_004745c0);
    return;
  }
  return;
}



int * FUN_0041b584(int *param_1,char param_2,int param_3)

{
  int extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00417954(param_1,'\0',param_3);
  param_1[0x16] = param_3;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_0041b5ec(int *param_1)

{
  HDC hdc;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  
  if (param_1[1] != 0) {
    puStack_10 = (undefined1 *)0x41b609;
    FUN_00417f24((int)param_1);
    puStack_14 = &LAB_0041b680;
    uStack_18 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_18;
    puStack_10 = &stack0xfffffffc;
    if ((HGDIOBJ)param_1[0x17] != (HGDIOBJ)0x0) {
      puStack_10 = &stack0xfffffffc;
      SelectObject((HDC)param_1[1],(HGDIOBJ)param_1[0x17]);
    }
    if ((HPALETTE)param_1[0x18] != (HPALETTE)0x0) {
      SelectPalette((HDC)param_1[1],(HPALETTE)param_1[0x18],-1);
    }
    hdc = (HDC)param_1[1];
    FUN_00418454(param_1,0);
    DeleteDC(hdc);
    FUN_0040f8bc(DAT_004745c0,(int)param_1);
    *in_FS_OFFSET = uStack_18;
    puStack_10 = (undefined1 *)0x41b687;
    puStack_14 = (undefined1 *)0x41b67f;
    FUN_004182cc((int)param_1);
    return;
  }
  return;
}



void FUN_0041b68c(int *param_1)

{
  HDC hdc;
  HGDIOBJ pvVar1;
  HPALETTE pHVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  if (param_1[0x16] != 0) {
    puStack_14 = (undefined1 *)0x41b6aa;
    FUN_00417f24((int)param_1);
    puStack_18 = &LAB_0041b76b;
    uStack_1c = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_1c;
    puStack_14 = &stack0xfffffffc;
    FUN_0041ca28(param_1[0x16]);
    FUN_0041b508(*(int *)(*(int *)(param_1[0x16] + 0x20) + 8));
    FUN_0041cb78(param_1[0x16]);
    hdc = CreateCompatibleDC((HDC)0x0);
    pvVar1 = *(HGDIOBJ *)(*(int *)(param_1[0x16] + 0x20) + 8);
    if (pvVar1 == (HGDIOBJ)0x0) {
      param_1[0x17] = 0;
    }
    else {
      pvVar1 = SelectObject(hdc,pvVar1);
      param_1[0x17] = (int)pvVar1;
    }
    pHVar2 = *(HPALETTE *)(*(int *)(param_1[0x16] + 0x20) + 0x10);
    if (pHVar2 == (HPALETTE)0x0) {
      param_1[0x18] = 0;
    }
    else {
      pHVar2 = SelectPalette(hdc,pHVar2,-1);
      param_1[0x18] = (int)pHVar2;
      RealizePalette(hdc);
    }
    FUN_00418454(param_1,(int)hdc);
    FUN_0040f820(DAT_004745c0,(int)param_1);
    *in_FS_OFFSET = uStack_1c;
    puStack_14 = (undefined1 *)0x41b772;
    puStack_18 = (undefined1 *)0x41b76a;
    FUN_004182cc((int)param_1);
    return;
  }
  return;
}



void FUN_0041b778(int param_1)

{
  *(int *)(param_1 + 4) = *(int *)(param_1 + 4) + 1;
  return;
}



void FUN_0041b77c(int *param_1)

{
  if ((param_1 != (int *)0x0) && (param_1[1] = param_1[1] + -1, param_1[1] == 0)) {
    (**(code **)*param_1)();
    FUN_00402f54(param_1);
  }
  return;
}



void FUN_0041b844(HGDIOBJ param_1,HPALETTE param_2,int param_3)

{
  UINT cEntries;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar1;
  tagPALETTEENTRY local_414 [256];
  HGDIOBJ local_14;
  HDC local_10;
  HDC local_c;
  HPALETTE local_8;
  
  if ((param_1 != (HGDIOBJ)0x0) && (*(ushort *)(param_3 + 0x26) < 9)) {
    local_8 = param_2;
    cEntries = FUN_00418f60(param_2,local_414,0xff);
    if (cEntries != 0) {
      local_c = GetDC((HWND)0x0);
      local_10 = CreateCompatibleDC(local_c);
      local_14 = SelectObject(local_10,param_1);
      uVar1 = *in_FS_OFFSET;
      *in_FS_OFFSET = &stack0xfffffbd8;
      SetDIBColorTable(local_10,0,cEntries,(RGBQUAD *)local_414);
      *in_FS_OFFSET = uVar1;
      SelectObject(local_10,local_14);
      DeleteDC(local_10);
      ReleaseDC((HWND)0x0,local_c);
      return;
    }
  }
  return;
}



void FUN_0041b900(int param_1)

{
  if (((*(byte *)(param_1 + 0x28) & 3) != 0) && (*(int *)(param_1 + 0x40) == 0)) {
    if (*(short *)(param_1 + 0x26) == 0x10) {
      *(undefined4 *)(param_1 + 0x40) = 0xf800;
      *(undefined4 *)(param_1 + 0x44) = 0x7e0;
      *(undefined4 *)(param_1 + 0x48) = 0x1f;
    }
    else if (*(short *)(param_1 + 0x26) == 0x20) {
      *(undefined4 *)(param_1 + 0x40) = 0xff0000;
      *(undefined4 *)(param_1 + 0x44) = 0xff00;
      *(undefined4 *)(param_1 + 0x48) = 0xff;
    }
  }
  return;
}



HPALETTE FUN_0041b94c(HBITMAP param_1,HPALETTE param_2,HPALETTE param_3,int param_4,int param_5)

{
  int iVar1;
  HDC pHVar2;
  HBITMAP pHVar3;
  int iVar4;
  UINT UVar5;
  HGDIOBJ pvVar6;
  HBRUSH hbr;
  COLORREF CVar7;
  uint uVar8;
  HPALETTE pHVar9;
  DWORD *pDVar10;
  LPBITMAPINFO ptVar11;
  undefined4 *in_FS_OFFSET;
  byte bVar12;
  undefined4 uVar13;
  RECT local_9c;
  undefined1 local_8c [4];
  int local_88;
  int local_84;
  int local_78;
  int local_74;
  HPALETTE local_38;
  RGBQUAD local_34;
  undefined4 local_30;
  LPVOID local_2c;
  LPBITMAPINFO local_28;
  HDC local_24;
  HDC local_20;
  HDC local_1c;
  HGDIOBJ local_18;
  HPALETTE local_14;
  HPALETTE local_10;
  HPALETTE local_c;
  HBITMAP local_8;
  
  bVar12 = 0;
  local_14 = (HPALETTE)0x0;
  if (((*(int *)(param_5 + 0x18) == 0) ||
      ((*(int *)(param_5 + 0x1c) != 0 && (*(int *)(param_5 + 0x20) != 0)))) &&
     ((*(int *)(param_5 + 0x18) != 0 ||
      ((*(int *)(param_5 + 4) != 0 && (*(int *)(param_5 + 8) != 0)))))) {
    local_10 = param_3;
    local_c = param_2;
    local_8 = param_1;
    FUN_0041b508((int)param_1);
    local_74 = 0;
    if (local_8 != (HBITMAP)0x0) {
      iVar1 = GetObjectA(local_8,0x54,local_8c);
      if (iVar1 < 0x18) {
        FUN_004186ac();
      }
    }
    pHVar2 = GetDC((HWND)0x0);
    local_1c = (HDC)FUN_004187cc((int)pHVar2);
    pHVar2 = CreateCompatibleDC(local_1c);
    local_20 = (HDC)FUN_004187cc((int)pHVar2);
    *in_FS_OFFSET = &stack0xffffff4c;
    if (*(uint *)(param_5 + 0x18) < 0x28) {
      if ((*(ushort *)(param_5 + 0x10) | *(ushort *)(param_5 + 0x12)) == 1) {
        pHVar3 = CreateBitmap(*(int *)(param_5 + 4),*(int *)(param_5 + 8),1,1,(void *)0x0);
        local_14 = (HPALETTE)FUN_004187cc((int)pHVar3);
      }
      else {
        pHVar3 = CreateCompatibleBitmap(local_1c,*(int *)(param_5 + 4),*(int *)(param_5 + 8));
        local_14 = (HPALETTE)FUN_004187cc((int)pHVar3);
      }
      FUN_004187cc((int)local_14);
      pvVar6 = SelectObject(local_20,local_14);
      local_18 = (HGDIOBJ)FUN_004187cc((int)pvVar6);
      *in_FS_OFFSET = &stack0xffffff40;
      *in_FS_OFFSET = &stack0xffffff34;
      local_38 = (HPALETTE)0x0;
      pHVar9 = (HPALETTE)0x0;
      if (local_10 != (HPALETTE)0x0) {
        local_38 = SelectPalette(local_20,local_10,0);
        RealizePalette(local_20);
      }
      uVar13 = *in_FS_OFFSET;
      *in_FS_OFFSET = &stack0xffffff28;
      if (param_4 == 0) {
        PatBlt(local_20,0,0,*(int *)(param_5 + 4),*(int *)(param_5 + 8),0xff0062);
      }
      else {
        hbr = (HBRUSH)FUN_00417838(*(int *)(param_4 + 0x14));
        FUN_0040ea70(0,0,*(undefined4 *)(param_5 + 4),&local_9c.left,*(undefined4 *)(param_5 + 8));
        FillRect(local_20,&local_9c,hbr);
        CVar7 = FUN_00416b74(*(uint *)(*(int *)(param_4 + 0xc) + 0x18));
        SetTextColor(local_20,CVar7);
        uVar8 = FUN_004177fc(*(int *)(param_4 + 0x14));
        CVar7 = FUN_00416b74(uVar8);
        SetBkColor(local_20,CVar7);
        if ((*(short *)(param_5 + 0x26) == 1) && (*(int *)(param_5 + 0x14) != 0)) {
          local_34 = (RGBQUAD)FUN_00416b74(*(uint *)(*(int *)(param_4 + 0xc) + 0x18));
          uVar8 = FUN_004177fc(*(int *)(param_4 + 0x14));
          local_30 = FUN_00416b74(uVar8);
          SetDIBColorTable(local_20,0,2,&local_34);
        }
      }
      if (local_8 != (HBITMAP)0x0) {
        pHVar2 = CreateCompatibleDC(local_1c);
        local_24 = (HDC)FUN_004187cc((int)pHVar2);
        uVar13 = *in_FS_OFFSET;
        *in_FS_OFFSET = &stack0xffffff1c;
        pvVar6 = SelectObject(local_24,local_8);
        pvVar6 = (HGDIOBJ)FUN_004187cc((int)pvVar6);
        if (local_c != (HPALETTE)0x0) {
          pHVar9 = SelectPalette(local_24,local_c,0);
          RealizePalette(local_24);
        }
        if (param_4 != 0) {
          CVar7 = FUN_00416b74(*(uint *)(*(int *)(param_4 + 0xc) + 0x18));
          SetTextColor(local_24,CVar7);
          uVar8 = FUN_004177fc(*(int *)(param_4 + 0x14));
          CVar7 = FUN_00416b74(uVar8);
          SetBkColor(local_24,CVar7);
        }
        BitBlt(local_20,0,0,*(int *)(param_5 + 4),*(int *)(param_5 + 8),local_24,0,0,0xcc0020);
        if (local_c != (HPALETTE)0x0) {
          SelectPalette(local_24,pHVar9,-1);
        }
        pvVar6 = SelectObject(local_24,pvVar6);
        FUN_004187cc((int)pvVar6);
        *in_FS_OFFSET = uVar13;
        pHVar9 = (HPALETTE)DeleteDC(local_24);
        return pHVar9;
      }
      pHVar9 = (HPALETTE)0x0;
      *in_FS_OFFSET = uVar13;
      if (local_10 != (HPALETTE)0x0) {
        pHVar9 = SelectPalette(local_20,local_38,-1);
      }
      return pHVar9;
    }
    local_28 = (LPBITMAPINFO)FUN_004026f4(0x42c);
    uVar13 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffff40;
    *(undefined4 *)(param_5 + 0x18) = 0x28;
    *(undefined2 *)(param_5 + 0x24) = 1;
    if (*(short *)(param_5 + 0x26) == 0) {
      iVar1 = GetDeviceCaps(local_1c,0xc);
      iVar4 = GetDeviceCaps(local_1c,0xe);
      *(short *)(param_5 + 0x26) = (short)iVar1 * (short)iVar4;
    }
    pDVar10 = (DWORD *)(param_5 + 0x18);
    ptVar11 = local_28;
    for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {
      (ptVar11->bmiHeader).biSize = *pDVar10;
      pDVar10 = pDVar10 + (uint)bVar12 * -2 + 1;
      ptVar11 = (LPBITMAPINFO)((int)ptVar11 + (uint)bVar12 * -8 + 4);
    }
    *(undefined4 *)(param_5 + 4) = *(undefined4 *)(param_5 + 0x1c);
    *(undefined4 *)(param_5 + 8) = *(undefined4 *)(param_5 + 0x20);
    if (*(ushort *)(param_5 + 0x26) < 9) {
      if ((*(short *)(param_5 + 0x26) == 1) && (local_78 == 0)) {
        local_28->bmiColors[0].rgbBlue = '\0';
        local_28->bmiColors[0].rgbGreen = '\0';
        local_28->bmiColors[0].rgbRed = '\0';
        local_28->bmiColors[0].rgbReserved = '\0';
        local_28[1].bmiHeader.biSize = 0xffffff;
      }
      else if (local_10 == (HPALETTE)0x0) {
        if (local_8 != (HBITMAP)0x0) {
          local_18 = SelectObject(local_20,local_8);
          if ((local_74 == 0) || (local_78 == 0)) {
            uVar8 = (int)*(uint *)(param_5 + 0x20) >> 0x1f;
            GetDIBits(local_20,local_8,0,(*(uint *)(param_5 + 0x20) ^ uVar8) - uVar8,(LPVOID)0x0,
                      local_28,0);
          }
          else {
            UVar5 = GetDIBColorTable(local_20,0,0x100,local_28->bmiColors);
            *(UINT *)(param_5 + 0x38) = UVar5;
          }
          SelectObject(local_20,local_18);
        }
      }
      else {
        FUN_00418f60(local_10,(LPPALETTEENTRY)local_28->bmiColors,0xff);
      }
    }
    else if (((*(short *)(param_5 + 0x26) == 0x10) || (*(short *)(param_5 + 0x26) == 0x20)) &&
            ((*(byte *)(param_5 + 0x28) & 3) != 0)) {
      FUN_0041b900(param_5);
      FUN_00402920((undefined4 *)(param_5 + 0x40),local_28->bmiColors,0xc);
    }
    pHVar3 = CreateDIBSection(local_1c,local_28,0,&local_2c,(HANDLE)0x0,0);
    local_14 = (HPALETTE)FUN_004187cc((int)pHVar3);
    if (local_2c == (LPVOID)0x0) {
      FUN_00418724();
    }
    if ((((local_8 == (HBITMAP)0x0) || (*(int *)(param_5 + 0x1c) != local_88)) ||
        (*(int *)(param_5 + 0x20) != local_84)) || (*(ushort *)(param_5 + 0x26) < 9)) {
      *in_FS_OFFSET = uVar13;
      pHVar9 = (HPALETTE)FUN_0040270c((int)local_28);
      return pHVar9;
    }
    uVar8 = (int)*(uint *)(param_5 + 0x20) >> 0x1f;
    GetDIBits(local_20,local_8,0,(*(uint *)(param_5 + 0x20) ^ uVar8) - uVar8,local_2c,local_28,0);
    FUN_0040374c();
    FUN_0040374c();
  }
  return local_14;
}



HPALETTE FUN_0041bfa8(HPALETTE param_1)

{
  int iVar1;
  HPALETTE pHVar2;
  UINT local_410;
  LOGPALETTE local_40c [128];
  
  pHVar2 = (HPALETTE)0x0;
  if (param_1 != (HPALETTE)0x0) {
    local_410 = 0;
    iVar1 = GetObjectA(param_1,4,&local_410);
    if ((iVar1 != 0) && (local_410 != 0)) {
      local_40c[0].palVersion = 0x300;
      local_40c[0].palNumEntries = (WORD)local_410;
      GetPaletteEntries(param_1,0,local_410,local_40c[0].palPalEntry);
      pHVar2 = CreatePalette(local_40c);
    }
  }
  return pHVar2;
}



BOOL FUN_0041c00c(HPALETTE param_1,HPALETTE param_2,COLORREF param_3)

{
  int iVar1;
  HDC pHVar2;
  COLORREF color;
  BOOL BVar3;
  int *in_FS_OFFSET;
  int iVar4;
  undefined1 local_74 [4];
  int local_70;
  int local_6c;
  int local_60;
  undefined4 local_5c;
  HGDIOBJ local_20;
  HGDIOBJ local_1c;
  char local_15;
  HDC local_14;
  HDC local_10;
  HDC local_c;
  HBITMAP local_8;
  
  local_8 = (HBITMAP)0x0;
  if (param_1 != (HPALETTE)0x0) {
    iVar1 = GetObjectA(param_1,0x54,local_74);
    if (iVar1 != 0) {
      FUN_0041b508((int)param_1);
      local_c = (HDC)0x0;
      local_14 = (HDC)0x0;
      iVar1 = *in_FS_OFFSET;
      *in_FS_OFFSET = (int)&stack0xffffff74;
      pHVar2 = GetDC((HWND)0x0);
      local_c = (HDC)FUN_004187cc((int)pHVar2);
      pHVar2 = CreateCompatibleDC(local_c);
      local_14 = (HDC)FUN_004187cc((int)pHVar2);
      iVar4 = local_70;
      local_8 = CreateBitmap(local_70,local_6c,1,1,(void *)0x0);
      if (local_8 != (HBITMAP)0x0) {
        local_20 = SelectObject(local_14,local_8);
        if (param_3 != 0x1fffffff) {
          pHVar2 = CreateCompatibleDC(local_c);
          local_10 = (HDC)FUN_004187cc((int)pHVar2);
          *in_FS_OFFSET = (int)&stack0xffffff68;
          if (local_60 == 0) {
            local_15 = '\0';
          }
          else {
            local_15 = '\x01';
            local_5c = 0;
            iVar4 = 0;
            param_1 = FUN_0041b94c((HBITMAP)param_1,param_2,param_2,0,(int)local_74);
          }
          local_1c = SelectObject(local_10,param_1);
          if (param_2 != (HPALETTE)0x0) {
            SelectPalette(local_10,param_2,0);
            RealizePalette(local_10);
            SelectPalette(local_14,param_2,0);
            RealizePalette(local_14);
          }
          color = SetBkColor(local_10,param_3);
          BitBlt(local_14,0,0,local_70,local_6c,local_10,0,0,0xcc0020);
          SetBkColor(local_10,color);
          if (local_1c != (HGDIOBJ)0x0) {
            SelectObject(local_10,local_1c);
          }
          if (local_15 != '\0') {
            DeleteObject(param_1);
          }
          *in_FS_OFFSET = iVar4;
          BVar3 = DeleteDC(local_10);
          return BVar3;
        }
        PatBlt(local_14,0,0,local_70,local_6c,0x42);
        if (local_20 != (HGDIOBJ)0x0) {
          SelectObject(local_14,local_20);
        }
      }
      BVar3 = 0;
      *in_FS_OFFSET = iVar1;
      if (local_14 != (HDC)0x0) {
        BVar3 = DeleteDC(local_14);
      }
      if (local_c != (HDC)0x0) {
        BVar3 = ReleaseDC((HWND)0x0,local_c);
      }
      return BVar3;
    }
  }
  return (BOOL)local_8;
}



int * FUN_0041c218(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0041994c(param_1,'\0',param_3);
  param_1[0xb] = 0x20000000;
  iVar1 = FUN_00402f24((int *)PTR_PTR_00416118,'\x01',extraout_ECX_00);
  param_1[8] = iVar1;
  FUN_0041b778(iVar1);
  if (DAT_00474384 != '\0') {
    (**(code **)(*param_1 + 0x68))(param_1,1);
  }
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_0041c2bc(int *param_1,int *param_2)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffff84;
  undefined4 uStack_70;
  undefined1 *puStack_6c;
  undefined4 local_5c [21];
  int *local_8;
  
  local_8 = param_1;
  if (param_2 != (int *)0x0) {
    piVar1 = FUN_004030cc(param_2,(int)PTR_PTR_00416178);
    if ((char)piVar1 == '\0') {
      FUN_0040faf8(local_8,param_2);
      return;
    }
  }
  puStack_6c = (undefined1 *)0x41c2ec;
  EnterCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476668);
  puStack_6c = &LAB_0041c374;
  uStack_70 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_70;
  if (param_2 == (int *)0x0) {
    FUN_00402c14(local_5c,0x54,0);
    in_stack_ffffff84 = 0;
    FUN_0041cd38((int)local_8,0,0,(int *)0x0,0,local_5c);
  }
  else {
    FUN_0041b778(param_2[8]);
    FUN_0041b77c((int *)local_8[8]);
    local_8[8] = param_2[8];
    *(undefined1 *)((int)local_8 + 0x19) = *(undefined1 *)((int)param_2 + 0x19);
    local_8[0xb] = param_2[0xb];
    *(char *)(local_8 + 0xc) = (char)param_2[0xc];
  }
  *in_FS_OFFSET = in_stack_ffffff84;
  LeaveCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476668);
  return;
}



void FUN_0041c3ac(int param_1,HBITMAP param_2,HPALETTE param_3,undefined4 *param_4)

{
  HPALETTE pHVar1;
  int iVar2;
  undefined4 *puVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar4;
  undefined4 uStack_78;
  undefined1 *puStack_74;
  undefined1 *puStack_70;
  undefined4 local_60 [21];
  HPALETTE local_c;
  HPALETTE local_8;
  
  puVar3 = local_60;
  for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {
    *puVar3 = *param_4;
    param_4 = param_4 + 1;
    puVar3 = puVar3 + 1;
  }
  puStack_70 = (undefined1 *)0x41c3d1;
  FUN_0041ca18(param_1);
  local_8 = (HPALETTE)0x0;
  local_c = (HPALETTE)0x0;
  puStack_74 = &LAB_0041c43b;
  uStack_78 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_78;
  puStack_70 = &stack0xfffffffc;
  pHVar1 = param_3;
  if (param_3 != DAT_0047664c) {
    puStack_70 = &stack0xfffffffc;
    pHVar1 = FUN_0041bfa8(param_3);
  }
  local_c = pHVar1;
  local_8 = FUN_0041b94c(param_2,param_3,local_c,*(int *)(param_1 + 0x24),(int)local_60);
  uVar4 = 0;
  FUN_0041cd38(param_1,local_8,local_c,(int *)0x0,*(undefined1 *)(*(int *)(param_1 + 0x20) + 0x70),
               local_60);
  *in_FS_OFFSET = uVar4;
  return;
}



void FUN_0041c46c(int param_1)

{
  int iVar1;
  
  FUN_0041c708(param_1);
  iVar1 = *(int *)(param_1 + 0x20);
  *(undefined4 *)(iVar1 + 0x50) = 0;
  *(undefined4 *)(iVar1 + 0x54) = 0;
  FUN_0040bebc((undefined4 *)(iVar1 + 0x6c));
  return;
}



void FUN_0041c49c(int param_1)

{
  FUN_0041ca18(param_1);
  FUN_0041c9a4(param_1);
  (**(code **)**(undefined4 **)(param_1 + 0x20))();
  return;
}



void FUN_0041c708(int param_1)

{
  int iVar1;
  HPALETTE pHVar2;
  BOOL BVar3;
  
  iVar1 = *(int *)(param_1 + 0x20);
  if (1 < *(int *)(iVar1 + 4)) {
    FUN_0041ca28(param_1);
    if (*(char *)(iVar1 + 0x71) == '\0') {
      pHVar2 = *(HPALETTE *)(iVar1 + 0x10);
    }
    else {
      pHVar2 = (HPALETTE)0x0;
    }
    FUN_0041c3ac(param_1,*(HBITMAP *)(iVar1 + 8),pHVar2,(undefined4 *)(iVar1 + 0x18));
    return;
  }
  if ((*(int *)(iVar1 + 8) != 0) && (*(int *)(iVar1 + 8) != *(int *)(iVar1 + 0x14))) {
    if (*(HGDIOBJ *)(iVar1 + 0x14) != (HGDIOBJ)0x0) {
      BVar3 = DeleteObject(*(HGDIOBJ *)(iVar1 + 0x14));
      if (BVar3 == 0) {
        FUN_00418724();
      }
    }
    *(undefined4 *)(iVar1 + 0x14) = 0;
    *(undefined4 *)(iVar1 + 0x2c) = 0;
  }
  return;
}



int FUN_0041c784(int *param_1)

{
  int *piVar1;
  
  if (param_1[9] == 0) {
    FUN_0041ca28((int)param_1);
    piVar1 = FUN_0041b584((int *)PTR_PTR_0041b3c0,'\x01',(int)param_1);
    param_1[9] = (int)piVar1;
    piVar1[0xb] = (int)param_1;
    piVar1[10] = *(int *)(*param_1 + 0x10);
    piVar1[0xd] = (int)param_1;
    piVar1[0xc] = (int)FUN_0041c46c;
  }
  return param_1[9];
}



undefined4 FUN_0041c7c4(int param_1)

{
  FUN_0041ca18(param_1);
  FUN_0041ca28(param_1);
  FUN_0041c46c(param_1);
  return *(undefined4 *)(*(int *)(param_1 + 0x20) + 8);
}



undefined4 FUN_0041c7e8(int param_1)

{
  int iVar1;
  undefined3 uVar3;
  undefined4 uVar2;
  
  iVar1 = *(int *)(param_1 + 0x20);
  uVar3 = (undefined3)((uint)iVar1 >> 8);
  if ((*(int *)(iVar1 + 8) == 0) || (*(int *)(iVar1 + 8) == *(int *)(iVar1 + 0x14))) {
    if (*(int *)(iVar1 + 0x14) != 0) {
      return 0;
    }
    if (*(int *)(iVar1 + 0x30) == 0) {
      uVar2 = CONCAT31(uVar3,1);
    }
    else {
      uVar2 = 0;
    }
  }
  else {
    uVar2 = CONCAT31(uVar3,1);
  }
  return uVar2;
}



undefined4 FUN_0041c838(int param_1)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x20);
  if ((*(short *)(iVar1 + 0x28) == 1) && (*(short *)(iVar1 + 0x2a) == 1)) {
    return CONCAT31((int3)((uint)(iVar1 + 0x18) >> 8),1);
  }
  return 0;
}



undefined4 FUN_0041c868(int param_1)

{
  ushort uVar1;
  int iVar2;
  undefined4 uVar3;
  undefined4 unaff_EBX;
  undefined3 uVar5;
  undefined4 uVar4;
  
  uVar5 = (undefined3)((uint)unaff_EBX >> 8);
  uVar4 = CONCAT31(uVar5,8);
  uVar3 = FUN_0041c7e8(param_1);
  if ((char)uVar3 == '\x01') {
    uVar4 = 0;
  }
  else {
    iVar2 = *(int *)(param_1 + 0x20);
    uVar1 = *(ushort *)(iVar2 + 0x3e);
    if (uVar1 < 0x11) {
      if (uVar1 == 0x10) {
        if (*(int *)(iVar2 + 0x40) == 0) {
          uVar4 = CONCAT31(uVar5,4);
        }
        else if ((*(int *)(iVar2 + 0x40) == 3) && (*(int *)(iVar2 + 0x5c) == 0x7e0)) {
          uVar4 = CONCAT31(uVar5,5);
        }
      }
      else if (uVar1 == 1) {
        uVar4 = CONCAT31(uVar5,1);
      }
      else if (uVar1 == 4) {
        uVar4 = CONCAT31(uVar5,2);
      }
      else if (uVar1 == 8) {
        uVar4 = CONCAT31(uVar5,3);
      }
    }
    else if (uVar1 == 0x18) {
      uVar4 = CONCAT31(uVar5,6);
    }
    else if ((uVar1 == 0x20) && (*(int *)(iVar2 + 0x40) == 0)) {
      uVar4 = CONCAT31(uVar5,7);
    }
  }
  return uVar4;
}



int FUN_0041c8ec(int param_1,int param_2)

{
  int iVar1;
  int iVar2;
  
  FUN_0041c46c(param_1);
  iVar1 = *(int *)(param_1 + 0x20);
  if ((param_2 < 0) || (*(int *)(iVar1 + 0x20) < param_2)) {
    FUN_0041867c((undefined4 *)PTR_PTR_00475818);
  }
  FUN_0041c9a4(param_1);
  GdiFlush();
  if (0 < *(int *)(iVar1 + 0x38)) {
    param_2 = (*(int *)(iVar1 + 0x38) - param_2) + -1;
  }
  iVar2 = FUN_0041895c(*(int *)(iVar1 + 0x34),(uint)*(ushort *)(iVar1 + 0x3e),0x20);
  return iVar2 * param_2 + *(int *)(iVar1 + 0x2c);
}



uint FUN_0041c954(int *param_1)

{
  undefined4 uVar1;
  uint uVar2;
  int iVar3;
  int *piVar4;
  
  if (param_1[0xb] == 0x20000000) {
    uVar1 = FUN_0041c838((int)param_1);
    if ((char)uVar1 == '\0') {
      iVar3 = (**(code **)(*param_1 + 0x20))();
      piVar4 = (int *)FUN_0041c784(param_1);
      uVar2 = FUN_00418360(piVar4,0,iVar3 + -1);
    }
    else {
      uVar2 = 0xffffff;
    }
  }
  else {
    uVar2 = FUN_00416b74(param_1[0xb]);
  }
  return uVar2 | 0x2000000;
}



void FUN_0041c9a4(int param_1)

{
  int iVar1;
  HPALETTE pHVar2;
  
  iVar1 = *(int *)(param_1 + 0x20);
  if ((*(int *)(iVar1 + 8) != 0) && (*(int *)(iVar1 + 0x14) == 0)) {
    FUN_0041cb78(param_1);
    if (*(int *)(iVar1 + 0x30) == 0) {
      GetObjectA(*(HANDLE *)(iVar1 + 8),0x54,(LPVOID)(iVar1 + 0x18));
      *(undefined4 *)(iVar1 + 0x30) = 0x28;
      *(undefined4 *)(iVar1 + 0x34) = *(undefined4 *)(iVar1 + 0x1c);
      *(undefined4 *)(iVar1 + 0x38) = *(undefined4 *)(iVar1 + 0x20);
      *(undefined2 *)(iVar1 + 0x3c) = 1;
      *(short *)(iVar1 + 0x3e) = *(short *)(iVar1 + 0x28) * *(short *)(iVar1 + 0x2a);
    }
    pHVar2 = FUN_0041b94c(*(HBITMAP *)(iVar1 + 8),*(HPALETTE *)(iVar1 + 0x10),
                          *(HPALETTE *)(iVar1 + 0x10),0,iVar1 + 0x18);
    *(HPALETTE *)(iVar1 + 0x14) = pHVar2;
  }
  return;
}



void FUN_0041ca18(int param_1)

{
  if (*(int **)(param_1 + 0x24) != (int *)0x0) {
    FUN_0041b5ec(*(int **)(param_1 + 0x24));
  }
  return;
}



void FUN_0041ca28(int param_1)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x20);
  if (*(int *)(iVar1 + 8) == 0) {
    *(undefined4 *)(iVar1 + 8) = *(undefined4 *)(iVar1 + 0x14);
  }
  return;
}



void FUN_0041ca38(int *param_1,uint param_2)

{
  COLORREF CVar1;
  HPALETTE pHVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar3;
  undefined4 uStack_78;
  undefined1 *puStack_74;
  undefined1 *puStack_70;
  undefined4 local_60 [21];
  HPALETTE local_c;
  HANDLE local_8;
  
  puStack_70 = &stack0xfffffffc;
  local_8 = (HANDLE)0x0;
  local_c = (HPALETTE)0x0;
  puStack_74 = &LAB_0041cae2;
  uStack_78 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_78;
  FUN_0041ca18((int)param_1);
  FUN_0041ca28((int)param_1);
  CVar1 = FUN_00416b74(param_2);
  local_8 = (HANDLE)FUN_0041c00c(*(HPALETTE *)(param_1[8] + 8),*(HPALETTE *)(param_1[8] + 0x10),
                                 CVar1);
  FUN_00402c14(local_60,0x54,0);
  GetObjectA(local_8,0x54,local_60);
  pHVar2 = *(HPALETTE *)(param_1[8] + 0x10);
  if (pHVar2 != DAT_0047664c) {
    pHVar2 = FUN_0041bfa8(pHVar2);
  }
  local_c = pHVar2;
  uVar3 = 0;
  FUN_0041cd38((int)param_1,local_8,local_c,(int *)0x0,*(undefined1 *)(param_1[8] + 0x70),local_60);
  *in_FS_OFFSET = uVar3;
  (**(code **)(*param_1 + 0x10))(param_1,param_1);
  return;
}



void FUN_0041cb18(int *param_1)

{
  int iVar1;
  uint uVar2;
  BOOL BVar3;
  
  if ((*(char *)((int)param_1 + 0x2a) == '\0') || (*(char *)((int)param_1 + 0x29) == '\0')) {
    iVar1 = param_1[8];
    if (*(int *)(iVar1 + 0xc) != 0) {
      FUN_0041b508(*(int *)(iVar1 + 0xc));
      DeleteObject(*(HGDIOBJ *)(iVar1 + 0xc));
      *(undefined4 *)(iVar1 + 0xc) = 0;
    }
    FUN_0041ca18((int)param_1);
    FUN_0041ca28((int)param_1);
    uVar2 = FUN_0041c954(param_1);
    BVar3 = FUN_0041c00c(*(HPALETTE *)(iVar1 + 8),*(HPALETTE *)(iVar1 + 0x10),uVar2);
    *(BOOL *)(iVar1 + 0xc) = BVar3;
    *(undefined1 *)((int)param_1 + 0x2a) = 1;
    *(undefined1 *)((int)param_1 + 0x29) = 1;
  }
  return;
}



void FUN_0041cb78(int param_1)

{
  int iVar1;
  HPALETTE pHVar2;
  HDC pHVar3;
  int iVar4;
  int iVar5;
  char cVar6;
  
  iVar1 = *(int *)(param_1 + 0x20);
  if (*(char *)(param_1 + 0x28) != '\0') {
    return;
  }
  if (*(int *)(iVar1 + 0x10) != 0) {
    return;
  }
  if (*(int *)(iVar1 + 0x14) == 0) {
    return;
  }
  if (*(int *)(iVar1 + 0x14) == *(int *)(iVar1 + 8)) {
    FUN_0041b508(*(int *)(iVar1 + 0x14));
  }
  pHVar2 = FUN_00418ebc(*(HGDIOBJ *)(iVar1 + 0x14),(undefined4 *)0x0,
                        1 << ((byte)*(undefined2 *)(iVar1 + 0x3e) & 0x1f));
  *(HPALETTE *)(iVar1 + 0x10) = pHVar2;
  if (pHVar2 != (HPALETTE)0x0) {
    return;
  }
  pHVar3 = GetDC((HWND)0x0);
  pHVar3 = (HDC)FUN_004187cc((int)pHVar3);
  if (*(char *)(iVar1 + 0x71) == '\0') {
    iVar4 = GetDeviceCaps(pHVar3,0xc);
    iVar5 = GetDeviceCaps(pHVar3,0xe);
    if ((int)((uint)*(ushort *)(iVar1 + 0x2a) * (uint)*(ushort *)(iVar1 + 0x28)) <= iVar4 * iVar5) {
      cVar6 = '\0';
      goto LAB_0041cc09;
    }
  }
  cVar6 = '\x01';
LAB_0041cc09:
  *(char *)(iVar1 + 0x71) = cVar6;
  if (cVar6 != '\0') {
    pHVar2 = CreateHalftonePalette(pHVar3);
    *(HPALETTE *)(iVar1 + 0x10) = pHVar2;
  }
  ReleaseDC((HWND)0x0,pHVar3);
  if (*(int *)(iVar1 + 0x10) == 0) {
    *(undefined1 *)(param_1 + 0x28) = 1;
  }
  return;
}



void FUN_0041cc30(int *param_1,short param_2,HBITMAP param_3,HPALETTE param_4)

{
  int iVar1;
  undefined4 local_58 [5];
  int local_44;
  undefined4 local_40;
  
  if ((param_2 != 2) || (param_3 == (HBITMAP)0x0)) {
    FUN_00418694((undefined4 *)PTR_PTR_004757c8);
  }
  FUN_0041ca18((int)param_1);
  FUN_00402c14(local_58,0x54,0);
  GetObjectA(param_3,0x54,local_58);
  if (local_44 == 0) {
    local_40 = 0;
  }
  FUN_0041c3ac((int)param_1,param_3,param_4,local_58);
  *(undefined1 *)(param_1[8] + 0x70) = 0;
  iVar1 = (**(code **)(*param_1 + 0x24))();
  *(bool *)((int)param_1 + 0x1a) = iVar1 != 0;
  (**(code **)(*param_1 + 0x10))(param_1,param_1);
  return;
}



void FUN_0041ccd8(undefined4 param_1,HMODULE param_2,undefined *param_3)

{
  int *piVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY_18;
  
  uStackY_18 = 0x41ccf0;
  piVar1 = FUN_00411a50((int *)PTR_LAB_0040e440,'\x01',param_2,(LPCSTR)0x2,param_3);
  uStackY_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY_18;
  iVar2 = FUN_00411598(piVar1);
  FUN_0041ce60(param_1,piVar1,iVar2);
  *in_FS_OFFSET = uStackY_18;
  FUN_00402f54(piVar1);
  return;
}



void FUN_0041cd38(int param_1,undefined4 param_2,undefined4 param_3,int *param_4,undefined1 param_5,
                 undefined4 *param_6)

{
  int iVar1;
  undefined4 uVar2;
  int iVar3;
  undefined4 *puVar4;
  undefined4 *in_FS_OFFSET;
  byte bVar5;
  undefined4 uStackY_24;
  
  bVar5 = 0;
  iVar1 = FUN_00402f24((int *)PTR_PTR_00416118,'\x01',param_3);
  uStackY_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY_24;
  *(undefined4 *)(iVar1 + 8) = param_2;
  *(undefined4 *)(iVar1 + 0x10) = param_3;
  puVar4 = (undefined4 *)(iVar1 + 0x18);
  for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {
    *puVar4 = *param_6;
    param_6 = param_6 + (uint)bVar5 * -2 + 1;
    puVar4 = puVar4 + (uint)bVar5 * -2 + 1;
  }
  *(undefined1 *)(iVar1 + 0x70) = param_5;
  if (*(int *)(iVar1 + 0x2c) != 0) {
    *(undefined4 *)(iVar1 + 0x14) = *(undefined4 *)(iVar1 + 8);
  }
  uVar2 = FUN_004030e4(param_4,(int)PTR_PTR_0040e3d0);
  *(undefined4 *)(iVar1 + 0x6c) = uVar2;
  *in_FS_OFFSET = uStackY_24;
  EnterCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476668);
  uStackY_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY_24;
  FUN_0041b77c(*(int **)(param_1 + 0x20));
  *(int *)(param_1 + 0x20) = iVar1;
  FUN_0041b778(iVar1);
  *in_FS_OFFSET = uStackY_24;
  uStackY_24 = 0x41ce1e;
  LeaveCriticalSection((LPCRITICAL_SECTION)&lpCriticalSection_00476668);
  return;
}



void FUN_0041ce60(undefined4 param_1,int *param_2,int param_3)

{
  WORD WVar1;
  uint uVar2;
  BITMAPINFO *pBVar3;
  DWORD DVar4;
  HDC pHVar5;
  HBITMAP h;
  HGDIOBJ ho;
  undefined4 extraout_ECX;
  undefined2 extraout_var;
  uint uVar6;
  int iVar7;
  uint uVar8;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar9;
  undefined4 uVar10;
  undefined4 uStack_c4;
  undefined1 *puStack_c0;
  undefined1 *puStack_bc;
  undefined4 uStack_b8;
  undefined1 *puStack_b4;
  undefined1 *puStack_b0;
  ushort local_48;
  ushort local_46;
  WORD local_44;
  WORD local_42;
  BITMAPINFO *local_40;
  int *local_3c;
  HPALETTE local_38;
  HPALETTE local_34;
  HGDIOBJ local_30;
  HBITMAP local_2c;
  byte local_25;
  DWORD local_24;
  undefined4 *local_20;
  BITMAPINFO *local_1c;
  void *local_18;
  HDC local_14;
  HDC local_10;
  int *local_c;
  undefined4 local_8;
  
  local_34 = (HPALETTE)0x0;
  local_2c = (HBITMAP)0x0;
  local_3c = (int *)0x0;
  puStack_b0 = (undefined1 *)0x41ce93;
  local_c = param_2;
  local_8 = param_1;
  (**(code **)(*param_2 + 4))(param_2,&local_24,4);
  local_25 = local_24 == 0xc;
  if ((bool)local_25) {
    local_24 = 0x28;
  }
  puStack_b0 = (undefined1 *)0x41ceb8;
  local_40 = (BITMAPINFO *)FUN_004026f4(local_24 + 0x40c);
  puStack_b4 = &LAB_0041d327;
  uStack_b8 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_b8;
  puStack_c0 = &LAB_0041d2fa;
  uStack_c4 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_c4;
  local_1c = local_40;
  if (local_25 == 0) {
    puStack_bc = &stack0xfffffffc;
    puStack_b0 = &stack0xfffffffc;
    (**(code **)(*local_c + 4))(local_c,&(local_40->bmiHeader).biWidth,local_24 - 4);
    iVar7 = param_3 - local_24;
    DVar4 = (local_40->bmiHeader).biCompression;
    if ((DVar4 != 3) && (DVar4 != 0)) {
      local_3c = (int *)FUN_00402f24((int *)PTR_PTR_0040e3d0,'\x01',extraout_ECX);
      (**(code **)(*local_3c + 8))(local_3c,&local_24,4);
      (**(code **)(*local_3c + 8))(local_3c,&(local_1c->bmiHeader).biWidth,local_24 - 4);
      FUN_00411640(local_3c,local_c,iVar7);
      (**(code **)(*local_3c + 0xc))(local_3c,iVar7,CONCAT22(extraout_var,2));
      local_c = local_3c;
    }
  }
  else {
    puStack_bc = &stack0xfffffffc;
    puStack_b0 = &stack0xfffffffc;
    (**(code **)(*local_c + 4))(local_c,&local_48,8);
    pBVar3 = local_40;
    FUN_00402c14((undefined4 *)local_40,0x28,0);
    (pBVar3->bmiHeader).biWidth = (uint)local_48;
    (pBVar3->bmiHeader).biHeight = (uint)local_46;
    (pBVar3->bmiHeader).biPlanes = local_44;
    (pBVar3->bmiHeader).biBitCount = local_42;
    iVar7 = param_3 + -0xc;
  }
  pBVar3 = local_40;
  (local_40->bmiHeader).biSize = local_24;
  local_20 = (undefined4 *)
             ((int)&(((BITMAPINFO *)(local_1c->bmiColors + -10))->bmiHeader).biSize + local_24);
  if ((local_40->bmiHeader).biPlanes != 1) {
    FUN_004186ac();
  }
  if ((local_24 == 0x28) &&
     (((WVar1 = (pBVar3->bmiHeader).biBitCount, WVar1 == 0x10 || (WVar1 == 0x20)) &&
      ((pBVar3->bmiHeader).biCompression == 3)))) {
    FUN_004115d0(local_c,local_20,0xc);
    local_20 = local_20 + 3;
    iVar7 = iVar7 + -0xc;
  }
  if ((pBVar3->bmiHeader).biClrUsed == 0) {
    DVar4 = FUN_0041893c((pBVar3->bmiHeader).biBitCount);
    (pBVar3->bmiHeader).biClrUsed = DVar4;
  }
  uVar8 = (uint)local_25;
  FUN_004115d0(local_c,local_20,(pBVar3->bmiHeader).biClrUsed * (uint)(byte)(&DAT_004745c4)[uVar8]);
  uVar8 = iVar7 - (pBVar3->bmiHeader).biClrUsed * (uint)(byte)(&DAT_004745c4)[uVar8];
  if ((pBVar3->bmiHeader).biSizeImage == 0) {
    iVar7 = FUN_0041895c((pBVar3->bmiHeader).biWidth,(uint)(pBVar3->bmiHeader).biBitCount,0x20);
    uVar2 = (pBVar3->bmiHeader).biHeight;
    uVar6 = (int)uVar2 >> 0x1f;
    (pBVar3->bmiHeader).biSizeImage = iVar7 * ((uVar2 ^ uVar6) - uVar6);
  }
  uVar2 = (pBVar3->bmiHeader).biSizeImage;
  if (uVar2 < uVar8) {
    uVar8 = uVar2;
  }
  if (local_25 != 0) {
    FUN_00418c04((int)local_20);
  }
  pHVar5 = GetDC((HWND)0x0);
  local_10 = (HDC)FUN_004187cc((int)pHVar5);
  uVar9 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffff30;
  DVar4 = (local_40->bmiHeader).biCompression;
  if (((DVar4 == 0) || (DVar4 == 3)) && (DAT_00474384 == '\0')) {
    local_2c = CreateDIBSection(local_10,local_1c,0,&local_18,(HANDLE)0x0,0);
    if ((local_2c == (HBITMAP)0x0) || (local_18 == (void *)0x0)) {
      DVar4 = GetLastError();
      if (DVar4 == 0) {
        FUN_004186ac();
      }
      else {
        FUN_0040bc28();
      }
    }
    uVar10 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffff24;
    FUN_004115d0(local_c,local_18,uVar8);
    *in_FS_OFFSET = uVar10;
    *in_FS_OFFSET = uVar9;
    ReleaseDC((HWND)0x0,local_10);
    return;
  }
  local_14 = (HDC)0x0;
  local_18 = (void *)FUN_004026f4(uVar8);
  *in_FS_OFFSET = &stack0xffffff24;
  FUN_004115d0(local_c,local_18,uVar8);
  pHVar5 = CreateCompatibleDC(local_10);
  local_14 = (HDC)FUN_004187cc((int)pHVar5);
  h = CreateCompatibleBitmap(local_10,1,1);
  local_30 = SelectObject(local_14,h);
  local_38 = (HPALETTE)0x0;
  DVar4 = (local_40->bmiHeader).biClrUsed;
  if (DVar4 != 0) {
    local_34 = FUN_00418ebc((HGDIOBJ)0x0,local_20,DVar4);
    local_38 = SelectPalette(local_14,local_34,0);
    RealizePalette(local_14);
  }
  uVar9 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffff18;
  local_2c = CreateDIBitmap(local_14,&local_1c->bmiHeader,4,local_18,local_1c,0);
  if (local_2c == (HBITMAP)0x0) {
    DVar4 = GetLastError();
    if (DVar4 == 0) {
      FUN_004186ac();
    }
    else {
      FUN_0040bc28();
    }
  }
  *in_FS_OFFSET = uVar9;
  if (local_38 != (HPALETTE)0x0) {
    SelectPalette(local_14,local_38,-1);
  }
  ho = SelectObject(local_14,local_30);
  DeleteObject(ho);
  return;
}



void FUN_0041d370(int param_1,int *param_2,int param_3)

{
  short local_70 [7];
  undefined4 local_62 [21];
  
  FUN_0041ca18(param_1);
  if (param_3 == 0) {
    FUN_00402c14(local_62,0x54,0);
    FUN_0041cd38(param_1,0,0,(int *)0x0,0,local_62);
  }
  else {
    FUN_004115d0(param_2,local_70,0xe);
    if (local_70[0] != 0x4d42) {
      FUN_004186ac();
    }
    FUN_0041ce60(param_1,param_2,param_3 + -0xe);
  }
  return;
}



void FUN_0041d3e0(int *param_1,HANDLE param_2)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar2;
  undefined4 local_5c [21];
  HPALETTE local_8;
  
  iVar1 = param_1[8];
  if (param_2 != *(HANDLE *)(iVar1 + 8)) {
    FUN_0041ca18((int)param_1);
    FUN_00402c14(local_5c,0x54,0);
    if (param_2 != (HANDLE)0x0) {
      GetObjectA(param_2,0x54,local_5c);
    }
    if (*(int *)(iVar1 + 4) == 1) {
      local_8 = *(HPALETTE *)(iVar1 + 0x10);
      *(undefined4 *)(iVar1 + 0x10) = 0;
    }
    else if (*(HPALETTE *)(iVar1 + 0x10) == DAT_0047664c) {
      local_8 = DAT_0047664c;
    }
    else {
      local_8 = FUN_0041bfa8(*(HPALETTE *)(iVar1 + 0x10));
    }
    *in_FS_OFFSET = &stack0xffffff8c;
    uVar2 = 0;
    FUN_0041cd38((int)param_1,param_2,local_8,(int *)0x0,0,local_5c);
    *in_FS_OFFSET = uVar2;
    (**(code **)(*param_1 + 0x10))(param_1,param_1);
  }
  return;
}



void FUN_0041d5dc(int *param_1,int param_2)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  byte bVar5;
  undefined4 local_60 [2];
  int local_58;
  int local_40;
  
  bVar5 = 0;
  iVar1 = param_1[8];
  if (param_2 != *(int *)(iVar1 + 0x20)) {
    FUN_0041ca28((int)param_1);
    puVar3 = (undefined4 *)(iVar1 + 0x18);
    puVar4 = local_60;
    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {
      *puVar4 = *puVar3;
      puVar3 = puVar3 + (uint)bVar5 * -2 + 1;
      puVar4 = puVar4 + (uint)bVar5 * -2 + 1;
    }
    local_58 = param_2;
    local_40 = param_2;
    FUN_0041c3ac((int)param_1,*(HBITMAP *)(iVar1 + 8),*(HPALETTE *)(iVar1 + 0x10),local_60);
    (**(code **)(*param_1 + 0x10))(param_1,param_1);
  }
  return;
}



void FUN_0041d630(int *param_1,byte param_2)

{
  int iVar1;
  byte bVar2;
  int iVar3;
  undefined4 *puVar4;
  undefined4 *puVar5;
  byte bVar6;
  undefined4 local_60 [4];
  ushort local_50;
  ushort local_4e;
  undefined4 local_48;
  ushort local_3c;
  ushort local_3a;
  
  bVar6 = 0;
  iVar1 = param_1[8];
  if ((*(short *)(iVar1 + 0x3c) == 1) && (*(short *)(iVar1 + 0x3e) == 1)) {
    bVar2 = 1;
  }
  else {
    bVar2 = 0;
  }
  if (param_2 != bVar2) {
    FUN_0041ca28((int)param_1);
    puVar4 = (undefined4 *)(iVar1 + 0x18);
    puVar5 = local_60;
    for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {
      *puVar5 = *puVar4;
      puVar4 = puVar4 + (uint)bVar6 * -2 + 1;
      puVar5 = puVar5 + (uint)bVar6 * -2 + 1;
    }
    local_48 = 0;
    local_50 = (ushort)param_2;
    local_4e = local_50;
    local_3c = local_50;
    local_3a = local_50;
    FUN_0041c3ac((int)param_1,*(HBITMAP *)(iVar1 + 8),*(HPALETTE *)(iVar1 + 0x10),local_60);
    (**(code **)(*param_1 + 0x10))(param_1,param_1);
  }
  return;
}



void FUN_0041d784(int *param_1,byte param_2)

{
  int iVar1;
  undefined4 uVar2;
  HDC pHVar3;
  HBITMAP pHVar4;
  int iVar5;
  undefined4 *puVar6;
  undefined4 *puVar7;
  undefined4 *in_FS_OFFSET;
  byte bVar8;
  undefined4 uStack_7c;
  undefined4 local_61;
  undefined4 local_5d;
  undefined4 local_59;
  undefined4 local_4d;
  undefined4 local_49;
  undefined4 local_45;
  undefined4 local_41;
  undefined2 local_3d;
  ushort local_3b;
  undefined4 local_39;
  undefined4 local_21;
  undefined4 local_1d;
  undefined4 local_19;
  char local_d;
  HPALETTE local_c;
  int *local_8;
  
  bVar8 = 0;
  local_8 = param_1;
  uVar2 = FUN_0041c868((int)param_1);
  if (param_2 != (byte)uVar2) {
    if (param_2 == 0) {
      (**(code **)(*local_8 + 0x68))(local_8,1);
    }
    else {
      if (param_2 != 8) {
        FUN_00402c14(&local_61,0x54,0);
        iVar1 = local_8[8];
        puVar6 = (undefined4 *)(iVar1 + 0x18);
        puVar7 = &local_61;
        for (iVar5 = 6; iVar5 != 0; iVar5 = iVar5 + -1) {
          *puVar7 = *puVar6;
          puVar6 = puVar6 + (uint)bVar8 * -2 + 1;
          puVar7 = puVar7 + (uint)bVar8 * -2 + 1;
        }
        local_d = '\0';
        local_4d = 0;
        local_49 = 0x28;
        local_45 = local_5d;
        local_41 = local_59;
        local_3d = 1;
        local_3b = (ushort)(byte)(&DAT_004745c7)[param_2];
        local_c = *(HPALETTE *)(iVar1 + 0x10);
        if (param_2 == 2) {
          local_c = DAT_0047664c;
        }
        else if (param_2 == 3) {
          pHVar3 = GetDC((HWND)0x0);
          pHVar3 = (HDC)FUN_004187cc((int)pHVar3);
          local_c = CreateHalftonePalette(pHVar3);
          local_d = '\x01';
          uStack_7c = 0x41d862;
          ReleaseDC((HWND)0x0,pHVar3);
        }
        else if (param_2 == 5) {
          local_39 = 3;
          local_21 = 0xf800;
          local_1d = 0x7e0;
          local_19 = 0x1f;
        }
        uStack_7c = *in_FS_OFFSET;
        *in_FS_OFFSET = &uStack_7c;
        puVar6 = &local_61;
        pHVar4 = (HBITMAP)(**(code **)(*local_8 + 0x60))();
        FUN_0041c3ac((int)local_8,pHVar4,local_c,puVar6);
        *(bool *)((int)local_8 + 0x1a) = local_c != (HPALETTE)0x0;
        *in_FS_OFFSET = uStack_7c;
        if (local_d != '\0') {
          uStack_7c = 0x41d8d0;
          DeleteObject(local_c);
        }
        return;
      }
      FUN_00418694((undefined4 *)PTR_PTR_0047565c);
    }
  }
  return;
}



void FUN_0041d8ec(int *param_1,int param_2)

{
  int iVar1;
  
  if (param_2 != param_1[0xb]) {
    if (param_2 == 0x20000000) {
      *(undefined1 *)(param_1 + 0xc) = 0;
    }
    else {
      *(undefined1 *)(param_1 + 0xc) = 1;
    }
    param_1[0xb] = param_2;
    iVar1 = param_1[8];
    if (1 < *(int *)(iVar1 + 4)) {
      FUN_0041ca28((int)param_1);
      FUN_0041c3ac((int)param_1,*(HBITMAP *)(iVar1 + 8),*(HPALETTE *)(iVar1 + 0x10),
                   (undefined4 *)(iVar1 + 0x18));
    }
    (**(code **)(*param_1 + 0x10))(param_1,param_1);
  }
  return;
}



void FUN_0041d998(int *param_1,int *param_2,char param_3)

{
  int iVar1;
  uint uVar2;
  int *piVar3;
  HGDIOBJ pvVar4;
  int local_43c;
  uint local_438;
  int local_434;
  HGDIOBJ local_430;
  undefined1 local_42c [10];
  int local_422;
  undefined4 local_41e;
  undefined2 local_41a;
  undefined2 local_418;
  undefined2 local_416;
  undefined2 local_414;
  tagPALETTEENTRY local_412 [256];
  
  if (*(int **)(param_1[8] + 0x6c) == (int *)0x0) {
    FUN_0041c9a4((int)param_1);
    iVar1 = param_1[8];
    local_43c = 0;
    if (*(HANDLE *)(iVar1 + 0x14) != (HANDLE)0x0) {
      FUN_00419610(*(HANDLE *)(iVar1 + 0x14),&local_434,&local_43c,*(uint *)(iVar1 + 0x50));
      if (*(char *)(iVar1 + 0x70) != '\0') {
        local_434 = 0xc;
        if (*(ushort *)(iVar1 + 0x3e) < 9) {
          local_434 = (1 << ((byte)*(ushort *)(iVar1 + 0x3e) & 0x1f)) * 3 + 0xc;
        }
      }
      local_43c = local_43c + local_434 + 0xe;
      FUN_00402c14((undefined4 *)local_42c,0xe,0);
      local_42c._0_2_ = 0x4d42;
      piVar3 = (int *)FUN_0041c784(param_1);
      FUN_004184a8(piVar3,DAT_0041dc30);
      pvVar4 = SelectObject(*(HDC *)(param_1[9] + 4),*(HGDIOBJ *)(iVar1 + 0x14));
      local_430 = (HGDIOBJ)FUN_004187cc((int)pvVar4);
      local_438 = GetDIBColorTable(*(HDC *)(param_1[9] + 4),0,0x100,(RGBQUAD *)local_412);
      SelectObject(*(HDC *)(param_1[9] + 4),local_430);
      uVar2 = *(uint *)(iVar1 + 0x50);
      if ((uVar2 != 0) && (uVar2 < local_438)) {
        local_438 = uVar2;
      }
      if ((((*(char *)(iVar1 + 0x70) == '\0') && (local_438 == 0)) && (*(int *)(iVar1 + 0x10) != 0))
         && (*(char *)(iVar1 + 0x71) == '\0')) {
        local_438 = FUN_00418f60(*(HPALETTE *)(iVar1 + 0x10),local_412,0xff);
        if (8 < *(ushort *)(iVar1 + 0x3e)) {
          local_43c = local_43c + local_438 * 4;
          local_434 = local_434 + local_438 * 4;
        }
      }
      local_42c._2_4_ = local_43c;
      local_422 = local_434 + 0xe;
    }
    if (param_3 != '\0') {
      FUN_00411608(param_2,&local_43c,4);
    }
    if (local_43c != 0) {
      FUN_0041b900(iVar1 + 0x18);
      if (local_438 != 0) {
        if ((*(uint *)(iVar1 + 0x50) == 0) || (*(uint *)(iVar1 + 0x50) != local_438)) {
          *(uint *)(iVar1 + 0x50) = local_438;
        }
        if (*(char *)(iVar1 + 0x70) != '\0') {
          FUN_00418c3c((int)local_412,(int *)&local_438);
        }
      }
      if (*(char *)(iVar1 + 0x70) == '\0') {
        FUN_00411608(param_2,local_42c,0xe);
        FUN_00411608(param_2,iVar1 + 0x30,0x28);
        if ((8 < *(ushort *)(iVar1 + 0x3e)) && ((*(byte *)(iVar1 + 0x40) & 3) != 0)) {
          FUN_00411608(param_2,iVar1 + 0x58,0xc);
        }
      }
      else {
        local_41e = 0xc;
        local_41a = *(undefined2 *)(iVar1 + 0x34);
        local_418 = *(undefined2 *)(iVar1 + 0x38);
        local_416 = 1;
        local_414 = *(undefined2 *)(iVar1 + 0x3e);
        FUN_00411608(param_2,local_42c,0xe);
        FUN_00411608(param_2,&local_41e,0xc);
      }
      FUN_00411608(param_2,local_412,(byte)(&DAT_004745d0)[*(byte *)(iVar1 + 0x70)] * local_438);
      FUN_00411608(param_2,*(undefined4 *)(iVar1 + 0x2c),*(int *)(iVar1 + 0x44));
    }
  }
  else {
    local_43c = FUN_00411598(*(int **)(param_1[8] + 0x6c));
    if (param_3 != '\0') {
      FUN_00411608(param_2,&local_43c,4);
    }
    (**(code **)(*param_2 + 8))(param_2,*(undefined4 *)(*(int *)(param_1[8] + 0x6c) + 4),local_43c);
  }
  return;
}



int FUN_0041dc34(int param_1)

{
  int iVar1;
  int iVar2;
  
  FUN_0041ca28(param_1);
  FUN_0041c46c(param_1);
  iVar1 = *(int *)(param_1 + 0x20);
  iVar2 = *(int *)(iVar1 + 8);
  if (iVar2 == *(int *)(iVar1 + 0x14)) {
    *(undefined4 *)(iVar1 + 0x14) = 0;
    *(undefined4 *)(iVar1 + 0x2c) = 0;
  }
  *(undefined4 *)(iVar1 + 8) = 0;
  return iVar2;
}



void FUN_0041dc70(int param_1,undefined2 *param_2,undefined4 *param_3,undefined4 *param_4)

{
  int iVar1;
  HPALETTE pHVar2;
  int iVar3;
  undefined4 *puVar4;
  undefined4 *puVar5;
  undefined4 *in_FS_OFFSET;
  byte bVar6;
  undefined4 uStackY_7c;
  undefined1 *puStackY_78;
  undefined1 *puStackY_74;
  undefined4 local_5c [5];
  undefined4 local_48;
  undefined4 local_44;
  undefined4 *local_8;
  
  bVar6 = 0;
  *param_2 = 2;
  local_8 = param_3;
  FUN_0041ca28(param_1);
  iVar1 = *(int *)(param_1 + 0x20);
  puVar4 = (undefined4 *)(iVar1 + 0x18);
  puVar5 = local_5c;
  for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {
    *puVar5 = *puVar4;
    puVar4 = puVar4 + (uint)bVar6 * -2 + 1;
    puVar5 = puVar5 + (uint)bVar6 * -2 + 1;
  }
  local_44 = 0;
  local_48 = 0;
  puStackY_74 = (undefined1 *)0x41dcbd;
  pHVar2 = FUN_0041b94c(*(HBITMAP *)(iVar1 + 8),*(HPALETTE *)(iVar1 + 0x10),
                        *(HPALETTE *)(iVar1 + 0x10),*(int *)(param_1 + 0x24),(int)local_5c);
  *local_8 = pHVar2;
  puStackY_78 = &LAB_0041dcea;
  uStackY_7c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY_7c;
  puStackY_74 = &stack0xfffffffc;
  pHVar2 = FUN_0041bfa8(*(HPALETTE *)(*(int *)(param_1 + 0x20) + 0x10));
  *param_4 = pHVar2;
  *in_FS_OFFSET = uStackY_7c;
  return;
}



int * FUN_0041dd58(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0041994c(param_1,'\0',param_3);
  *(undefined1 *)((int)param_1 + 0x19) = 1;
  iVar1 = FUN_00402f24((int *)PTR_PTR_0041625c,'\x01',extraout_ECX_00);
  param_1[8] = iVar1;
  FUN_0041b778(iVar1);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



undefined4 FUN_0041de94(int param_1)

{
  FUN_0041ded0(param_1);
  return *(undefined4 *)(*(int *)(param_1 + 0x20) + 8);
}



void FUN_0041ded0(int param_1)

{
  int iVar1;
  undefined4 uStack_18;
  undefined1 auStack_14 [2];
  short local_12;
  ushort local_10;
  undefined1 local_c [4];
  
  iVar1 = *(int *)(param_1 + 0x20);
  if ((*(int *)(iVar1 + 8) == 0) && (*(int **)(iVar1 + 0xc) != (int *)0x0)) {
    FUN_0041158c(*(int **)(iVar1 + 0xc),0);
    uStack_18 = 0x41defd;
    FUN_004115d0(*(int **)(iVar1 + 0xc),auStack_14,6);
    if (local_12 != 0) {
      if (local_12 == 1) {
        uStack_18 = 6;
        FUN_0041920c(*(int **)(iVar1 + 0xc),local_c,(uint)local_10,(int *)(iVar1 + 0x10),
                     (int *)(param_1 + 0x24));
      }
      else {
        uStack_18 = 0x41df39;
        FUN_004186b8();
      }
    }
    *(undefined4 *)(iVar1 + 8) = uStack_18;
  }
  return;
}



void FUN_0041df48(int param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  int iVar2;
  HICON pHVar3;
  undefined4 extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  undefined4 local_e;
  int *local_8;
  
  iVar1 = *(int *)(param_1 + 0x20);
  if (*(int *)(iVar1 + 0xc) == 0) {
    if (*(int *)(iVar1 + 8) == 0) {
      puStack_20 = (undefined1 *)0x41df6b;
      FUN_004186b8();
      param_3 = extraout_ECX;
    }
    puStack_20 = (undefined1 *)0x41df77;
    local_8 = (int *)FUN_00402f24((int *)PTR_PTR_0040e3d0,'\x01',param_3);
    puStack_24 = &LAB_0041dfd5;
    uStack_28 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_28;
    puStack_20 = &stack0xfffffffc;
    iVar2 = FUN_0041de94(param_1);
    if (iVar2 == DAT_00476664) {
      FUN_00402c14(&local_e,6,0);
      FUN_00411608(local_8,&local_e,6);
    }
    else {
      pHVar3 = (HICON)FUN_0041de94(param_1);
      FUN_00419750(local_8,pHVar3,'\0');
    }
    *in_FS_OFFSET = uStack_28;
    *(int **)(iVar1 + 0xc) = local_8;
  }
  return;
}



void FUN_0041e0b4(int param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined4 uStack_18;
  
  uStack_18 = 0x41e0cd;
  iVar1 = FUN_00402f24((int *)PTR_PTR_0041625c,'\x01',param_3);
  puStack_1c = &LAB_0041e0f4;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  *(undefined4 *)(iVar1 + 8) = param_2;
  *(undefined4 *)(iVar1 + 0xc) = param_3;
  *in_FS_OFFSET = uStack_20;
  uStack_18 = 0x41e113;
  FUN_0041b778(iVar1);
  uStack_18 = 0x41e11b;
  FUN_0041b77c(*(int **)(param_1 + 0x20));
  *(int *)(param_1 + 0x20) = iVar1;
  return;
}



void FUN_0041e128(int *param_1,undefined4 param_2)

{
  FUN_0041e0b4((int)param_1,param_2,0);
  (**(code **)(*param_1 + 0x10))(param_1,param_1);
  return;
}



BYTE FUN_0041e200(void)

{
  HDC hdc;
  HGDIOBJ pvVar1;
  BOOL BVar2;
  BYTE BVar3;
  tagTEXTMETRICA tStack_40;
  
  BVar3 = '\x01';
  hdc = GetDC((HWND)0x0);
  if (hdc != (HDC)0x0) {
    pvVar1 = SelectObject(hdc,DAT_00476660);
    if (pvVar1 != (HGDIOBJ)0x0) {
      BVar2 = GetTextMetricsA(hdc,&tStack_40);
      if (BVar2 != 0) {
        BVar3 = tStack_40.tmCharSet;
      }
    }
    ReleaseDC((HWND)0x0,hdc);
  }
  return BVar3;
}



void FUN_0041e244(void)

{
  BYTE BVar1;
  int iVar2;
  undefined4 *puVar3;
  char *pcVar4;
  byte bVar5;
  
  bVar5 = 0;
  iVar2 = MulDiv(8,DAT_00476654,0x48);
  DAT_0047435c = -iVar2;
  if (PTR_DAT_004758fc[8] != '\0') {
    BVar1 = FUN_0041e200();
    if (BVar1 == 0x80) {
      puVar3 = &DAT_0041e2a8;
      pcVar4 = s_MS_Sans_Serif_00474363;
      for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {
        *(undefined4 *)pcVar4 = *puVar3;
        puVar3 = puVar3 + (uint)bVar5 * -2 + 1;
        pcVar4 = pcVar4 + ((uint)bVar5 * -2 + 1) * 4;
      }
      iVar2 = MulDiv(9,DAT_00476654,0x48);
      DAT_0047435c = -iVar2;
      DAT_00474362 = 0x80;
    }
  }
  return;
}



int * FUN_0041e314(int *param_1,char param_2,undefined4 param_3)

{
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_2 = extraout_DL;
  }
  InitializeCriticalSection((LPCRITICAL_SECTION)(param_1 + 2));
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_0041e378(int param_1)

{
  EnterCriticalSection((LPCRITICAL_SECTION)(param_1 + 8));
  return;
}



void FUN_0041e384(int param_1)

{
  LeaveCriticalSection((LPCRITICAL_SECTION)(param_1 + 8));
  return;
}



void FUN_0041e390(int param_1,int param_2,uint param_3)

{
  undefined4 *puVar1;
  int *piVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  undefined4 *local_c;
  
  puStack_1c = (undefined1 *)0x41e3a8;
  FUN_0041e378(param_1);
  puStack_20 = &LAB_0041e431;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  for (local_c = *(undefined4 **)(param_1 + 4);
      (local_c != (undefined4 *)0x0 && ((param_2 != local_c[2] || (param_3 != local_c[3]))));
      local_c = (undefined4 *)*local_c) {
  }
  if (local_c == (undefined4 *)0x0) {
    puStack_1c = &stack0xfffffffc;
    puVar1 = (undefined4 *)FUN_004026f4(0x10);
    *puVar1 = *(undefined4 *)(param_1 + 4);
    piVar2 = FUN_0041e444(param_1,param_2,param_3);
    puVar1[1] = piVar2;
    puVar1[2] = param_2;
    puVar1[3] = param_3;
    *(undefined4 **)(param_1 + 4) = puVar1;
  }
  *in_FS_OFFSET = uStack_24;
  puStack_1c = &LAB_0041e438;
  puStack_20 = (undefined1 *)0x41e430;
  FUN_0041e384(param_1);
  return;
}



int * FUN_0041e444(undefined4 param_1,undefined4 param_2,uint param_3)

{
  int *piVar1;
  undefined4 uVar2;
  undefined4 uVar3;
  uint uVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  undefined4 *in_FS_OFFSET;
  RECT *pRVar8;
  undefined4 uStack_34;
  undefined1 *puStack_30;
  undefined1 *puStack_2c;
  RECT local_1c;
  int *local_c;
  uint local_8;
  
  puStack_2c = (undefined1 *)0x41e45e;
  local_8 = param_3;
  local_c = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',param_3);
  puStack_30 = &LAB_0041e523;
  uStack_34 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_34;
  puStack_2c = &stack0xfffffffc;
  (**(code **)(*local_c + 0x40))(local_c,8);
  (**(code **)(*local_c + 0x34))(local_c,8);
  piVar1 = (int *)FUN_0041c784(local_c);
  FUN_00417920((int *)piVar1[5],'\0');
  FUN_00417804((int *)piVar1[5],param_2);
  uVar2 = (**(code **)(*local_c + 0x20))();
  pRVar8 = &local_1c;
  uVar3 = (**(code **)(*local_c + 0x2c))();
  FUN_0040ea70(0,0,uVar3,&pRVar8->left,uVar2);
  FUN_00417eb0(piVar1,&local_1c);
  uVar7 = 0;
  do {
    uVar6 = 0;
    do {
      uVar4 = uVar7 & 0x80000001;
      if ((int)uVar4 < 0) {
        uVar4 = (uVar4 - 1 | 0xfffffffe) + 1;
      }
      uVar5 = uVar6 & 0x80000001;
      if ((int)uVar5 < 0) {
        uVar5 = (uVar5 - 1 | 0xfffffffe) + 1;
      }
      if (uVar4 == uVar5) {
        FUN_0041838c(piVar1,uVar6,uVar7,local_8);
      }
      uVar6 = uVar6 + 1;
    } while (uVar6 != 9);
    uVar7 = uVar7 + 1;
  } while (uVar7 != 9);
  FUN_0041c49c((int)local_c);
  *in_FS_OFFSET = uStack_34;
  return local_c;
}



void FUN_0041e544(int param_1)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined4 *local_10;
  undefined4 *local_c;
  int local_8;
  
  local_10 = *(undefined4 **)(param_1 + 4);
  if (local_10 == (undefined4 *)0x0) {
    return;
  }
  puStack_14 = (undefined1 *)0x41e560;
  local_c = local_10;
  local_8 = param_1;
  FUN_0041e378(param_1);
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  *(undefined4 *)(local_8 + 4) = *local_10;
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_0041e596;
  uStack_18 = 0x41e58e;
  FUN_0041e384(local_8);
  return;
}



undefined4 FUN_0041e5bc(uint param_1,uint param_2)

{
  uint uVar1;
  int iVar2;
  
  if (DAT_004766a8 != 0) {
    uVar1 = FUN_00416b74(param_2);
    iVar2 = FUN_00416b74(param_1);
    iVar2 = FUN_0041e390(DAT_004766a8,iVar2,uVar1);
    return *(undefined4 *)(iVar2 + 4);
  }
  return 0;
}



void FUN_0041e88c(int *param_1)

{
  (**(code **)(*param_1 + 4))();
  return;
}



void FUN_0041e894(undefined4 *param_1)

{
  (**(code **)*param_1)();
  return;
}



int * FUN_0041e89c(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00402f24(param_1,'\0',param_3);
  iVar1 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX_00);
  param_1[1] = iVar1;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void __stdcall InitCommonControls(void)

{
                    // WARNING: Could not recover jumptable at 0x0041e988. Too many branches
                    // WARNING: Treating indirect jump as call
  InitCommonControls();
  return;
}



void FUN_0041e990(void)

{
  if (DAT_004766b4 == (HMODULE)0x0) {
    DAT_004766b4 = GetModuleHandleA(s_comctl32_dll_0041e9c8);
    if (DAT_004766b4 != (HMODULE)0x0) {
      DAT_004766b8 = GetProcAddress(DAT_004766b4,s_InitCommonControlsEx_0041e9d8);
    }
  }
  return;
}



int FUN_0041e9f0(void)

{
  byte bVar1;
  int iVar2;
  
  if (DAT_004766b4 == 0) {
    FUN_0041e990();
  }
  if (DAT_004766b8 != (code *)0x0) {
    iVar2 = (*DAT_004766b8)();
    if (iVar2 != 0) {
      bVar1 = 1;
      goto LAB_0041ea1b;
    }
  }
  bVar1 = 0;
LAB_0041ea1b:
  return -(uint)bVar1;
}



HIMAGELIST __stdcall ImageList_Create(int cx,int cy,UINT flags,int cInitial,int cGrow)

{
  HIMAGELIST p_Var1;
  
                    // WARNING: Could not recover jumptable at 0x0041ea24. Too many branches
                    // WARNING: Treating indirect jump as call
  p_Var1 = ImageList_Create(cx,cy,flags,cInitial,cGrow);
  return p_Var1;
}



BOOL __stdcall ImageList_Destroy(HIMAGELIST himl)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041ea2c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ImageList_Destroy(himl);
  return BVar1;
}



int __stdcall ImageList_GetImageCount(HIMAGELIST himl)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041ea34. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = ImageList_GetImageCount(himl);
  return iVar1;
}



int __stdcall ImageList_Add(HIMAGELIST himl,HBITMAP hbmImage,HBITMAP hbmMask)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041ea3c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = ImageList_Add(himl,hbmImage,hbmMask);
  return iVar1;
}



int __stdcall ImageList_ReplaceIcon(HIMAGELIST himl,int i,HICON hicon)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041ea44. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = ImageList_ReplaceIcon(himl,i,hicon);
  return iVar1;
}



COLORREF __stdcall ImageList_SetBkColor(HIMAGELIST himl,COLORREF clrBk)

{
  COLORREF CVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041ea4c. Too many branches
                    // WARNING: Treating indirect jump as call
  CVar1 = ImageList_SetBkColor(himl,clrBk);
  return CVar1;
}



COLORREF __stdcall ImageList_GetBkColor(HIMAGELIST himl)

{
  COLORREF CVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041ea54. Too many branches
                    // WARNING: Treating indirect jump as call
  CVar1 = ImageList_GetBkColor(himl);
  return CVar1;
}



void FUN_0041ea5c(HIMAGELIST param_1,HICON param_2)

{
  ImageList_ReplaceIcon(param_1,-1,param_2);
  return;
}



BOOL __stdcall ImageList_Draw(HIMAGELIST himl,int i,HDC hdcDst,int x,int y,UINT fStyle)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041ea68. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ImageList_Draw(himl,i,hdcDst,x,y,fStyle);
  return BVar1;
}



BOOL __stdcall ImageList_Replace(HIMAGELIST himl,int i,HBITMAP hbmImage,HBITMAP hbmMask)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041ea70. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ImageList_Replace(himl,i,hbmImage,hbmMask);
  return BVar1;
}



BOOL __stdcall
ImageList_DrawEx(HIMAGELIST himl,int i,HDC hdcDst,int x,int y,int dx,int dy,COLORREF rgbBk,
                COLORREF rgbFg,UINT fStyle)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041ea78. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ImageList_DrawEx(himl,i,hdcDst,x,y,dx,dy,rgbBk,rgbFg,fStyle);
  return BVar1;
}



BOOL __stdcall ImageList_Remove(HIMAGELIST himl,int i)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041ea80. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ImageList_Remove(himl,i);
  return BVar1;
}



BOOL __stdcall ImageList_BeginDrag(HIMAGELIST himlTrack,int iTrack,int dxHotspot,int dyHotspot)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041ea88. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ImageList_BeginDrag(himlTrack,iTrack,dxHotspot,dyHotspot);
  return BVar1;
}



void __stdcall ImageList_EndDrag(void)

{
                    // WARNING: Could not recover jumptable at 0x0041ea90. Too many branches
                    // WARNING: Treating indirect jump as call
  ImageList_EndDrag();
  return;
}



BOOL __stdcall ImageList_DragEnter(HWND hwndLock,int x,int y)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041ea98. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ImageList_DragEnter(hwndLock,x,y);
  return BVar1;
}



BOOL __stdcall ImageList_DragLeave(HWND hwndLock)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041eaa0. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ImageList_DragLeave(hwndLock);
  return BVar1;
}



BOOL __stdcall ImageList_DragMove(int x,int y)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041eaa8. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ImageList_DragMove(x,y);
  return BVar1;
}



BOOL __stdcall
ImageList_SetDragCursorImage(HIMAGELIST himlDrag,int iDrag,int dxHotspot,int dyHotspot)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041eab0. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ImageList_SetDragCursorImage(himlDrag,iDrag,dxHotspot,dyHotspot);
  return BVar1;
}



BOOL __stdcall ImageList_DragShowNolock(BOOL fShow)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041eab8. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ImageList_DragShowNolock(fShow);
  return BVar1;
}



HIMAGELIST __stdcall ImageList_GetDragImage(POINT *ppt,POINT *pptHotspot)

{
  HIMAGELIST p_Var1;
  
                    // WARNING: Could not recover jumptable at 0x0041eac0. Too many branches
                    // WARNING: Treating indirect jump as call
  p_Var1 = ImageList_GetDragImage(ppt,pptHotspot);
  return p_Var1;
}



HIMAGELIST __stdcall ImageList_Read(IStream *pstm)

{
  HIMAGELIST p_Var1;
  
                    // WARNING: Could not recover jumptable at 0x0041eac8. Too many branches
                    // WARNING: Treating indirect jump as call
  p_Var1 = ImageList_Read(pstm);
  return p_Var1;
}



BOOL __stdcall ImageList_Write(HIMAGELIST himl,IStream *pstm)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041ead0. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ImageList_Write(himl,pstm);
  return BVar1;
}



BOOL __stdcall ImageList_GetIconSize(HIMAGELIST himl,int *cx,int *cy)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041ead8. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ImageList_GetIconSize(himl,cx,cy);
  return BVar1;
}



BOOL __stdcall ImageList_SetIconSize(HIMAGELIST himl,int cx,int cy)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041eae0. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ImageList_SetIconSize(himl,cx,cy);
  return BVar1;
}



void FUN_0041eb20(byte param_1,undefined4 param_2,undefined *param_3)

{
  LPCSTR lpProcName;
  FARPROC pFVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  undefined *local_8;
  
  puStack_18 = (undefined1 *)0x41eb36;
  local_8 = param_3;
  FUN_00404010((int)param_3);
  puStack_1c = &LAB_0041ebdf;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  if ((&DAT_004766e4)[param_1] == '\0') {
    if (DAT_004766e0 == (HMODULE)0x0) {
      pFVar1 = (FARPROC)0x0;
    }
    else {
      puStack_18 = &stack0xfffffffc;
      if (((param_1 == 0) && (puStack_18 = &stack0xfffffffc, DAT_004766ec == '\0')) &&
         (puStack_18 = &stack0xfffffffc,
         DAT_004766d4 = FUN_0041eb20(4,DAT_004766d4,s_GetMonitorInfoA_0041ebf8),
         DAT_004766ec == '\0')) {
        FUN_00403bdc((int *)&local_8);
      }
      lpProcName = FUN_00404020(local_8);
      pFVar1 = GetProcAddress(DAT_004766e0,lpProcName);
    }
    if ((pFVar1 != (FARPROC)0x0) && (param_1 != 0)) {
      DAT_004766ec = '\x01';
    }
    (&DAT_004766e4)[param_1] = 1;
  }
  *in_FS_OFFSET = uStack_20;
  puStack_18 = &LAB_0041ebe6;
  puStack_1c = (undefined1 *)0x41ebde;
  FUN_00403bdc((int *)&local_8);
  return;
}



undefined4 FUN_0041ec90(void)

{
  undefined4 uVar1;
  int iVar2;
  int *in_stack_00000004;
  byte in_stack_00000008;
  
  if (DAT_004766e6 == '\0') {
    DAT_004766c4 = (code *)FUN_0041eb20(2,DAT_004766c4,s_MonitorFromRect_0041ed10);
    uVar1 = (*DAT_004766c4)();
    return uVar1;
  }
  if ((in_stack_00000008 & 3) == 0) {
    if (in_stack_00000004[2] < 1) {
      return 0;
    }
    if (in_stack_00000004[3] < 1) {
      return 0;
    }
    iVar2 = (*DAT_004766bc)();
    if (iVar2 <= *in_stack_00000004) {
      return 0;
    }
    iVar2 = (*DAT_004766bc)();
    if (iVar2 <= in_stack_00000004[1]) {
      return 0;
    }
  }
  return 0x12340042;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0041f2b4(void)

{
  undefined4 uVar1;
  undefined4 *in_FS_OFFSET;
  undefined1 auStack_10 [12];
  
  uVar1 = *in_FS_OFFSET;
  *in_FS_OFFSET = auStack_10;
  _DAT_004766f0 = _DAT_004766f0 + 1;
  *in_FS_OFFSET = uVar1;
  return;
}



int FUN_0041f2ec(int param_1,int param_2)

{
  if (param_1 <= param_2) {
    param_1 = param_2;
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0041f2f4(void)

{
  undefined4 uVar1;
  undefined4 *in_FS_OFFSET;
  undefined1 auStack_10 [12];
  
  uVar1 = *in_FS_OFFSET;
  *in_FS_OFFSET = auStack_10;
  _DAT_004766f4 = _DAT_004766f4 + 1;
  *in_FS_OFFSET = uVar1;
  return;
}



BOOL __stdcall ClosePrinter(HANDLE hPrinter)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041f32c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ClosePrinter(hPrinter);
  return BVar1;
}



LONG __stdcall
DocumentPropertiesA(HWND hWnd,HANDLE hPrinter,LPSTR pDeviceName,PDEVMODEA pDevModeOutput,
                   PDEVMODEA pDevModeInput,DWORD fMode)

{
  LONG LVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041f334. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = DocumentPropertiesA(hWnd,hPrinter,pDeviceName,pDevModeOutput,pDevModeInput,fMode);
  return LVar1;
}



BOOL __stdcall
EnumPrintersA(DWORD Flags,LPSTR Name,DWORD Level,LPBYTE pPrinterEnum,DWORD cbBuf,LPDWORD pcbNeeded,
             LPDWORD pcReturned)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041f33c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = EnumPrintersA(Flags,Name,Level,pPrinterEnum,cbBuf,pcbNeeded,pcReturned);
  return BVar1;
}



BOOL __stdcall OpenPrinterA(LPSTR pPrinterName,LPHANDLE phPrinter,LPPRINTER_DEFAULTSA pDefault)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041f344. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = OpenPrinterA(pPrinterName,phPrinter,pDefault);
  return BVar1;
}



char * FUN_0041f444(int *param_1)

{
  char *pcVar1;
  char *pcVar2;
  
  pcVar1 = (char *)*param_1;
  if (*param_1 != 0) {
    for (pcVar1 = (char *)*param_1; pcVar2 = pcVar1, *pcVar1 == ' '; pcVar1 = pcVar1 + 1) {
    }
    for (; (*pcVar2 != '\0' && (*pcVar2 != ',')); pcVar2 = pcVar2 + 1) {
    }
    if (*pcVar2 == ',') {
      *pcVar2 = '\0';
      pcVar2 = pcVar2 + 1;
    }
    *param_1 = (int)pcVar2;
  }
  return pcVar1;
}



void FUN_0041f478(undefined4 *param_1)

{
  int *piVar1;
  
  piVar1 = FUN_0040aa10((int *)PTR_DAT_0041f384,'\x01',param_1);
  FUN_004036ac(piVar1);
  return;
}



// proc parameter of SetAbortProc
// 

int proc_0041f490(undefined4 param_1,undefined4 param_2,uint param_3)

{
  FUN_00448cc0(*(int *)PTR_DAT_004757c0,param_2,param_3);
  return -(uint)(*(char *)(DAT_00474614 + 0x1d) != '\x01');
}



int * FUN_0041f534(int *param_1,char param_2,char *param_3,char *param_4,char *param_5)

{
  char *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00402f24(param_1,'\0',param_3);
  FUN_00403d94(param_1 + 1,param_3);
  FUN_00403d94(param_1 + 2,param_5);
  FUN_00403d94(param_1 + 3,param_4);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



void FUN_0041f594(int param_1,undefined4 param_2,char *param_3,char *param_4)

{
  undefined4 *in_FS_OFFSET;
  undefined1 uVar1;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  uint *local_c;
  uint *local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_8 = (uint *)0x0;
  local_c = (uint *)0x0;
  uVar1 = 1;
  puStack_1c = &LAB_0041f607;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  FUN_00403d94((int *)&local_8,param_3);
  FUN_00403f6c(*(uint **)(param_1 + 8),local_8);
  if (((bool)uVar1) && (*(int *)(param_1 + 0xc) != 0)) {
    FUN_00403d94((int *)&local_c,param_4);
    FUN_00403f6c(*(uint **)(param_1 + 0xc),local_c);
  }
  *in_FS_OFFSET = uStack_20;
  puStack_18 = &LAB_0041f60e;
  puStack_1c = (undefined1 *)0x41f606;
  FUN_00403c00((int *)&local_c,2);
  return;
}



int * FUN_0041f708(int *param_1,char param_2,int param_3)

{
  int extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00417954(param_1,'\0',param_3);
  param_1[0x16] = param_3;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_0041f744(int *param_1)

{
  FUN_0041f888(param_1[0x16],'\x01');
  FUN_0041f788((int)param_1);
  FUN_00418454(param_1,*(int *)(param_1[0x16] + 0x20));
  return;
}



void FUN_0041f768(int param_1)

{
  FUN_0041f9b4(*(int *)(param_1 + 0x58),'\x01');
  FUN_0041851c(param_1);
  FUN_0041f788(param_1);
  return;
}



void FUN_0041f788(int param_1)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  iVar2 = GetDeviceCaps(*(HDC *)(*(int *)(param_1 + 0x58) + 0x20),0x5a);
  if (iVar2 != *(int *)(*(int *)(param_1 + 0xc) + 0x1c)) {
    iVar2 = FUN_004172b8(*(int *)(param_1 + 0xc));
    iVar3 = GetDeviceCaps(*(HDC *)(*(int *)(param_1 + 0x58) + 0x20),0x5a);
    piVar1 = *(int **)(param_1 + 0xc);
    piVar1[7] = iVar3;
    FUN_004172d4(piVar1,iVar2);
  }
  return;
}



int * FUN_0041f7d0(int *param_1,char param_2,undefined4 param_3)

{
  undefined4 extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00402f24(param_1,'\0',param_3);
  param_1[5] = -1;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_0041f888(int param_1,char param_2)

{
  undefined4 uVar1;
  int *piVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  code *pcVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  undefined4 *local_c;
  int local_8;
  
  puStack_1c = &stack0xfffffffc;
  local_c = (undefined4 *)0x0;
  puStack_20 = &LAB_0041f9a6;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  if (param_2 != *(char *)(param_1 + 0x1f)) {
    pcVar3 = (code *)0x0;
    if (param_2 == '\0') {
      FUN_0041f9b4(param_1,'\0');
      if (*(int **)(param_1 + 4) != (int *)0x0) {
        FUN_00418454(*(int **)(param_1 + 4),0);
      }
      DeleteDC(*(HDC *)(param_1 + 0x20));
      *(undefined4 *)(param_1 + 0x20) = 0;
    }
    else if (param_2 == '\x01') {
      if (*(char *)(param_1 + 0x1f) == '\x02') goto LAB_0041f990;
      pcVar3 = (code *)&DAT_00406a1c;
      puStack_1c = &stack0xfffffffc;
    }
    else {
      puStack_1c = &stack0xfffffffc;
      if (param_2 == '\x02') {
        puStack_1c = &stack0xfffffffc;
        if (*(int **)(param_1 + 4) != (int *)0x0) {
          puStack_1c = &stack0xfffffffc;
          FUN_00418454(*(int **)(param_1 + 4),0);
        }
        if (*(HDC *)(param_1 + 0x20) != (HDC)0x0) {
          DeleteDC(*(HDC *)(param_1 + 0x20));
        }
        pcVar3 = (code *)&DAT_004069f4;
      }
    }
    if (pcVar3 != (code *)0x0) {
      uVar1 = FUN_0041fd84(param_1);
      piVar2 = (int *)FUN_0041fd9c(param_1,extraout_EDX,extraout_ECX);
      local_8 = (**(code **)(*piVar2 + 0x18))(piVar2,uVar1);
      FUN_00404020(*(undefined **)(local_8 + 0xc));
      FUN_00404020(*(undefined **)(local_8 + 8));
      FUN_00404020(*(undefined **)(local_8 + 4));
      uVar1 = (*pcVar3)();
      *(undefined4 *)(param_1 + 0x20) = uVar1;
      if (*(int *)(param_1 + 0x20) == 0) {
        FUN_004054e4((undefined4 *)PTR_PTR_00475824,(int *)&local_c);
        FUN_0041f478(local_c);
      }
      if (*(int **)(param_1 + 4) != (int *)0x0) {
        FUN_00418454(*(int **)(param_1 + 4),*(int *)(param_1 + 0x20));
      }
    }
    *(char *)(param_1 + 0x1f) = param_2;
  }
LAB_0041f990:
  *in_FS_OFFSET = uStack_24;
  puStack_1c = &LAB_0041f9ad;
  puStack_20 = (undefined1 *)0x41f9a5;
  FUN_00403bdc((int *)&local_c);
  return;
}



void FUN_0041f9b4(int param_1,char param_2)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  undefined4 *local_c;
  undefined4 *local_8;
  
  puStack_10 = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  local_c = (undefined4 *)0x0;
  puStack_14 = &LAB_0041fa19;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  if (param_2 != *(char *)(param_1 + 0x1c)) {
    if (param_2 == '\0') {
      FUN_004054e4((undefined4 *)PTR_PTR_00475744,(int *)&local_c);
      FUN_0041f478(local_c);
    }
    else {
      puStack_10 = &stack0xfffffffc;
      FUN_004054e4((undefined4 *)PTR_PTR_00475890,(int *)&local_8);
      FUN_0041f478(local_8);
    }
  }
  *in_FS_OFFSET = uStack_18;
  puStack_10 = &LAB_0041fa20;
  puStack_14 = (undefined1 *)0x41fa18;
  FUN_00403c00((int *)&local_c,2);
  return;
}



void FUN_0041fa24(int param_1)

{
  int iVar1;
  DOCINFOA local_18;
  
  FUN_0041f9b4(param_1,'\0');
  FUN_0041f888(param_1,'\x02');
  iVar1 = FUN_0041fd64(param_1);
  FUN_00418050(iVar1);
  iVar1 = FUN_0041fd64(param_1);
  FUN_0041f788(iVar1);
  *(undefined1 *)(param_1 + 0x1c) = 1;
  *(undefined1 *)(param_1 + 0x1d) = 0;
  *(undefined4 *)(param_1 + 0xc) = 1;
  FUN_00402c14(&local_18.cbSize,0x14,0);
  local_18.cbSize = 0x14;
  local_18.lpszDocName = FUN_00404020(*(undefined **)(param_1 + 0x18));
  SetAbortProc(*(HDC *)(param_1 + 0x20),proc_0041f490);
  StartDocA(*(HDC *)(param_1 + 0x20),&local_18);
  StartPage(*(HDC *)(param_1 + 0x20));
  return;
}



void FUN_0041faac(int param_1)

{
  FUN_0041f9b4(param_1,'\x01');
  EndPage(*(HDC *)(param_1 + 0x20));
  if (*(char *)(param_1 + 0x1d) == '\0') {
    EndDoc(*(HDC *)(param_1 + 0x20));
  }
  *(undefined1 *)(param_1 + 0x1c) = 0;
  *(undefined1 *)(param_1 + 0x1d) = 0;
  *(undefined4 *)(param_1 + 0xc) = 0;
  return;
}



void FUN_0041fae0(int param_1,uint param_2)

{
  *(undefined1 *)(param_1 + 0x1e) = DAT_0041fb18;
  if ((param_2 & 1) != 0) {
    *(byte *)(param_1 + 0x1e) = *(byte *)(param_1 + 0x1e) | 2;
  }
  if ((param_2 & 0x100) != 0) {
    *(byte *)(param_1 + 0x1e) = *(byte *)(param_1 + 0x1e) | 1;
  }
  if ((param_2 & 0x8000) != 0) {
    *(byte *)(param_1 + 0x1e) = *(byte *)(param_1 + 0x1e) | 4;
  }
  return;
}



void FUN_0041fb1c(int param_1,char *param_2,char *param_3,HGLOBAL param_4,char *param_5)

{
  char cVar1;
  LPVOID pvVar2;
  int iVar3;
  int iVar4;
  int *piVar5;
  BOOL BVar6;
  SIZE_T dwBytes;
  HGLOBAL pvVar7;
  PDEVMODEA pDevModeOutput;
  LONG LVar8;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  int iVar9;
  undefined4 *in_FS_OFFSET;
  int *piVar10;
  char *pcVar11;
  char *local_c8;
  undefined1 local_c4;
  char *local_c0;
  undefined1 local_bc;
  byte *local_b8;
  int local_b4;
  _devicemodeA local_b0;
  int *local_14;
  int local_10;
  char *local_c;
  char *local_8;
  
  local_b4 = 0;
  local_b8 = (byte *)0x0;
  pcVar11 = (char *)*in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffff20;
  local_c = param_3;
  local_8 = param_2;
  FUN_0041f9b4(param_1,'\0');
  pvVar7 = *(HGLOBAL *)(param_1 + 0x28);
  if (param_4 != pvVar7) {
    if (pvVar7 != (HGLOBAL)0x0) {
      GlobalUnlock(pvVar7);
      GlobalFree(*(HGLOBAL *)(param_1 + 0x28));
    }
    *(HGLOBAL *)(param_1 + 0x28) = param_4;
  }
  if (*(HGLOBAL *)(param_1 + 0x28) != (HGLOBAL)0x0) {
    pvVar2 = GlobalLock(*(HGLOBAL *)(param_1 + 0x28));
    *(LPVOID *)(param_1 + 0x24) = pvVar2;
    FUN_0041fae0(param_1,*(uint *)((int)pvVar2 + 0x28));
  }
  FUN_004201ec(param_1);
  if (*(HANDLE *)(param_1 + 0x2c) != (HANDLE)0x0) {
    ClosePrinter(*(HANDLE *)(param_1 + 0x2c));
    *(undefined4 *)(param_1 + 0x2c) = 0;
  }
  FUN_0041f888(param_1,'\0');
  local_10 = -1;
  local_14 = (int *)FUN_0041fd9c(param_1,extraout_EDX,extraout_ECX);
  iVar3 = (**(code **)(*local_14 + 0x14))();
  if (-1 < iVar3 + -1) {
    iVar9 = 0;
    do {
      iVar4 = (**(code **)(*local_14 + 0x18))(local_14,iVar9,*local_14,param_5);
      cVar1 = FUN_0041f594(iVar4,local_c,local_8,pcVar11);
      if (cVar1 != '\0') {
        iVar3 = (**(code **)(*local_14 + 0x18))(local_14,iVar9);
        FUN_00403d94((int *)(iVar3 + 0xc),param_5);
        local_10 = iVar9;
        break;
      }
      iVar9 = iVar9 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  if (local_10 == -1) {
    local_10 = (**(code **)(**(int **)(param_1 + 0x10) + 0x14))();
    piVar5 = FUN_0041f534((int *)PTR_DAT_0041f4b4,'\x01',local_c,param_5,local_8);
    piVar10 = &local_b4;
    FUN_004054e4((undefined4 *)PTR_PTR_004755dc,(int *)&local_b8);
    local_c8 = local_8;
    local_c4 = 6;
    local_c0 = param_5;
    local_bc = 6;
    FUN_00409224(local_b8,&local_c8,1,piVar10);
    (**(code **)(**(int **)(param_1 + 0x10) + 0x38))(*(int **)(param_1 + 0x10),local_b4,piVar5);
  }
  *(int *)(param_1 + 0x14) = local_10;
  BVar6 = OpenPrinterA(local_8,(LPHANDLE)(param_1 + 0x2c),(LPPRINTER_DEFAULTSA)0x0);
  if (BVar6 != 0) {
    if (*(int *)(param_1 + 0x28) == 0) {
      dwBytes = DocumentPropertiesA((HWND)0x0,*(HANDLE *)(param_1 + 0x2c),local_8,&local_b0,
                                    &local_b0,0);
      pvVar7 = GlobalAlloc(0x42,dwBytes);
      *(HGLOBAL *)(param_1 + 0x28) = pvVar7;
      if (pvVar7 != (HGLOBAL)0x0) {
        pDevModeOutput = (PDEVMODEA)GlobalLock(pvVar7);
        *(PDEVMODEA *)(param_1 + 0x24) = pDevModeOutput;
        LVar8 = DocumentPropertiesA((HWND)0x0,*(HANDLE *)(param_1 + 0x2c),local_8,pDevModeOutput,
                                    pDevModeOutput,2);
        if (LVar8 < 0) {
          GlobalUnlock(*(HGLOBAL *)(param_1 + 0x28));
          GlobalFree(*(HGLOBAL *)(param_1 + 0x28));
          *(undefined4 *)(param_1 + 0x28) = 0;
        }
      }
    }
    if (*(int *)(param_1 + 0x28) != 0) {
      FUN_0041fae0(param_1,*(uint *)(*(int *)(param_1 + 0x24) + 0x28));
    }
  }
  *in_FS_OFFSET = pcVar11;
  FUN_00403c00((int *)&local_b8,2);
  return;
}



undefined4 FUN_0041fd64(int param_1)

{
  int *piVar1;
  
  if (*(int *)(param_1 + 4) == 0) {
    piVar1 = FUN_0041f708((int *)PTR_PTR_0041f618,'\x01',param_1);
    *(int **)(param_1 + 4) = piVar1;
  }
  return *(undefined4 *)(param_1 + 4);
}



undefined4 FUN_0041fd84(int param_1)

{
  if (*(int *)(param_1 + 0x14) == -1) {
    FUN_0041ffdc(param_1);
  }
  return *(undefined4 *)(param_1 + 0x14);
}



void FUN_0041fd9c(int param_1,undefined4 param_2,undefined4 param_3)

{
  LPBYTE pBVar1;
  undefined4 uVar2;
  BOOL BVar3;
  int *piVar4;
  char *pcVar5;
  int *piVar6;
  byte bVar7;
  DWORD Flags;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_60;
  undefined1 *puStack_5c;
  undefined1 *puStack_58;
  undefined4 local_54;
  undefined1 *puStack_50;
  undefined1 *puStack_4c;
  undefined4 local_3c;
  undefined1 local_38;
  char *local_34;
  undefined1 local_30;
  byte *local_2c;
  int local_28;
  int local_24;
  DWORD local_20;
  DWORD local_1c;
  DWORD local_18;
  LPBYTE local_14;
  LPBYTE local_10;
  int local_c;
  int local_8;
  
  puStack_4c = &stack0xfffffffc;
  local_28 = 0;
  local_2c = (byte *)0x0;
  local_24 = 0;
  puStack_50 = &LAB_0041ffcb;
  local_54 = *in_FS_OFFSET;
  *in_FS_OFFSET = &local_54;
  local_8 = param_1;
  if (*(int *)(param_1 + 0x10) == 0) {
    puStack_58 = (undefined1 *)0x41fdda;
    uVar2 = FUN_00402f24((int *)PTR_PTR_0040e124,'\x01',param_3);
    *(undefined4 *)(local_8 + 0x10) = uVar2;
    puStack_5c = &LAB_0041ff88;
    uStack_60 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_60;
    if (*(int *)PTR_DAT_004758f8 == 2) {
      Flags = 6;
      bVar7 = 4;
    }
    else {
      Flags = 2;
      bVar7 = 5;
    }
    local_18 = 0;
    puStack_58 = &stack0xfffffffc;
    EnumPrintersA(Flags,(LPSTR)0x0,(uint)bVar7,(LPBYTE)0x0,0,&local_18,&local_1c);
    if (local_18 == 0) {
      *in_FS_OFFSET = uStack_60;
    }
    else {
      local_10 = (LPBYTE)FUN_004026f4(local_18);
      uVar2 = *in_FS_OFFSET;
      *in_FS_OFFSET = &stack0xffffff94;
      BVar3 = EnumPrintersA(Flags,(LPSTR)0x0,(uint)bVar7,local_10,local_18,&local_18,&local_1c);
      if (BVar3 != 0) {
        local_14 = local_10;
        if (-1 < (int)(local_1c - 1)) {
          local_20 = local_1c;
          do {
            pBVar1 = local_14;
            if (bVar7 == 4) {
              pcVar5 = *(char **)local_14;
              piVar4 = FUN_0041f534((int *)PTR_DAT_0041f4b4,'\x01',(char *)0x0,(char *)0x0,pcVar5);
              FUN_00403d94(&local_24,pcVar5);
              (**(code **)(**(int **)(local_8 + 0x10) + 0x38))
                        (*(int **)(local_8 + 0x10),local_24,piVar4);
              local_14 = local_14 + 0xc;
            }
            else {
              local_c = *(int *)(local_14 + 4);
              pcVar5 = FUN_0041f444(&local_c);
              while (*pcVar5 != '\0') {
                piVar6 = FUN_0041f534((int *)PTR_DAT_0041f4b4,'\x01',(char *)0x0,pcVar5,
                                      *(char **)pBVar1);
                piVar4 = &local_28;
                FUN_004054e4((undefined4 *)PTR_PTR_004755dc,(int *)&local_2c);
                local_3c = *(undefined4 *)pBVar1;
                local_38 = 6;
                local_30 = 6;
                local_34 = pcVar5;
                FUN_00409224(local_2c,&local_3c,1,piVar4);
                (**(code **)(**(int **)(local_8 + 0x10) + 0x38))
                          (*(int **)(local_8 + 0x10),local_28,piVar6);
                pcVar5 = FUN_0041f444(&local_c);
              }
              local_14 = local_14 + 0x14;
            }
            local_20 = local_20 - 1;
          } while (local_20 != 0);
        }
        *in_FS_OFFSET = uVar2;
        FUN_0040270c((int)local_10);
        return;
      }
      FUN_0040374c();
      *in_FS_OFFSET = uStack_60;
    }
  }
  *in_FS_OFFSET = local_54;
  puStack_4c = &LAB_0041ffd2;
  puStack_50 = (undefined1 *)0x41ffca;
  FUN_00403c00((int *)&local_2c,3);
  return;
}



void FUN_0041ffdc(int param_1)

{
  BOOL BVar1;
  DWORD DVar2;
  int *piVar3;
  int iVar4;
  int iVar5;
  char *pcVar6;
  char *pcVar7;
  char *pcVar8;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 uVar9;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 uVar10;
  int iVar11;
  undefined4 *in_FS_OFFSET;
  undefined1 uVar12;
  HGLOBAL pvVar13;
  uint *puVar14;
  undefined4 uVar15;
  undefined1 *puVar16;
  undefined1 *puStack_90;
  undefined1 *puStack_8c;
  undefined1 *puStack_88;
  int local_78;
  uint *local_74;
  undefined4 *local_70;
  CHAR local_6c [80];
  LPBYTE local_1c;
  char *local_18;
  CHAR *local_14;
  DWORD local_10;
  DWORD local_c;
  int local_8;
  
  puStack_88 = &stack0xfffffffc;
  local_78 = 0;
  local_74 = (uint *)0x0;
  local_70 = (undefined4 *)0x0;
  puStack_8c = &LAB_0042018d;
  puStack_90 = (undefined1 *)*in_FS_OFFSET;
  *in_FS_OFFSET = &puStack_90;
  local_c = 0;
  local_10 = 0;
  local_8 = param_1;
  BVar1 = EnumPrintersA(1,(LPSTR)0x0,5,(LPBYTE)0x0,0,&local_c,&local_10);
  if (BVar1 == 0) {
    DVar2 = GetLastError();
    if (DVar2 != 0x7a) {
      DVar2 = GetLastError();
      if (DVar2 == 0x7b) {
        FUN_004054e4((undefined4 *)PTR_PTR_00475618,(int *)&local_70);
        FUN_0041f478(local_70);
      }
      else {
        FUN_0040bc28();
      }
    }
  }
  local_1c = (LPBYTE)FUN_004081e8(local_c);
  puVar16 = &LAB_00420156;
  uVar15 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffff64;
  EnumPrintersA(1,(LPSTR)0x0,5,local_1c,local_c,&local_c,&local_10);
  if (local_10 == 0) {
    GetProfileStringA(s_windows_004201a8,s_device_004201a0,(LPCSTR)&lpDefault_0042019c,local_6c,0x4f
                     );
    local_14 = local_6c;
    local_18 = FUN_0041f444((int *)&local_14);
    uVar9 = extraout_ECX_00;
    uVar10 = extraout_EDX_00;
  }
  else {
    local_18 = *(char **)local_1c;
    uVar9 = extraout_ECX;
    uVar10 = extraout_EDX;
  }
  piVar3 = (int *)FUN_0041fd9c(local_8,uVar10,uVar9);
  iVar4 = (**(code **)(*piVar3 + 0x14))();
  if (-1 < iVar4 + -1) {
    iVar11 = 0;
    uVar12 = true;
    do {
      iVar5 = (**(code **)(*piVar3 + 0x18))(piVar3,iVar11);
      puVar14 = *(uint **)(iVar5 + 8);
      FUN_00403d94((int *)&local_74,local_18);
      FUN_00403f6c(puVar14,local_74);
      if ((bool)uVar12) {
        iVar4 = (**(code **)(*piVar3 + 0x18))(piVar3,iVar11);
        pcVar6 = FUN_00404020(*(undefined **)(iVar4 + 0xc));
        pvVar13 = (HGLOBAL)0x0;
        pcVar7 = FUN_00404020(*(undefined **)(iVar4 + 4));
        pcVar8 = FUN_00404020(*(undefined **)(iVar4 + 8));
        FUN_0041fb1c(local_8,pcVar8,pcVar7,pvVar13,pcVar6);
        FUN_0040374c();
        *in_FS_OFFSET = puVar16;
        puStack_90 = &LAB_00420194;
        FUN_00403c00(&local_78,3);
        return;
      }
      iVar11 = iVar11 + 1;
      iVar4 = iVar4 + -1;
      uVar12 = iVar4 == 0;
    } while (!(bool)uVar12);
  }
  *in_FS_OFFSET = uVar15;
  FUN_0040270c((int)local_1c);
  return;
}



void FUN_004201b0(int param_1)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  
  if (*(int **)(param_1 + 0x10) != (int *)0x0) {
    iVar1 = (**(code **)(**(int **)(param_1 + 0x10) + 0x14))();
    if (-1 < iVar1 + -1) {
      iVar3 = 0;
      do {
        piVar2 = (int *)(**(code **)(**(int **)(param_1 + 0x10) + 0x18))
                                  (*(int **)(param_1 + 0x10),iVar3);
        FUN_00402f54(piVar2);
        iVar3 = iVar3 + 1;
        iVar1 = iVar1 + -1;
      } while (iVar1 != 0);
    }
    FUN_0040bebc((undefined4 *)(param_1 + 0x10));
  }
  return;
}



void FUN_004201ec(int param_1)

{
  FUN_0040bebc((undefined4 *)(param_1 + 8));
  return;
}



int * FUN_004201f8(undefined4 param_1,undefined4 param_2,undefined4 param_3)

{
  if (DAT_00474614 == (int *)0x0) {
    DAT_00474614 = FUN_0041f7d0((int *)PTR_DAT_0041f3dc,'\x01',param_3);
  }
  return DAT_00474614;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00420218(void)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_10;
  undefined1 *puStack_c;
  undefined1 *puStack_8;
  
  puStack_8 = &stack0xfffffffc;
  puStack_c = &LAB_00420249;
  uStack_10 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_10;
  _DAT_004766fc = _DAT_004766fc + 1;
  if (_DAT_004766fc == 0) {
    FUN_00402f54(DAT_00474614);
  }
  *in_FS_OFFSET = uStack_10;
  return;
}



int FUN_0042025c(void)

{
  byte bVar1;
  int iVar2;
  
  if (DAT_00476728 != (code *)0x0) {
    iVar2 = (*DAT_00476728)();
    if (iVar2 != 0) {
      bVar1 = 1;
      goto LAB_00420288;
    }
  }
  bVar1 = 0;
LAB_00420288:
  return -(uint)bVar1;
}



int FUN_00420290(void)

{
  byte bVar1;
  int iVar2;
  
  if (DAT_0047672c != (code *)0x0) {
    iVar2 = (*DAT_0047672c)();
    if (iVar2 != 0) {
      bVar1 = 1;
      goto LAB_004202b0;
    }
  }
  bVar1 = 0;
LAB_004202b0:
  return -(uint)bVar1;
}



undefined4 FUN_0042239c(int param_1)

{
  undefined4 in_EDX;
  
  if (param_1 != 0) {
    do {
      if (*(int *)(param_1 + 0x6c) != 0) {
        return CONCAT31((int3)((uint)in_EDX >> 8),1);
      }
      param_1 = *(int *)(param_1 + 0x24);
    } while (param_1 != 0);
  }
  return 0;
}



int * FUN_004225a8(int *param_1,char param_2,int *param_3)

{
  int *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00431ef0(param_1,'\0',param_3);
  param_1[0x10] = DAT_00422610 | param_1[0x10];
  FUN_0042a5f8(param_1,0x41);
  FUN_0042a618(param_1,0x11);
  *(undefined1 *)((int)param_1 + 0x12d) = 1;
  *(undefined1 *)(param_1 + 0x4c) = 1;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_004228b4(int *param_1)

{
  char cVar1;
  HDC hDC;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  int iVar2;
  char acStack_20 [4];
  undefined1 local_1c [8];
  int iStack_14;
  undefined4 uStack_10;
  
  if (((*(byte *)(param_1 + 8) & 2) == 0) && (*(char *)((int)param_1 + 0x12d) != '\0')) {
    (**(code **)(*param_1 + 0x40))(param_1,local_1c);
    hDC = GetDC((HWND)0x0);
    FUN_00418454((int *)param_1[0x48],(int)hDC);
    FUN_00403130(param_1,local_1c,
                 (uint)(*(ushort *)(&DAT_0047462c + (uint)*(byte *)((int)param_1 + 0x12f) * 2) |
                       0x440));
    FUN_00418454((int *)param_1[0x48],0);
    ReleaseDC((HWND)0x0,hDC);
    iVar2 = param_1[0xc];
    acStack_20[0] = (char)param_1[0x4b];
    cVar1 = FUN_00403130(param_1,extraout_EDX,extraout_ECX);
    if (cVar1 != '\0') {
      FUN_00427ee0(acStack_20);
    }
    if (acStack_20[0] == '\x01') {
      iVar2 = iVar2 + (param_1[0xe] - iStack_14);
    }
    (**(code **)(*param_1 + 0x7c))(param_1,iVar2,param_1[0xd],uStack_10,iStack_14);
  }
  return;
}



uint FUN_004229b0(int param_1)

{
  return CONCAT31((int3)((uint)param_1 >> 8),(*(byte *)(param_1 + 0x40) & 0x40) != 0) ^ 1;
}



void FUN_00422a38(int *param_1,undefined4 param_2,undefined4 param_3)

{
  if ((char)param_2 != *(char *)((int)param_1 + 0x12f)) {
    *(char *)((int)param_1 + 0x12f) = (char)param_2;
    FUN_00403130(param_1,param_2,param_3);
    (**(code **)(*param_1 + 0x74))();
  }
  return;
}



void FUN_00422a60(int *param_1,int param_2,char param_3)

{
  FUN_0042a368(param_1,param_2,param_3);
  if ((param_3 == '\x01') && (param_2 == param_1[0x4a])) {
    param_1[0x4a] = 0;
  }
  return;
}



void FUN_00422aa8(int *param_1)

{
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  FUN_0042c62c(param_1);
  FUN_00403130(param_1,extraout_EDX,extraout_ECX);
  return;
}



void FUN_00422c3c(int *param_1,char param_2)

{
  if (param_2 != (char)param_1[0x7d]) {
    *(char *)(param_1 + 0x7d) = param_2;
    FUN_00423234(param_1);
    FUN_0042e448((int)param_1);
  }
  return;
}



undefined1 FUN_00422ccc(int *param_1)

{
  bool bVar1;
  HWND hWnd;
  LRESULT LVar2;
  undefined1 uVar3;
  UINT Msg;
  WPARAM wParam;
  LPARAM lParam;
  
  uVar3 = *(undefined1 *)((int)param_1 + 0x1fd);
  bVar1 = FUN_00431194((int)param_1);
  if (bVar1) {
    lParam = 0;
    wParam = 0;
    Msg = 0xb8;
    hWnd = (HWND)FUN_00430e98(param_1);
    LVar2 = SendMessageA(hWnd,Msg,wParam,lParam);
    uVar3 = LVar2 != 0;
  }
  return uVar3;
}



void FUN_00422d04(int *param_1,byte param_2)

{
  bool bVar1;
  uint wParam;
  HWND hWnd;
  UINT Msg;
  LPARAM lParam;
  
  bVar1 = FUN_00431194((int)param_1);
  if (bVar1) {
    lParam = 0;
    wParam = (uint)param_2;
    Msg = 0xb9;
    hWnd = (HWND)FUN_00430e98(param_1);
    SendMessageA(hWnd,Msg,wParam,lParam);
    return;
  }
  *(byte *)((int)param_1 + 0x1fd) = param_2;
  return;
}



void FUN_00422ed8(int *param_1)

{
  HWND hWnd;
  LPCSTR lpString;
  
  lpString = &LAB_00422ef0;
  hWnd = (HWND)FUN_00430e98(param_1);
  SetWindowTextA(hWnd,lpString);
  return;
}



void FUN_00422ef4(int *param_1)

{
  HWND hWnd;
  UINT Msg;
  WPARAM wParam;
  LPARAM lParam;
  
  lParam = -1;
  wParam = 0;
  Msg = 0xb1;
  hWnd = (HWND)FUN_00430e98(param_1);
  SendMessageA(hWnd,Msg,wParam,lParam);
  return;
}



void FUN_00422f10(int *param_1,char *param_2,int param_3)

{
  int iVar1;
  int iVar2;
  int *piVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  int local_c;
  
  puStack_20 = (undefined1 *)0x422f2a;
  iVar1 = (**(code **)(*param_1 + 0xbc))();
  puStack_20 = (undefined1 *)0x422f36;
  local_c = (**(code **)(*param_1 + 0xb8))();
  puStack_20 = (undefined1 *)0x422f40;
  iVar2 = FUN_0042ad34((int)param_1);
  puStack_20 = (undefined1 *)0x422f46;
  piVar3 = FUN_00408cf0(iVar2 + 1);
  puStack_24 = &LAB_00422f9a;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  puStack_20 = &stack0xfffffffc;
  iVar2 = FUN_00408d04((int)piVar3);
  FUN_0042ad44((int)param_1,piVar3,iVar2);
  if (param_3 <= local_c) {
    local_c = param_3 + -1;
  }
  FUN_00408b84(param_2,(char *)((int)piVar3 + iVar1),local_c);
  *in_FS_OFFSET = uStack_28;
  puStack_20 = &LAB_00422fa1;
  puStack_24 = (undefined1 *)0x422f99;
  FUN_00408d3c((int)piVar3);
  return;
}



void FUN_00422fac(int *param_1,int *param_2)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  int *piVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  
  puStack_1c = (undefined1 *)0x422fc3;
  iVar1 = (**(code **)(*param_1 + 0xbc))();
  puStack_1c = (undefined1 *)0x422fd0;
  uVar2 = (**(code **)(*param_1 + 0xb8))();
  puStack_1c = (undefined1 *)0x422fdd;
  FUN_00403cc4(param_2,(undefined4 *)0x0,uVar2);
  if (uVar2 != 0) {
    puStack_1c = (undefined1 *)0x422fe8;
    iVar3 = FUN_0042ad34((int)param_1);
    puStack_1c = (undefined1 *)0x422fee;
    piVar4 = FUN_00408cf0(iVar3 + 1);
    puStack_20 = &LAB_0042303a;
    uStack_24 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_24;
    puStack_1c = &stack0xfffffffc;
    iVar3 = FUN_00408d04((int)piVar4);
    FUN_0042ad44((int)param_1,piVar4,iVar3);
    FUN_00402920((undefined4 *)((int)piVar4 + iVar1),(undefined4 *)*param_2,uVar2);
    *in_FS_OFFSET = uStack_24;
    puStack_1c = (undefined1 *)0x423041;
    puStack_20 = (undefined1 *)0x423039;
    FUN_00408d3c((int)piVar4);
    return;
  }
  return;
}



void FUN_00423234(int *param_1)

{
  if ((*(char *)((int)param_1 + 0x1f7) != '\0') && ((char)param_1[0x7d] == '\x01')) {
    param_1[0x10] = DAT_0042326c | param_1[0x10];
    FUN_00423270(param_1);
    return;
  }
  param_1[0x10] = ~DAT_0042326c & param_1[0x10];
  return;
}



void FUN_00423270(int *param_1)

{
  HDC hdc;
  HGDIOBJ pvVar1;
  int iVar2;
  int iVar3;
  LONG LVar4;
  tagTEXTMETRICA local_7c;
  tagTEXTMETRICA local_44;
  
  hdc = GetDC((HWND)0x0);
  GetTextMetricsA(hdc,&local_7c);
  pvVar1 = (HGDIOBJ)FUN_00417048(param_1[0x16]);
  pvVar1 = SelectObject(hdc,pvVar1);
  GetTextMetricsA(hdc,&local_44);
  SelectObject(hdc,pvVar1);
  ReleaseDC((HWND)0x0,hdc);
  if (*PTR_DAT_00475700 == '\0') {
    LVar4 = local_7c.tmHeight;
    if (local_44.tmHeight < local_7c.tmHeight) {
      LVar4 = local_44.tmHeight;
    }
    iVar2 = GetSystemMetrics(6);
    if (LVar4 < 0) {
      LVar4 = LVar4 + 3;
    }
    iVar2 = iVar2 * 4 + (LVar4 >> 2);
  }
  else {
    if ((char)param_1[0x4e] == '\0') {
      iVar3 = 6;
    }
    else {
      iVar3 = 8;
    }
    iVar2 = GetSystemMetrics(6);
    iVar2 = iVar2 * iVar3;
  }
  FUN_0042a618(param_1,local_44.tmHeight + iVar2);
  return;
}



void FUN_00423318(int param_1)

{
  FUN_0042aa2c(param_1);
  if (*(short *)(param_1 + 0x202) != 0) {
    (**(code **)(param_1 + 0x200))(*(undefined4 *)(param_1 + 0x204),param_1);
  }
  return;
}



void FUN_004233e8(int *param_1)

{
  FUN_00430498(param_1);
  if (((*(byte *)((int)param_1 + 0x41) & 2) != 0) &&
     (((*(byte *)(param_1 + 8) & 0x10) == 0 || ((*(byte *)(param_1 + 8) & 1) == 0)))) {
    FUN_00423270(param_1);
  }
  return;
}



void FUN_0042346c(int *param_1)

{
  bool bVar1;
  HWND hWnd;
  uint uVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 uVar3;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 uVar4;
  int nIndex;
  
  (**(code **)(*param_1 + -0x10))();
  bVar1 = FUN_00431194((int)param_1);
  uVar3 = extraout_ECX;
  uVar4 = extraout_EDX;
  if (bVar1) {
    nIndex = -0x10;
    hWnd = (HWND)FUN_00430e98(param_1);
    uVar2 = GetWindowLongA(hWnd,nIndex);
    uVar3 = extraout_ECX_00;
    uVar4 = extraout_EDX_00;
    if ((uVar2 & 4) == 0) {
      return;
    }
  }
  FUN_00403130(param_1,uVar4,uVar3);
  return;
}



void FUN_004234a4(int param_1)

{
  HWND hWnd;
  UINT Msg;
  WPARAM wParam;
  LPARAM lParam;
  
  lParam = 0;
  wParam = 0;
  Msg = 0x146;
  hWnd = (HWND)FUN_00430e98(*(int **)(param_1 + 0xc));
  SendMessageA(hWnd,Msg,wParam,lParam);
  return;
}



void FUN_004234c0(int param_1,WPARAM param_2,int *param_3)

{
  HWND hWnd;
  uint uVar1;
  UINT Msg;
  int *lParam;
  int aiStack_100c [1024];
  
  lParam = aiStack_100c;
  Msg = 0x148;
  aiStack_100c[0] = param_1;
  hWnd = (HWND)FUN_00430e98(*(int **)(param_1 + 0xc));
  uVar1 = SendMessageA(hWnd,Msg,param_2,(LPARAM)lParam);
  if (uVar1 == 0xffffffff) {
    uVar1 = 0;
  }
  FUN_00403cc4(param_3,aiStack_100c,uVar1);
  return;
}



void FUN_004236c4(int param_1)

{
  HWND hWnd;
  undefined4 *in_FS_OFFSET;
  UINT Msg;
  WPARAM wParam;
  LPARAM lParam;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  uint *local_8;
  
  puStack_10 = &stack0xfffffffc;
  local_8 = (uint *)0x0;
  puStack_14 = &LAB_00423728;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  FUN_0042adc0(*(int *)(param_1 + 0xc),(int *)&local_8);
  lParam = 0;
  wParam = 0;
  Msg = 0x14b;
  hWnd = (HWND)FUN_00430e98(*(int **)(param_1 + 0xc));
  SendMessageA(hWnd,Msg,wParam,lParam);
  FUN_0042adf0(*(int *)(param_1 + 0xc),local_8);
  (**(code **)(**(int **)(param_1 + 0xc) + 0x80))();
  *in_FS_OFFSET = uStack_18;
  puStack_10 = &LAB_0042372f;
  puStack_14 = (undefined1 *)0x423727;
  FUN_00403bdc((int *)&local_8);
  return;
}



int * FUN_00423790(int *param_1,char param_2,int *param_3)

{
  int iVar1;
  int *piVar2;
  undefined1 *puVar3;
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0042cf04(param_1,'\0',param_3);
  if (*PTR_DAT_00475700 == '\0') {
    param_1[0x10] = DAT_00423888;
  }
  else {
    param_1[0x10] = DAT_00423884;
  }
  FUN_0042a5f8(param_1,0x91);
  FUN_0042a618(param_1,0x19);
  FUN_004310c4((int)param_1,'\x01');
  FUN_0042af70((int)param_1,'\0');
  iVar1 = FUN_00402f24((int *)PTR_PTR_004223b4,'\x01',extraout_ECX_00);
  param_1[0x7c] = iVar1;
  *(int **)(iVar1 + 0xc) = param_1;
  piVar2 = FUN_00417954((int *)PTR_PTR_004262cc,'\x01',extraout_ECX_01);
  param_1[0x7d] = (int)piVar2;
  param_1[0x7f] = 0x10;
  *(undefined1 *)((int)param_1 + 0x1fa) = 0;
  puVar3 = FUN_004406a0();
  param_1[0x84] = (int)puVar3;
  puVar3 = FUN_004406a0();
  param_1[0x85] = (int)puVar3;
  param_1[0x81] = 8;
  param_1[0x8a] = -1;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



void FUN_0042388c(int *param_1,char param_2)

{
  bool bVar1;
  int *piVar2;
  byte extraout_DL;
  
  piVar2 = FUN_004032b4(param_1,param_2);
  bVar1 = FUN_00431194((int)piVar2);
  if (bVar1) {
    (**(code **)(*piVar2 + 0x9c))();
  }
  FUN_00440738(piVar2[0x85]);
  FUN_00440738(piVar2[0x84]);
  FUN_00402f54((int *)piVar2[0x7d]);
  FUN_00402f54((int *)piVar2[0x7c]);
  FUN_00402f54((int *)piVar2[0x89]);
  FUN_0042d020(piVar2,extraout_DL & 0xfc);
  if ('\0' < (char)extraout_DL) {
    FUN_004032a4(piVar2);
  }
  return;
}



void FUN_00423900(int param_1)

{
  FUN_0042ad9c(param_1,0x423928);
  (**(code **)(**(int **)(param_1 + 0x1f0) + 0x40))();
  *(undefined4 *)(param_1 + 0x228) = 0xffffffff;
  return;
}



bool FUN_0042392c(int *param_1)

{
  HWND hWnd;
  LRESULT LVar1;
  UINT Msg;
  WPARAM wParam;
  LPARAM lParam;
  
  lParam = 0;
  wParam = 0;
  Msg = 0x157;
  hWnd = (HWND)FUN_00430e98(param_1);
  LVar1 = SendMessageA(hWnd,Msg,wParam,lParam);
  return LVar1 != 0;
}



void FUN_00423950(int *param_1,byte param_2)

{
  uint wParam;
  HWND pHVar1;
  UINT Msg;
  RECT *lpRect;
  LPARAM lParam;
  BOOL bErase;
  RECT RStack_18;
  
  lParam = 0;
  wParam = (uint)param_2;
  Msg = 0x14f;
  pHVar1 = (HWND)FUN_00430e98(param_1);
  SendMessageA(pHVar1,Msg,wParam,lParam);
  lpRect = &RStack_18;
  (**(code **)(*param_1 + 0x40))(param_1,&RStack_18);
  bErase = -1;
  pHVar1 = (HWND)FUN_00430e98(param_1);
  InvalidateRect(pHVar1,lpRect,bErase);
  return;
}



void FUN_00423998(int *param_1)

{
  HWND hWnd;
  UINT Msg;
  WPARAM wParam;
  LPARAM lParam;
  
  lParam = 0;
  wParam = 0;
  Msg = 0x147;
  hWnd = (HWND)FUN_00430e98(param_1);
  SendMessageA(hWnd,Msg,wParam,lParam);
  return;
}



void FUN_004239b4(int *param_1,WPARAM param_2)

{
  WPARAM WVar1;
  HWND hWnd;
  UINT Msg;
  LPARAM lParam;
  
  WVar1 = FUN_00423998(param_1);
  if (param_2 != WVar1) {
    lParam = 0;
    Msg = 0x14e;
    hWnd = (HWND)FUN_00430e98(param_1);
    SendMessageA(hWnd,Msg,param_2,lParam);
  }
  return;
}



undefined4 FUN_00423a20(int param_1)

{
  undefined4 uVar1;
  
  if ((byte)(*(char *)(param_1 + 0x1fa) - 3U) < 2) {
    return *(undefined4 *)(param_1 + 0x1fc);
  }
  uVar1 = FUN_0042bd64(param_1,0x154,0,0);
  return uVar1;
}



void FUN_00423a44(int param_1,int param_2)

{
  if (0 < param_2) {
    *(int *)(param_1 + 0x1fc) = param_2;
    FUN_0042e448(param_1);
  }
  return;
}



void FUN_00423ab8(int *param_1)

{
  HWND pHVar1;
  int iVar2;
  LONG LVar3;
  UINT UVar4;
  WPARAM WVar5;
  LPARAM LVar6;
  
  FUN_0042e088(param_1);
  LVar6 = 0;
  WVar5 = param_1[0x80];
  UVar4 = 0x141;
  pHVar1 = (HWND)FUN_00430e98(param_1);
  SendMessageA(pHVar1,UVar4,WVar5,LVar6);
  if (param_1[0x89] != 0) {
    (**(code **)(*(int *)param_1[0x7c] + 8))((int *)param_1[0x7c],param_1[0x89]);
    FUN_00402f54((int *)param_1[0x89]);
    param_1[0x89] = 0;
    if (param_1[0x8a] != -1) {
      iVar2 = (**(code **)(*(int *)param_1[0x7c] + 0x14))();
      if (iVar2 < param_1[0x8a]) {
        iVar2 = (**(code **)(*(int *)param_1[0x7c] + 0x14))();
        param_1[0x8a] = iVar2;
      }
      LVar6 = 0;
      WVar5 = param_1[0x8a];
      UVar4 = 0x14e;
      pHVar1 = (HWND)FUN_00430e98(param_1);
      SendMessageA(pHVar1,UVar4,WVar5,LVar6);
    }
  }
  param_1[0x82] = 0;
  param_1[0x83] = 0;
  if (*(byte *)((int)param_1 + 0x1fa) < 2) {
    UVar4 = 5;
    pHVar1 = (HWND)(**(code **)(*param_1 + 0xbc))();
    pHVar1 = GetWindow(pHVar1,UVar4);
    if (pHVar1 != (HWND)0x0) {
      if (*(char *)((int)param_1 + 0x1fa) == '\x01') {
        param_1[0x83] = (int)pHVar1;
        LVar3 = GetWindowLongA(pHVar1,-4);
        param_1[0x87] = LVar3;
        SetWindowLongA((HWND)param_1[0x83],-4,param_1[0x85]);
        pHVar1 = GetWindow(pHVar1,2);
      }
      param_1[0x82] = (int)pHVar1;
      LVar3 = GetWindowLongA(pHVar1,-4);
      param_1[0x86] = LVar3;
      SetWindowLongA((HWND)param_1[0x82],-4,param_1[0x84]);
    }
  }
  if ((*PTR_DAT_00475700 != '\0') && (param_1[0x82] != 0)) {
    SendMessageA((HWND)param_1[0x82],0xd3,3,0);
  }
  return;
}



void FUN_00423c1c(int *param_1)

{
  int iVar1;
  int *piVar2;
  undefined4 extraout_ECX;
  
  iVar1 = (**(code **)(*(int *)param_1[0x7c] + 0x14))();
  if (0 < iVar1) {
    iVar1 = FUN_00423998(param_1);
    param_1[0x8a] = iVar1;
    piVar2 = (int *)FUN_00402f24((int *)PTR_PTR_0040e124,'\x01',extraout_ECX);
    param_1[0x89] = (int)piVar2;
    (**(code **)(*piVar2 + 8))(piVar2,param_1[0x7c]);
  }
  FUN_0042e264(param_1);
  return;
}



void FUN_004242c8(int *param_1)

{
  int iVar1;
  int iVar2;
  HWND hWnd;
  undefined4 *in_FS_OFFSET;
  HWND hWndInsertAfter;
  int X;
  int Y;
  UINT uFlags;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  
  puStack_10 = (undefined1 *)0x4242de;
  iVar1 = (**(code **)(*(int *)param_1[0x7c] + 0x14))();
  if (param_1[0x81] < iVar1) {
    iVar1 = param_1[0x81];
  }
  if (iVar1 < 1) {
    iVar1 = 1;
  }
  *(undefined1 *)(param_1 + 0x8b) = 1;
  puStack_14 = &uFlags_0042435d;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  uFlags = 0x9e;
  puStack_10 = &stack0xfffffffc;
  iVar2 = FUN_00423a20((int)param_1);
  iVar2 = iVar2 * iVar1 + param_1[0xf] + 2;
  iVar1 = param_1[0xe];
  Y = 0;
  X = 0;
  hWndInsertAfter = (HWND)0x0;
  hWnd = (HWND)FUN_00430e98(param_1);
  SetWindowPos(hWnd,hWndInsertAfter,X,Y,iVar1,iVar2,uFlags);
  *in_FS_OFFSET = uStack_18;
  *(undefined1 *)(param_1 + 0x8b) = 0;
  return;
}



void FUN_004244f4(int param_1,undefined4 param_2,LONG *param_3,undefined2 param_4)

{
  int iVar1;
  RECT *pRVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffc8;
  undefined1 *puStack_30;
  undefined1 *puStack_2c;
  undefined1 *puStack_28;
  undefined *local_18;
  RECT local_14;
  
  puStack_28 = &stack0xfffffffc;
  local_18 = (undefined *)0x0;
  pRVar2 = &local_14;
  for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {
    pRVar2->left = *param_3;
    param_3 = param_3 + 1;
    pRVar2 = (RECT *)&pRVar2->top;
  }
  puStack_2c = &LAB_0042459c;
  puStack_30 = (undefined1 *)*in_FS_OFFSET;
  *in_FS_OFFSET = &puStack_30;
  FUN_00429b40(*(int *)(param_1 + 500));
  if (*(short *)(param_1 + 0x242) == 0) {
    FUN_00417eb0(*(int **)(param_1 + 500),&local_14);
    (**(code **)(**(int **)(param_1 + 0x1f0) + 0xc))(*(int **)(param_1 + 0x1f0),param_2,&local_18);
    FUN_004180c0(*(int **)(param_1 + 500),local_14.left + 2,local_14.top,local_18);
  }
  else {
    in_stack_ffffffc8 = CONCAT22((short)((uint)&local_14 >> 0x10),param_4);
    (**(code **)(param_1 + 0x240))
              (*(undefined4 *)(param_1 + 0x244),param_1,param_2,in_stack_ffffffc8,&local_14);
  }
  *in_FS_OFFSET = in_stack_ffffffc8;
  puStack_30 = &LAB_004245a3;
  FUN_00403bdc((int *)&local_18);
  return;
}



void FUN_004245ec(int *param_1,int param_2)

{
  int iVar1;
  undefined4 extraout_ECX;
  ushort uVar2;
  
  iVar1 = *(int *)(param_2 + 8);
  uVar2 = *(ushort *)(iVar1 + 0x10);
  if ((*(uint *)(iVar1 + 0x10) & 0x1000) != 0) {
    uVar2 = uVar2 | 0x1000;
  }
  if ((*(uint *)(iVar1 + 0x10) & 0x20) != 0) {
    uVar2 = uVar2 | 0x20;
  }
  FUN_00418454((int *)param_1[0x7d],*(int *)(iVar1 + 0x18));
  FUN_004182f4(param_1[0x7d]);
  FUN_00418310(param_1[0x7d]);
  if ((-1 < *(int *)(iVar1 + 8)) && ((uVar2 & 1) != 0)) {
    FUN_00417804(*(int **)(param_1[0x7d] + 0x14),0x8000000d);
    FUN_00417034(*(int **)(param_1[0x7d] + 0xc),-0x7ffffff2,extraout_ECX);
  }
  if (*(int *)(iVar1 + 8) < 0) {
    FUN_00417eb0((int *)param_1[0x7d],(RECT *)(iVar1 + 0x1c));
  }
  else {
    (**(code **)(*param_1 + 0xb8))(param_1,*(undefined4 *)(iVar1 + 8),iVar1 + 0x1c,uVar2);
  }
  if ((uVar2 & 0x10) != 0) {
    DrawFocusRect(*(HDC *)(iVar1 + 0x18),(RECT *)(iVar1 + 0x1c));
  }
  FUN_00418454((int *)param_1[0x7d],0);
  return;
}



void FUN_004246bc(int *param_1,int param_2)

{
  int iVar1;
  
  iVar1 = *(int *)(param_2 + 8);
  *(int *)(iVar1 + 0x10) = param_1[0x7f];
  if (*(char *)((int)param_1 + 0x1fa) == '\x04') {
    (**(code **)(*param_1 + 0xc0))(param_1,*(undefined4 *)(iVar1 + 8),iVar1 + 0x10);
  }
  return;
}



int * FUN_00424858(int *param_1,char param_2,int *param_3)

{
  int *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0042cf04(param_1,'\0',param_3);
  if ((PTR_DAT_004758fc[8] != '\0') && (*(int *)PTR_DAT_004758f8 == 2)) {
    *(undefined1 *)(param_1 + 0x55) = 0;
  }
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



int * FUN_0042497c(int *param_1,char param_2,int *param_3)

{
  int *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00424858(param_1,'\0',param_3);
  param_1[0x10] = DAT_004249dc;
  FUN_0042a5f8(param_1,0x4b);
  FUN_0042a618(param_1,0x19);
  FUN_004310c4((int)param_1,'\x01');
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_00424a08(int *param_1,char param_2)

{
  bool bVar1;
  HWND pHVar2;
  uint uVar3;
  uint wParam;
  UINT Msg;
  int nIndex;
  LPARAM lParam;
  
  bVar1 = FUN_00431194((int)param_1);
  if (bVar1) {
    wParam = (uint)(param_2 != '\0');
    nIndex = -0x10;
    pHVar2 = (HWND)FUN_00430e98(param_1);
    uVar3 = GetWindowLongA(pHVar2,nIndex);
    if ((uVar3 & 0xf) != wParam) {
      lParam = 1;
      Msg = 0xf4;
      pHVar2 = (HWND)FUN_00430e98(param_1);
      SendMessageA(pHVar2,Msg,wParam,lParam);
    }
  }
  return;
}



void FUN_00424a5c(int *param_1,undefined1 param_2)

{
  bool bVar1;
  int *piVar2;
  
  *(undefined1 *)(param_1 + 0x7e) = param_2;
  bVar1 = FUN_00431194((int)param_1);
  if (bVar1) {
    piVar2 = FUN_00440984(param_1);
    if (piVar2 != (int *)0x0) {
      FUN_0042bd64((int)piVar2,0xb007,0,piVar2[0x82]);
    }
  }
  return;
}



void FUN_00424af8(int *param_1,int param_2)

{
  byte bVar1;
  char cVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  
  if (((*(short *)(param_2 + 4) == 0xd) && (*(char *)((int)param_1 + 0x1fa) != '\0')) ||
     ((*(short *)(param_2 + 4) == 0x1b && (*(char *)((int)param_1 + 0x1f9) != '\0')))) {
    bVar1 = FUN_0044088c(*(uint *)(param_2 + 8));
    if ((DAT_00424b64 == bVar1) &&
       (cVar2 = FUN_00403130(param_1,CONCAT31((int3)((uint)extraout_EDX >> 8),DAT_00424b64),
                             extraout_ECX), cVar2 != '\0')) {
      FUN_00403130(param_1,extraout_EDX_00,extraout_ECX_00);
      *(undefined4 *)(param_2 + 0xc) = 1;
      return;
    }
  }
  FUN_004303b8((int)param_1,param_2);
  return;
}



void FUN_00424bec(int *param_1,int param_2)

{
  int *piVar1;
  int *piVar2;
  
  piVar1 = *(int **)(param_2 + 8);
  piVar2 = FUN_004030cc(piVar1,(int)PTR_PTR_00421b4c);
  if ((char)piVar2 == '\0') {
    *(char *)((int)param_1 + 0x1fa) = (char)param_1[0x7e];
  }
  else {
    *(bool *)((int)param_1 + 0x1fa) = param_1 == piVar1;
  }
  (**(code **)(*param_1 + 0xbc))(param_1,*(undefined1 *)((int)param_1 + 0x1fa));
  FUN_004303c8((int)param_1,param_2);
  return;
}



void FUN_00424c64(int param_1,WPARAM param_2,int *param_3)

{
  HWND hWnd;
  uint uVar1;
  undefined4 unaff_ESI;
  undefined4 *in_FS_OFFSET;
  UINT Msg;
  WPARAM wParam;
  undefined4 *lParam;
  undefined4 uStack_1024;
  undefined1 *puStack_1020;
  undefined1 *puStack_101c;
  byte *local_100c;
  undefined4 local_1008;
  int iStack_1004;
  int *local_8;
  
  puStack_101c = &stack0xfffffffc;
  local_100c = (byte *)0x0;
  puStack_1020 = &LAB_00424cfa;
  uStack_1024 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1024;
  lParam = &local_1008;
  Msg = 0x189;
  wParam = param_2;
  iStack_1004 = param_1;
  local_8 = param_3;
  hWnd = (HWND)FUN_00430e98(*(int **)(param_1 + 0xc));
  uVar1 = SendMessageA(hWnd,Msg,wParam,(LPARAM)lParam);
  if ((int)uVar1 < 0) {
    FUN_004054e4((undefined4 *)PTR_PTR_0047581c,(int *)&local_100c);
    FUN_00410708(param_1,local_100c,param_2);
  }
  FUN_00403cc4(local_8,&local_1008,uVar1);
  *in_FS_OFFSET = unaff_ESI;
  local_100c = &LAB_00424d01;
  FUN_00403bdc((int *)&local_100c);
  return;
}



int * FUN_004251cc(int *param_1,char param_2,int *param_3)

{
  int iVar1;
  int *piVar2;
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0042cf04(param_1,'\0',param_3);
  if (*PTR_DAT_00475700 == '\0') {
    param_1[0x10] = DAT_004252a0;
  }
  else {
    param_1[0x10] = DAT_0042529c;
  }
  FUN_0042a5f8(param_1,0x79);
  FUN_0042a618(param_1,0x61);
  FUN_004310c4((int)param_1,'\x01');
  FUN_0042af70((int)param_1,'\0');
  iVar1 = FUN_00402f24((int *)PTR_PTR_004224b0,'\x01',extraout_ECX_00);
  param_1[0x7c] = iVar1;
  *(int **)(iVar1 + 0xc) = param_1;
  piVar2 = FUN_00417954((int *)PTR_PTR_004262cc,'\x01',extraout_ECX_01);
  param_1[0x7e] = (int)piVar2;
  FUN_00429b28(piVar2,(int)param_1);
  param_1[0x80] = 0x10;
  *(undefined1 *)(param_1 + 0x7d) = 1;
  *(undefined1 *)(param_1 + 0x82) = 1;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



void FUN_004252a4(int *param_1,char param_2)

{
  int *piVar1;
  byte extraout_DL;
  
  piVar1 = FUN_004032b4(param_1,param_2);
  FUN_0042d020(piVar1,extraout_DL & 0xfc);
  FUN_00402f54((int *)piVar1[0x7e]);
  FUN_00402f54((int *)piVar1[0x7c]);
  FUN_00402f54((int *)piVar1[0x84]);
  if ('\0' < (char)extraout_DL) {
    FUN_004032a4(piVar1);
  }
  return;
}



void FUN_0042533c(int *param_1,undefined4 param_2,undefined4 param_3)

{
  FUN_00403130(param_1,param_2,param_3);
  return;
}



void FUN_00425390(int param_1)

{
  (**(code **)(**(int **)(param_1 + 0x1f0) + 0x40))();
  return;
}



void FUN_0042539c(int *param_1)

{
  int iVar1;
  WPARAM wParam;
  HWND hWnd;
  UINT Msg;
  LPARAM lParam;
  
  iVar1 = param_1[0x7f];
  if ((0 < iVar1) && (0 < param_1[0xe])) {
    wParam = (param_1[0xe] + iVar1 + -3) / iVar1;
    if ((int)wParam < 1) {
      wParam = 1;
    }
    lParam = 0;
    Msg = 0x195;
    hWnd = (HWND)FUN_00430e98(param_1);
    SendMessageA(hWnd,Msg,wParam,lParam);
  }
  return;
}



void FUN_004253e0(int *param_1,int param_2)

{
  bool bVar1;
  
  if (param_2 != param_1[0x7f]) {
    if ((param_1[0x7f] == 0) || (param_2 == 0)) {
      param_1[0x7f] = param_2;
      FUN_0042e448((int)param_1);
    }
    else {
      param_1[0x7f] = param_2;
      bVar1 = FUN_00431194((int)param_1);
      if (bVar1) {
        FUN_0042539c(param_1);
      }
    }
  }
  return;
}



void FUN_00425424(int *param_1)

{
  HWND pHVar1;
  UINT UVar2;
  WPARAM WVar3;
  LPARAM LVar4;
  
  if (*(char *)((int)param_1 + 0x206) != '\0') {
    LVar4 = 0;
    WVar3 = 0;
    UVar2 = 0x19f;
    pHVar1 = (HWND)FUN_00430e98(param_1);
    SendMessageA(pHVar1,UVar2,WVar3,LVar4);
    return;
  }
  LVar4 = 0;
  WVar3 = 0;
  UVar2 = 0x188;
  pHVar1 = (HWND)FUN_00430e98(param_1);
  SendMessageA(pHVar1,UVar2,WVar3,LVar4);
  return;
}



void FUN_00425460(int *param_1,WPARAM param_2)

{
  WPARAM WVar1;
  HWND pHVar2;
  UINT UVar3;
  LPARAM LVar4;
  
  WVar1 = FUN_00425424(param_1);
  if (param_2 != WVar1) {
    if (*(char *)((int)param_1 + 0x206) == '\0') {
      LVar4 = 0;
      UVar3 = 0x186;
      pHVar2 = (HWND)FUN_00430e98(param_1);
      SendMessageA(pHVar2,UVar3,param_2,LVar4);
    }
    else {
      LVar4 = 0;
      UVar3 = 0x19e;
      pHVar2 = (HWND)FUN_00430e98(param_1);
      SendMessageA(pHVar2,UVar3,param_2,LVar4);
    }
  }
  return;
}



void FUN_004254c0(int *param_1,char param_2)

{
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  if (param_2 != *(char *)((int)param_1 + 0x205)) {
    *(char *)((int)param_1 + 0x205) = param_2;
    FUN_0042e448((int)param_1);
    FUN_00403130(param_1,extraout_EDX,extraout_ECX);
  }
  return;
}



int FUN_004254e8(int param_1)

{
  bool bVar1;
  int iVar2;
  undefined1 auStack_18 [4];
  int local_14;
  int local_c;
  
  iVar2 = *(int *)(param_1 + 0x200);
  bVar1 = FUN_00431194(param_1);
  if ((bVar1) && (*(char *)(param_1 + 0x204) == '\0')) {
    FUN_0042bd64(param_1,0x198,0,auStack_18);
    iVar2 = local_c - local_14;
  }
  return iVar2;
}



void FUN_0042552c(int param_1,int param_2)

{
  if ((param_2 != *(int *)(param_1 + 0x200)) && (0 < param_2)) {
    *(int *)(param_1 + 0x200) = param_2;
    FUN_0042e448(param_1);
  }
  return;
}



void FUN_00425544(int param_1,char param_2)

{
  if (param_2 != *(char *)(param_1 + 0x206)) {
    *(char *)(param_1 + 0x206) = param_2;
    FUN_0042e448(param_1);
  }
  return;
}



bool FUN_00425558(int *param_1,WPARAM param_2)

{
  HWND hWnd;
  int iVar1;
  undefined4 uVar2;
  UINT Msg;
  WPARAM wParam;
  LPARAM lParam;
  WPARAM local_10;
  undefined1 local_c;
  
  lParam = 0;
  Msg = 0x187;
  wParam = param_2;
  hWnd = (HWND)FUN_00430e98(param_1);
  iVar1 = SendMessageA(hWnd,Msg,wParam,lParam);
  if (iVar1 == -1) {
    local_c = 0;
    local_10 = param_2;
    uVar2 = FUN_0040ab08((int)PTR_DAT_0040da80,'\x01',(undefined4 *)PTR_PTR_0047581c,0,&local_10);
    iVar1 = FUN_004036ac(uVar2);
  }
  return iVar1 != 0;
}



void FUN_004255a8(int param_1,char param_2)

{
  if (param_2 != *(char *)(param_1 + 0x207)) {
    *(char *)(param_1 + 0x207) = param_2;
    FUN_0042e448(param_1);
  }
  return;
}



void FUN_004255bc(int param_1,char param_2)

{
  if (param_2 != *(char *)(param_1 + 0x204)) {
    *(char *)(param_1 + 0x204) = param_2;
    FUN_0042e448(param_1);
  }
  return;
}



void FUN_004255d0(int *param_1)

{
  HWND hWnd;
  UINT Msg;
  WPARAM wParam;
  LPARAM lParam;
  
  lParam = 0;
  wParam = 0;
  Msg = 0x18e;
  hWnd = (HWND)FUN_00430e98(param_1);
  SendMessageA(hWnd,Msg,wParam,lParam);
  return;
}



void FUN_004255ec(int *param_1,WPARAM param_2)

{
  WPARAM WVar1;
  HWND hWnd;
  UINT Msg;
  LPARAM lParam;
  
  WVar1 = FUN_004255d0(param_1);
  if (param_2 != WVar1) {
    lParam = 0;
    Msg = 0x197;
    hWnd = (HWND)FUN_00430e98(param_1);
    SendMessageA(hWnd,Msg,param_2,lParam);
  }
  return;
}



int FUN_00425618(int *param_1,POINT *param_2,char param_3)

{
  POINT pt;
  POINT pt_00;
  BOOL BVar1;
  int iVar2;
  int iVar3;
  LONG LVar4;
  LONG LVar5;
  RECT RStack_30;
  RECT local_20;
  
  LVar4 = param_2->x;
  LVar5 = param_2->y;
  pt_00 = *param_2;
  (**(code **)(*param_1 + 0x40))(param_1,&local_20);
  pt.y = LVar5;
  pt.x = LVar4;
  BVar1 = PtInRect(&local_20,pt);
  if (BVar1 != 0) {
    iVar2 = FUN_004255d0(param_1);
    iVar3 = (**(code **)(*(int *)param_1[0x7c] + 0x14))();
    for (; iVar2 < iVar3; iVar2 = iVar2 + 1) {
      FUN_0042bd64((int)param_1,0x198,iVar2,&RStack_30);
      BVar1 = PtInRect(&RStack_30,pt_00);
      if (BVar1 != 0) {
        return iVar2;
      }
    }
    if (param_3 == '\0') {
      return iVar2;
    }
  }
  return -1;
}



void FUN_004256a4(int *param_1,int *param_2)

{
  byte bVar1;
  undefined *puVar2;
  uint uVar3;
  
  FUN_0042df5c(param_1,param_2);
  FUN_0042de88(param_1,(int)param_2,s_LISTBOX_0042579c);
  puVar2 = &DAT_004746a0;
  if ((char)param_1[0x82] != '\0') {
    puVar2 = &DAT_004746a8;
  }
  bVar1 = *(byte *)((int)param_1 + 0x206);
  uVar3 = param_2[1] | 0x300041U | *(uint *)(&DAT_0047468c + (uint)*(byte *)(param_1 + 0x81) * 4) |
          *(uint *)(&DAT_00474698 + (uint)*(byte *)((int)param_1 + 0x207) * 4) |
          *(uint *)(puVar2 + (uint)bVar1 * 4) |
          *(uint *)(&DAT_004746b0 + (uint)*(byte *)((int)param_1 + 0x205) * 4) |
          *(uint *)(&DAT_004746b8 + (uint)(param_1[0x7f] != 0) * 4) |
          *(uint *)(&DAT_00474618 + (uint)*(byte *)(param_1 + 0x7d) * 4) |
          *(uint *)(&DAT_004746c0 + (uint)(param_1[0x83] != 0) * 4);
  param_2[1] = uVar3;
  if (((*PTR_DAT_00475700 != '\0') && ((char)param_1[0x4e] != '\0')) &&
     ((char)param_1[0x7d] == '\x01')) {
    param_2[1] = param_2[1] & 0xff7fffff;
    param_2[2] = param_2[2] | 0x200;
  }
  uVar3 = FUN_00403130(param_1,uVar3,(uint)bVar1);
  param_2[9] = param_2[9] & ~(*(uint *)(&DAT_004746c8 + (uVar3 & 0x7f) * 4) | 1);
  return;
}



void FUN_004257a4(int *param_1)

{
  HWND pHVar1;
  HWND hWndInsertAfter;
  int X;
  int Y;
  int cx;
  int cy;
  WPARAM wParam;
  UINT UVar2;
  int *lParam;
  
  cx = param_1[0xe];
  cy = param_1[0xf];
  FUN_0042e088(param_1);
  UVar2 = 0x14;
  Y = param_1[0xd];
  X = param_1[0xc];
  hWndInsertAfter = (HWND)0x0;
  pHVar1 = (HWND)FUN_00430e98(param_1);
  SetWindowPos(pHVar1,hWndInsertAfter,X,Y,cx,cy,UVar2);
  if (param_1[0x83] != 0) {
    lParam = param_1 + 0x83;
    wParam = 1;
    UVar2 = 0x192;
    pHVar1 = (HWND)FUN_00430e98(param_1);
    SendMessageA(pHVar1,UVar2,wParam,(LPARAM)lParam);
  }
  FUN_0042539c(param_1);
  if (param_1[0x84] != 0) {
    (**(code **)(*(int *)param_1[0x7c] + 8))((int *)param_1[0x7c],param_1[0x84]);
    FUN_004255ec(param_1,param_1[0x85]);
    FUN_00425460(param_1,param_1[0x86]);
    FUN_00402f54((int *)param_1[0x84]);
    param_1[0x84] = 0;
  }
  return;
}



void FUN_00425844(int *param_1)

{
  int iVar1;
  int *piVar2;
  undefined4 extraout_ECX;
  
  iVar1 = (**(code **)(*(int *)param_1[0x7c] + 0x14))();
  if (0 < iVar1) {
    piVar2 = (int *)FUN_00402f24((int *)PTR_PTR_0040e124,'\x01',extraout_ECX);
    param_1[0x84] = (int)piVar2;
    (**(code **)(*piVar2 + 8))(piVar2,param_1[0x7c]);
    iVar1 = FUN_004255d0(param_1);
    param_1[0x85] = iVar1;
    iVar1 = FUN_00425424(param_1);
    param_1[0x86] = iVar1;
  }
  FUN_0042e264(param_1);
  return;
}



void FUN_0042589c(int *param_1,uint *param_2,undefined4 param_3)

{
  bool bVar1;
  undefined4 extraout_ECX;
  
  if ((((*(byte *)(param_1 + 8) & 0x10) == 0) &&
      (((*param_2 == 0x201 || (*param_2 == 0x203)) &&
       (bVar1 = FUN_0042b4cc((int)param_1), param_3 = extraout_ECX, !bVar1)))) &&
     (*(char *)((int)param_1 + 0x4d) == '\x01')) {
    bVar1 = FUN_0042e79c(param_1,param_2);
    if (bVar1) {
      return;
    }
    *(ushort *)(param_1 + 0x11) = DAT_00425900 | *(ushort *)(param_1 + 0x11);
    (**(code **)(*param_1 + -0x14))(param_1,param_2);
    return;
  }
  FUN_0042e830(param_1,param_2,param_3);
  return;
}



void FUN_004259d4(void)

{
  int iVar1;
  int iVar2;
  int iVar3;
  undefined4 *puVar4;
  int *piVar5;
  undefined4 *puVar6;
  byte bVar7;
  int in_stack_00000004;
  undefined4 local_94 [4];
  tagRECT local_84;
  undefined4 local_74;
  int local_70;
  int local_6c;
  undefined4 local_68;
  int local_64;
  undefined4 local_60;
  undefined4 local_5c;
  int local_58;
  int local_54;
  undefined4 local_50;
  undefined4 local_4c;
  int local_48;
  undefined4 local_44;
  undefined4 local_40 [4];
  undefined4 local_30;
  undefined4 local_2c;
  int local_28;
  undefined4 *local_24;
  undefined4 local_1c;
  int local_18;
  undefined4 *local_14;
  undefined4 local_c;
  int local_8;
  
  bVar7 = 0;
  piVar5 = (int *)(in_stack_00000004 + -4);
  local_1c = 0xbc2b;
  local_14 = &local_5c;
  local_18 = FUN_00430e98((int *)*piVar5);
  local_5c = 2;
  local_50 = 1;
  local_4c = 0;
  local_44 = *(undefined4 *)(*(int *)(in_stack_00000004 + -8) + 4);
  local_58 = FUN_00430e98((int *)*piVar5);
  local_48 = FUN_00430e98((int *)*piVar5);
  local_2c = 0xbc2c;
  local_28 = FUN_00430e98((int *)*piVar5);
  local_24 = &local_74;
  local_74 = 2;
  local_70 = FUN_00430e98((int *)*piVar5);
  iVar3 = 0;
  iVar1 = FUN_004255d0((int *)*piVar5);
  GetClipBox(*(HDC *)(*(int *)(in_stack_00000004 + -8) + 4),&local_84);
  local_8 = *(int *)(*piVar5 + 0x3c);
  local_c = *(undefined4 *)(*piVar5 + 0x38);
  if (0 < local_8) {
    do {
      local_6c = iVar1;
      iVar2 = (**(code **)(**(int **)(*piVar5 + 0x1f0) + 0x14))();
      if (iVar1 < iVar2) {
        local_60 = (**(code **)(**(int **)(*piVar5 + 0x1f0) + 0x18))
                             (*(int **)(*piVar5 + 0x1f0),iVar1);
      }
      local_68 = local_c;
      local_64 = *(int *)(*piVar5 + 0x200);
      local_30 = local_60;
      local_54 = iVar1;
      (**(code **)(*(int *)*piVar5 + -0x14))((int *)*piVar5,&local_2c);
      FUN_0040ea70(0,iVar3,local_68,local_94,local_64 + iVar3);
      puVar4 = local_94;
      puVar6 = local_40;
      for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {
        *puVar6 = *puVar4;
        puVar4 = puVar4 + (uint)bVar7 * -2 + 1;
        puVar6 = puVar6 + (uint)bVar7 * -2 + 1;
      }
      (**(code **)(*(int *)*piVar5 + -0x14))((int *)*piVar5,&local_1c);
      iVar3 = iVar3 + local_64;
      iVar1 = iVar1 + 1;
      iVar2 = (**(code **)(**(int **)(*piVar5 + 0x1f0) + 0x14))();
    } while ((iVar1 < iVar2) && (iVar3 < local_8));
  }
  return;
}



void FUN_00425d10(int *param_1,int param_2)

{
  ushort uVar1;
  int iVar2;
  undefined4 extraout_ECX;
  
  iVar2 = *(int *)(param_2 + 8);
  uVar1 = *(ushort *)(iVar2 + 0x10);
  FUN_00418454((int *)param_1[0x7e],*(int *)(iVar2 + 0x18));
  FUN_004182f4(param_1[0x7e]);
  FUN_00418310(param_1[0x7e]);
  if ((-1 < *(int *)(iVar2 + 8)) && ((uVar1 & 1) != 0)) {
    FUN_00417804(*(int **)(param_1[0x7e] + 0x14),0x8000000d);
    FUN_00417034(*(int **)(param_1[0x7e] + 0xc),-0x7ffffff2,extraout_ECX);
  }
  if (*(int *)(iVar2 + 8) < 0) {
    FUN_00417eb0((int *)param_1[0x7e],(RECT *)(iVar2 + 0x1c));
  }
  else {
    (**(code **)(*param_1 + 0xb4))(param_1,*(undefined4 *)(iVar2 + 8),iVar2 + 0x1c,uVar1);
  }
  if ((uVar1 & 0x10) != 0) {
    DrawFocusRect(*(HDC *)(iVar2 + 0x18),(RECT *)(iVar2 + 0x1c));
  }
  FUN_00418454((int *)param_1[0x7e],0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00425e24(void)

{
  undefined4 uVar1;
  undefined4 *in_FS_OFFSET;
  undefined1 auStack_10 [12];
  
  uVar1 = *in_FS_OFFSET;
  *in_FS_OFFSET = auStack_10;
  _DAT_00476734 = _DAT_00476734 + 1;
  *in_FS_OFFSET = uVar1;
  return;
}



int * FUN_00425fd8(int *param_1,char param_2,int *param_3)

{
  int *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00435fac(param_1,'\0',param_3);
  *(undefined1 *)(param_1 + 0x14) = 0;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_00427ee0(char *param_1)

{
  if (*param_1 == '\0') {
    *param_1 = '\x01';
    return;
  }
  if (*param_1 == '\x01') {
    *param_1 = '\0';
  }
  return;
}



undefined4 FUN_00427ef4(void)

{
  HANDLE pvVar1;
  uint uVar2;
  LONG LVar3;
  undefined4 uVar4;
  HWND in_stack_00000004;
  
  *(HWND *)((int)DAT_004746d0 + 0x14c) = in_stack_00000004;
  SetWindowLongA(in_stack_00000004,-4,*(LONG *)((int)DAT_004746d0 + 0x15c));
  uVar2 = GetWindowLongA(in_stack_00000004,-0x10);
  if ((uVar2 & 0x40000000) != 0) {
    LVar3 = GetWindowLongA(in_stack_00000004,-0xc);
    if (LVar3 == 0) {
      SetWindowLongA(in_stack_00000004,-0xc,(LONG)in_stack_00000004);
    }
  }
  SetPropA(in_stack_00000004,(LPCSTR)(uint)DAT_00476756,DAT_004746d0);
  SetPropA(in_stack_00000004,(LPCSTR)(uint)DAT_00476754,DAT_004746d0);
  pvVar1 = DAT_004746d0;
  DAT_004746d0 = (HANDLE)0x0;
  uVar4 = (**(code **)((int)pvVar1 + 0x15c))();
  return uVar4;
}



HANDLE FUN_00427fac(HWND param_1)

{
  HANDLE pvVar1;
  
  pvVar1 = (HANDLE)0x0;
  if (param_1 != (HWND)0x0) {
    pvVar1 = GetPropA(param_1,(LPCSTR)(uint)DAT_00476756);
  }
  return pvVar1;
}



LRESULT FUN_00427fc8(UINT param_1,WPARAM param_2,LPARAM param_3)

{
  LRESULT LVar1;
  
  if (*(HWND *)(*(int *)PTR_DAT_004757c0 + 0x24) != (HWND)0x0) {
    LVar1 = SendMessageA(*(HWND *)(*(int *)PTR_DAT_004757c0 + 0x24),param_1,param_2,param_3);
    return LVar1;
  }
  return 0;
}



void FUN_004281ac(undefined4 *param_1,int *param_2)

{
  PCNZCH pCVar1;
  
  pCVar1 = FUN_0040b538(&DAT_004281ec,(undefined *)param_1);
  if (pCVar1 == (PCNZCH)0x0) {
    FUN_00403c30(param_2,param_1);
  }
  else {
    FUN_00404064((int)param_1,1,(uint)(pCVar1 + -1),param_2);
  }
  return;
}



void FUN_004281f0(undefined4 *param_1,int *param_2)

{
  PCNZCH pCVar1;
  
  pCVar1 = FUN_0040b538(&DAT_00428230,(undefined *)param_1);
  if (pCVar1 == (PCNZCH)0x0) {
    FUN_00403c30(param_2,param_1);
  }
  else {
    FUN_00404064((int)param_1,(int)(pCVar1 + 1),0x7fffffff,param_2);
  }
  return;
}



HANDLE FUN_00428234(void)

{
  HWND pHVar1;
  HANDLE pvVar2;
  
  pHVar1 = GetCapture();
  pvVar2 = FUN_00427fac(pHVar1);
  if (((pvVar2 != (HANDLE)0x0) && (DAT_00474790 != (HANDLE)0x0)) &&
     (pvVar2 == *(HANDLE *)((int)DAT_00474790 + 0x24))) {
    pvVar2 = DAT_00474790;
  }
  return pvVar2;
}



void FUN_0042825c(int *param_1)

{
  int *piVar1;
  HWND hWnd;
  int *piVar2;
  
  ReleaseCapture();
  DAT_00474790 = (int *)0x0;
  if (param_1 != (int *)0x0) {
    piVar1 = FUN_004030cc(param_1,(int)PTR_PTR_00427220);
    piVar2 = param_1;
    if ((char)piVar1 == '\0') {
      if (param_1[9] == 0) {
        return;
      }
      piVar2 = (int *)param_1[9];
      DAT_00474790 = param_1;
    }
    hWnd = (HWND)FUN_00430e98(piVar2);
    SetCapture(hWnd);
  }
  return;
}



bool FUN_00428308(undefined4 *param_1,int param_2,int *param_3)

{
  int iVar1;
  bool bVar2;
  
  *param_3 = 0;
  bVar2 = false;
  while( true ) {
    if ((int)param_1[2] <= *param_3) {
      return bVar2;
    }
    iVar1 = FUN_0040f4e8(param_1,*param_3);
    bVar2 = param_2 == *(int *)(iVar1 + 4);
    if (bVar2) break;
    *param_3 = *param_3 + 1;
  }
  return bVar2;
}



HWND FUN_0042833c(void)

{
  HWND hWnd;
  HWND pHVar1;
  HWND pHVar2;
  int in_stack_00000004;
  
  pHVar2 = (HWND)FUN_00430e98(*(int **)(in_stack_00000004 + -4));
  pHVar1 = pHVar2;
  while (hWnd = pHVar2, hWnd != (HWND)0x0) {
    pHVar2 = GetParent(hWnd);
    pHVar1 = hWnd;
  }
  return pHVar1;
}



void FUN_00428364(int *param_1,undefined4 param_2)

{
  bool bVar1;
  undefined4 *puVar2;
  HWND pHVar3;
  int local_c;
  undefined4 local_8;
  
  local_8 = param_2;
  puVar2 = (undefined4 *)FUN_004026f4(8);
  *puVar2 = local_8;
  pHVar3 = FUN_0042833c();
  puVar2[1] = pHVar3;
  bVar1 = FUN_00428308(param_1,(int)pHVar3,&local_c);
  if (bVar1) {
    FUN_0040f564(param_1,local_c,(int)puVar2);
  }
  else {
    FUN_0040f38c(param_1,(int)puVar2);
  }
  return;
}



int FUN_004283f4(undefined4 *param_1,undefined4 param_2,int param_3)

{
  bool bVar1;
  int *piVar2;
  HWND pHVar3;
  int iVar4;
  int local_10;
  
  iVar4 = 0;
  if (param_1[2] != 0) {
    local_10 = param_3;
    if (param_1[2] == 1) {
      piVar2 = (int *)FUN_0040f4e8(param_1,0);
      iVar4 = *piVar2;
    }
    else {
      pHVar3 = GetDesktopWindow();
      pHVar3 = GetTopWindow(pHVar3);
      while ((iVar4 == 0 && (pHVar3 != (HWND)0x0))) {
        bVar1 = FUN_00428308(param_1,(int)pHVar3,&local_10);
        if (bVar1) {
          iVar4 = **(int **)(param_1[1] + local_10 * 4);
        }
        else {
          pHVar3 = GetWindow(pHVar3,2);
        }
      }
    }
  }
  return iVar4;
}



void FUN_00428458(int param_1,int param_2)

{
  *(undefined4 *)(param_1 + 4) = *(undefined4 *)(param_2 + 4);
  *(undefined4 *)(param_1 + 8) = *(undefined4 *)(param_2 + 8);
  *(undefined4 *)(param_1 + 0xc) = *(undefined4 *)(param_2 + 0xc);
  *(undefined4 *)(param_1 + 0x10) = *(undefined4 *)(param_2 + 0x10);
  *(undefined4 *)(param_1 + 0x14) = *(undefined4 *)(param_2 + 0x14);
  *(undefined4 *)(param_1 + 0x18) = *(undefined4 *)(param_2 + 0x18);
  *(undefined4 *)(param_1 + 0x20) = *(undefined4 *)(param_2 + 0x20);
  *(undefined4 *)(param_1 + 0x24) = *(undefined4 *)(param_2 + 0x24);
  *(undefined4 *)(param_1 + 0x28) = *(undefined4 *)(param_2 + 0x28);
  *(undefined4 *)(param_1 + 0x2c) = *(undefined4 *)(param_2 + 0x2c);
  return;
}



HWND FUN_00428498(void)

{
  HWND hWnd;
  
  hWnd = FUN_0044075c();
  SetCapture(hWnd);
  return hWnd;
}



void FUN_004284b0(void)

{
  return;
}



void FUN_004284e0(undefined4 param_1,HWND param_2)

{
  ReleaseCapture();
  FUN_00440810(param_2);
  return;
}



undefined2 FUN_004285e8(undefined4 param_1,char param_2)

{
  undefined2 uVar1;
  
  if (param_2 == '\0') {
    uVar1 = 0xfff3;
  }
  else {
    uVar1 = 0xfff4;
  }
  return uVar1;
}



void FUN_00428610(int *param_1,char param_2,int param_3)

{
  int extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_00000000;
  undefined4 in_stack_fffffff0;
  undefined4 in_stack_fffffff4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_fffffff0,in_stack_fffffff4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  param_1[0xe] = param_3;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_00000000;
  }
  return;
}



void FUN_00428634(int param_1,int *param_2)

{
  int *piVar1;
  
  FUN_00428458(param_1,(int)param_2);
  piVar1 = FUN_004030cc(param_2,(int)PTR_PTR_00426124);
  if ((char)piVar1 != '\0') {
    *(int *)(param_1 + 0x38) = param_2[0xe];
  }
  return;
}



void FUN_00428684(int *param_1,undefined4 param_2,undefined4 param_3,char param_4,undefined4 param_5
                 )

{
  if (param_4 == '\0') {
    FUN_00403130((int *)param_1[0xe],param_2,param_3);
    param_2 = 0;
  }
  (**(code **)(*param_1 + 0x20))(param_1,param_2,param_3,param_5);
  return;
}



int * FUN_0042871c(int *param_1,char param_2,int param_3)

{
  int *piVar1;
  undefined4 uVar2;
  int extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00428610(param_1,'\0',param_3);
  piVar1 = FUN_00417658((int *)PTR_PTR_00415ba4,'\x01',extraout_ECX_00);
  param_1[0x10] = (int)piVar1;
  uVar2 = FUN_0041e5bc(0,0xffffff);
  FUN_004177d8(piVar1,uVar2);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



uint FUN_00428834(uint param_1,uint param_2)

{
  if ((int)((param_1 ^ (int)param_1 >> 0x1f) - ((int)param_1 >> 0x1f)) <
      (int)((param_2 ^ (int)param_2 >> 0x1f) - ((int)param_2 >> 0x1f))) {
    return param_1;
  }
  return param_2;
}



void FUN_00428858(int param_1,undefined4 *param_2)

{
  uint uVar1;
  uint uVar2;
  int iVar3;
  int *piVar4;
  int local_1c [4];
  
  piVar4 = local_1c;
  for (iVar3 = 4; iVar3 != 0; iVar3 = iVar3 + -1) {
    *piVar4 = *param_2;
    param_2 = param_2 + 1;
    piVar4 = piVar4 + 1;
  }
  iVar3 = *(int *)(param_1 + 0xc);
  if ((iVar3 < local_1c[0]) || (local_1c[2] < iVar3)) {
    uVar1 = FUN_00428834(local_1c[0] - iVar3,local_1c[2] - iVar3);
  }
  else {
    uVar1 = 0;
  }
  iVar3 = *(int *)(param_1 + 0x10);
  if ((iVar3 < local_1c[1]) || (local_1c[3] < iVar3)) {
    uVar2 = FUN_00428834(local_1c[1] - iVar3,local_1c[3] - iVar3);
  }
  else {
    uVar2 = 0;
  }
  if ((uVar1 != 0) || (uVar2 != 0)) {
    OffsetRect((LPRECT)(param_1 + 0x44),-uVar1,-uVar2);
  }
  return;
}



// lpfn parameter of EnumThreadWindows
// 

undefined4 lpfn_00428914(void)

{
  undefined4 uVar1;
  BOOL BVar2;
  HWND in_stack_00000004;
  int *in_stack_00000008;
  tagRECT local_14;
  
  if (in_stack_00000004 == (HWND)in_stack_00000008[1]) {
    uVar1 = 0;
  }
  else {
    if (in_stack_00000008[2] == 0) {
      GetWindowRect(in_stack_00000004,&local_14);
      BVar2 = PtInRect(&local_14,*(POINT *)(in_stack_00000008 + 3));
      if (BVar2 != 0) {
        in_stack_00000008[2] = (int)in_stack_00000004;
      }
    }
    if (in_stack_00000004 == (HWND)in_stack_00000008[2]) {
      uVar1 = 0;
      *(undefined1 *)(in_stack_00000008 + 5) = 1;
    }
    else if (in_stack_00000004 == (HWND)*in_stack_00000008) {
      uVar1 = 0xffffffff;
      in_stack_00000008[2] = 0;
    }
    else {
      uVar1 = 0xffffffff;
    }
  }
  return uVar1;
}



undefined1 FUN_00428980(int *param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  HWND pHVar1;
  int *piVar2;
  DWORD dwThreadId;
  BOOL BVar3;
  int *piVar4;
  code *lpfn;
  RECT local_40;
  tagRECT local_30;
  int local_20;
  HWND local_1c;
  HWND local_18;
  undefined4 local_14;
  undefined4 local_10;
  char local_c;
  undefined1 local_5;
  
  local_5 = 1;
  local_18 = FUN_00428d84((POINT *)(param_4 + -0xc));
  pHVar1 = GetWindow(local_18,4);
  if (pHVar1 != *(HWND *)(*(int *)PTR_DAT_004757c0 + 0x24)) {
    piVar2 = (int *)FUN_00427fac(local_18);
    if (piVar2 == (int *)0x0) {
      return local_5;
    }
    do {
      piVar4 = piVar2;
      piVar2 = (int *)piVar4[9];
    } while (piVar2 != (int *)0x0);
    local_18 = (HWND)FUN_00430e98(piVar4);
  }
  piVar2 = param_1;
  if (local_18 != (HWND)0x0) {
    do {
      piVar4 = piVar2;
      piVar2 = (int *)piVar4[9];
    } while (piVar2 != (int *)0x0);
    local_1c = (HWND)FUN_00430e98(piVar4);
    if (local_1c != local_18) {
      piVar2 = *(int **)(*(int *)(param_4 + -0x10) + 0x24);
      if (piVar2 == (int *)0x0) {
        piVar2 = FUN_004030cc(*(int **)(param_4 + -0x10),(int)PTR_PTR_00427220);
        if ((char)piVar2 == '\0') {
          local_20 = 0;
        }
        else {
          local_20 = FUN_00430e98(*(int **)(param_4 + -0x10));
        }
      }
      else {
        do {
          piVar4 = piVar2;
          piVar2 = (int *)piVar4[9];
        } while (piVar2 != (int *)0x0);
        local_20 = FUN_00430e98(piVar4);
      }
      local_c = '\0';
      local_14 = *(undefined4 *)(param_4 + -0xc);
      local_10 = *(undefined4 *)(param_4 + -8);
      piVar2 = &local_20;
      lpfn = lpfn_00428914;
      dwThreadId = GetCurrentThreadId();
      EnumThreadWindows(dwThreadId,lpfn,(LPARAM)piVar2);
      if (local_c != '\0') {
        GetWindowRect(local_18,&local_30);
        FUN_00403130(param_1,*(undefined4 *)(param_4 + -0x10),&local_40);
        piVar2 = FUN_004030cc(DAT_0047675c,(int)PTR_PTR_00426238);
        if (((((char)piVar2 == '\0') || (*(int *)(DAT_0047675c[0xe] + 0x90) == 0)) ||
            (pHVar1 = (HWND)FUN_00430e98(*(int **)(DAT_0047675c[0xe] + 0x90)), pHVar1 != local_18))
           && (BVar3 = IntersectRect(&local_30,&local_30,&local_40), BVar3 != 0)) {
          local_5 = 0;
        }
      }
    }
  }
  return local_5;
}



bool FUN_00428b18(void)

{
  int *piVar1;
  HWND hWnd;
  HWND hWndParent;
  BOOL BVar2;
  int in_stack_00000004;
  
  piVar1 = FUN_004030cc(*(int **)(in_stack_00000004 + -0x10),(int)PTR_PTR_00427220);
  if ((char)piVar1 != '\0') {
    hWnd = (HWND)FUN_00430e98(*(int **)(in_stack_00000004 + -0x14));
    hWndParent = (HWND)FUN_00430e98(*(int **)(in_stack_00000004 + -0x10));
    BVar2 = IsChild(hWndParent,hWnd);
    return BVar2 != 0;
  }
  return false;
}



int * FUN_00428b5c(LONG *param_1,int *param_2)

{
  POINT pt;
  char cVar1;
  bool bVar2;
  ushort uVar3;
  HWND hWnd;
  BOOL BVar4;
  int iVar5;
  undefined1 *extraout_ECX;
  undefined1 *extraout_ECX_00;
  undefined1 *extraout_ECX_01;
  undefined1 *extraout_ECX_02;
  undefined1 *extraout_ECX_03;
  undefined1 *extraout_ECX_04;
  undefined1 *extraout_ECX_05;
  undefined1 *extraout_ECX_06;
  undefined1 *puVar6;
  undefined1 *extraout_ECX_07;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 extraout_EDX_03;
  undefined4 extraout_EDX_04;
  undefined4 extraout_EDX_05;
  undefined4 extraout_EDX_06;
  undefined4 extraout_EDX_07;
  undefined4 uVar7;
  undefined4 extraout_EDX_08;
  int iVar8;
  int iVar9;
  RECT local_2c;
  int *local_1c;
  int *local_18;
  int *local_14;
  LONG local_10;
  LONG local_c;
  char local_5;
  
  local_10 = *param_1;
  local_c = param_1[1];
  local_1c = (int *)0x0;
  local_14 = param_2;
  uVar3 = GetKeyState(0x11);
  if ((uVar3 & 0x8000) == 0 && DAT_00476780 != (undefined4 *)0x0) {
    (**(code **)(*DAT_00476784 + 8))();
    iVar8 = DAT_00476780[2];
    puVar6 = extraout_ECX;
    uVar7 = extraout_EDX;
    if (-1 < iVar8 + -1) {
      iVar9 = 0;
      do {
        local_18 = (int *)FUN_0040f4e8(DAT_00476780,iVar9);
        puVar6 = extraout_ECX_00;
        uVar7 = extraout_EDX_00;
        if ((local_18 != local_14) && ((char)local_18[0x5a] != '\0')) {
          cVar1 = (**(code **)(*local_18 + 0x4c))();
          puVar6 = extraout_ECX_01;
          uVar7 = extraout_EDX_01;
          if (cVar1 != '\0') {
            hWnd = (HWND)FUN_00430e98(local_18);
            BVar4 = IsWindowVisible(hWnd);
            puVar6 = extraout_ECX_02;
            uVar7 = extraout_EDX_02;
            if (BVar4 != 0) {
              puVar6 = &stack0xfffffffc;
              bVar2 = FUN_00428b18();
              uVar7 = extraout_EDX_03;
              if (!bVar2) {
                if ((int *)local_14[0x24] == local_18) {
                  iVar5 = FUN_0042f824((int)local_18);
                  puVar6 = extraout_ECX_03;
                  uVar7 = extraout_EDX_04;
                  if (iVar5 < 2) goto LAB_00428c63;
                }
                local_5 = '\x01';
                FUN_00403130(local_18,local_14,&local_2c);
                puVar6 = extraout_ECX_04;
                uVar7 = extraout_EDX_05;
                if (local_5 != '\0') {
                  pt.y = local_c;
                  pt.x = local_10;
                  BVar4 = PtInRect(&local_2c,pt);
                  puVar6 = extraout_ECX_05;
                  uVar7 = extraout_EDX_06;
                  if (BVar4 != 0) {
                    FUN_00428364(DAT_00476784,local_18);
                    puVar6 = extraout_ECX_06;
                    uVar7 = extraout_EDX_07;
                  }
                }
              }
            }
          }
        }
LAB_00428c63:
        iVar9 = iVar9 + 1;
        iVar8 = iVar8 + -1;
      } while (iVar8 != 0);
    }
    if (0 < DAT_00476784[2]) {
      local_1c = (int *)FUN_004283f4(DAT_00476784,uVar7,(int)puVar6);
      puVar6 = extraout_ECX_07;
      uVar7 = extraout_EDX_08;
    }
    if (local_1c != (int *)0x0) {
      cVar1 = FUN_00428980(local_1c,uVar7,puVar6,(int)&stack0xfffffffc);
      if (cVar1 == '\0') {
        local_1c = (int *)0x0;
      }
    }
  }
  return local_1c;
}



void FUN_00428ca8(int param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  
  if (param_1 != 0) {
    if (DAT_00476780 == (int *)0x0) {
      DAT_00476780 = (int *)FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',param_3);
    }
    iVar1 = FUN_0040f544((int)DAT_00476780,param_1);
    if (param_2 == '\0') {
      if (iVar1 != -1) {
        FUN_0040f3d8(DAT_00476780,iVar1);
      }
    }
    else if (iVar1 == -1) {
      FUN_0040f38c(DAT_00476780,param_1);
    }
  }
  return;
}



LRESULT FUN_00428d08(HWND param_1,uint param_2,undefined4 param_3,undefined4 *param_4,
                    undefined4 param_5)

{
  LRESULT LVar1;
  undefined4 local_1c;
  undefined4 local_18;
  undefined4 local_14;
  undefined4 local_10;
  undefined1 local_c;
  undefined4 local_8;
  
  LVar1 = 0;
  if (param_1 != (HWND)0x0) {
    local_1c = *param_4;
    local_18 = param_4[1];
    local_10 = param_5;
    local_c = DAT_00476778 == '\x02';
    local_14 = param_3;
    local_8 = param_3;
    LVar1 = SendMessageA(param_1,0xb02f,param_2 & 0x7f,(LPARAM)&local_1c);
  }
  return LVar1;
}



undefined4 FUN_00428d60(HWND param_1)

{
  HANDLE pvVar1;
  
  if (param_1 != (HWND)0x0) {
    pvVar1 = GetPropA(param_1,(LPCSTR)(uint)DAT_00476754);
    if (pvVar1 != (HANDLE)0x0) {
      return CONCAT31((int3)((uint)pvVar1 >> 8),1);
    }
  }
  return 0;
}



HWND FUN_00428d84(POINT *param_1)

{
  HWND hWnd;
  undefined4 uVar1;
  
  hWnd = WindowFromPoint(*param_1);
  while ((hWnd != (HWND)0x0 && (uVar1 = FUN_00428d60(hWnd), (char)uVar1 == '\0'))) {
    hWnd = GetParent(hWnd);
  }
  return hWnd;
}



int * FUN_00428db0(POINT *param_1,int *param_2,char param_3,int *param_4)

{
  HWND pHVar1;
  int *piVar2;
  int iVar3;
  undefined4 extraout_EDX;
  
  if (param_3 == '\0') {
    pHVar1 = FUN_00428d84(param_1);
    *param_2 = (int)pHVar1;
    piVar2 = (int *)FUN_00428d08((HWND)*param_2,CONCAT31((int3)((uint)extraout_EDX >> 8),5),
                                 DAT_0047675c,&param_1->x,0);
  }
  else {
    piVar2 = FUN_00428b5c(&param_1->x,param_4);
    if (piVar2 != (int *)0x0) {
      iVar3 = FUN_00430e98(piVar2);
      *param_2 = iVar3;
    }
  }
  return piVar2;
}



bool FUN_00428e00(uint param_1)

{
  LRESULT LVar1;
  bool bVar2;
  
  bVar2 = false;
  if (*(int *)(DAT_0047675c + 4) != 0) {
    LVar1 = FUN_00428d08(*(HWND *)(DAT_0047675c + 8),param_1,DAT_0047675c,
                         (undefined4 *)(DAT_0047675c + 0xc),*(int *)(DAT_0047675c + 4));
    bVar2 = LVar1 != 0;
  }
  return bVar2;
}



undefined4 FUN_00428e3c(void)

{
  int *piVar1;
  int iVar2;
  int *piVar3;
  undefined4 uVar4;
  
  uVar4 = 0;
  piVar1 = *(int **)(DAT_0047675c + 4);
  if ((((piVar1 != (int *)0x0) && ((char)piVar1[0x5f] != '\0')) && (piVar1[0x50] != 0)) &&
     (iVar2 = FUN_0042f790((int)piVar1), iVar2 != 0)) {
    iVar2 = FUN_0042f790((int)piVar1);
    if ((iVar2 == 1) &&
       (iVar2 = FUN_0040f4e8((undefined4 *)piVar1[0x50],0), iVar2 == *(int *)(DAT_0047675c + 0x38)))
    {
      return 0;
    }
    piVar3 = FUN_004297f8((POINT *)(DAT_0047675c + 0xc),0);
    while( true ) {
      if (piVar3 == (int *)0x0) {
        return 0;
      }
      if (piVar1 == piVar3) {
        return 0;
      }
      iVar2 = FUN_0040f544(piVar1[0x50],(int)piVar3);
      if (iVar2 != -1) break;
      piVar3 = (int *)piVar3[9];
    }
    uVar4 = FUN_0042f7a4((int)piVar1,iVar2);
  }
  return uVar4;
}



void FUN_00428ed0(POINT *param_1)

{
  char cVar1;
  bool bVar2;
  undefined1 uVar3;
  short sVar4;
  uint uVar5;
  int *piVar6;
  HWND pHVar7;
  HCURSOR pHVar8;
  undefined4 uVar9;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  int iVar10;
  uint uVar11;
  int *piVar12;
  byte bVar13;
  LONG LVar14;
  int local_1c;
  bool local_18 [4];
  int local_14;
  int local_10;
  
  bVar13 = 0;
  if (((DAT_00476778 == '\0') &&
      (uVar5 = (int)lpPoint_00476768 - param_1->x, uVar11 = (int)uVar5 >> 0x1f,
      (int)((uVar5 ^ uVar11) - uVar11) < DAT_00476774)) &&
     (uVar5 = DAT_0047676c - param_1->y, uVar11 = (int)uVar5 >> 0x1f,
     (int)((uVar5 ^ uVar11) - uVar11) < DAT_00476774)) {
    return;
  }
  piVar6 = FUN_00428db0(param_1,&local_1c,*(char *)((int)DAT_00476758 + 0x8b),DAT_00476758);
  if ((DAT_00476778 == '\0') && (DAT_0047677c != (int *)0x0)) {
    iVar10 = DAT_0047676c;
    pHVar7 = GetDesktopWindow();
    FUN_00432658(DAT_0047677c,pHVar7,(int)lpPoint_00476768,iVar10);
  }
  cVar1 = DAT_00476778;
  local_18[0] = *(char *)((int)DAT_00476758 + 0x8b) != '\0';
  if (local_18[0]) {
    DAT_00476778 = '\x02';
  }
  else {
    DAT_00476778 = '\x01';
  }
  local_18[0] = local_18[0] && cVar1 != '\0';
  if (piVar6 != (int *)DAT_0047675c[1]) {
    FUN_00428e00(CONCAT31((int3)((uint)DAT_0047675c >> 8),1));
    if (DAT_0047675c == (int *)0x0) {
      return;
    }
    DAT_0047675c[1] = (int)piVar6;
    DAT_0047675c[2] = local_1c;
    piVar12 = DAT_0047675c;
    DAT_0047675c[3] = param_1->x;
    piVar12[4] = param_1->y;
    FUN_00428e00(0);
    if (DAT_0047675c == (int *)0x0) {
      return;
    }
  }
  piVar12 = DAT_0047675c;
  DAT_0047675c[3] = param_1->x;
  piVar12[4] = param_1->y;
  if (DAT_0047675c[1] != 0) {
    FUN_0042a964((int *)DAT_0047675c[1],&param_1->x,&local_14);
    piVar12 = DAT_0047675c;
    DAT_0047675c[5] = local_14;
    piVar12[6] = local_10;
  }
  LVar14 = param_1->y;
  bVar2 = FUN_00428e00(CONCAT31((int3)((uint)LVar14 >> 8),2));
  sVar4 = (**(code **)(*DAT_0047675c + 4))(DAT_0047675c,bVar2,param_1->x,LVar14);
  if (DAT_0047677c != (int *)0x0) {
    if ((piVar6 == (int *)0x0) || ((*(byte *)((int)piVar6 + 0x41) & 0x20) != 0)) {
      FUN_00432614((int)DAT_0047677c,sVar4);
      if (*(char *)((int)DAT_0047677c + 0x62) == '\0') {
        LVar14 = param_1->y;
        pHVar7 = GetDesktopWindow();
        FUN_00432658(DAT_0047677c,pHVar7,param_1->x,LVar14);
      }
      else {
        FUN_00432740((int)DAT_0047677c,param_1->x,param_1->y);
      }
    }
    else {
      FUN_004327b4((int)DAT_0047677c);
      pHVar8 = (HCURSOR)FUN_004470e0(*(int *)PTR_DAT_004758e0,(int)sVar4);
      SetCursor(pHVar8);
    }
  }
  pHVar8 = (HCURSOR)FUN_004470e0(*(int *)PTR_DAT_004758e0,(int)sVar4);
  SetCursor(pHVar8);
  if (DAT_00476778 == '\x02') {
    if (piVar6 == (int *)0x0) {
      FUN_00403130((int *)DAT_0047675c[0xe],DAT_0047675c,param_1->x);
    }
    else {
      piVar6 = (int *)FUN_00428e3c();
      DAT_0047675c[0x16] = (int)piVar6;
      if (piVar6 == (int *)0x0) {
        uVar3 = FUN_00403130((int *)DAT_0047675c[1],DAT_0047675c + 5,extraout_ECX);
        *(undefined1 *)(DAT_0047675c + 0x15) = uVar3;
      }
      else {
        FUN_0042a964(piVar6,&param_1->x,(int *)local_18);
        uVar3 = FUN_00403130(piVar6,local_18,extraout_ECX_00);
        *(undefined1 *)(DAT_0047675c + 0x15) = uVar3;
      }
    }
    if ((DAT_0047675c != (int *)0x0) &&
       (uVar9 = FUN_004082a8(DAT_0047675c + 0x11,DAT_0047675c + 0x17,0x10), (char)uVar9 == '\0')) {
      if ((char)local_1c != '\0') {
        (**(code **)(*DAT_0047675c + 0x30))();
      }
      (**(code **)(*DAT_0047675c + 0x2c))();
      piVar6 = DAT_0047675c + 0x11;
      piVar12 = DAT_0047675c + 0x17;
      for (iVar10 = 4; iVar10 != 0; iVar10 = iVar10 + -1) {
        *piVar12 = *piVar6;
        piVar6 = piVar6 + (uint)bVar13 * -2 + 1;
        piVar12 = piVar12 + (uint)bVar13 * -2 + 1;
      }
    }
  }
  return;
}



void FUN_004291a4(int *param_1,char param_2,undefined4 param_3)

{
  int *piVar1;
  HWND pHVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 uVar3;
  int iVar4;
  
  DAT_0047675c = param_1;
  param_1[1] = 0;
  GetCursorPos((LPPOINT)&lpPoint_00476768);
  piVar1 = DAT_0047675c;
  DAT_0047675c[3] = (int)lpPoint_00476768;
  piVar1[4] = DAT_0047676c;
  DAT_00476770 = GetCursor();
  DAT_00476764 = FUN_00428498();
  DAT_00476774 = param_3;
  piVar1 = FUN_004030cc(param_1,(int)PTR_PTR_00426238);
  if ((char)piVar1 == '\0') {
    if (param_2 == '\0') {
      DAT_00476778 = '\0';
    }
    else {
      DAT_00476778 = '\x01';
    }
  }
  else {
    iVar4 = param_1[0x11];
    if (param_1[0x13] == iVar4 || param_1[0x13] - iVar4 < 0) {
      param_1[8] = 0;
      param_1[9] = 0;
    }
    else {
      *(double *)(param_1 + 8) =
           (double)(param_1[3] - iVar4) / (double)(param_1[0x13] - param_1[0x11]);
    }
    if (param_1[0x14] - param_1[0x12] < 1) {
      param_1[10] = 0;
      param_1[0xb] = 0;
    }
    else {
      *(double *)(param_1 + 10) =
           (double)(param_1[4] - param_1[0x12]) / (double)(param_1[0x14] - param_1[0x12]);
    }
    if (param_2 == '\0') {
      DAT_00476778 = '\0';
    }
    else {
      DAT_00476778 = '\x02';
      (**(code **)(*param_1 + 0x2c))();
    }
  }
  DAT_0047677c = (int *)(**(code **)(*DAT_0047675c + 8))();
  uVar3 = extraout_ECX;
  if (DAT_0047677c != (int *)0x0) {
    iVar4 = DAT_0047676c;
    pHVar2 = GetDesktopWindow();
    FUN_00432658(DAT_0047677c,pHVar2,(int)lpPoint_00476768,iVar4);
    uVar3 = extraout_ECX_00;
  }
  DAT_00476784 = FUN_00402f24((int *)PTR_PTR_004282a0,'\x01',uVar3);
  if (DAT_00476778 != '\0') {
    FUN_00428ed0((POINT *)&lpPoint_00476768);
  }
  return;
}



void FUN_00429314(int *param_1,char param_2,undefined4 param_3)

{
  int *piVar1;
  HWND hWnd;
  int iVar2;
  int *piVar3;
  undefined4 *in_FS_OFFSET;
  byte bVar4;
  LPRECT lpRect;
  undefined4 uStack_3c;
  undefined1 *puStack_38;
  undefined1 *puStack_34;
  int local_24 [2];
  int local_1c;
  int local_18;
  tagPOINT local_14;
  int *local_c;
  char local_5;
  
  bVar4 = 0;
  puStack_34 = &stack0xfffffffc;
  puStack_38 = &LAB_004294be;
  uStack_3c = *in_FS_OFFSET;
  DAT_00476758 = param_1;
  *in_FS_OFFSET = &uStack_3c;
  local_c = (int *)0x0;
  DAT_00476760 = 0;
  local_5 = param_2;
  if (*(char *)((int)param_1 + 0x8b) == '\0') {
    puStack_34 = &stack0xfffffffc;
    FUN_00403130(param_1,&local_c,param_3);
    if (DAT_00476758 == (int *)0x0) {
      *in_FS_OFFSET = uStack_3c;
      return;
    }
    if (local_c == (int *)0x0) {
      local_c = (int *)FUN_00428610((int *)PTR_PTR_004261b0,'\x01',(int)param_1);
      DAT_00476760 = 1;
    }
  }
  else {
    FUN_00403130(param_1,&local_c,param_3);
    if (DAT_00476758 == (int *)0x0) {
      *in_FS_OFFSET = uStack_3c;
      return;
    }
    if (local_c == (int *)0x0) {
      local_c = FUN_0042871c((int *)PTR_PTR_00426238,'\x01',(int)param_1);
      DAT_00476760 = 1;
    }
    piVar3 = (int *)local_c[0xe];
    piVar1 = FUN_004030cc(piVar3,(int)PTR_PTR_00427220);
    if ((char)piVar1 == '\0') {
      piVar3 = (int *)local_c[0xe];
      if ((piVar3[9] == 0) &&
         (piVar1 = FUN_004030cc(piVar3,(int)PTR_PTR_00427220), (char)piVar1 == '\0')) {
        GetCursorPos(&local_14);
        local_c[0x11] = local_14.x;
        local_c[0x12] = local_14.y;
      }
      else {
        FUN_0040ea58(0,0,local_24);
        FUN_0042a938(piVar3,local_24,&local_1c);
        local_c[0x11] = local_1c;
        local_c[0x12] = local_18;
      }
      FUN_0040ea58(local_c[0x11] + *(int *)(local_c[0xe] + 0x38),
                   local_c[0x12] + *(int *)(local_c[0xe] + 0x3c),&local_1c);
      local_c[0x13] = local_1c;
      local_c[0x14] = local_18;
    }
    else {
      lpRect = (LPRECT)(local_c + 0x11);
      hWnd = (HWND)FUN_00430e98(piVar3);
      GetWindowRect(hWnd,lpRect);
    }
    piVar3 = local_c + 0x11;
    piVar1 = local_c + 0x17;
    for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {
      *piVar1 = *piVar3;
      piVar3 = piVar3 + (uint)bVar4 * -2 + 1;
      piVar1 = piVar1 + (uint)bVar4 * -2 + 1;
    }
  }
  FUN_004291a4(local_c,local_5,param_3);
  *in_FS_OFFSET = uStack_3c;
  return;
}



undefined1 FUN_004294dc(void)

{
  char cVar1;
  undefined1 uVar2;
  int in_stack_00000004;
  
  uVar2 = *(int *)(DAT_0047675c + 4) != 0;
  if ((*(char *)(in_stack_00000004 + -1) != '\0') && (DAT_00476778 == '\x02')) {
    cVar1 = (**(code **)(*DAT_00476758 + 0x50))();
    if ((cVar1 == '\0') && (DAT_00476758[0x24] != 0)) {
      if ((int *)DAT_00476758[0x24] != (int *)0x0) {
        uVar2 = FUN_00403130((int *)DAT_00476758[0x24],*(undefined4 *)(DAT_0047675c + 4),
                             DAT_00476758);
      }
    }
    else {
      uVar2 = 1;
    }
  }
  return uVar2;
}



void FUN_0042954c(char param_1)

{
  int *piVar1;
  char cVar2;
  bool bVar3;
  int *piVar4;
  undefined3 extraout_var;
  uint uVar5;
  undefined4 extraout_ECX;
  int *piVar7;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_34;
  undefined1 *puStack_30;
  undefined1 *puStack_2c;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  int local_18;
  int local_14;
  undefined3 uVar6;
  
  puStack_20 = &stack0xfffffffc;
  puStack_2c = &stack0xfffffffc;
  piVar7 = (int *)0x0;
  if ((DAT_0047675c == (int *)0x0) || ((char)DAT_0047675c[0xc] != '\0')) {
    return;
  }
  puStack_24 = &LAB_0042979f;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  piVar1 = DAT_0047675c;
  puStack_30 = &LAB_00429772;
  uStack_34 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_34;
  *(undefined1 *)(DAT_0047675c + 0xc) = 1;
  FUN_004284e0(DAT_0047675c,DAT_00476764);
  if (DAT_00476778 == '\x02') {
    piVar7 = (int *)FUN_004030e4(DAT_0047675c,(int)PTR_PTR_00426238);
    (**(code **)(*piVar7 + 0x30))();
    *(bool *)(piVar7 + 0x1b) = piVar7[1] == 0;
  }
  if (DAT_0047675c[1] == 0) {
LAB_0042961b:
    local_18 = DAT_0047675c[3];
    local_14 = DAT_0047675c[4];
  }
  else {
    piVar4 = FUN_004030cc((int *)DAT_0047675c[1],(int)PTR_PTR_00426ca8);
    if ((char)piVar4 == '\0') goto LAB_0042961b;
    local_18 = DAT_0047675c[5];
    local_14 = DAT_0047675c[6];
  }
  cVar2 = FUN_004294dc();
  if (cVar2 != '\0') {
    if ((DAT_00476778 == '\x02') && ((char)piVar7[0x1b] != '\0')) {
LAB_0042965a:
      if (param_1 != '\0') {
        cVar2 = '\x01';
        goto LAB_00429666;
      }
    }
    else if (DAT_00476778 != '\0') {
      bVar3 = FUN_00428e00(CONCAT31(extraout_var,1));
      if (bVar3) goto LAB_0042965a;
    }
  }
  cVar2 = '\0';
LAB_00429666:
  if (DAT_00476778 == '\x02') {
    if ((cVar2 != '\0') && ((char)piVar7[0x1b] != '\0')) {
      piVar4 = FUN_00440984((int *)piVar7[0xe]);
      if ((piVar4 != (int *)0x0) && (piVar4[0x82] == piVar7[0xe])) {
        FUN_0044437c(piVar4,(int *)0x0,extraout_ECX);
      }
      FUN_0042bd64(DAT_00476758,0xb03a,0,DAT_0047675c);
    }
  }
  else if (DAT_0047677c == 0) {
    SetCursor(DAT_00476770);
  }
  else {
    FUN_004327b4(DAT_0047677c);
  }
  DAT_00476758 = 0;
  DAT_0047675c = (int *)0x0;
  if (piVar1[1] != 0) {
    uVar6 = (undefined3)((uint)piVar1 >> 8);
    uVar5 = CONCAT31(uVar6,3);
    if (cVar2 == '\0') {
      uVar5 = CONCAT31(uVar6,4);
      piVar1[3] = 0;
      piVar1[4] = 0;
      local_18 = 0;
      local_14 = 0;
    }
    FUN_00428d08((HWND)piVar1[2],uVar5,piVar1,piVar1 + 3,piVar1[1]);
  }
  *in_FS_OFFSET = uStack_34;
  puStack_2c = &LAB_00429779;
  puStack_30 = (undefined1 *)0x429744;
  FUN_00402f54(DAT_00476784);
  DAT_00476784 = (int *)0x0;
  *(undefined1 *)(piVar1 + 0xc) = 0;
  puStack_30 = (undefined1 *)local_14;
  uStack_34 = CONCAT31((int3)((uint)local_14 >> 8),cVar2);
  (**(code **)*piVar1)(piVar1,piVar1[1],local_18);
  DAT_0047675c = (int *)0x0;
  return;
}



void FUN_004297ac(void)

{
  if (DAT_0047675c != 0) {
    FUN_0042954c('\0');
  }
  DAT_00476758 = 0;
  return;
}



HANDLE FUN_004297c4(POINT *param_1)

{
  HWND hWnd;
  HANDLE pvVar1;
  
  hWnd = WindowFromPoint(*param_1);
  pvVar1 = (HANDLE)0x0;
  while ((hWnd != (HWND)0x0 && (pvVar1 = FUN_00427fac(hWnd), pvVar1 == (HANDLE)0x0))) {
    hWnd = GetParent(hWnd);
  }
  return pvVar1;
}



int * FUN_004297f8(POINT *param_1,undefined4 param_2)

{
  int *piVar1;
  int *piVar2;
  int *piVar3;
  char cVar4;
  int local_18 [2];
  
  piVar1 = (int *)FUN_004297c4(param_1);
  piVar3 = (int *)0x0;
  if (piVar1 != (int *)0x0) {
    cVar4 = '\0';
    FUN_0042a964(piVar1,&param_1->x,local_18);
    piVar2 = (int *)FUN_0042e708((int)piVar1,local_18,param_2,cVar4);
    piVar3 = piVar1;
    if (piVar2 != (int *)0x0) {
      piVar3 = piVar2;
    }
  }
  return piVar3;
}



void FUN_00429840(int *param_1,int param_2,undefined4 param_3)

{
  int iVar1;
  
  if (*param_1 == 0) {
    iVar1 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',param_3);
    *param_1 = iVar1;
  }
  FUN_0040f38c((int *)*param_1,param_2);
  return;
}



void FUN_00429868(int *param_1,int param_2)

{
  FUN_0040f680((int *)*param_1,param_2);
  if (*(int *)(*param_1 + 8) == 0) {
    FUN_00402f54((int *)*param_1);
    *param_1 = 0;
  }
  return;
}



void FUN_00429888(HDC param_1,int param_2,int param_3)

{
  tagPOINT local_14;
  
  GetWindowOrgEx(param_1,&local_14);
  SetWindowOrgEx(param_1,local_14.x - param_2,local_14.y - param_3,(LPPOINT)0x0);
  return;
}



void FUN_004298b8(void)

{
  char cVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_2c;
  undefined1 *puStack_28;
  undefined1 *puStack_24;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  int *local_14;
  int local_10;
  undefined4 *local_c;
  int local_8;
  
  puStack_18 = (undefined1 *)0x4298c8;
  local_c = (undefined4 *)FUN_0040f8a8(DAT_00476788);
  puStack_1c = &LAB_00429968;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  if (-1 < local_c[2] + -1) {
    local_8 = 0;
    puStack_18 = &stack0xfffffffc;
    local_10 = local_c[2];
    do {
      puStack_24 = (undefined1 *)0x4298fa;
      local_14 = (int *)FUN_0040f4e8(local_c,local_8);
      puStack_24 = (undefined1 *)0x429905;
      cVar1 = FUN_00418270((int)local_14);
      if (cVar1 != '\0') {
        puStack_28 = &LAB_00429941;
        uStack_2c = *in_FS_OFFSET;
        *in_FS_OFFSET = &uStack_2c;
        puStack_24 = &stack0xfffffffc;
        FUN_00429af4(local_14);
        FUN_0040374c();
        puStack_24 = (undefined1 *)0x429929;
        FUN_0040374c();
        return;
      }
      local_8 = local_8 + 1;
      local_10 = local_10 + -1;
    } while (local_10 != 0);
  }
  *in_FS_OFFSET = uStack_20;
  puStack_18 = (undefined1 *)0x42996f;
  puStack_1c = (undefined1 *)0x429967;
  FUN_0040f90c(DAT_00476788);
  return;
}



void FUN_00429974(void)

{
  int iVar1;
  char cVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  int *local_10;
  undefined4 *local_c;
  int local_8;
  
  puStack_14 = (undefined1 *)0x429984;
  local_c = (undefined4 *)FUN_0040f8a8(DAT_00476788);
  puStack_18 = &LAB_00429a12;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  puStack_14 = &stack0xfffffffc;
  iVar1 = local_c[2] + -1;
  if (-1 < local_c[2] + -1) {
    do {
      local_8 = iVar1;
      puStack_20 = (undefined1 *)0x4299af;
      local_10 = (int *)FUN_0040f4e8(local_c,local_8);
      puStack_20 = (undefined1 *)0x4299ba;
      cVar2 = FUN_00418270((int)local_10);
      if (cVar2 != '\0') {
        puStack_24 = &LAB_004299ea;
        uStack_28 = *in_FS_OFFSET;
        *in_FS_OFFSET = &uStack_28;
        puStack_20 = &stack0xfffffffc;
        FUN_00429af4(local_10);
        *in_FS_OFFSET = uStack_28;
        puStack_20 = (undefined1 *)0x4299f1;
        puStack_24 = (undefined1 *)0x4299e9;
        FUN_004182cc((int)local_10);
        return;
      }
      local_8 = local_8 + -1;
      iVar1 = local_8;
    } while (local_8 != -1);
  }
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_00429a19;
  puStack_18 = (undefined1 *)0x429a11;
  FUN_0040f90c(DAT_00476788);
  return;
}



void FUN_00429a4c(int *param_1)

{
  int *piVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  
  if (param_1[0x16] == 0) {
    puStack_10 = (undefined1 *)0x429a65;
    FUN_00418450();
  }
  else {
    if (param_1[0x17] == 0) {
      puStack_10 = (undefined1 *)0x429a7d;
      piVar1 = (int *)FUN_0040f8a8(DAT_00476788);
      puStack_14 = &LAB_00429ad1;
      uStack_18 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack_18;
      puStack_10 = &stack0xfffffffc;
      if (3 < piVar1[2]) {
        puStack_10 = &stack0xfffffffc;
        FUN_004298b8();
      }
      iVar2 = (**(code **)(*(int *)param_1[0x16] + 0x44))((int *)param_1[0x16],param_1 + 0x18);
      param_1[0x17] = iVar2;
      FUN_0040f38c(piVar1,(int)param_1);
      *in_FS_OFFSET = uStack_18;
      puStack_10 = (undefined1 *)0x429ad8;
      puStack_14 = (undefined1 *)0x429ad0;
      FUN_0040f90c(DAT_00476788);
      return;
    }
    puStack_10 = (undefined1 *)0x429ae6;
    FUN_00418454(param_1,param_1[0x17]);
    puStack_10 = (undefined1 *)0x429aee;
    FUN_00429b40((int)param_1);
  }
  return;
}



void FUN_00429af4(int *param_1)

{
  if (param_1[0x17] != 0) {
    FUN_00418454(param_1,0);
    FUN_0040f8bc(DAT_00476788,(int)param_1);
    ReleaseDC((HWND)param_1[0x18],(HDC)param_1[0x17]);
    param_1[0x17] = 0;
  }
  return;
}



void FUN_00429b28(int *param_1,int param_2)

{
  if (param_2 != param_1[0x16]) {
    FUN_00429af4(param_1);
    param_1[0x16] = param_2;
  }
  return;
}



void FUN_00429b40(int param_1)

{
  undefined4 uVar1;
  
  if (*(int *)(param_1 + 0x58) != 0) {
    uVar1 = FUN_0042b3a0(*(int *)(param_1 + 0x58));
    if ((char)uVar1 == '\0') {
      *(uint *)(param_1 + 0x54) = *(uint *)(param_1 + 0x54) & 0xffffff7f;
    }
    else {
      *(uint *)(param_1 + 0x54) = *(uint *)(param_1 + 0x54) | 0x80;
    }
  }
  return;
}



int * FUN_00429b6c(int *param_1,char param_2,int param_3)

{
  int extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00402f24(param_1,'\0',param_3);
  param_1[1] = param_3;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_00429cb0(int param_1,int *param_2)

{
  undefined4 uVar1;
  
  uVar1 = FUN_004030e4(param_2,(int)PTR_PTR_00426ca8);
  *(undefined4 *)(param_1 + 0x18) = uVar1;
  return;
}



undefined4 FUN_00429e5c(int param_1)

{
  char cVar1;
  int iVar2;
  uint *puVar3;
  undefined1 uVar4;
  
  cVar1 = FUN_00435f3c(param_1);
  uVar4 = cVar1 == '\0';
  if (!(bool)uVar4) {
    iVar2 = FUN_004030e4(*(int **)(param_1 + 0x10),(int)PTR_PTR_00435828);
    puVar3 = FUN_00403f6c(*(uint **)(*(int *)(param_1 + 0x18) + 0x70),*(uint **)(iVar2 + 0x60));
    if ((bool)uVar4) {
      return CONCAT31((int3)((uint)puVar3 >> 8),1);
    }
  }
  return 0;
}



undefined4 FUN_00429e90(int param_1)

{
  char cVar1;
  int iVar2;
  
  cVar1 = FUN_00435f78(param_1);
  if (cVar1 != '\0') {
    iVar2 = FUN_004030e4(*(int **)(param_1 + 0x10),(int)PTR_PTR_00435828);
    if (*(char *)(iVar2 + 0x6a) == *(char *)(*(int *)(param_1 + 0x18) + 0x47)) {
      return CONCAT31((int3)((uint)iVar2 >> 8),1);
    }
  }
  return 0;
}



undefined4 FUN_00429ec0(int param_1)

{
  int iVar1;
  char cVar2;
  
  cVar2 = FUN_00414d0c();
  if ((cVar2 != '\0') &&
     (iVar1 = *(int *)(*(int *)(param_1 + 0x18) + 0x108),
     iVar1 == *(int *)(*(int *)(param_1 + 0x10) + 0x30))) {
    return CONCAT31((int3)((uint)iVar1 >> 8),1);
  }
  return 0;
}



int * FUN_00429f98(int *param_1,char param_2,int *param_3)

{
  int *piVar1;
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00414460(param_1,'\0',param_3);
  param_1[0xb] = (int)param_1;
  param_1[10] = *(int *)(*param_1 + 0x6c);
  param_1[0x10] = DAT_0042a060;
  piVar1 = FUN_00416e60((int *)PTR_PTR_00415928,'\x01',extraout_ECX_00);
  param_1[0x16] = (int)piVar1;
  piVar1[3] = (int)param_1;
  piVar1[2] = (int)FUN_0042ae70;
  *(undefined1 *)((int)param_1 + 0x51) = DAT_0042a064;
  piVar1 = FUN_00429b6c((int *)PTR_PTR_00426528,'\x01',(int)param_1);
  param_1[0x19] = (int)piVar1;
  piVar1[7] = (int)param_1;
  piVar1[6] = (int)&LAB_0042bb84;
  param_1[0x18] = -0x7ffffffb;
  *(undefined1 *)((int)param_1 + 0x47) = 1;
  *(undefined1 *)(param_1 + 0x12) = 1;
  *(undefined1 *)((int)param_1 + 0x49) = 1;
  *(undefined1 *)((int)param_1 + 0x4a) = 1;
  *(undefined1 *)((int)param_1 + 0x8a) = 1;
  *(undefined1 *)(param_1 + 0x14) = 1;
  *(undefined1 *)((int)param_1 + 0x4e) = 0;
  *(undefined2 *)((int)param_1 + 0x6a) = 0xfff4;
  param_1[0x29] = (int)PTR_PTR_0043ff54;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



void FUN_0042a068(int *param_1,char param_2)

{
  int iVar1;
  int *piVar2;
  byte extraout_DL;
  undefined4 auStack_18 [4];
  
  piVar2 = FUN_004032b4(param_1,param_2);
  FUN_00447e10(*(int *)PTR_DAT_004757c0,(int)piVar2);
  iVar1 = piVar2[0x24];
  if ((iVar1 == 0) || ((*(byte *)(iVar1 + 0x20) & 8) != 0)) {
    (**(code **)(*piVar2 + 0x60))(piVar2,0);
  }
  else {
    FUN_0042bd64(iVar1,0xb039,0,piVar2);
    (**(code **)(*piVar2 + 0x60))(piVar2,0);
    FUN_0042a7c8((int)piVar2,auStack_18);
    FUN_00403130(piVar2,0xffffffff,auStack_18);
    piVar2[0x24] = 0;
  }
  FUN_00402f54((int *)piVar2[0x17]);
  piVar2[0x17] = 0;
  FUN_00402f54((int *)piVar2[0x19]);
  FUN_00402f54((int *)piVar2[0x16]);
  FUN_00408d3c(piVar2[0x15]);
  FUN_004144ac(piVar2,extraout_DL & 0xfc);
  if ('\0' < (char)extraout_DL) {
    FUN_004032a4(piVar2);
  }
  return;
}



undefined1 FUN_0042a160(int *param_1,undefined4 param_2,undefined4 param_3)

{
  HPALETTE pHVar1;
  HDC hdc;
  UINT UVar2;
  undefined1 local_13;
  HWND pHStack_10;
  
  local_13 = 0;
  if (*(char *)((int)param_1 + 0x47) != '\0') {
    pHVar1 = (HPALETTE)FUN_00403130(param_1,param_2,param_3);
    if (pHVar1 != (HPALETTE)0x0) {
      hdc = (HDC)(**(code **)(*param_1 + 0x44))(param_1,&pHStack_10);
      pHVar1 = SelectPalette(hdc,pHVar1,-(uint)((char)param_2 != '\x01'));
      UVar2 = RealizePalette(hdc);
      if (UVar2 != 0) {
        (**(code **)(*param_1 + 0x74))();
      }
      SelectPalette(hdc,pHVar1,-1);
      ReleaseDC(pHStack_10,hdc);
      local_13 = 1;
    }
  }
  return local_13;
}



undefined4 FUN_0042a1dc(int param_1)

{
  if (*(int *)(param_1 + 0x5c) != 0) {
    return *(undefined4 *)(*(int *)(param_1 + 0x5c) + 0x10);
  }
  return 0;
}



void FUN_0042a1ec(int param_1,char param_2)

{
  if (param_2 != *(char *)(param_1 + 0x51)) {
    *(char *)(param_1 + 0x51) = param_2;
    FUN_0042a4d8(param_1);
  }
  return;
}



void FUN_0042a20c(int *param_1,int param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  
  if (param_2 == 0) {
    FUN_00402f54((int *)param_1[0x17]);
    param_1[0x17] = 0;
    param_1[0x10] = param_1[0x10] & 0xffff7fff;
  }
  else {
    param_1[0x10] = param_1[0x10] | 0x8000;
    if (param_1[0x17] == 0) {
      iVar1 = FUN_00403130(param_1,param_2,param_3);
      iVar1 = (**(code **)(iVar1 + 0x14))(iVar1,1,param_1);
      param_1[0x17] = iVar1;
    }
    (**(code **)(*(int *)param_1[0x17] + 0xc))((int *)param_1[0x17],param_2);
    iVar1 = param_1[0x17];
    *(int **)(iVar1 + 0xc) = param_1;
    *(undefined1 **)(iVar1 + 8) = &LAB_0042c9c4;
    FUN_00403130(param_1,param_2,
                 CONCAT31((int3)((uint)extraout_ECX >> 8),(*(byte *)(param_2 + 0x20) & 1) != 0));
    FUN_00414540(param_2,(int)param_1,extraout_ECX_00);
  }
  return;
}



bool FUN_0042a288(int param_1)

{
  return (&DAT_004746d8)[*(byte *)(param_1 + 0x4b)] != *(char *)(param_1 + 0x51);
}



void FUN_0042a2a4(int param_1)

{
  if (*(int **)(param_1 + 0x24) != (int *)0x0) {
    FUN_0042d8d4(*(int **)(param_1 + 0x24),param_1);
  }
  return;
}



void FUN_0042a2d4(int *param_1,int *param_2)

{
  int *piVar1;
  int *piVar2;
  uint extraout_ECX;
  uint extraout_ECX_00;
  uint uVar3;
  
  *(ushort *)(param_1 + 0x11) = *(ushort *)(param_1 + 0x11) | 8;
  piVar1 = (int *)param_2[0xb];
  piVar2 = FUN_004030cc(piVar1,(int)PTR_PTR_00427220);
  uVar3 = extraout_ECX;
  if ((char)piVar2 != '\0') {
    (**(code **)(*param_1 + 0x60))(param_1,piVar1);
    uVar3 = extraout_ECX_00;
  }
  FUN_004148cc(param_1,param_2,uVar3);
  *(ushort *)(param_1 + 0x11) = *(ushort *)(param_1 + 0x11) & 0xfff7;
  if (param_1[9] != 0) {
    FUN_0042bd64((int)param_1,0xb009,0,0);
    FUN_0042bd64((int)param_1,0xb008,0,0);
    FUN_0042bd64((int)param_1,0xb023,0,0);
    FUN_0042bd64((int)param_1,0xb035,0,0);
    FUN_0042bd64((int)param_1,0xb03d,0,0);
  }
  return;
}



void FUN_0042a368(int *param_1,int param_2,char param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  
  FUN_0041478c((int)param_1,param_2,param_3);
  if (param_3 == '\x01') {
    if (param_2 == param_1[0x1b]) {
      FUN_0042ad78(param_1,(int *)0x0);
    }
    else {
      iVar1 = FUN_0042a1dc((int)param_1);
      if (param_2 == iVar1) {
        FUN_0042a20c(param_1,0,extraout_ECX);
      }
    }
  }
  return;
}



void FUN_0042a3ac(int *param_1,uint param_2,undefined4 param_3)

{
  char cVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  uint extraout_EDX;
  uint extraout_EDX_00;
  uint extraout_EDX_01;
  uint uVar2;
  char cVar3;
  bool bVar4;
  
  cVar1 = *(char *)((int)param_1 + 0x4b);
  cVar3 = (char)param_2;
  uVar2 = param_2;
  if (cVar3 != cVar1) {
    *(char *)((int)param_1 + 0x4b) = cVar3;
    FUN_0042a1ec((int)param_1,(&DAT_004746d8)[param_2 & 0xff]);
    param_3 = extraout_ECX;
    uVar2 = extraout_EDX;
    if (((*(byte *)(param_1 + 8) & 1) == 0) &&
       (((*(byte *)(param_1 + 8) & 0x10) == 0 || (param_1[9] != 0)))) {
      bVar4 = (byte)(cVar3 - 3U) < 2;
      if (((byte)(cVar1 - 1U) < 2 == bVar4) &&
         ((((cVar1 != '\0' && (cVar1 != '\x05')) && (cVar3 != '\0')) && (cVar3 != '\x05')))) {
        (**(code **)(*param_1 + 0x7c))(param_1,param_1[0xc],param_1[0xd],param_1[0xe],param_1[0xf]);
        param_3 = extraout_ECX_00;
        uVar2 = extraout_EDX_00;
      }
      else {
        FUN_00403130(param_1,CONCAT31((int3)(param_2 >> 8),bVar4),extraout_ECX);
        param_3 = extraout_ECX_01;
        uVar2 = extraout_EDX_01;
      }
    }
  }
  FUN_00403130(param_1,uVar2,param_3);
  return;
}



void FUN_0042a440(int *param_1,int param_2,int param_3,int param_4,int param_5)

{
  char cVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  
  cVar1 = FUN_0042c238(param_1,&param_5,&param_4);
  if ((cVar1 != '\0') &&
     ((((param_2 != param_1[0xc] || (param_3 != param_1[0xd])) || (param_5 != param_1[0xe])) ||
      (param_4 != param_1[0xf])))) {
    FUN_0042b1ec((int)param_1,*(char *)((int)param_1 + 0x47),'\0');
    param_1[0xc] = param_2;
    param_1[0xd] = param_3;
    param_1[0xe] = param_5;
    param_1[0xf] = param_4;
    FUN_0042a4d8((int)param_1);
    (**(code **)(*param_1 + 0x74))();
    FUN_0042bd64((int)param_1,0x47,0,0);
    FUN_00403130(param_1,extraout_EDX,extraout_ECX);
    if ((*(byte *)(param_1 + 8) & 1) == 0) {
      FUN_00403130(param_1,extraout_EDX_00,extraout_ECX_00);
    }
  }
  return;
}



void FUN_0042a4d8(int param_1)

{
  byte bVar1;
  bool bVar2;
  int iVar3;
  undefined1 auStack_18 [8];
  undefined4 uStack_10;
  undefined4 uStack_c;
  
  if (((*(char *)(param_1 + 0x52) == '\0') && ((*(byte *)(param_1 + 0x20) & 1) == 0)) &&
     (bVar1 = *(byte *)(param_1 + 0x51), DAT_0042a5b0 != bVar1)) {
    if ((bVar1 & 4) == 0) {
      iVar3 = (int)*(uint *)(param_1 + 0x38) >> 1;
      if (iVar3 < 0) {
        iVar3 = iVar3 + (uint)((*(uint *)(param_1 + 0x38) & 1) != 0);
      }
      *(int *)(param_1 + 0x78) = iVar3 + *(int *)(param_1 + 0x30);
    }
    else if ((bVar1 & 1) == 0) {
      *(undefined4 *)(param_1 + 0x78) = *(undefined4 *)(param_1 + 0x30);
    }
    else {
      *(undefined4 *)(param_1 + 0x78) = *(undefined4 *)(param_1 + 0x38);
    }
    if ((bVar1 & 8) == 0) {
      iVar3 = (int)*(uint *)(param_1 + 0x3c) >> 1;
      if (iVar3 < 0) {
        iVar3 = iVar3 + (uint)((*(uint *)(param_1 + 0x3c) & 1) != 0);
      }
      *(int *)(param_1 + 0x7c) = iVar3 + *(int *)(param_1 + 0x34);
    }
    else if ((bVar1 & 2) == 0) {
      *(undefined4 *)(param_1 + 0x7c) = *(undefined4 *)(param_1 + 0x34);
    }
    else {
      *(undefined4 *)(param_1 + 0x7c) = *(undefined4 *)(param_1 + 0x3c);
    }
    iVar3 = *(int *)(param_1 + 0x24);
    if ((iVar3 != 0) && ((*(byte *)(iVar3 + 0x20) & 2) == 0)) {
      bVar2 = FUN_00431194(iVar3);
      if (bVar2) {
        (**(code **)(**(int **)(param_1 + 0x24) + 0x40))(*(int **)(param_1 + 0x24),auStack_18);
        *(undefined4 *)(param_1 + 0x80) = uStack_10;
        *(undefined4 *)(param_1 + 0x84) = uStack_c;
      }
      else {
        *(undefined4 *)(param_1 + 0x80) = *(undefined4 *)(*(int *)(param_1 + 0x24) + 0x38);
        *(undefined4 *)(param_1 + 0x84) = *(undefined4 *)(*(int *)(param_1 + 0x24) + 0x3c);
      }
    }
  }
  return;
}



void FUN_0042a5b4(int *param_1,undefined4 param_2)

{
  (**(code **)(*param_1 + 0x7c))(param_1,param_2,param_1[0xd],param_1[0xf],param_1[0xe]);
  *(byte *)(param_1 + 0x22) = *(byte *)(param_1 + 0x22) | 1;
  return;
}



void FUN_0042a5d4(int *param_1,undefined4 param_2)

{
  (**(code **)(*param_1 + 0x7c))(param_1,param_1[0xc],param_2,param_1[0xf],param_1[0xe]);
  *(byte *)(param_1 + 0x22) = *(byte *)(param_1 + 0x22) | 2;
  return;
}



void FUN_0042a5f8(int *param_1,undefined4 param_2)

{
  (**(code **)(*param_1 + 0x7c))(param_1,param_1[0xc],param_1[0xd],param_1[0xf],param_2);
  *(byte *)(param_1 + 0x22) = *(byte *)(param_1 + 0x22) | 4;
  return;
}



void FUN_0042a618(int *param_1,undefined4 param_2)

{
  (**(code **)(*param_1 + 0x7c))(param_1,param_1[0xc],param_1[0xd],param_2,param_1[0xe]);
  *(byte *)(param_1 + 0x22) = *(byte *)(param_1 + 0x22) | 8;
  return;
}



void FUN_0042a638(int *param_1,int *param_2,undefined4 *param_3)

{
  int *piVar1;
  int iVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 uVar3;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 *puVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_30;
  undefined1 *puStack_2c;
  undefined1 *puStack_28;
  undefined4 local_18 [4];
  int *local_8;
  
  puVar4 = local_18;
  for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {
    *puVar4 = *param_3;
    param_3 = param_3 + 1;
    puVar4 = puVar4 + 1;
  }
  uVar3 = 0;
  local_8 = param_1;
  if (param_2 != (int *)param_1[0x24]) {
    iVar2 = param_1[0x24];
    if ((iVar2 != 0) && (*(int *)(iVar2 + 0x140) != 0)) {
      puStack_28 = (undefined1 *)0x42a681;
      FUN_0040f680(*(int **)(iVar2 + 0x140),(int)param_1);
      uVar3 = extraout_ECX;
    }
    if (((param_2 != (int *)0x0) && (param_2 != (int *)0xffffffff)) && (param_2[0x50] != 0)) {
      puStack_28 = (undefined1 *)0x42a6a1;
      FUN_0040f38c((int *)param_2[0x50],(int)local_8);
      uVar3 = extraout_ECX_00;
    }
  }
  *(ushort *)(local_8 + 0x11) = *(ushort *)(local_8 + 0x11) | 0x400;
  puStack_2c = &LAB_0042a736;
  uStack_30 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_30;
  puStack_28 = &stack0xfffffffc;
  if (param_2 != (int *)0xffffffff) {
    puStack_28 = &stack0xfffffffc;
    FUN_00403130(local_8,param_2,local_18);
    uVar3 = extraout_ECX_01;
  }
  piVar1 = (int *)local_8[0x24];
  if (param_2 != piVar1) {
    if (param_2 == (int *)0xffffffff) {
      local_8[0x24] = 0;
    }
    else {
      local_8[0x24] = (int)param_2;
      if (param_2 != (int *)0x0) {
        FUN_00403130(param_2,local_8,local_18);
        uVar3 = extraout_ECX_02;
      }
    }
    if (piVar1 != (int *)0x0) {
      FUN_00403130(piVar1,local_8,uVar3);
    }
  }
  *in_FS_OFFSET = uStack_30;
  *(ushort *)(local_8 + 0x11) = *(ushort *)(local_8 + 0x11) & 0xfbff;
  return;
}



void FUN_0042a744(int *param_1,int param_2,int *param_3)

{
  int *piVar1;
  
  piVar1 = FUN_004030cc(param_1,(int)PTR_PTR_00427220);
  if ((char)piVar1 == '\0') {
    FUN_0042b1ec((int)param_1,*(char *)((int)param_1 + 0x47),'\0');
  }
  if (param_2 == param_1[9]) {
    FUN_0042a7e8(param_1,param_3);
  }
  else {
    FUN_0042be08((int)param_1,param_3);
  }
  if ((param_2 == 0) || (param_2 == -1)) {
    (**(code **)(*param_1 + 0x60))(param_1,0);
  }
  return;
}



void FUN_0042a79c(int *param_1,undefined4 param_2)

{
  undefined4 auStack_1c [4];
  
  FUN_0042a7c8((int)param_1,auStack_1c);
  FUN_00403130(param_1,param_2,auStack_1c);
  return;
}



void FUN_0042a7c8(int param_1,undefined4 *param_2)

{
  *param_2 = *(undefined4 *)(param_1 + 0x30);
  param_2[1] = *(undefined4 *)(param_1 + 0x34);
  param_2[2] = *(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x38);
  param_2[3] = *(int *)(param_1 + 0x34) + *(int *)(param_1 + 0x3c);
  return;
}



void FUN_0042a7e8(int *param_1,int *param_2)

{
  (**(code **)(*param_1 + 0x7c))
            (param_1,*param_2,param_2[1],param_2[3] - param_2[1],param_2[2] - *param_2);
  return;
}



undefined4 FUN_0042a824(int *param_1)

{
  undefined1 auStack_14 [8];
  undefined4 uStack_c;
  
  (**(code **)(*param_1 + 0x40))(param_1,auStack_14);
  return uStack_c;
}



void FUN_0042a83c(int *param_1,undefined4 param_2)

{
  undefined4 uVar1;
  int aiStack_10 [2];
  
  uVar1 = FUN_0042a868(param_1);
  FUN_0040ea58(param_2,uVar1,aiStack_10);
  FUN_0042ac44(param_1,aiStack_10);
  return;
}



undefined4 FUN_0042a868(int *param_1)

{
  undefined1 auStack_14 [12];
  undefined4 uStack_8;
  
  (**(code **)(*param_1 + 0x40))(param_1,auStack_14);
  return uStack_8;
}



void FUN_0042a880(int *param_1,undefined4 param_2)

{
  undefined4 uVar1;
  int aiStack_10 [2];
  
  uVar1 = FUN_0042a824(param_1);
  FUN_0040ea58(uVar1,param_2,aiStack_10);
  FUN_0042ac44(param_1,aiStack_10);
  return;
}



void FUN_0042a8a8(int param_1,int *param_2)

{
  undefined1 *puVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar2;
  undefined4 *puVar3;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  byte *local_10;
  undefined4 local_c;
  undefined1 local_8;
  
  puStack_1c = &stack0xfffffffc;
  local_10 = (byte *)0x0;
  puStack_20 = &LAB_0042a929;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  puVar1 = &stack0xfffffffc;
  if (*(int *)(param_1 + 0x24) == 0) {
    local_c = *(undefined4 *)(param_1 + 8);
    local_8 = 0xb;
    puVar3 = &local_c;
    uVar2 = 0;
    FUN_004054e4((undefined4 *)PTR_PTR_004757e8,(int *)&local_10);
    uVar2 = FUN_0040aa4c((int)PTR_DAT_0040dc48,'\x01',local_10,uVar2,puVar3);
    FUN_004036ac(uVar2);
    puVar1 = puStack_1c;
  }
  puStack_1c = puVar1;
  puStack_20 = (undefined1 *)0x42a908;
  (**(code **)(**(int **)(param_1 + 0x24) + 0x3c))(*(int **)(param_1 + 0x24),param_2);
  *param_2 = *param_2 + *(int *)(param_1 + 0x30);
  param_2[1] = param_2[1] + *(int *)(param_1 + 0x34);
  *in_FS_OFFSET = puStack_1c;
  FUN_00403bdc((int *)&local_10);
  return;
}



void FUN_0042a938(int *param_1,int *param_2,int *param_3)

{
  int iStack_14;
  int iStack_10;
  
  (**(code **)(*param_1 + 0x3c))(param_1,&iStack_14);
  *param_3 = *param_2 + iStack_14;
  param_3[1] = param_2[1] + iStack_10;
  return;
}



void FUN_0042a964(int *param_1,int *param_2,int *param_3)

{
  int iStack_14;
  int iStack_10;
  
  (**(code **)(*param_1 + 0x3c))(param_1,&iStack_14);
  *param_3 = *param_2 - iStack_14;
  param_3[1] = param_2[1] - iStack_10;
  return;
}



void FUN_0042a990(int *param_1,undefined4 param_2)

{
  int *piVar1;
  
  if (param_1 != (int *)0x0) {
    do {
      piVar1 = FUN_004030cc(param_1,(int)PTR_PTR_0043efd8);
      if ((char)piVar1 != '\0') {
        FUN_004447e8((int)param_1,param_2);
      }
      param_1 = (int *)param_1[9];
    } while (param_1 != (int *)0x0);
  }
  return;
}



void FUN_0042a9c0(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  undefined4 local_14;
  undefined4 local_10;
  undefined4 local_c;
  undefined4 local_8;
  
  if (((*(int *)(param_1 + 0x90) != 0) && (DAT_0047675c == 0)) &&
     (DAT_0042aa28 == (DAT_0042aa24 & *(ushort *)(param_1 + 0x20)))) {
    local_c = param_4;
    local_14 = param_2;
    local_10 = param_3;
    local_8 = param_3;
    FUN_0042bd64(*(int *)(param_1 + 0x90),0xb042,param_1,&local_14);
  }
  return;
}



void FUN_0042aa2c(int param_1)

{
  FUN_0042bd64(param_1,0xb037,0,param_1);
  return;
}



void FUN_0042aa3c(int *param_1,int param_2,int param_3)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  byte bVar4;
  bool bVar5;
  int local_18;
  int local_14;
  
  if (param_2 != param_3) {
    bVar4 = DAT_0042ab78;
    if ((*(byte *)(param_1 + 8) & 1) != 0) {
      bVar4 = *(byte *)(param_1 + 0x22);
    }
    if ((bVar4 & 1) == 0) {
      iVar2 = param_1[0xc];
    }
    else {
      iVar2 = MulDiv(param_1[0xc],param_2,param_3);
    }
    if ((bVar4 & 2) == 0) {
      local_18 = param_1[0xd];
    }
    else {
      local_18 = MulDiv(param_1[0xd],param_2,param_3);
    }
    if (((bVar4 & 4) == 0) || ((*(byte *)((int)param_1 + 0x41) & 1) != 0)) {
      local_14 = param_1[0xe];
    }
    else if ((bVar4 & 1) == 0) {
      local_14 = MulDiv(param_1[0xe],param_2,param_3);
    }
    else {
      local_14 = MulDiv(param_1[0xc] + param_1[0xe],param_2,param_3);
      local_14 = local_14 - iVar2;
    }
    bVar5 = (bVar4 & 8) == 0;
    if ((bVar5) || ((*(byte *)((int)param_1 + 0x41) & 2) != 0)) {
      iVar3 = param_1[0xf];
    }
    else if (bVar5) {
      iVar3 = MulDiv(param_1[0xd],param_2,param_3);
    }
    else {
      iVar3 = MulDiv(param_1[0xd] + param_1[0xf],param_2,param_3);
      iVar3 = iVar3 - local_18;
    }
    (**(code **)(*param_1 + 0x7c))(param_1,iVar2,local_18,iVar3,local_14);
    if ((*(char *)((int)param_1 + 0x49) == '\0') && ((bVar4 & 0x10) != 0)) {
      piVar1 = (int *)param_1[0x16];
      iVar2 = FUN_004172b8((int)piVar1);
      iVar2 = MulDiv(iVar2,param_2,iVar3);
      FUN_004172d4(piVar1,iVar2);
    }
  }
  *(undefined1 *)(param_1 + 0x22) = DAT_0042ab7c;
  return;
}



void FUN_0042ab80(int *param_1,undefined4 param_2,undefined4 param_3)

{
  char cVar1;
  
  cVar1 = (char)param_2;
  if ((cVar1 != (char)param_1[0x13]) && (*(char *)(param_1 + 0x13) = cVar1, cVar1 != '\0')) {
    FUN_00403130(param_1,param_2,param_3);
  }
  return;
}



void FUN_0042ac44(int *param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  undefined1 local_1c [8];
  int iStack_14;
  int iStack_10;
  
  iVar1 = *param_2;
  iVar2 = param_2[1];
  (**(code **)(*param_1 + 0x40))(param_1,local_1c,*param_1,iVar1,iVar2);
  (**(code **)(*param_1 + 0x7c))
            (param_1,param_1[0xc],param_1[0xd],(param_1[0xf] - iStack_10) + iVar2,
             (param_1[0xe] - iStack_14) + iVar1);
  return;
}



void FUN_0042ac8c(int *param_1,int *param_2,undefined4 param_3)

{
  int *piVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 uStack00000004;
  
  if (param_2 != (int *)param_1[9]) {
    if (param_1 == param_2) {
      piVar1 = FUN_0040aacc((int *)PTR_DAT_0040dc48,'\x01',(undefined4 *)PTR_PTR_004757ec);
      FUN_004036ac(piVar1);
      param_3 = extraout_ECX;
    }
    if ((int *)param_1[9] != (int *)0x0) {
      uStack00000004 = 0x42acc0;
      FUN_0042dd48((int *)param_1[9],param_1);
      param_3 = extraout_ECX_00;
    }
    if (param_2 != (int *)0x0) {
      uStack00000004 = 0x42accd;
      FUN_0042dc74(param_2,param_1,param_3);
      uStack00000004 = 0x42acd4;
      FUN_0042a4d8((int)param_1);
    }
  }
  return;
}



void FUN_0042acd8(int *param_1,uint param_2,undefined4 param_3)

{
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  if (*(char *)((int)param_1 + 0x47) != (char)param_2) {
    FUN_00403130(param_1,param_2,param_3);
    *(char *)((int)param_1 + 0x47) = (char)param_2;
    FUN_0042bd64((int)param_1,0xb00b,param_2 & 0xff,0);
    FUN_00403130(param_1,extraout_EDX,extraout_ECX);
  }
  return;
}



void FUN_0042ad34(int param_1)

{
  FUN_0042bd64(param_1,0xe,0,0);
  return;
}



void FUN_0042ad44(int param_1,undefined4 param_2,undefined4 param_3)

{
  FUN_0042bd64(param_1,0xd,param_3,param_2);
  return;
}



int FUN_0042ad50(int param_1)

{
  if (0 < *(int *)(param_1 + 0x98)) {
    return *(int *)(param_1 + 0x98);
  }
  return *(int *)(param_1 + 0x3c);
}



int FUN_0042ad64(int param_1)

{
  if (0 < *(int *)(param_1 + 0x94)) {
    return *(int *)(param_1 + 0x94);
  }
  return *(int *)(param_1 + 0x38);
}



void FUN_0042ad78(int *param_1,int *param_2)

{
  undefined4 extraout_ECX;
  
  param_1[0x1b] = (int)param_2;
  if (param_2 != (int *)0x0) {
    FUN_0043d234(param_2,param_1);
    FUN_00414540((int)param_2,(int)param_1,extraout_ECX);
  }
  return;
}



void FUN_0042ad9c(int param_1,undefined4 param_2)

{
  FUN_0042bd64(param_1,0xc,0,param_2);
  FUN_0042bd64(param_1,0xb012,0,0);
  return;
}



void FUN_0042adc0(int param_1,int *param_2)

{
  uint uVar1;
  
  uVar1 = FUN_0042ad34(param_1);
  FUN_00403cc4(param_2,(undefined4 *)0x0,uVar1);
  if (uVar1 != 0) {
    FUN_0042ad44(param_1,*param_2,uVar1 + 1);
  }
  return;
}



void FUN_0042adf0(int param_1,uint *param_2)

{
  undefined *puVar1;
  undefined4 *in_FS_OFFSET;
  undefined1 uVar2;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  uint *local_8;
  
  puStack_14 = &stack0xfffffffc;
  local_8 = (uint *)0x0;
  uVar2 = 1;
  puStack_18 = &LAB_0042ae45;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  FUN_0042adc0(param_1,(int *)&local_8);
  FUN_00403f6c(local_8,param_2);
  if (!(bool)uVar2) {
    puVar1 = FUN_00404020((undefined *)param_2);
    FUN_0042ad9c(param_1,puVar1);
  }
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_0042ae4c;
  puStack_18 = (undefined1 *)0x42ae44;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_0042ae70(int param_1)

{
  int iVar1;
  undefined4 uVar2;
  
  *(undefined1 *)(param_1 + 0x49) = 0;
  *(undefined1 *)(param_1 + 0x46) = 0;
  iVar1 = FUN_00417214(*(int *)(param_1 + 0x58));
  if (iVar1 != *(int *)(param_1 + 0x74)) {
    *(byte *)(param_1 + 0x88) = *(byte *)(param_1 + 0x88) | 0x10;
    uVar2 = FUN_00417214(*(int *)(param_1 + 0x58));
    *(undefined4 *)(param_1 + 0x74) = uVar2;
  }
  FUN_0042bd64(param_1,0xb00e,0,0);
  return;
}



void FUN_0042aeac(int param_1)

{
  (**(code **)(**(int **)(param_1 + 0x58) + 8))();
  return;
}



void FUN_0042aee4(int param_1,char param_2)

{
  if ((param_2 != *(char *)(param_1 + 0x49)) &&
     (*(char *)(param_1 + 0x49) = param_2, *(int *)(param_1 + 0x24) != 0)) {
    FUN_0042bd64(param_1,0xb008,0,0);
  }
  return;
}



void FUN_0042af04(int param_1,char param_2)

{
  if (param_2 != *(char *)(param_1 + 0x89)) {
    *(char *)(param_1 + 0x89) = param_2;
    *(undefined1 *)(param_1 + 0x8a) = 0;
    FUN_0042bd64(param_1,0xb022,0,0);
  }
  return;
}



void FUN_0042af4c(int param_1,int param_2)

{
  if (param_2 != *(int *)(param_1 + 0x60)) {
    *(int *)(param_1 + 0x60) = param_2;
    *(undefined1 *)(param_1 + 0x4a) = 0;
    FUN_0042bd64(param_1,0xb00d,0,0);
  }
  return;
}



void FUN_0042af70(int param_1,char param_2)

{
  if ((param_2 != *(char *)(param_1 + 0x4a)) &&
     (*(char *)(param_1 + 0x4a) = param_2, *(int *)(param_1 + 0x24) != 0)) {
    FUN_0042bd64(param_1,0xb009,0,0);
  }
  return;
}



void FUN_0042af90(int param_1,char param_2)

{
  if ((param_2 != *(char *)(param_1 + 0x50)) &&
     (*(char *)(param_1 + 0x50) = param_2, *(int *)(param_1 + 0x24) != 0)) {
    FUN_0042bd64(param_1,0xb03d,0,0);
  }
  return;
}



void FUN_0042afb0(int param_1,short param_2)

{
  if (param_2 != *(short *)(param_1 + 0x68)) {
    *(short *)(param_1 + 0x68) = param_2;
    FUN_0042bd64(param_1,0xb00f,0,0);
  }
  return;
}



bool FUN_0042afcc(HANDLE param_1)

{
  HANDLE pvVar1;
  
  pvVar1 = FUN_00428234();
  return param_1 == pvVar1;
}



void FUN_0042afdc(int *param_1,char param_2)

{
  bool bVar1;
  
  bVar1 = FUN_0042afcc(param_1);
  if ((bool)param_2 != bVar1) {
    if (param_2 == '\0') {
      FUN_0042825c((int *)0x0);
    }
    else {
      FUN_0042825c(param_1);
    }
  }
  return;
}



void FUN_0042b004(int *param_1,undefined4 param_2,undefined4 param_3)

{
  FUN_00403130(param_1,CONCAT31((int3)((uint)param_2 >> 8),1),param_3);
  return;
}



void FUN_0042b014(int *param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int *piVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  if (param_1[9] != 0) {
    iVar2 = FUN_0040f544(*(int *)(param_1[9] + 0x134),(int)param_1);
    if (-1 < iVar2) {
      iVar1 = (*(int **)(param_1[9] + 0x134))[2];
      if (param_2 < 0) {
        param_2 = 0;
      }
      if (iVar1 <= param_2) {
        param_2 = iVar1 + -1;
      }
      if (iVar2 != param_2) {
        FUN_0040f3d8(*(int **)(param_1[9] + 0x134),iVar2);
        FUN_0040f564(*(int **)(param_1[9] + 0x134),param_2,(int)param_1);
        FUN_0042b1ec((int)param_1,*(char *)((int)param_1 + 0x47),'\x01');
        piVar3 = (int *)FUN_004409ac(param_1);
        if ((*(byte *)(piVar3 + 0x11) & 4) != 0) {
          FUN_00403130(piVar3,CONCAT31((int3)((uint)extraout_EDX >> 8),1),extraout_ECX);
        }
      }
    }
  }
  return;
}



void FUN_0042b0b8(int param_1)

{
  HDC hdc;
  undefined4 in_FS_OFFSET;
  undefined4 uVar1;
  undefined4 *puVar2;
  byte *local_10;
  undefined4 local_c;
  undefined1 local_8;
  
  local_10 = (byte *)0x0;
  *(undefined1 **)in_FS_OFFSET = &stack0xffffffdc;
  if (*(int *)(param_1 + 0x24) == 0) {
    local_c = *(undefined4 *)(param_1 + 8);
    local_8 = 0xb;
    puVar2 = &local_c;
    uVar1 = 0;
    FUN_004054e4((undefined4 *)PTR_PTR_004757e8,(int *)&local_10);
    uVar1 = FUN_0040aa4c((int)PTR_DAT_0040dc48,'\x01',local_10,uVar1,puVar2);
    FUN_004036ac(uVar1);
  }
  hdc = (HDC)(**(code **)(**(int **)(param_1 + 0x24) + 0x44))();
  SetViewportOrgEx(hdc,*(int *)(param_1 + 0x30),*(int *)(param_1 + 0x34),(LPPOINT)0x0);
  IntersectClipRect(hdc,0,0,*(int *)(param_1 + 0x38),*(int *)(param_1 + 0x3c));
  *(undefined1 **)in_FS_OFFSET = &stack0xfffffffc;
  FUN_00403bdc((int *)&local_10);
  return;
}



undefined1 FUN_0042b160(void)

{
  undefined4 *puVar1;
  int iVar2;
  int iVar3;
  BOOL BVar4;
  int in_stack_00000004;
  RECT local_28;
  tagRECT local_18;
  undefined1 local_5;
  
  local_5 = 1;
  puVar1 = *(undefined4 **)(*(int *)(*(int *)(in_stack_00000004 + -4) + 0x24) + 0x134);
  iVar2 = FUN_0040f544((int)puVar1,*(int *)(in_stack_00000004 + -4));
  do {
    do {
      if (iVar2 < 1) {
        return 0;
      }
      iVar2 = iVar2 + -1;
      iVar3 = FUN_0040f4e8(puVar1,iVar2);
    } while ((*(char *)(iVar3 + 0x47) == '\0') || ((*(byte *)(iVar3 + 0x40) & 0x40) == 0));
    FUN_0042a7c8(iVar3,&local_28.left);
    IntersectRect(&local_18,(RECT *)(in_stack_00000004 + -0x14),&local_28);
    BVar4 = EqualRect(&local_18,(RECT *)(in_stack_00000004 + -0x14));
  } while (BVar4 == 0);
  return local_5;
}



void FUN_0042b1ec(int param_1,char param_2,char param_3)

{
  byte bVar1;
  bool bVar2;
  char cVar3;
  HWND hWnd;
  RECT *lpRect;
  int bErase;
  RECT local_18;
  int local_8;
  
  if (param_2 == '\0') {
    if ((*(byte *)(param_1 + 0x20) & 0x10) == 0) {
      return;
    }
    if ((*(byte *)(param_1 + 0x41) & 4) != 0) {
      return;
    }
  }
  if (*(int *)(param_1 + 0x24) == 0) {
    return;
  }
  local_8 = param_1;
  bVar2 = FUN_00431194(*(int *)(param_1 + 0x24));
  if (bVar2) {
    FUN_0042a7c8(local_8,&local_18.left);
    if (((param_3 == '\0') && ((*(byte *)(*(int *)(local_8 + 0x24) + 0x40) & 0x40) == 0)) &&
       (cVar3 = FUN_0042b160(), cVar3 == '\0')) {
      bVar1 = 1;
    }
    else {
      bVar1 = 0;
    }
    bErase = -(uint)bVar1;
    lpRect = &local_18;
    hWnd = (HWND)FUN_00430e98(*(int **)(local_8 + 0x24));
    InvalidateRect(hWnd,lpRect,bErase);
    return;
  }
  return;
}



void FUN_0042b29c(int *param_1)

{
  (**(code **)(*param_1 + 0x78))();
  return;
}



undefined4 FUN_0042b3a0(int param_1)

{
  if ((PTR_DAT_004758fc[9] != '\0') && (*(char *)(param_1 + 0x4f) != '\0')) {
    return CONCAT31((int3)((uint)param_1 >> 8),1);
  }
  return 0;
}



undefined4 FUN_0042b3d0(int param_1)

{
  int iVar1;
  
  if ((PTR_DAT_004758fc[9] != '\0') &&
     (iVar1 = CONCAT31((int3)((uint)param_1 >> 8),*(undefined1 *)(param_1 + 0x4f)) + -1,
     (byte)iVar1 < 2)) {
    return CONCAT31((int3)((uint)iVar1 >> 8),1);
  }
  return 0;
}



void FUN_0042b404(int *param_1,char param_2,int param_3)

{
  int *piVar1;
  undefined4 uVar2;
  
  piVar1 = FUN_004030cc(param_1,(int)PTR_PTR_0043efd8);
  if (((char)piVar1 != '\0') && (*(char *)((int)param_1 + 0x8b) != '\x01')) {
    piVar1 = FUN_0040aacc((int *)PTR_DAT_0040dc48,'\x01',(undefined4 *)PTR_PTR_004757e0);
    FUN_004036ac(piVar1);
  }
  FUN_0042bd98(param_1);
  if ((DAT_00476758 == 0) || (DAT_00476758 == -1)) {
    DAT_00476758 = 0;
    if ((*(byte *)(param_1 + 0x11) & 1) != 0) {
      GetCursorPos((LPPOINT)&stack0xfffffff4);
      FUN_0042a964(param_1,(int *)&stack0xfffffff4,(int *)&stack0xfffffffc);
      uVar2 = FUN_00407198((undefined2 *)&stack0xfffffff4);
      FUN_0042bd64((int)param_1,0x202,0,uVar2);
    }
    if (param_3 < 0) {
      param_3 = *(int *)(DAT_00476748 + 8);
    }
    if (DAT_00476758 != -1) {
      FUN_00429314(param_1,param_2,param_3);
    }
  }
  return;
}



bool FUN_0042b4cc(int param_1)

{
  return param_1 == DAT_00476758;
}



void FUN_0042b560(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  if (*(short *)(param_1 + 0x102) != 0) {
    (**(code **)(param_1 + 0x100))(*(undefined4 *)(param_1 + 0x104),param_1,param_2,param_4,param_3)
    ;
  }
  return;
}



void FUN_0042b65c(int *param_1,undefined4 param_2,undefined4 param_3)

{
  FUN_00403130(param_1,param_2,param_3);
  return;
}



void FUN_0042b6bc(undefined4 param_1,int *param_2,char param_3)

{
  int y;
  int h;
  HGDIOBJ h_00;
  int iVar1;
  int *piVar2;
  int *piVar3;
  undefined4 *in_FS_OFFSET;
  byte bVar4;
  undefined4 uVar5;
  int local_24;
  int local_20;
  int local_1c;
  int local_18;
  HGDIOBJ local_14;
  HDC local_10;
  HWND local_c;
  char local_5;
  
  bVar4 = 0;
  local_5 = param_3;
  h = (**(code **)(*param_2 + 0x34))();
  if (local_5 == '\0') {
    piVar2 = param_2 + 0x11;
    piVar3 = &local_24;
    for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {
      *piVar3 = *piVar2;
      piVar2 = piVar2 + (uint)bVar4 * -2 + 1;
      piVar3 = piVar3 + (uint)bVar4 * -2 + 1;
    }
  }
  else {
    piVar2 = param_2 + 0x17;
    piVar3 = &local_24;
    for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {
      *piVar3 = *piVar2;
      piVar2 = piVar2 + (uint)bVar4 * -2 + 1;
      piVar3 = piVar3 + (uint)bVar4 * -2 + 1;
    }
  }
  local_c = GetDesktopWindow();
  local_10 = GetDCEx(local_c,(HRGN)0x0,0x402);
  uVar5 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffffc4;
  h_00 = (HGDIOBJ)FUN_00417838(param_2[0x10]);
  local_14 = SelectObject(local_10,h_00);
  y = local_20;
  iVar1 = local_24;
  PatBlt(local_10,local_24 + h,local_20,(local_1c - local_24) - h,h,0x5a0049);
  PatBlt(local_10,local_1c - h,y + h,h,(local_18 - y) - h,0x5a0049);
  PatBlt(local_10,iVar1,local_18 - h,(local_1c - local_24) - h,h,0x5a0049);
  PatBlt(local_10,iVar1,y,h,(local_18 - local_20) - h,0x5a0049);
  SelectObject(local_10,local_14);
  *in_FS_OFFSET = uVar5;
  ReleaseDC(local_c,local_10);
  return;
}



void FUN_0042b80c(int *param_1,int param_2)

{
  byte bVar1;
  int *piVar2;
  int *piVar3;
  int iVar4;
  char cVar5;
  int *piVar6;
  int local_18 [2];
  
  piVar2 = *(int **)(param_2 + 8);
  piVar6 = (int *)piVar2[2];
  piVar3 = FUN_004030cc(piVar6,(int)PTR_PTR_00426238);
  cVar5 = (char)piVar3;
  if ((DAT_00476760 != '\0') && (cVar5 == '\0')) {
    iVar4 = FUN_004030e4(piVar6,(int)PTR_PTR_004261b0);
    piVar6 = *(int **)(iVar4 + 0x38);
  }
  FUN_0042a964(param_1,piVar2,local_18);
  if (*(byte *)(param_2 + 4) < 3) {
    if (cVar5 == '\0') {
      bVar1 = *(byte *)(param_2 + 4);
      FUN_00403130(param_1,piVar6,local_18[0]);
    }
    else {
      bVar1 = *(byte *)(param_2 + 4);
      FUN_00403130((int *)piVar2[3],piVar6,local_18[0]);
    }
    *(uint *)(param_2 + 0xc) = (uint)bVar1;
  }
  else if (*(byte *)(param_2 + 4) == 3) {
    if (cVar5 == '\0') {
      FUN_00403130(param_1,piVar6,local_18[0]);
    }
    else {
      FUN_00403130((int *)piVar2[3],piVar6,local_18[0]);
    }
  }
  return;
}



undefined4 FUN_0042b8fc(int *param_1,int *param_2,int param_3,undefined1 param_4)

{
  HWND pHVar1;
  int iVar2;
  int iVar3;
  undefined3 extraout_var;
  undefined3 uVar5;
  undefined4 uVar4;
  int *piVar6;
  tagPOINT *ptVar7;
  int *in_FS_OFFSET;
  byte bVar8;
  HWND hWndTo;
  UINT UVar9;
  int local_38 [4];
  int local_28;
  int local_24;
  tagPOINT local_20 [2];
  int *local_10;
  char local_9;
  int local_8;
  
  bVar8 = 0;
  local_8 = param_3;
  if ((param_2 == (int *)0x0) || (param_2 == (int *)0xffffffff)) {
    iVar2 = param_1[0x24];
    if (((iVar2 == 0) || (*(char *)(iVar2 + 0x17c) == '\0')) || (*(int *)(iVar2 + 0x148) == 0)) {
      FUN_0040ea58(param_1[0xc],param_1[0xd],&local_28);
      local_20[0].x = local_28;
      local_20[0].y = local_24;
      if ((int *)param_1[9] != (int *)0x0) {
        FUN_0042a938((int *)param_1[9],&local_20[0].x,&local_28);
        local_20[0].x = local_28;
        local_20[0].y = local_24;
      }
    }
    else {
      (**(code **)(**(int **)(iVar2 + 0x148) + 0x14))(*(int **)(iVar2 + 0x148),param_1,local_20);
      UVar9 = 2;
      ptVar7 = local_20;
      hWndTo = (HWND)0x0;
      pHVar1 = (HWND)FUN_00430e98((int *)param_1[0x24]);
      MapWindowPoints(pHVar1,hWndTo,ptVar7,UVar9);
    }
    iVar2 = FUN_0042ad50((int)param_1);
    piVar6 = local_38;
    iVar3 = FUN_0042ad64((int)param_1);
    FUN_0040ea8c(local_20[0].x,local_20[0].y,iVar3,piVar6,iVar2);
    piVar6 = local_38;
    ptVar7 = local_20;
    for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {
      ptVar7->x = *piVar6;
      piVar6 = piVar6 + (uint)bVar8 * -2 + 1;
      ptVar7 = (tagPOINT *)&ptVar7[-(uint)bVar8].y;
    }
    local_9 = FUN_0042bae4(param_1,&local_20[0].x);
    uVar5 = extraout_var;
    goto LAB_0042bad6;
  }
  iVar2 = FUN_0042bd98(param_1);
  if (param_1[0x24] == 0) {
LAB_0042ba06:
    uVar5 = (undefined3)((uint)iVar2 >> 8);
    local_9 = '\x01';
  }
  else {
    iVar2 = FUN_00403130((int *)param_1[0x24],param_2,param_1);
    if ((char)iVar2 != '\0') goto LAB_0042ba06;
    local_9 = '\0';
    uVar5 = 0;
  }
  if (local_9 != '\0') {
    local_10 = FUN_0042871c((int *)PTR_PTR_00426238,'\x01',(int)param_1);
    *in_FS_OFFSET = (int)&stack0xffffffb0;
    if ((int *)param_1[0x24] == (int *)0x0) {
      pHVar1 = (HWND)0x0;
    }
    else {
      pHVar1 = (HWND)FUN_00430e98((int *)param_1[0x24]);
    }
    FUN_0042a7c8((int)param_1,&local_20[0].x);
    if (pHVar1 != (HWND)0x0) {
      MapWindowPoints(pHVar1,(HWND)0x0,local_20,2);
    }
    local_10[1] = (int)param_2;
    *(undefined1 *)(local_10 + 0x15) = param_4;
    local_10[0x16] = local_8;
    ptVar7 = local_20;
    piVar6 = local_10 + 0x11;
    for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {
      *piVar6 = ptVar7->x;
      ptVar7 = (tagPOINT *)&ptVar7[-(uint)bVar8].y;
      piVar6 = piVar6 + (uint)bVar8 * -2 + 1;
    }
    UVar9 = 1;
    ptVar7 = local_20;
    pHVar1 = (HWND)FUN_00430e98(param_2);
    MapWindowPoints((HWND)0x0,pHVar1,ptVar7,UVar9);
    FUN_00403130(param_2,local_10,local_20[0].x);
    *in_FS_OFFSET = local_20[0].y;
    uVar4 = FUN_00402f54(local_10);
    return uVar4;
  }
LAB_0042bad6:
  return CONCAT31(uVar5,local_9);
}



char FUN_0042bae4(int *param_1,undefined4 *param_2)

{
  char cVar1;
  int *piVar2;
  undefined4 uVar3;
  undefined4 uVar4;
  int iVar5;
  undefined4 *puVar6;
  undefined4 local_2c [4];
  undefined4 auStack_1c [4];
  
  puVar6 = local_2c;
  for (iVar5 = 4; iVar5 != 0; iVar5 = iVar5 + -1) {
    *puVar6 = *param_2;
    param_2 = param_2 + 1;
    puVar6 = puVar6 + 1;
  }
  if ((int *)param_1[0x24] != (int *)0x0) {
    cVar1 = FUN_00403130((int *)param_1[0x24],0,param_1);
    if (cVar1 == '\0') {
      cVar1 = '\0';
      goto LAB_0042bb1c;
    }
  }
  cVar1 = '\x01';
LAB_0042bb1c:
  if (cVar1 != '\0') {
    piVar2 = FUN_0042c75c(param_1,local_2c);
    if (piVar2 == (int *)0x0) {
      FUN_00403130(param_1,0,local_2c);
    }
    else {
      uVar3 = FUN_0042a868(piVar2);
      puVar6 = auStack_1c;
      uVar4 = FUN_0042a824(piVar2);
      FUN_0040ea70(0,0,uVar4,puVar6,uVar3);
      FUN_00403130(param_1,piVar2,auStack_1c);
    }
  }
  return cVar1;
}



uint FUN_0042bb94(int param_1,undefined4 param_2,undefined4 param_3)

{
  undefined1 local_8;
  undefined3 uStack_7;
  
  _local_8 = CONCAT31((int3)((uint)param_3 >> 8),1);
  if (*(short *)(param_1 + 0xaa) != 0) {
    param_1 = (**(code **)(param_1 + 0xa8))
                        (*(undefined4 *)(param_1 + 0xac),param_1,param_2,&local_8,param_3);
  }
  return CONCAT31((int3)((uint)param_1 >> 8),local_8);
}



undefined4 FUN_0042bbc4(int *param_1,undefined4 *param_2,undefined4 *param_3)

{
  byte bVar1;
  undefined4 uVar2;
  undefined4 local_10;
  undefined4 local_c;
  
  if (*(char *)((int)param_1 + 0x4b) == '\x05') {
    uVar2 = CONCAT31((int3)((uint)param_1 >> 8),1);
  }
  else {
    local_10 = *param_2;
    local_c = *param_3;
    uVar2 = (**(code **)(*param_1 + 0x34))(param_1,&local_10,&local_c);
    bVar1 = *(byte *)((int)param_1 + 0x4b);
    if ((bVar1 == 0) || ((byte)(bVar1 - 3) < 2)) {
      *param_2 = local_10;
    }
    if (bVar1 < 3) {
      *param_3 = local_c;
    }
  }
  return uVar2;
}



undefined4 FUN_0042bc30(int *param_1,int *param_2,int *param_3)

{
  undefined4 uVar1;
  
  uVar1 = (**(code **)(*param_1 + 0x30))(param_1,param_2,param_3);
  if ((char)uVar1 != '\0') {
    FUN_0042bc90(param_1,param_2,param_3);
  }
  return uVar1;
}



void FUN_0042bc60(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
                 undefined4 param_5)

{
  if (*(short *)(param_1 + 0xb2) != 0) {
    (**(code **)(param_1 + 0xb0))
              (*(undefined4 *)(param_1 + 0xb4),param_1,param_2,param_4,param_5,param_3);
  }
  return;
}



void FUN_0042bc90(int *param_1,int *param_2,int *param_3)

{
  int local_1c;
  int local_18;
  int local_14;
  int local_10;
  
  local_1c = *(int *)(param_1[0x19] + 0x14);
  if (local_1c == 0) {
    local_1c = 0;
  }
  local_18 = *(int *)(param_1[0x19] + 0x10);
  if (local_18 == 0) {
    local_18 = 0;
  }
  local_14 = *(int *)(param_1[0x19] + 0xc);
  if (local_14 == 0) {
    local_14 = 0;
  }
  local_10 = *(int *)(param_1[0x19] + 8);
  if (local_10 == 0) {
    local_10 = 0;
  }
  (**(code **)(*param_1 + 0x38))(param_1,&local_1c,&local_18);
  if ((local_1c < 1) || (*param_2 <= local_1c)) {
    if ((0 < (int)&local_10) && (*param_2 < (int)&local_10)) {
      *param_2 = (int)&local_10;
    }
  }
  else {
    *param_2 = local_1c;
  }
  if ((local_18 < 1) || (*param_3 <= local_18)) {
    if ((0 < (int)&local_14) && (*param_3 < (int)&local_14)) {
      *param_3 = (int)&local_14;
    }
  }
  else {
    *param_3 = local_18;
  }
  return;
}



undefined4 FUN_0042bd64(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  undefined4 local_14;
  undefined4 local_10;
  undefined4 local_c;
  undefined4 local_8;
  
  local_c = param_4;
  local_8 = 0;
  if (param_1 != 0) {
    local_14 = param_2;
    local_10 = param_3;
    (**(code **)(param_1 + 0x28))(*(undefined4 *)(param_1 + 0x2c),&local_14);
  }
  return local_8;
}



int FUN_0042bd98(int *param_1)

{
  char cVar1;
  int iVar2;
  
  iVar2 = (**(code **)(*param_1 + 0x50))();
  if ((char)iVar2 != '\0') {
    param_1[0x26] = param_1[0xf];
    param_1[0x25] = param_1[0xe];
    return param_1[0xe];
  }
  if (param_1[0x24] != 0) {
    if (((char)param_1[0x23] == '\x02') || ((byte)(*(char *)(param_1[0x24] + 0x4b) - 1U) < 2)) {
      iVar2 = param_1[0xf];
      param_1[0x28] = iVar2;
    }
    else if (((char)param_1[0x23] == '\x01') ||
            (cVar1 = *(char *)(param_1[0x24] + 0x4b),
            iVar2 = CONCAT31((int3)((uint)param_1[0x24] >> 8),cVar1 + -5), (byte)(cVar1 - 3U) < 2))
    {
      iVar2 = param_1[0xe];
      param_1[0x27] = iVar2;
    }
  }
  return iVar2;
}



void FUN_0042be08(int param_1,int *param_2)

{
  *(int *)(param_1 + 0x30) = *param_2;
  *(int *)(param_1 + 0x34) = param_2[1];
  *(int *)(param_1 + 0x38) = param_2[2] - *param_2;
  *(int *)(param_1 + 0x3c) = param_2[3] - param_2[1];
  FUN_0042a4d8(param_1);
  return;
}



void FUN_0042be30(int *param_1,uint *param_2,undefined4 param_3)

{
  uint uVar1;
  char cVar2;
  int *piVar3;
  
  if ((*(byte *)(param_1 + 8) & 0x10) == 0) {
    if ((*param_2 < 0x100) || (0x108 < *param_2)) {
      uVar1 = *param_2;
      if ((uVar1 < 0x200) || (0x20a < uVar1)) {
        if (uVar1 == 0xb00b) {
          FUN_0042a9c0((int)param_1,0xb00b,param_2[1],param_2[2]);
        }
      }
      else {
        if (((*(byte *)(param_1 + 0x10) & 0x80) == 0) &&
           (((uVar1 == 0x203 || (uVar1 == 0x206)) || (uVar1 == 0x209)))) {
          *param_2 = *param_2 - 2;
        }
        uVar1 = *param_2;
        if (uVar1 == 0x200) {
          FUN_004497d8(*(int *)PTR_DAT_004757c0,param_1,(int)param_2);
        }
        else {
          if (uVar1 != 0x201) {
            if (uVar1 == 0x202) {
              *(ushort *)(param_1 + 0x11) = *(ushort *)(param_1 + 0x11) & 0xfffe;
              goto LAB_0042bf3b;
            }
            if (uVar1 != 0x203) goto LAB_0042bf3b;
          }
          if (*(char *)((int)param_1 + 0x4d) == '\x01') {
            FUN_00403130(param_1,param_2,param_3);
            return;
          }
          *(ushort *)(param_1 + 0x11) = *(ushort *)(param_1 + 0x11) | 1;
        }
      }
      goto LAB_0042bf3b;
    }
    piVar3 = FUN_00440984(param_1);
    if (piVar3 == (int *)0x0) goto LAB_0042bf3b;
    cVar2 = (**(code **)(*piVar3 + 0xdc))(piVar3,param_1,param_2);
  }
  else {
    piVar3 = FUN_00440984(param_1);
    if ((piVar3 == (int *)0x0) || (piVar3[0x8e] == 0)) goto LAB_0042bf3b;
    cVar2 = (**(code **)(*(int *)piVar3[0x8e] + 0x24))((int *)piVar3[0x8e],param_1,param_2);
  }
  if (cVar2 != '\0') {
    return;
  }
LAB_0042bf3b:
  (**(code **)(*param_1 + -0x14))(param_1,param_2);
  return;
}



void FUN_0042bf48(int param_1,int *param_2)

{
  char *pcVar1;
  int iVar2;
  undefined4 uVar3;
  
  iVar2 = *param_2;
  if (iVar2 == 0xc) {
    uVar3 = FUN_00408d10((char *)param_2[2]);
    FUN_00408d3c(*(int *)(param_1 + 0x54));
    *(undefined4 *)(param_1 + 0x54) = uVar3;
    FUN_0042a9c0(param_1,*param_2,param_2[1],param_2[2]);
  }
  else if (iVar2 == 0xd) {
    pcVar1 = *(char **)(param_1 + 0x54);
    if (pcVar1 == (char *)0x0) {
      pcVar1 = (char *)((int)&UNK_0042bfc9 + 3);
    }
    pcVar1 = FUN_00408b84((char *)param_2[2],pcVar1,param_2[1] + -1);
    iVar2 = FUN_00408af4(pcVar1);
    param_2[3] = iVar2;
  }
  else if (iVar2 == 0xe) {
    if (*(char **)(param_1 + 0x54) == (char *)0x0) {
      param_2[3] = 0;
    }
    else {
      iVar2 = FUN_00408af4(*(char **)(param_1 + 0x54));
      param_2[3] = iVar2;
    }
  }
  return;
}



undefined4 FUN_0042bff0(void)

{
  int iVar1;
  int in_stack_00000004;
  
  iVar1 = *(int *)(*(int *)(in_stack_00000004 + -4) + 0x20);
  if (iVar1 != 0) {
    return CONCAT31((int3)((uint)iVar1 >> 8),
                    *(char *)(iVar1 + 0x4e) != *(char *)(*(int *)(in_stack_00000004 + -8) + 0x4e));
  }
  return CONCAT31((int3)((uint)*(int *)(in_stack_00000004 + -8) >> 8),
                  *(undefined1 *)(*(int *)(in_stack_00000004 + -8) + 0x4e));
}



void FUN_0042c020(undefined4 param_1,int *param_2)

{
  undefined4 uVar1;
  undefined1 *puVar2;
  undefined1 *puVar3;
  undefined4 uVar4;
  
  puVar3 = &LAB_0042bfd0;
  puVar2 = &LAB_0042bfe4;
  uVar4 = param_1;
  uVar1 = FUN_0042bff0();
  (**(code **)(*param_2 + 4))(param_2,s_IsControl_0042c064,uVar1,puVar2,param_1,puVar3,uVar4);
  return;
}



void FUN_0042c070(int param_1)

{
  int iVar1;
  
  if (*(short *)(param_1 + 0x10a) != 0) {
    iVar1 = FUN_0042a1dc(param_1);
    if (iVar1 != 0) {
      iVar1 = FUN_0042a1dc(param_1);
      if (*(int *)(iVar1 + 0x30) != *(int *)(param_1 + 0x108)) {
        (**(code **)(param_1 + 0x108))(*(undefined4 *)(param_1 + 0x10c),param_1);
        return;
      }
    }
  }
  if (((*(byte *)(param_1 + 0x20) & 0x10) == 0) && (*(int *)(param_1 + 0x5c) != 0)) {
    (**(code **)(**(int **)(param_1 + 0x5c) + 0x18))();
  }
  else if (*(short *)(param_1 + 0x10a) != 0) {
    (**(code **)(param_1 + 0x108))(*(undefined4 *)(param_1 + 0x10c),param_1);
  }
  return;
}



void FUN_0042c0dc(int param_1)

{
  if (*(short *)(param_1 + 0x112) != 0) {
    (**(code **)(param_1 + 0x110))(*(undefined4 *)(param_1 + 0x114),param_1);
  }
  return;
}



void FUN_0042c0fc(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
                 undefined4 param_5)

{
  if (*(short *)(param_1 + 0xba) != 0) {
    (**(code **)(param_1 + 0xb8))
              (*(undefined4 *)(param_1 + 0xbc),param_1,param_2,param_4,param_5,param_3);
  }
  return;
}



void FUN_0042c134(int *param_1,int param_2,undefined1 param_3,byte param_4)

{
  byte bVar1;
  undefined3 extraout_var;
  undefined4 extraout_EDX;
  
  if ((*(byte *)((int)param_1 + 0x41) & 0x10) == 0) {
    bVar1 = FUN_00440838(CONCAT22(*(short *)(param_2 + 10) >> 0xf,*(undefined2 *)(param_2 + 4)));
    FUN_00403130(param_1,CONCAT31((int3)((uint)extraout_EDX >> 8),param_3),
                 CONCAT31(extraout_var,bVar1 | param_4));
  }
  return;
}



void FUN_0042c178(int *param_1,int param_2)

{
  FUN_0042a990(param_1,param_1);
  (**(code **)(*param_1 + -0x10))(param_1,param_2);
  if ((*(byte *)(param_1 + 0x10) & 2) != 0) {
    FUN_0042afdc(param_1,'\x01');
  }
  if ((*(byte *)(param_1 + 0x10) & 8) != 0) {
    *(ushort *)(param_1 + 0x11) = *(ushort *)(param_1 + 0x11) | 2;
  }
  FUN_0042c134(param_1,param_2,0,DAT_0042c1c0);
  return;
}



void FUN_0042c1c4(int *param_1,undefined4 param_2)

{
  FUN_0042a990(param_1,param_1);
  (**(code **)(*param_1 + -0x10))(param_1,param_2);
  return;
}



void FUN_0042c1e0(int *param_1,int param_2)

{
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 uVar1;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 uVar2;
  
  FUN_0042a990(param_1,param_1);
  (**(code **)(*param_1 + -0x10))(param_1,param_2);
  uVar1 = extraout_ECX;
  uVar2 = extraout_EDX;
  if ((*(byte *)(param_1 + 0x10) & 2) != 0) {
    FUN_0042afdc(param_1,'\x01');
    uVar1 = extraout_ECX_00;
    uVar2 = extraout_EDX_00;
  }
  if ((*(byte *)(param_1 + 0x10) & 8) != 0) {
    FUN_00403130(param_1,uVar2,uVar1);
  }
  FUN_0042c134(param_1,param_2,0,DAT_0042c230);
  return;
}



char FUN_0042c238(int *param_1,int *param_2,int *param_3)

{
  undefined4 uVar1;
  char cVar2;
  int local_20;
  int local_1c;
  int local_18;
  int local_14;
  
  local_20 = *param_2;
  local_1c = *param_3;
  uVar1 = FUN_0042bc30(param_1,&local_20,&local_1c);
  if ((char)uVar1 != '\0') {
    local_18 = local_20;
    local_14 = local_1c;
    if ((((char)param_1[0x13] == '\0') ||
        (((uVar1 = FUN_0042bbc4(param_1,&local_18,&local_14), (char)uVar1 != '\0' &&
          (local_18 == local_20)) && (local_14 == local_1c)))) ||
       (uVar1 = FUN_0042bc30(param_1,&local_18,&local_14), (char)uVar1 != '\0')) {
      cVar2 = '\x01';
    }
    else {
      cVar2 = '\0';
    }
    if (cVar2 != '\0') {
      *param_2 = local_18;
      *param_3 = local_14;
    }
    return cVar2;
  }
  return '\0';
}



void FUN_0042c374(int param_1,undefined1 param_2,undefined4 param_3,undefined4 param_4)

{
  if (*(short *)(param_1 + 0xc2) != 0) {
    (**(code **)(param_1 + 0xc0))(*(undefined4 *)(param_1 + 0xc4),param_1,param_2,param_4,param_3);
  }
  return;
}



void FUN_0042c3a4(int *param_1,int param_2)

{
  byte bVar1;
  undefined3 extraout_var;
  
  (**(code **)(*param_1 + -0x10))(param_1,param_2);
  if ((*(byte *)((int)param_1 + 0x41) & 0x10) == 0) {
    bVar1 = FUN_00440838(CONCAT22(*(short *)(param_2 + 10) >> 0xf,*(undefined2 *)(param_2 + 4)));
    FUN_00403130(param_1,CONCAT31(extraout_var,bVar1),(int)*(short *)(param_2 + 8));
  }
  return;
}



void FUN_0042c3e0(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
                 undefined4 param_5)

{
  if (*(short *)(param_1 + 0xca) != 0) {
    (**(code **)(param_1 + 200))
              (*(undefined4 *)(param_1 + 0xcc),param_1,param_2,param_4,param_5,param_3);
  }
  return;
}



void FUN_0042c418(int *param_1,int param_2,undefined1 param_3)

{
  byte bVar1;
  undefined3 extraout_var;
  undefined4 extraout_EDX;
  
  if ((*(byte *)((int)param_1 + 0x41) & 0x10) == 0) {
    bVar1 = FUN_00440838(CONCAT22(*(short *)(param_2 + 10) >> 0xf,*(undefined2 *)(param_2 + 4)));
    FUN_00403130(param_1,CONCAT31((int3)((uint)extraout_EDX >> 8),param_3),
                 CONCAT31(extraout_var,bVar1));
  }
  return;
}



void FUN_0042c54c(int *param_1,int param_2)

{
  int iVar1;
  
  (**(code **)(*param_1 + -0x10))(param_1,param_2);
  if (DAT_0042c5f8 == (DAT_0042c5f4 & *(ushort *)(param_1 + 8))) {
    iVar1 = param_1[0x19];
    if ((*(int *)(iVar1 + 0xc) == 0) || (param_1[0xe] <= *(int *)(iVar1 + 0xc))) {
      if ((*(int *)(iVar1 + 0x14) != 0) && (param_1[0xe] < *(int *)(iVar1 + 0x14))) {
        *(int *)(iVar1 + 0x14) = param_1[0xe];
      }
    }
    else {
      *(int *)(iVar1 + 0xc) = param_1[0xe];
    }
    if ((*(int *)(iVar1 + 8) == 0) || (param_1[0xf] <= *(int *)(iVar1 + 8))) {
      if ((*(int *)(iVar1 + 0x10) != 0) && (param_1[0xf] < *(int *)(iVar1 + 0x10))) {
        *(int *)(iVar1 + 0x10) = param_1[0xf];
      }
    }
    else {
      *(int *)(iVar1 + 8) = param_1[0xf];
    }
    iVar1 = *(int *)(param_2 + 8);
    if ((((iVar1 != 0) && (param_1[0x24] != 0)) && ((*(byte *)((int)param_1 + 0x45) & 4) == 0)) &&
       ((((*(byte *)(iVar1 + 0x18) & 1) == 0 && (*(int *)(iVar1 + 0x10) != 0)) &&
        (*(int *)(iVar1 + 0x14) != 0)))) {
      FUN_0042bd98(param_1);
    }
  }
  return;
}



void FUN_0042c62c(int *param_1)

{
  (**(code **)(*param_1 + 0x74))();
  return;
}



void FUN_0042c634(int *param_1)

{
  (**(code **)(*param_1 + 0x74))();
  return;
}



void FUN_0042c63c(int param_1,int param_2)

{
  if (*(char *)(param_1 + 0x4a) != '\0') {
    if (*(int *)(param_2 + 4) == 0) {
      FUN_0042af4c(param_1,*(int *)(*(int *)(param_1 + 0x24) + 0x60));
    }
    else {
      FUN_0042af4c(param_1,*(int *)(param_2 + 8));
    }
    *(undefined1 *)(param_1 + 0x4a) = 1;
  }
  return;
}



void FUN_0042c68c(int *param_1,int param_2)

{
  if ((PTR_DAT_004758fc[9] != '\0') && (*(int *)(param_2 + 4) == 0)) {
    (**(code **)(*param_1 + 0x74))();
  }
  return;
}



void FUN_0042c6a4(int param_1)

{
  if (*(char *)(param_1 + 0x8a) != '\0') {
    FUN_0042af04(param_1,*(char *)(*(int *)(param_1 + 0x24) + 0x89));
    *(undefined1 *)(param_1 + 0x8a) = 1;
  }
  return;
}



void FUN_0042c6cc(int param_1,int param_2)

{
  if (*(char *)(param_1 + 0x49) != '\0') {
    if (*(int *)(param_2 + 4) == 0) {
      FUN_0042aeac(param_1);
    }
    else {
      FUN_0042aeac(param_1);
    }
    *(undefined1 *)(param_1 + 0x49) = 1;
  }
  return;
}



void FUN_0042c6fc(int param_1)

{
  if (*(char *)(param_1 + 0x46) != '\0') {
    FUN_0042aeac(param_1);
    *(undefined1 *)(param_1 + 0x46) = 1;
  }
  return;
}



void FUN_0042c724(int param_1)

{
  if (*(int *)(param_1 + 0x24) != 0) {
    FUN_0042bd64(*(int *)(param_1 + 0x24),0xb013,0,param_1);
  }
  return;
}



void FUN_0042c73c(int param_1)

{
  if (*(int *)(param_1 + 0x24) != 0) {
    FUN_0042bd64(*(int *)(param_1 + 0x24),0xb014,0,param_1);
  }
  return;
}



void FUN_0042c754(undefined4 param_1,int param_2)

{
  *(undefined4 *)(param_2 + 0xc) = 0;
  return;
}



int * FUN_0042c75c(int *param_1,undefined4 *param_2)

{
  int iVar1;
  int iVar2;
  int *piVar3;
  int local_1c [4];
  
  piVar3 = local_1c;
  for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {
    *piVar3 = *param_2;
    param_2 = param_2 + 1;
    piVar3 = piVar3 + 1;
  }
  piVar3 = (int *)0x0;
  iVar2 = (**(code **)(*param_1 + 0x54))();
  if (iVar2 != 0) {
    iVar2 = (**(code **)(*param_1 + 0x54))();
    iVar1 = FUN_00402e9c(param_1);
    if (iVar2 != iVar1) {
      iVar2 = (**(code **)(*param_1 + 0x54))();
      piVar3 = (int *)(**(code **)(iVar2 + 0x2c))(iVar2,1,*(undefined4 *)PTR_DAT_004757c0);
      FUN_0042a5d4(piVar3,local_1c[1]);
      FUN_0042a5b4(piVar3,local_1c[0]);
      FUN_0042a83c(piVar3,local_1c[2] - local_1c[0]);
      FUN_0042a880(piVar3,local_1c[3] - local_1c[1]);
    }
  }
  return piVar3;
}



void FUN_0042c7e4(void)

{
  int iVar1;
  int *piVar2;
  int *piVar3;
  int in_stack_00000004;
  int local_24 [4];
  int local_14 [2];
  int local_c;
  int local_8;
  
  piVar3 = (int *)(in_stack_00000004 + -4);
  FUN_0040ea58(*(undefined4 *)(*piVar3 + 0x30),*(undefined4 *)(*piVar3 + 0x34),local_14);
  FUN_0042a938(*(int **)(*piVar3 + 0x24),local_14,&local_c);
  iVar1 = *(int *)(*(int *)(in_stack_00000004 + -8) + 8);
  piVar2 = *(int **)(*piVar3 + 0x24);
  FUN_0040ea8c((piVar2[0xc] + *(int *)(iVar1 + 0x44)) - local_c,
               (piVar2[0xd] + *(int *)(iVar1 + 0x48)) - local_8,
               ((*(int *)(iVar1 + 0x4c) - *(int *)(iVar1 + 0x44)) + piVar2[0xe]) -
               *(int *)(*piVar3 + 0x38),local_24,
               ((*(int *)(iVar1 + 0x50) - *(int *)(iVar1 + 0x48)) + piVar2[0xf]) -
               *(int *)(*piVar3 + 0x3c));
  FUN_0042a7e8(piVar2,local_24);
  return;
}



void FUN_0042c870(int *param_1,int param_2)

{
  char cVar1;
  int *piVar2;
  int iVar3;
  
  cVar1 = (**(code **)(*param_1 + 0x50))();
  if ((cVar1 == '\0') || (param_1[9] == 0)) {
    piVar2 = FUN_0042c75c(param_1,(undefined4 *)(*(int *)(param_2 + 8) + 0x44));
    if (piVar2 != (int *)0x0) {
      *(int **)(*(int *)(param_2 + 8) + 4) = piVar2;
      iVar3 = FUN_00430e98(piVar2);
      *(int *)(*(int *)(param_2 + 8) + 8) = iVar3;
    }
  }
  else {
    FUN_0042c7e4();
  }
  return;
}



void FUN_0042c8d0(int *param_1,int *param_2,char param_3)

{
  char cVar1;
  int *piVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 uVar3;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 uVar4;
  undefined4 *in_FS_OFFSET;
  undefined1 uVar5;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  uint *local_c;
  int local_8;
  
  puStack_1c = &stack0xfffffffc;
  local_8 = 0;
  local_c = (uint *)0x0;
  puStack_20 = &LAB_0042c9b5;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  piVar2 = FUN_004030cc(param_2,(int)PTR_PTR_00435828);
  if ((char)piVar2 == '\0') goto LAB_0042c99a;
  if (param_3 == '\0') {
LAB_0042c92e:
    FUN_0042adf0((int)param_1,(uint *)param_2[0x15]);
  }
  else {
    FUN_0042adc0((int)param_1,&local_8);
    uVar5 = local_8 == 0;
    if ((bool)uVar5) goto LAB_0042c92e;
    FUN_0042adc0((int)param_1,(int *)&local_c);
    FUN_00403f6c(local_c,(uint *)param_1[2]);
    if ((bool)uVar5) goto LAB_0042c92e;
  }
  if (param_3 == '\0') {
LAB_0042c947:
    (**(code **)(*param_1 + 0x5c))(param_1,*(undefined1 *)((int)param_2 + 0x59));
    uVar3 = extraout_ECX_00;
    uVar4 = extraout_EDX_00;
  }
  else {
    cVar1 = (**(code **)(*param_1 + 0x4c))();
    uVar3 = extraout_ECX;
    uVar4 = extraout_EDX;
    if (cVar1 == '\x01') goto LAB_0042c947;
  }
  if ((param_3 == '\0') || (param_1[0x1c] == 0)) {
    FUN_00403c30(param_1 + 0x1c,(undefined4 *)param_2[0x18]);
    uVar3 = extraout_ECX_01;
    uVar4 = extraout_EDX_01;
  }
  if ((param_3 == '\0') || (*(char *)((int)param_1 + 0x47) == '\x01')) {
    FUN_0042acd8(param_1,CONCAT31((int3)((uint)uVar4 >> 8),*(undefined1 *)((int)param_2 + 0x6a)),
                 uVar3);
  }
  if ((param_3 == '\0') || (*(short *)((int)param_1 + 0x10a) == 0)) {
    param_1[0x42] = param_2[0xc];
    param_1[0x43] = param_2[0xd];
  }
LAB_0042c99a:
  *in_FS_OFFSET = uStack_24;
  puStack_1c = &LAB_0042c9bc;
  puStack_20 = (undefined1 *)0x42c9b4;
  FUN_00403c00((int *)&local_c,2);
  return;
}



undefined4 FUN_0042ca10(int param_1)

{
  if (*(int **)(param_1 + 0x5c) != (int *)0x0) {
    param_1 = (**(code **)(**(int **)(param_1 + 0x5c) + 0x28))();
    if ((char)param_1 != '\0') {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



undefined4 FUN_0042ca30(int param_1)

{
  if (*(int **)(param_1 + 0x5c) != (int *)0x0) {
    param_1 = (**(code **)(**(int **)(param_1 + 0x5c) + 0x30))();
    if ((char)param_1 != '\0') {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



undefined4 FUN_0042ca50(int param_1)

{
  if (*(int **)(param_1 + 0x5c) != (int *)0x0) {
    param_1 = (**(code **)(**(int **)(param_1 + 0x5c) + 0x3c))();
    if ((char)param_1 != '\0') {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



undefined4 FUN_0042ca70(int param_1)

{
  if (*(int **)(param_1 + 0x5c) != (int *)0x0) {
    param_1 = (**(code **)(**(int **)(param_1 + 0x5c) + 8))();
    if ((char)param_1 != '\0') {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



void FUN_0042ca90(int *param_1)

{
  int iVar1;
  undefined4 uVar2;
  undefined4 extraout_ECX;
  
  FUN_004148c0((int)param_1);
  iVar1 = FUN_0042a1dc((int)param_1);
  if (iVar1 != 0) {
    uVar2 = FUN_0042a1dc((int)param_1);
    FUN_00403130(param_1,uVar2,CONCAT31((int3)((uint)extraout_ECX >> 8),1));
  }
  FUN_0042a4d8((int)param_1);
  return;
}



void FUN_0042cac8(int *param_1,int *param_2)

{
  int *piVar1;
  undefined4 uVar2;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  uint *local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_8 = (uint *)0x0;
  puStack_1c = &LAB_0042cb61;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  piVar1 = FUN_004030cc(param_2,(int)PTR_PTR_00435828);
  if ((char)piVar1 == '\0') {
    FUN_0040fbdc(param_1,param_2);
  }
  else {
    uVar2 = (**(code **)(*param_1 + 0x4c))();
    FUN_00436168(param_2,uVar2);
    FUN_00436218(param_2,(uint *)param_1[0x1c]);
    FUN_0042adc0((int)param_1,(int *)&local_8);
    FUN_004360a8(param_2,local_8);
    FUN_00436334(param_2,CONCAT31((int3)((uint)extraout_EDX >> 8),
                                  *(undefined1 *)((int)param_1 + 0x47)));
    (**(code **)(*param_2 + 0x34))();
  }
  *in_FS_OFFSET = uStack_20;
  puStack_18 = &LAB_0042cb68;
  puStack_1c = (undefined1 *)0x42cb60;
  FUN_00403bdc((int *)&local_8);
  return;
}



int FUN_0042cb70(double *param_1,int param_2)

{
  double *pdVar1;
  int iVar2;
  int iVar3;
  
  iVar2 = 0;
  if (0 < param_2) {
    iVar3 = 1;
    pdVar1 = param_1;
    do {
      pdVar1 = pdVar1 + 1;
      if (*pdVar1 < param_1[iVar2]) {
        iVar2 = iVar3;
      }
      iVar3 = iVar3 + 1;
      param_2 = param_2 + -1;
    } while (param_2 != 0);
  }
  return iVar2;
}



undefined4 FUN_0042cc5c(int *param_1)

{
  int iVar1;
  int *piVar2;
  
  if (param_1[0x24] != 0) {
    iVar1 = (**(code **)(*param_1 + 0x54))();
    piVar2 = FUN_004030cc((int *)param_1[0x24],iVar1);
    if ((char)piVar2 != '\0') {
      return CONCAT31((int3)((uint)piVar2 >> 8),1);
    }
  }
  return 0;
}



uint FUN_0042ccac(int *param_1,uint param_2,undefined4 param_3)

{
  char cVar1;
  uint uVar2;
  
  cVar1 = FUN_00403130(param_1,param_2,param_3);
  if (cVar1 != '\0') {
    if ((param_2 & 2) == 2) {
      param_2 = param_2 & 0xfffffffd;
    }
    else if ((param_2 & 1) != 1) {
      param_2 = param_2 | 2;
    }
  }
  uVar2 = FUN_0042ccec((int)param_1);
  return param_2 | uVar2;
}



undefined4 FUN_0042ccec(int param_1)

{
  undefined4 uVar1;
  
  uVar1 = FUN_0042b3a0(param_1);
  if ((char)uVar1 != '\0') {
    return 0x20000;
  }
  return 0;
}



void FUN_0042cd18(int param_1,int param_2)

{
  int *piVar1;
  char cVar2;
  
  piVar1 = *(int **)(param_1 + 0x5c);
  if (piVar1 != (int *)0x0) {
    cVar2 = (**(code **)(*piVar1 + 0x60))(piVar1,*(int *)(param_2 + 8) + 0x38);
    if (cVar2 == '\0') {
      *(undefined4 *)(param_2 + 0xc) = 1;
    }
  }
  return;
}



void FUN_0042cd44(int *param_1,int param_2)

{
  POINT pt;
  BOOL BVar1;
  int *piVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  LONG LVar3;
  LONG LVar4;
  int local_38;
  LONG local_34;
  LONG local_30;
  LONG local_2c;
  byte local_28 [4];
  RECT local_24;
  int aiStack_14 [2];
  
  if ((*(int *)(param_2 + 0xc) == 0) && ((*(byte *)(param_1 + 8) & 0x10) == 0)) {
    FUN_00407184(*(undefined4 *)(param_2 + 8),&local_38);
    if (local_38 < 0) {
      local_30 = local_38;
      local_2c = local_34;
    }
    else {
      FUN_0042a964(param_1,&local_38,&local_30);
      LVar3 = local_30;
      LVar4 = local_2c;
      (**(code **)(*param_1 + 0x40))(param_1,&local_24);
      pt.y = LVar4;
      pt.x = LVar3;
      BVar1 = PtInRect(&local_24,pt);
      if (BVar1 == 0) {
        (**(code **)(*param_1 + -0x10))(param_1,param_2);
        return;
      }
    }
    local_28[0] = 0;
    FUN_00403130(param_1,&local_30,local_28);
    *(uint *)(param_2 + 0xc) = (uint)local_28[0];
    if (local_28[0] == 0) {
      piVar2 = (int *)FUN_00403130(param_1,extraout_EDX,extraout_ECX);
      if ((piVar2 != (int *)0x0) && (*(char *)((int)piVar2 + 0x51) != '\0')) {
        FUN_0042a990(param_1,0);
        piVar2[0x15] = (int)param_1;
        if (local_38 < 0) {
          FUN_0040ea58(0,0,aiStack_14);
          FUN_0042a938(param_1,aiStack_14,&local_38);
        }
        (**(code **)(*piVar2 + 0x40))(piVar2,local_38,local_34);
        *(undefined4 *)(param_2 + 0xc) = 1;
      }
      if (*(int *)(param_2 + 0xc) == 0) {
        (**(code **)(*param_1 + -0x10))(param_1,param_2);
      }
    }
  }
  return;
}



void FUN_0042ce8c(int param_1,int *param_2)

{
  undefined4 uVar1;
  
  FUN_00429cb0(param_1,param_2);
  uVar1 = FUN_004030e4(param_2,(int)PTR_PTR_00427220);
  *(undefined4 *)(param_1 + 0x20) = uVar1;
  return;
}



void FUN_0042cf04(int *param_1,char param_2,int *param_3)

{
  undefined1 *puVar1;
  int *piVar2;
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY_30;
  undefined1 *puStackY_2c;
  undefined1 *puStackY_28;
  undefined4 in_stack_ffffffdc;
  undefined4 in_stack_ffffffe0;
  undefined4 *local_c;
  char local_5;
  
  local_c = (undefined4 *)0x0;
  if (param_2 != '\0') {
    puStackY_28 = (undefined1 *)0x42cf1d;
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffdc,in_stack_ffffffe0);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  puStackY_2c = &LAB_0042cff6;
  uStackY_30 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY_30;
  puStackY_28 = &stack0xfffffffc;
  local_5 = param_2;
  FUN_00429f98(param_1,'\0',param_3);
  puVar1 = FUN_004406a0();
  param_1[0x57] = (int)puVar1;
  piVar2 = FUN_00417658((int *)PTR_PTR_00415ba4,'\x01',extraout_ECX_00);
  param_1[0x4c] = (int)piVar2;
  FUN_00417804(piVar2,param_1[0x18]);
  *(undefined1 *)(param_1 + 0x58) = 1;
  param_1[0x5c] = -1;
  *(undefined1 *)(param_1 + 0x55) = 3;
  if (*(short *)(PTR_DAT_004758fc + 4) == 0x11) {
    FUN_00403bdc(param_1 + 0x56);
  }
  else {
    FUN_00447098(*(int *)PTR_DAT_004758e0,(int *)&local_c,extraout_ECX_01);
    FUN_00403c30(param_1 + 0x56,local_c);
  }
  *(undefined1 *)(param_1 + 0x5f) = 0;
  *(undefined1 *)((int)param_1 + 0x122) = DAT_0042d01c;
  *(undefined1 *)((int)param_1 + 0x123) = 2;
  *(undefined1 *)(param_1 + 0x49) = 1;
  param_1[0x4a] = 1;
  *in_FS_OFFSET = uStackY_30;
  puStackY_28 = &LAB_0042cffd;
  puStackY_2c = (undefined1 *)0x42cff5;
  FUN_00403bdc((int *)&local_c);
  return;
}



void FUN_0042d020(int *param_1,char param_2)

{
  int *piVar1;
  int iVar2;
  int *piVar3;
  undefined4 extraout_ECX;
  byte extraout_DL;
  
  piVar1 = FUN_004032b4(param_1,param_2);
  FUN_00414710((int)piVar1);
  if ((char)piVar1[0x51] != '\0') {
    *(undefined1 *)(piVar1 + 0x51) = 0;
    FUN_00428ca8((int)piVar1,'\0',extraout_ECX);
  }
  FUN_0040553c(piVar1 + 0x52);
  FUN_00402f54((int *)piVar1[0x50]);
  if (piVar1[9] != 0) {
    FUN_0042dbc0(piVar1,'\x01');
  }
  if (piVar1[0x53] != 0) {
    (**(code **)(*piVar1 + 0x9c))();
  }
  iVar2 = FUN_0042de00((int)piVar1);
  while (iVar2 != 0) {
    piVar3 = (int *)FUN_0042ddc4((int)piVar1,iVar2 + -1);
    FUN_0042dc2c((int)piVar1,piVar3);
    (**(code **)(*piVar3 + -4))(piVar3,1);
    iVar2 = FUN_0042de00((int)piVar1);
  }
  FUN_00402f54((int *)piVar1[0x4c]);
  if (piVar1[0x57] != 0) {
    FUN_00440738(piVar1[0x57]);
  }
  FUN_0042a068(piVar1,extraout_DL & 0xfc);
  if ('\0' < (char)extraout_DL) {
    FUN_004032a4(piVar1);
  }
  return;
}



void FUN_0042d0f4(int param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  
  if (*(int *)(param_1 + 0x180) != 0) {
    puStack_1c = (undefined1 *)0x42d11b;
    piVar2 = (int *)FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',param_3);
    puStack_20 = &LAB_0042d1b8;
    uStack_24 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_24;
    iVar5 = *(int *)(*(int *)(param_1 + 0x180) + 8);
    puStack_1c = &stack0xfffffffc;
    FUN_0040f6dc(piVar2,iVar5);
    if (-1 < iVar5 + -1) {
      iVar6 = 0;
      iVar4 = iVar5;
      do {
        iVar3 = FUN_0040f4e8(*(undefined4 **)(param_1 + 0x180),iVar6);
        iVar1 = *(int *)(iVar3 + 0x170);
        if ((-1 < iVar1) && (iVar1 < iVar5)) {
          FUN_0040f634(piVar2,iVar1,iVar3);
        }
        iVar6 = iVar6 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
    }
    if (-1 < iVar5 + -1) {
      iVar4 = 0;
      do {
        iVar6 = FUN_0040f4e8(piVar2,iVar4);
        if (iVar6 != 0) {
          FUN_00431050(iVar6,(short)iVar4);
        }
        iVar4 = iVar4 + 1;
        iVar5 = iVar5 + -1;
      } while (iVar5 != 0);
    }
    *in_FS_OFFSET = uStack_24;
    puStack_1c = (undefined1 *)0x42d1bf;
    puStack_20 = (undefined1 *)0x42d1b7;
    FUN_00402f54(piVar2);
    return;
  }
  return;
}



void FUN_0042d1c8(int *param_1,int *param_2)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  
  puStack_10 = (undefined1 *)0x42d1da;
  FUN_0042d968((int)param_1);
  puStack_14 = &LAB_0042d208;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  puStack_10 = &stack0xfffffffc;
  FUN_0042a2d4(param_1,param_2);
  *in_FS_OFFSET = uStack_18;
  puStack_10 = &LAB_0042d20f;
  puStack_14 = (undefined1 *)0x42d207;
  FUN_0042d970(param_1);
  return;
}



void FUN_0042d240(void)

{
  return;
}



uint FUN_0042d244(int param_1,int param_2,char param_3)

{
  uint uVar1;
  int iVar2;
  
  uVar1 = 0;
  if (param_3 == '\x01') {
    uVar1 = (uint)(*(int *)(param_1 + 0x34) < *(int *)(param_2 + 0x34));
  }
  else if (param_3 == '\x02') {
    iVar2 = *(int *)(param_2 + 0x34) + *(int *)(param_2 + 0x3c);
    uVar1 = CONCAT31((int3)((uint)iVar2 >> 8),
                     iVar2 <= *(int *)(param_1 + 0x34) + *(int *)(param_1 + 0x3c));
  }
  else if (param_3 == '\x03') {
    uVar1 = (uint)(*(int *)(param_1 + 0x30) < *(int *)(param_2 + 0x30));
  }
  else if (param_3 == '\x04') {
    iVar2 = *(int *)(param_2 + 0x30) + *(int *)(param_2 + 0x38);
    uVar1 = CONCAT31((int3)((uint)iVar2 >> 8),
                     iVar2 <= *(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x38));
  }
  return uVar1;
}



void FUN_0042d2a4(int *param_1,byte param_2,undefined4 param_3,int param_4)

{
  int *piVar1;
  bool bVar2;
  int iVar3;
  int iVar4;
  undefined4 uVar5;
  int iVar6;
  undefined4 uVar7;
  uint *in_FS_OFFSET;
  undefined1 local_2c [8];
  int local_24;
  int local_20;
  int local_1c;
  int local_18;
  uint local_14;
  uint local_10;
  byte local_9;
  int *local_8;
  
  local_9 = param_2;
  local_8 = param_1;
  if ((param_2 == 0) || ((&DAT_004746d8)[param_2] != *(char *)((int)param_1 + 0x51))) {
    if ((param_1[0x20] != 0) && (param_1[0x21] != 0)) {
      iVar4 = param_1[0xc];
      iVar6 = param_1[0xd];
      local_10 = param_1[0xe];
      local_14 = param_1[0xf];
      bVar2 = FUN_00431194(param_1[9]);
      if (bVar2) {
        (**(code **)(*(int *)local_8[9] + 0x40))((int *)local_8[9],local_2c);
        local_1c = local_24;
        local_18 = local_20;
      }
      else {
        FUN_0040ea58(*(undefined4 *)(local_8[9] + 0x38),*(undefined4 *)(local_8[9] + 0x3c),&local_1c
                    );
      }
      if ((*(byte *)((int)local_8 + 0x51) & 4) == 0) {
        if ((*(byte *)((int)local_8 + 0x51) & 1) == 0) {
          iVar4 = MulDiv(local_8[0x1e],local_1c,local_8[0x20]);
          iVar3 = (int)local_10 >> 1;
          if (iVar3 < 0) {
            iVar3 = iVar3 + (uint)((local_10 & 1) != 0);
          }
          iVar4 = iVar4 - iVar3;
        }
      }
      else if ((*(byte *)((int)local_8 + 0x51) & 1) == 0) {
        iVar4 = local_1c - (local_8[0x20] - local_8[0x1e]);
      }
      else {
        local_10 = local_1c - (local_8[0x20] - local_8[0x1e]);
      }
      if ((*(byte *)((int)local_8 + 0x51) & 8) == 0) {
        if ((*(byte *)((int)local_8 + 0x51) & 2) == 0) {
          iVar6 = MulDiv(local_8[0x1f],local_18,local_8[0x21]);
          iVar3 = (int)local_14 >> 1;
          if (iVar3 < 0) {
            iVar3 = iVar3 + (uint)((local_14 & 1) != 0);
          }
          iVar6 = iVar6 - iVar3;
        }
      }
      else if ((*(byte *)((int)local_8 + 0x51) & 2) == 0) {
        iVar6 = local_18 - (local_8[0x21] - local_8[0x1f]);
      }
      else {
        local_14 = local_18 - (local_8[0x21] - local_8[0x1f]);
      }
      *(undefined1 *)((int)local_8 + 0x52) = 1;
      *in_FS_OFFSET = (uint)&stack0xffffffbc;
      (**(code **)(*local_8 + 0x7c))(local_8,iVar4,iVar6,local_14,local_10);
      *in_FS_OFFSET = local_14;
      *(undefined1 *)((int)local_8 + 0x52) = 0;
      return;
    }
    if (param_2 == 0) {
      return;
    }
  }
  local_10 = *(int *)(*(int *)(param_4 + -4) + 8) - **(int **)(param_4 + -4);
  if (((int)local_10 < 0) || ((byte)(param_2 - 3) < 2)) {
    local_10 = param_1[0xe];
  }
  local_14 = *(int *)(*(int *)(param_4 + -4) + 0xc) - *(int *)(*(int *)(param_4 + -4) + 4);
  if (((int)local_14 < 0) || ((byte)(param_2 - 1) < 2)) {
    local_14 = param_1[0xf];
  }
  uVar5 = **(undefined4 **)(param_4 + -4);
  uVar7 = *(undefined4 *)(*(int *)(param_4 + -4) + 4);
  if (param_2 == 1) {
    piVar1 = (int *)(*(int *)(param_4 + -4) + 4);
    *piVar1 = *piVar1 + local_14;
  }
  else if (param_2 == 2) {
    piVar1 = (int *)(*(int *)(param_4 + -4) + 0xc);
    *piVar1 = *piVar1 - local_14;
    uVar7 = *(undefined4 *)(*(int *)(param_4 + -4) + 0xc);
  }
  else if (param_2 == 3) {
    **(int **)(param_4 + -4) = **(int **)(param_4 + -4) + local_10;
  }
  else if (param_2 == 4) {
    piVar1 = (int *)(*(int *)(param_4 + -4) + 8);
    *piVar1 = *piVar1 - local_10;
    uVar5 = *(undefined4 *)(*(int *)(param_4 + -4) + 8);
  }
  *(undefined1 *)((int)param_1 + 0x52) = 1;
  *in_FS_OFFSET = (uint)&stack0xffffffbc;
  (**(code **)(*param_1 + 0x7c))(param_1,uVar5,uVar7,local_14,local_10);
  *in_FS_OFFSET = local_14;
  *(undefined1 *)((int)local_8 + 0x52) = 0;
  return;
}



void FUN_0042d640(byte param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  int *piVar4;
  undefined4 extraout_ECX;
  int iVar5;
  undefined4 local_c;
  undefined4 local_8;
  
  (**(code **)(**(int **)(param_4 + -8) + 8))();
  if (((*(int *)(param_4 + -0xc) != 0) &&
      (((param_1 == 0 || (*(char *)(*(int *)(param_4 + -0xc) + 0x47) != '\0')) ||
       (((*(byte *)(*(int *)(param_4 + -0xc) + 0x20) & 0x10) != 0 &&
        ((*(byte *)(*(int *)(param_4 + -0xc) + 0x41) & 4) == 0)))))) &&
     (param_1 == *(byte *)(*(int *)(param_4 + -0xc) + 0x4b))) {
    FUN_0040f38c(*(int **)(param_4 + -8),*(int *)(param_4 + -0xc));
  }
  local_c = FUN_0042de00(*(int *)(param_4 + -0x10));
  if (-1 < local_c + -1) {
    local_8 = 0;
    do {
      iVar1 = FUN_0042ddc4(*(int *)(param_4 + -0x10),local_8);
      if (((param_1 == *(byte *)(iVar1 + 0x4b)) &&
          ((((param_1 == 0 || (*(char *)(iVar1 + 0x47) != '\0')) ||
            (DAT_0042d790 == (DAT_0042d790 & *(uint *)(iVar1 + 0x40)))) ||
           (((*(byte *)(iVar1 + 0x20) & 0x10) != 0 && ((*(byte *)(iVar1 + 0x41) & 4) == 0)))))) &&
         (iVar1 != *(int *)(param_4 + -0xc))) {
        for (iVar5 = 0; iVar5 < *(int *)(*(int *)(param_4 + -8) + 8); iVar5 = iVar5 + 1) {
          iVar2 = FUN_0040f4e8(*(undefined4 **)(param_4 + -8),iVar5);
          uVar3 = FUN_0042d244(iVar1,iVar2,param_1);
          if ((char)uVar3 != '\0') break;
        }
        FUN_0040f564(*(int **)(param_4 + -8),iVar5,iVar1);
      }
      local_8 = local_8 + 1;
      local_c = local_c + -1;
    } while (local_c != 0);
  }
  local_c = *(int *)(*(int *)(param_4 + -8) + 8);
  if (-1 < local_c + -1) {
    local_8 = 0;
    do {
      iVar1 = param_4;
      piVar4 = (int *)FUN_0040f4e8(*(undefined4 **)(param_4 + -8),local_8);
      FUN_0042d2a4(piVar4,param_1,extraout_ECX,iVar1);
      local_8 = local_8 + 1;
      local_c = local_c + -1;
    } while (local_c != 0);
  }
  return;
}



undefined4 FUN_0042d794(void)

{
  int iVar1;
  int iVar2;
  undefined4 unaff_EBX;
  undefined4 uVar3;
  int *piVar4;
  int in_stack_00000004;
  
  piVar4 = (int *)(in_stack_00000004 + -0x10);
  uVar3 = CONCAT31((int3)((uint)unaff_EBX >> 8),1);
  iVar1 = FUN_0042de00(*piVar4);
  iVar1 = iVar1 + -1;
  if (-1 < iVar1) {
    do {
      iVar2 = FUN_0042ddc4(*piVar4,iVar1);
      if (*(char *)(iVar2 + 0x4b) != '\0') {
        return uVar3;
      }
      iVar2 = FUN_0042ddc4(*piVar4,iVar1);
      if (DAT_0042d7e4 != *(char *)(iVar2 + 0x51)) {
        return uVar3;
      }
      iVar1 = iVar1 + -1;
    } while (iVar1 != -1);
  }
  return 0;
}



void FUN_0042d7e8(int *param_1,undefined4 param_2,undefined4 param_3)

{
  undefined1 *puVar1;
  undefined4 uVar2;
  int *piVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 extraout_EDX_03;
  undefined4 extraout_EDX_04;
  undefined4 extraout_EDX_05;
  undefined4 *in_FS_OFFSET;
  undefined1 *puVar4;
  undefined1 *puVar5;
  undefined1 *puVar6;
  undefined1 *puVar7;
  undefined1 *puVar8;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  
  puVar4 = &stack0xfffffffc;
  puVar5 = &stack0xfffffffc;
  puVar6 = &stack0xfffffffc;
  puVar7 = &stack0xfffffffc;
  puVar8 = &stack0xfffffffc;
  if ((((char)param_1[0x51] != '\0') && ((char)param_1[0x5f] != '\0')) && (param_1[0x52] != 0)) {
    puStack_1c = (undefined1 *)0x42d82c;
    (**(code **)(*(int *)param_1[0x52] + 0x2c))((int *)param_1[0x52],0);
  }
  puStack_20 = (undefined1 *)0x42d832;
  puStack_1c = &stack0xfffffffc;
  uVar2 = FUN_0042d794();
  puVar1 = puStack_1c;
  if ((char)uVar2 != '\0') {
    puStack_1c = (undefined1 *)0x42d845;
    (**(code **)(*param_1 + 0x84))(param_1,param_3);
    puStack_1c = (undefined1 *)0x42d851;
    piVar3 = (int *)FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX);
    puStack_20 = &LAB_0042d8ae;
    uStack_24 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_24;
    puStack_1c = &stack0xfffffffc;
    FUN_0042d640(1,extraout_EDX_00,extraout_ECX_00,(int)&stack0xfffffffc);
    FUN_0042d640(2,extraout_EDX_01,puVar4,(int)&stack0xfffffffc);
    FUN_0042d640(3,extraout_EDX_02,puVar5,(int)&stack0xfffffffc);
    FUN_0042d640(4,extraout_EDX_03,puVar6,(int)&stack0xfffffffc);
    FUN_0042d640(5,extraout_EDX_04,puVar7,(int)&stack0xfffffffc);
    FUN_0042d640(0,extraout_EDX_05,puVar8,(int)&stack0xfffffffc);
    *in_FS_OFFSET = uStack_24;
    puStack_1c = (undefined1 *)0x42d8b5;
    puStack_20 = (undefined1 *)0x42d8ad;
    FUN_00402f54(piVar3);
    return;
  }
  if ((char)param_1[0x5a] != '\0') {
    puStack_1c = (undefined1 *)0x42d8cd;
    FUN_00403130(param_1,extraout_EDX,puVar1);
  }
  return;
}



void FUN_0042d8d4(int *param_1,undefined4 param_2)

{
  bool bVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  undefined1 local_18 [16];
  int *local_8;
  
  puStack_20 = (undefined1 *)0x42d8e8;
  local_8 = param_1;
  bVar1 = FUN_00431194((int)param_1);
  if ((bVar1) && ((*(byte *)(local_8 + 8) & 8) == 0)) {
    if ((short)local_8[0x48] == 0) {
      puStack_20 = (undefined1 *)0x42d914;
      FUN_0042d968((int)local_8);
      puStack_24 = &LAB_0042d95b;
      uStack_28 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack_28;
      puStack_20 = &stack0xfffffffc;
      (**(code **)(*local_8 + 0x40))(local_8,local_18);
      (**(code **)(*local_8 + 0x88))(local_8,param_2,local_18);
      *in_FS_OFFSET = uStack_28;
      puStack_20 = (undefined1 *)0x42d962;
      *(ushort *)(local_8 + 0x11) = *(ushort *)(local_8 + 0x11) & 0xffef;
      puStack_24 = (undefined1 *)0x42d95a;
      FUN_0042d970(local_8);
      return;
    }
    *(ushort *)(local_8 + 0x11) = *(ushort *)(local_8 + 0x11) | 0x10;
  }
  return;
}



void FUN_0042d968(int param_1)

{
  *(short *)(param_1 + 0x120) = *(short *)(param_1 + 0x120) + 1;
  return;
}



void FUN_0042d970(int *param_1)

{
  *(short *)(param_1 + 0x48) = (short)param_1[0x48] + -1;
  if (((short)param_1[0x48] == 0) && ((*(byte *)(param_1 + 0x11) & 0x10) != 0)) {
    FUN_0042d990(param_1);
  }
  return;
}



void FUN_0042d990(int *param_1)

{
  FUN_0042d8d4(param_1,0);
  return;
}



void FUN_0042d998(int *param_1,undefined4 param_2,undefined4 param_3)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  int *piVar4;
  int iVar5;
  int iVar6;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar7;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  
  puStack_20 = (undefined1 *)0x42d9b0;
  piVar1 = (int *)FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',param_3);
  puStack_24 = &LAB_0042da5d;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  puStack_20 = &stack0xfffffffc;
  iVar2 = FUN_0042a824(param_1);
  iVar3 = FUN_0042de00((int)param_1);
  if (-1 < iVar3 + -1) {
    iVar6 = 0;
    do {
      piVar4 = (int *)FUN_0042ddc4((int)param_1,iVar6);
      if (piVar4[1] == param_1[1]) {
        iVar5 = FUN_0042ddc4((int)param_1,iVar6);
        FUN_0040f38c(piVar1,iVar5);
        FUN_0042a5b4(piVar4,(iVar2 - piVar4[0xe]) - piVar4[0xc]);
      }
      iVar6 = iVar6 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  iVar2 = piVar1[2];
  if (-1 < iVar2 + -1) {
    iVar3 = 0;
    do {
      uVar7 = 0;
      iVar6 = FUN_0040f4e8(piVar1,iVar3);
      FUN_0042bd64(iVar6,0xb03e,0,uVar7);
      iVar3 = iVar3 + 1;
      iVar2 = iVar2 + -1;
    } while (iVar2 != 0);
  }
  *in_FS_OFFSET = uStack_28;
  puStack_20 = &LAB_0042da64;
  puStack_24 = (undefined1 *)0x42da5c;
  FUN_00402f54(piVar1);
  return;
}



void FUN_0042da6c(int *param_1)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  int *piVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 uVar5;
  undefined4 extraout_ECX_03;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 uVar6;
  undefined4 extraout_EDX_02;
  undefined3 uVar7;
  int iVar8;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  
  puStack_20 = (undefined1 *)0x42da83;
  iVar1 = FUN_0042de00((int)param_1);
  if (iVar1 != 0) {
    puStack_20 = (undefined1 *)0x42da97;
    piVar2 = (int *)FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX);
    puStack_20 = (undefined1 *)0x42daa2;
    FUN_0042d968((int)param_1);
    puStack_24 = &LAB_0042db53;
    uStack_28 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_28;
    puStack_20 = &stack0xfffffffc;
    iVar1 = FUN_0042de00((int)param_1);
    uVar5 = extraout_ECX_00;
    uVar6 = extraout_EDX;
    if (-1 < iVar1 + -1) {
      iVar8 = 0;
      do {
        iVar3 = FUN_0042ddc4((int)param_1,iVar8);
        uVar5 = extraout_ECX_01;
        uVar6 = extraout_EDX_00;
        if ((byte)(*(char *)(iVar3 + 0x4b) - 3U) < 2) {
          iVar3 = FUN_0042ddc4((int)param_1,iVar8);
          FUN_0040f38c(piVar2,iVar3);
          uVar5 = extraout_ECX_02;
          uVar6 = extraout_EDX_01;
        }
        iVar8 = iVar8 + 1;
        iVar1 = iVar1 + -1;
      } while (iVar1 != 0);
    }
    FUN_00403130(param_1,uVar6,uVar5);
    *in_FS_OFFSET = uStack_28;
    puStack_20 = &DAT_0042db5a;
    while (0 < piVar2[2]) {
      puStack_24 = (undefined1 *)0x42db13;
      piVar4 = (int *)FUN_0040f4e8(piVar2,piVar2[2] + -1);
      uVar7 = (undefined3)((uint)extraout_EDX_02 >> 8);
      if (*(char *)((int)piVar4 + 0x4b) == '\x03') {
        puStack_24 = (undefined1 *)0x42db20;
        FUN_0042a3ac(piVar4,CONCAT31(uVar7,4),extraout_ECX_03);
      }
      else {
        puStack_24 = (undefined1 *)0x42db29;
        FUN_0042a3ac(piVar4,CONCAT31(uVar7,3),extraout_ECX_03);
      }
      puStack_24 = (undefined1 *)0x42db38;
      FUN_0040f3d8(piVar2,piVar2[2] + -1);
    }
    puStack_24 = (undefined1 *)0x42db4a;
    FUN_00402f54(piVar2);
    puStack_24 = (undefined1 *)0x42db52;
    FUN_0042d970(param_1);
    return;
  }
  return;
}



bool thunk_FUN_0042dbb1(int param_1,int param_2)

{
  for (; (param_2 != 0 && (param_1 != param_2)); param_2 = *(int *)(param_2 + 0x24)) {
  }
  return param_2 != 0;
}



bool FUN_0042dbb1(int param_1,int param_2)

{
  for (; (param_2 != 0 && (param_1 != param_2)); param_2 = *(int *)(param_2 + 0x24)) {
  }
  return param_2 != 0;
}



void FUN_0042dbc0(int *param_1,char param_2)

{
  int *piVar1;
  
  piVar1 = FUN_00440984(param_1);
  if (piVar1 != (int *)0x0) {
    FUN_00444434(piVar1,(int)param_1,param_2);
  }
  return;
}



void FUN_0042dbe0(int param_1,int *param_2)

{
  int *piVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  
  if (param_2 != (int *)0x0) {
    piVar1 = FUN_004030cc(param_2,(int)PTR_PTR_00427220);
    if ((char)piVar1 == '\0') {
      FUN_00429840((int *)(param_1 + 0x134),(int)param_2,extraout_ECX);
    }
    else {
      FUN_00429840((int *)(param_1 + 0x180),(int)param_2,extraout_ECX);
      FUN_00429840((int *)(param_1 + 0x16c),(int)param_2,extraout_ECX_00);
    }
    param_2[9] = param_1;
  }
  return;
}



void FUN_0042dc2c(int param_1,int *param_2)

{
  int *piVar1;
  
  piVar1 = FUN_004030cc(param_2,(int)PTR_PTR_00427220);
  if ((char)piVar1 == '\0') {
    FUN_00429868((int *)(param_1 + 0x134),(int)param_2);
  }
  else {
    FUN_00429868((int *)(param_1 + 0x16c),(int)param_2);
    FUN_00429868((int *)(param_1 + 0x180),(int)param_2);
  }
  param_2[9] = 0;
  return;
}



void FUN_0042dc74(int *param_1,int *param_2,undefined4 param_3)

{
  bool bVar1;
  int *piVar2;
  
  FUN_00403130(param_2,param_1,param_3);
  FUN_0042bd64((int)param_1,0xb02c,param_2,1);
  FUN_0042dbe0((int)param_1,param_2);
  if ((*(byte *)(param_2 + 0x11) & 8) == 0) {
    FUN_0042bd64((int)param_2,0xb009,0,0);
    FUN_0042bd64((int)param_2,0xb008,0,0);
    FUN_0042bd64((int)param_2,0xb023,0,0);
    FUN_0042bd64((int)param_2,0xb03d,0,0);
    piVar2 = FUN_004030cc(param_2,(int)PTR_PTR_00427220);
    if ((char)piVar2 == '\0') {
      bVar1 = FUN_00431194((int)param_1);
      if (bVar1) {
        (**(code **)(*param_2 + 0x74))();
      }
    }
    else {
      FUN_0042bd64((int)param_2,0xb011,0,0);
      FUN_0042e598(param_1);
    }
    FUN_0042d8d4(param_1,param_2);
  }
  FUN_0042bd64((int)param_1,0xb036,param_2,1);
  return;
}



void FUN_0042dd48(int *param_1,int *param_2)

{
  bool bVar1;
  int *piVar2;
  
  FUN_0042bd64((int)param_1,0xb036,param_2,0);
  piVar2 = FUN_004030cc(param_2,(int)PTR_PTR_00427220);
  if ((char)piVar2 == '\0') {
    bVar1 = FUN_00431194((int)param_1);
    if (bVar1) {
      FUN_0042b1ec((int)param_2,*(char *)((int)param_2 + 0x47),'\0');
    }
  }
  else {
    FUN_0042dbc0(param_2,'\x01');
    FUN_0042e400(param_2);
  }
  FUN_0042dc2c((int)param_1,param_2);
  FUN_0042bd64((int)param_1,0xb02c,param_2,0);
  FUN_0042d990(param_1);
  return;
}



void FUN_0042ddc4(int param_1,int param_2)

{
  undefined4 *puVar1;
  int iVar2;
  
  puVar1 = *(undefined4 **)(param_1 + 0x134);
  if (puVar1 == (undefined4 *)0x0) {
    iVar2 = 0;
  }
  else {
    iVar2 = puVar1[2];
  }
  if (param_2 < iVar2) {
    FUN_0040f4e8(puVar1,param_2);
  }
  else {
    FUN_0040f4e8(*(undefined4 **)(param_1 + 0x180),param_2 - iVar2);
  }
  return;
}



int FUN_0042de00(int param_1)

{
  int iVar1;
  
  iVar1 = 0;
  if (*(int *)(param_1 + 0x134) != 0) {
    iVar1 = *(int *)(*(int *)(param_1 + 0x134) + 8);
  }
  if (*(int *)(param_1 + 0x180) != 0) {
    iVar1 = iVar1 + *(int *)(*(int *)(param_1 + 0x180) + 8);
  }
  return iVar1;
}



void FUN_0042de20(int param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  iVar1 = FUN_0042de00(param_1);
  if (-1 < iVar1 + -1) {
    iVar3 = 0;
    do {
      iVar2 = FUN_0042ddc4(param_1,iVar3);
      (**(code **)(iVar2 + 0x28))(*(undefined4 *)(iVar2 + 0x2c),param_2);
      if (*(int *)(param_2 + 0xc) != 0) {
        return;
      }
      iVar3 = iVar3 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  return;
}



void FUN_0042de60(int param_1,uint param_2)

{
  uint local_10 [4];
  
  local_10[0] = param_2 & 0xffff;
  local_10[1] = 0;
  local_10[2] = 0;
  local_10[3] = 0;
  FUN_0042de20(param_1,(int)local_10);
  return;
}



void FUN_0042de88(undefined4 param_1,int param_2,LPCSTR param_3)

{
  undefined4 uVar1;
  BOOL BVar2;
  
  if (param_3 != (LPCSTR)0x0) {
    uVar1 = *(undefined4 *)(param_2 + 0x34);
    BVar2 = GetClassInfoA(DAT_004764d8,param_3,(LPWNDCLASSA)(param_2 + 0x24));
    if (BVar2 == 0) {
      BVar2 = GetClassInfoA((HINSTANCE)0x0,param_3,(LPWNDCLASSA)(param_2 + 0x24));
      if (BVar2 == 0) {
        BVar2 = GetClassInfoA(*(HINSTANCE *)PTR_DAT_00475674,param_3,(LPWNDCLASSA)(param_2 + 0x24));
        if (BVar2 == 0) {
          GetClassInfoA(*(HINSTANCE *)(param_2 + 0x34),param_3,(LPWNDCLASSA)(param_2 + 0x24));
        }
      }
    }
    *(undefined4 *)(param_2 + 0x34) = uVar1;
    *(uint *)(param_2 + 0x24) = *(uint *)(param_2 + 0x24) & 0xffffbf1f | 3;
  }
  return;
}



void FUN_0042def4(int *param_1,uint *param_2)

{
  char cVar1;
  undefined4 uVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  
  uVar2 = FUN_0042b3a0((int)param_1);
  if ((char)uVar2 != '\0') {
    *param_2 = *param_2 | 0x2000;
  }
  uVar2 = FUN_0042b3d0((int)param_1);
  if ((char)uVar2 != '\0') {
    *param_2 = *param_2 | 0x4000;
  }
  cVar1 = FUN_00403130(param_1,extraout_EDX,extraout_ECX);
  if (cVar1 != '\0') {
    cVar1 = FUN_00403130(param_1,extraout_EDX_00,extraout_ECX_00);
    if (cVar1 == '\0') {
      *param_2 = *param_2 | 0x1000;
    }
    else {
      cVar1 = FUN_00403130(param_1,extraout_EDX_01,extraout_ECX_01);
      if (cVar1 == '\x01') {
        *param_2 = *param_2;
      }
    }
  }
  return;
}



void FUN_0042df5c(int *param_1,int *param_2)

{
  char cVar1;
  int iVar2;
  HCURSOR pHVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_120;
  undefined1 *puStack_11c;
  undefined1 *puStack_118;
  byte local_108 [256];
  undefined *local_8;
  
  puStack_118 = &stack0xfffffffc;
  local_8 = (undefined *)0x0;
  puStack_11c = &LAB_0042e07a;
  uStack_120 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_120;
  FUN_00402c14(param_2,0x8c,0);
  *param_2 = param_1[0x15];
  param_2[1] = 0x44000000;
  FUN_0042def4(param_1,(uint *)(param_2 + 2));
  if ((*(byte *)(param_1 + 0x10) & 1) != 0) {
    param_2[1] = param_2[1] | 0x2000000;
    param_2[2] = param_2[2] | 0x10000;
  }
  if ((*(byte *)(param_1 + 8) & 0x10) == 0) {
    cVar1 = (**(code **)(*param_1 + 0x4c))();
    if (cVar1 == '\0') {
      param_2[1] = param_2[1] | 0x8000000;
    }
  }
  if ((char)param_1[0x5d] != '\0') {
    param_2[1] = param_2[1] | 0x10000;
  }
  param_2[3] = param_1[0xc];
  param_2[4] = param_1[0xd];
  param_2[5] = param_1[0xe];
  param_2[6] = param_1[0xf];
  if ((int *)param_1[9] == (int *)0x0) {
    param_2[7] = param_1[0x59];
  }
  else {
    iVar2 = FUN_00430e98((int *)param_1[9]);
    param_2[7] = iVar2;
  }
  param_2[9] = 0xb;
  param_2[10] = (int)DefWindowProcA;
  pHVar3 = LoadCursorA((HINSTANCE)0x0,&lpCursorName_00007f00);
  param_2[0xf] = (int)pHVar3;
  param_2[0x10] = 0;
  param_2[0xd] = DAT_004764d8;
  FUN_00402ea0(*param_1,local_108);
  FUN_00403e00((int *)&local_8,local_108);
  FUN_00408bb8((char *)(param_2 + 0x13),local_8);
  *in_FS_OFFSET = uStack_120;
  puStack_118 = &LAB_0042e081;
  puStack_11c = (undefined1 *)0x42e079;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_0042e088(int *param_1)

{
  ATOM AVar1;
  int *piVar2;
  BOOL BVar3;
  undefined4 uVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  int *piVar5;
  undefined4 uVar6;
  undefined4 uStack_d8;
  undefined1 *puStack_d4;
  undefined1 *puStack_d0;
  byte *local_c4;
  int local_c0;
  undefined1 local_bc;
  tagWNDCLASSA local_b8;
  undefined1 local_90 [7];
  byte local_89;
  int local_74;
  WNDCLASSA local_6c;
  CHAR local_44 [64];
  
  puStack_d0 = &stack0xfffffffc;
  local_c4 = (byte *)0x0;
  puStack_d4 = &LAB_0042e213;
  uStack_d8 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_d8;
  (**(code **)(*param_1 + 0x90))(param_1,local_90);
  if ((local_74 == 0) && ((local_89 & 0x40) != 0)) {
    piVar5 = (int *)param_1[1];
    if ((piVar5 != (int *)0x0) && ((*(byte *)(piVar5 + 8) & 2) != 0)) {
      piVar2 = FUN_004030cc(piVar5,(int)PTR_PTR_00427220);
      if ((char)piVar2 != '\0') {
        local_74 = FUN_00430e98(piVar5);
        goto LAB_0042e134;
      }
    }
    local_c0 = param_1[2];
    local_bc = 0xb;
    piVar5 = &local_c0;
    uVar4 = 0;
    FUN_004054e4((undefined4 *)PTR_PTR_004757e8,(int *)&local_c4);
    uVar4 = FUN_0040aa4c((int)PTR_DAT_0040dc48,'\x01',local_c4,uVar4,piVar5);
    FUN_004036ac(uVar4);
  }
LAB_0042e134:
  param_1[0x4f] = (int)local_6c.lpfnWndProc;
  BVar3 = GetClassInfoA(local_6c.hInstance,local_44,&local_b8);
  if ((BVar3 == 0) || (local_b8.lpfnWndProc != FUN_00427ef4)) {
    if (BVar3 != 0) {
      UnregisterClassA(local_44,local_6c.hInstance);
    }
    local_6c.lpfnWndProc = FUN_00427ef4;
    local_6c.lpszClassName = local_44;
    AVar1 = RegisterClassA(&local_6c);
    if (AVar1 == 0) {
      FUN_0040bc28();
    }
  }
  DAT_004746d0 = param_1;
  (**(code **)(*param_1 + 0x94))(param_1,local_90);
  if (param_1[0x53] == 0) {
    FUN_0040bc28();
  }
  FUN_00408d3c(param_1[0x15]);
  param_1[0x15] = 0;
  FUN_004311a0((int)param_1);
  uVar6 = 1;
  uVar4 = FUN_00417048(param_1[0x16]);
  FUN_0042bd64((int)param_1,0x30,uVar4,uVar6);
  if ((char)param_1[0x13] != '\0') {
    FUN_00403130(param_1,extraout_EDX,extraout_ECX);
  }
  *in_FS_OFFSET = uStack_d8;
  puStack_d0 = &LAB_0042e21a;
  puStack_d4 = (undefined1 *)0x42e212;
  FUN_00403bdc((int *)&local_c4);
  return;
}



void FUN_0042e220(int param_1,undefined4 *param_2)

{
  HWND pHVar1;
  
  pHVar1 = CreateWindowExA(param_2[2],(LPCSTR)(param_2 + 0x13),(LPCSTR)*param_2,param_2[1],
                           param_2[3],param_2[4],param_2[5],param_2[6],(HWND)param_2[7],(HMENU)0x0,
                           (HINSTANCE)param_2[0xd],(LPVOID)param_2[8]);
  *(HWND *)(param_1 + 0x14c) = pHVar1;
  return;
}



void FUN_0042e264(int *param_1)

{
  int iVar1;
  int *piVar2;
  
  iVar1 = FUN_0042ad34((int)param_1);
  if (iVar1 < 1) {
    iVar1 = FUN_00408d10(&LAB_0042e2b8);
    param_1[0x15] = iVar1;
  }
  else {
    piVar2 = FUN_00408cf0(iVar1 + 1);
    param_1[0x15] = (int)piVar2;
    iVar1 = FUN_00408d04((int)piVar2);
    FUN_0042ad44((int)param_1,piVar2,iVar1);
  }
  FUN_00429974();
  (**(code **)(*param_1 + 0x9c))();
  return;
}



void FUN_0042e2bc(int param_1)

{
  BOOL BVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_14;
  undefined1 *puStack_10;
  undefined1 *puStack_c;
  int local_8;
  
  puStack_c = &stack0xfffffffc;
  *(ushort *)(param_1 + 0x44) = *(ushort *)(param_1 + 0x44) | 0x200;
  puStack_10 = &LAB_0042e309;
  uStack_14 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_14;
  local_8 = param_1;
  BVar1 = DestroyWindow(*(HWND *)(param_1 + 0x14c));
  if (BVar1 == 0) {
    FUN_0040bc28();
  }
  *in_FS_OFFSET = uStack_14;
  *(ushort *)(local_8 + 0x44) = *(ushort *)(local_8 + 0x44) & 0xfdff;
  return;
}



int FUN_0042e320(int param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  iVar1 = FUN_0040f544(*(int *)(param_1 + 0x180),param_2);
  iVar1 = iVar1 + 1;
  iVar3 = *(int *)(*(int *)(param_1 + 0x180) + 8) + -1;
  if (iVar1 <= iVar3) {
    iVar3 = (iVar3 - iVar1) + 1;
    do {
      iVar2 = FUN_0040f4e8(*(undefined4 **)(param_1 + 0x180),iVar1);
      if (*(int *)(iVar2 + 0x14c) != 0) {
        return *(int *)(iVar2 + 0x14c);
      }
      iVar1 = iVar1 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  return 0;
}



void FUN_0042e368(int *param_1)

{
  HWND hWndInsertAfter;
  int iVar1;
  int iVar2;
  int iVar3;
  int cy;
  UINT uFlags;
  
  if (param_1[0x53] == 0) {
    (**(code **)(*param_1 + 0x98))();
    SetPropA((HWND)param_1[0x53],(LPCSTR)(uint)DAT_00476756,param_1);
    SetPropA((HWND)param_1[0x53],(LPCSTR)(uint)DAT_00476754,param_1);
    if (param_1[9] != 0) {
      uFlags = 0x13;
      cy = 0;
      iVar3 = 0;
      iVar2 = 0;
      iVar1 = 0;
      hWndInsertAfter = (HWND)FUN_0042e320(param_1[9],(int)param_1);
      SetWindowPos((HWND)param_1[0x53],hWndInsertAfter,iVar1,iVar2,iVar3,cy,uFlags);
    }
    iVar1 = FUN_0042de00((int)param_1);
    if (-1 < iVar1 + -1) {
      iVar2 = 0;
      do {
        iVar3 = FUN_0042ddc4((int)param_1,iVar2);
        FUN_0042a4d8(iVar3);
        iVar2 = iVar2 + 1;
        iVar1 = iVar1 + -1;
      } while (iVar1 != 0);
    }
  }
  return;
}



void FUN_0042e400(int *param_1)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  if (param_1[0x53] != 0) {
    if ((param_1[0x60] != 0) && (iVar2 = *(int *)(param_1[0x60] + 8), -1 < iVar2 + -1)) {
      iVar3 = 0;
      do {
        piVar1 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x60],iVar3);
        FUN_0042e400(piVar1);
        iVar3 = iVar3 + 1;
        iVar2 = iVar2 + -1;
      } while (iVar2 != 0);
    }
    (**(code **)(*param_1 + 0xa0))();
  }
  return;
}



void FUN_0042e448(int param_1)

{
  if (*(int *)(param_1 + 0x14c) != 0) {
    FUN_0042bd64(param_1,0xb033,0,0);
  }
  return;
}



void FUN_0042e460(int *param_1,undefined4 param_2,undefined4 param_3)

{
  char cVar1;
  
  cVar1 = FUN_00403130(param_1,param_2,param_3);
  FUN_0042e400(param_1);
  FUN_0042e598(param_1);
  if ((cVar1 != '\0') && (param_1[0x53] != 0)) {
    SetFocus((HWND)param_1[0x53]);
  }
  return;
}



void FUN_0042e49c(int *param_1)

{
  char cVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  
  if (((*(char *)((int)param_1 + 0x47) == '\0') &&
      (((*(byte *)(param_1 + 8) & 0x10) == 0 || ((*(byte *)((int)param_1 + 0x41) & 4) != 0)))) ||
     ((*(byte *)(param_1 + 0x11) & 8) != 0)) {
    cVar1 = '\0';
  }
  else {
    cVar1 = '\x01';
  }
  if (cVar1 != '\0') {
    if (param_1[0x53] == 0) {
      puStack_1c = (undefined1 *)0x42e4f2;
      (**(code **)(*param_1 + 0x8c))();
    }
    if ((param_1[0x60] != 0) && (iVar3 = *(int *)(param_1[0x60] + 8), -1 < iVar3 + -1)) {
      iVar4 = 0;
      do {
        puStack_1c = (undefined1 *)0x42e51a;
        piVar2 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x60],iVar4);
        puStack_1c = (undefined1 *)0x42e51f;
        FUN_0042e49c(piVar2);
        iVar4 = iVar4 + 1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
  }
  if ((param_1[0x53] != 0) && ((char)param_1[0x5a] != cVar1)) {
    *(char *)(param_1 + 0x5a) = cVar1;
    puStack_20 = &LAB_0042e572;
    uStack_24 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_24;
    puStack_1c = &stack0xfffffffc;
    FUN_0042bd64((int)param_1,0xb019,0,0);
    *in_FS_OFFSET = uStack_24;
  }
  return;
}



void FUN_0042e598(int *param_1)

{
  int *piVar1;
  int *piVar2;
  
  piVar2 = param_1;
  while (piVar1 = (int *)piVar2[9], piVar1 != (int *)0x0) {
    piVar2 = piVar1;
    if ((char)piVar1[0x5a] == '\0') {
      return;
    }
  }
  piVar1 = FUN_004030cc(piVar2,(int)PTR_PTR_0043efd8);
  if (((char)piVar1 == '\0') && (piVar2[0x59] == 0)) {
    return;
  }
  FUN_0042e49c(param_1);
  return;
}



void FUN_0042e650(int *param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  POINT pt;
  bool bVar1;
  char cVar2;
  BOOL BVar3;
  undefined4 uVar4;
  int iVar5;
  LONG LVar6;
  LONG LVar7;
  RECT local_1c;
  undefined4 local_c;
  undefined4 local_8;
  
  FUN_0040ea58(**(int **)(param_4 + -4) - param_1[0xc],
               *(int *)(*(int *)(param_4 + -4) + 4) - param_1[0xd],&local_c);
  *(undefined4 *)(param_4 + -0xc) = local_c;
  *(undefined4 *)(param_4 + -8) = local_8;
  LVar7 = *(LONG *)(param_4 + -8);
  LVar6 = *(LONG *)(param_4 + -0xc);
  (**(code **)(*param_1 + 0x40))(param_1,&local_1c);
  pt.y = LVar7;
  pt.x = LVar6;
  BVar3 = PtInRect(&local_1c,pt);
  if (BVar3 != 0) {
    if (((*(byte *)(param_1 + 8) & 0x10) != 0) &&
       ((*(char *)((int)param_1 + 0x47) != '\0' || ((*(byte *)((int)param_1 + 0x41) & 4) == 0)))) {
LAB_0042e6f5:
      bVar1 = true;
      goto LAB_0042e6f7;
    }
    if (*(char *)((int)param_1 + 0x47) != '\0') {
      cVar2 = (**(code **)(*param_1 + 0x4c))();
      if ((cVar2 != '\0') || (*(char *)(param_4 + -0xd) != '\0')) {
        uVar4 = FUN_00407198((undefined2 *)(param_4 + -0xc));
        iVar5 = FUN_0042bd64((int)param_1,0xb00a,0,uVar4);
        if (iVar5 != 0) goto LAB_0042e6f5;
      }
    }
  }
  bVar1 = false;
LAB_0042e6f7:
  if (bVar1) {
    *(int **)(param_4 + -0x14) = param_1;
  }
  return;
}



undefined4 FUN_0042e708(int param_1,undefined4 param_2,undefined4 param_3,char param_4)

{
  char cVar1;
  int *piVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  int iVar3;
  undefined1 *puVar4;
  
  if (((param_4 != '\0') && (*(int *)(param_1 + 0x180) != 0)) &&
     (iVar3 = *(int *)(*(int *)(param_1 + 0x180) + 8) + -1, -1 < iVar3)) {
    do {
      puVar4 = &stack0xfffffffc;
      piVar2 = (int *)FUN_0040f4e8(*(undefined4 **)(param_1 + 0x180),iVar3);
      cVar1 = FUN_0042e650(piVar2,extraout_EDX,extraout_ECX,(int)puVar4);
      if (cVar1 != '\0') break;
      iVar3 = iVar3 + -1;
    } while (iVar3 != -1);
  }
  if ((*(int *)(param_1 + 0x134) != 0) &&
     (iVar3 = *(int *)(*(int *)(param_1 + 0x134) + 8) + -1, -1 < iVar3)) {
    do {
      puVar4 = &stack0xfffffffc;
      piVar2 = (int *)FUN_0040f4e8(*(undefined4 **)(param_1 + 0x134),iVar3);
      cVar1 = FUN_0042e650(piVar2,extraout_EDX_00,extraout_ECX_00,(int)puVar4);
      if (cVar1 != '\0') {
        return 0;
      }
      iVar3 = iVar3 + -1;
    } while (iVar3 != -1);
  }
  return 0;
}



bool FUN_0042e79c(int *param_1,undefined4 *param_2)

{
  HWND pHVar1;
  HWND pHVar2;
  int iVar3;
  undefined4 uVar4;
  char cVar5;
  int local_1c;
  int local_18;
  int local_14 [2];
  
  pHVar1 = (HWND)FUN_00430e98(param_1);
  pHVar2 = GetCapture();
  if (pHVar1 == pHVar2) {
    iVar3 = 0;
    if ((DAT_00474790 != 0) && (param_1 == *(int **)(DAT_00474790 + 0x24))) {
      iVar3 = DAT_00474790;
    }
  }
  else {
    cVar5 = '\0';
    FUN_00407184(param_2[2],local_14);
    iVar3 = FUN_0042e708((int)param_1,local_14,0,cVar5);
  }
  if (iVar3 != 0) {
    local_1c = (int)*(short *)(param_2 + 2) - *(int *)(iVar3 + 0x30);
    local_18 = (int)*(short *)((int)param_2 + 10) - *(int *)(iVar3 + 0x34);
    uVar4 = FUN_00407198((undefined2 *)&local_1c);
    uVar4 = FUN_0042bd64(iVar3,*param_2,param_2[1],uVar4);
    param_2[3] = uVar4;
  }
  return iVar3 != 0;
}



void FUN_0042e830(int *param_1,uint *param_2,undefined4 param_3)

{
  char cVar1;
  bool bVar2;
  int *piVar3;
  int iVar4;
  HWND pHVar5;
  HWND pHVar6;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_ECX_03;
  undefined4 extraout_ECX_04;
  undefined4 extraout_ECX_05;
  uint Msg;
  uint wParam;
  uint uVar7;
  int local_124 [2];
  int local_11c [2];
  BYTE local_114 [256];
  uint local_14;
  byte local_10;
  undefined2 local_e;
  uint local_c;
  
  uVar7 = *param_2;
  if ((int)uVar7 < 0x85) {
    if (uVar7 == 0x84) {
      FUN_0042be30(param_1,param_2,param_3);
      if (param_2[3] != 0xffffffff) {
        return;
      }
      cVar1 = '\0';
      FUN_00407184(param_2[2],local_124);
      FUN_0042a964(param_1,local_124,local_11c);
      iVar4 = FUN_0042e708((int)param_1,local_11c,0,cVar1);
      if (iVar4 == 0) {
        return;
      }
      param_2[3] = 1;
      return;
    }
    if (uVar7 == 7) {
      piVar3 = FUN_00440984(param_1);
      param_3 = extraout_ECX;
      if ((piVar3 != (int *)0x0) &&
         (cVar1 = (**(code **)(*piVar3 + 0xd4))(piVar3,param_1), param_3 = extraout_ECX_00,
         cVar1 == '\0')) {
        return;
      }
      goto LAB_0042e9fe;
    }
    if (uVar7 == 8) {
      if ((*(byte *)(param_1 + 0x11) & 0x20) != 0) {
        return;
      }
      goto LAB_0042e9fe;
    }
    if (uVar7 == 0x1f) {
      pHVar5 = (HWND)FUN_00430e98(param_1);
      pHVar6 = GetCapture();
      param_3 = extraout_ECX_03;
      if (((pHVar5 == pHVar6) && (DAT_00474790 != 0)) && (param_1 == *(int **)(DAT_00474790 + 0x24))
         ) {
        FUN_0042bd64(DAT_00474790,0x1f,0,0);
        param_3 = extraout_ECX_04;
      }
      goto LAB_0042e9fe;
    }
  }
  else {
    if (uVar7 - 0x100 < 9) {
      bVar2 = FUN_0042b4cc((int)param_1);
      param_3 = extraout_ECX_02;
      if (bVar2) {
        return;
      }
      goto LAB_0042e9fe;
    }
    if (uVar7 - 0x200 < 0xb) {
      bVar2 = FUN_0042e79c(param_1,param_2);
      param_3 = extraout_ECX_01;
      if (bVar2) {
        if (param_2[3] != 0) {
          return;
        }
        uVar7 = param_2[2];
        wParam = param_2[1];
        Msg = *param_2;
        pHVar5 = (HWND)FUN_00430e98(param_1);
        DefWindowProcA(pHVar5,Msg,wParam,uVar7);
        return;
      }
      goto LAB_0042e9fe;
    }
  }
  if (((*(char *)(DAT_00476748 + 0x20) != '\0') && (*(int *)(DAT_00476748 + 0x1c) != 0)) &&
     (*param_2 == *(uint *)(DAT_00476748 + 0x1c))) {
    GetKeyboardState(local_114);
    local_14 = *param_2;
    local_10 = FUN_004408c8((int)local_114);
    local_e = (undefined2)param_2[1];
    local_c = param_2[2];
    FUN_00403130(param_1,&local_14,extraout_ECX_05);
    return;
  }
LAB_0042e9fe:
  FUN_0042be30(param_1,param_2,param_3);
  return;
}



void FUN_0042ea10(int param_1,UINT *param_2)

{
  UINT UVar1;
  COLORREF CVar2;
  uint uVar3;
  
  if (*(int *)(param_1 + 0x14c) == 0) {
    FUN_0042bf48(param_1,(int *)param_2);
  }
  else {
    if ((*param_2 == 0x7b) && (*(int *)(param_1 + 0x24) != 0)) {
      UVar1 = FUN_0042bd64(*(int *)(param_1 + 0x24),0x7b,param_2[1],param_2[2]);
      param_2[3] = UVar1;
      if (UVar1 != 0) {
        return;
      }
    }
    UVar1 = *param_2;
    if (UVar1 - 0x132 < 7) {
      UVar1 = SendMessageA((HWND)param_2[2],UVar1 + 0xbc00,param_2[1],(LPARAM)param_2[2]);
      param_2[3] = UVar1;
    }
    else if (UVar1 - 0xbd32 < 7) {
      CVar2 = FUN_00416b74(*(uint *)(*(int *)(param_1 + 0x58) + 0x18));
      SetTextColor((HDC)param_2[1],CVar2);
      uVar3 = FUN_004177fc(*(int *)(param_1 + 0x130));
      CVar2 = FUN_00416b74(uVar3);
      SetBkColor((HDC)param_2[1],CVar2);
      UVar1 = FUN_00417838(*(int *)(param_1 + 0x130));
      param_2[3] = UVar1;
    }
    else {
      UVar1 = CallWindowProcA(*(WNDPROC *)(param_1 + 0x13c),*(HWND *)(param_1 + 0x14c),UVar1,
                              param_2[1],param_2[2]);
      param_2[3] = UVar1;
    }
    if (*param_2 == 0xc) {
      FUN_0042a9c0(param_1,0xc,param_2[1],param_2[2]);
    }
  }
  return;
}



bool FUN_0042eb0c(HWND param_1,int *param_2)

{
  HANDLE pvVar1;
  int iVar2;
  
  pvVar1 = FUN_00427fac(param_1);
  if (pvVar1 != (HANDLE)0x0) {
    iVar2 = FUN_0042bd64((int)pvVar1,*param_2 + 0xbc00,param_2[1],param_2[2]);
    param_2[3] = iVar2;
  }
  return pvVar1 != (HANDLE)0x0;
}



void FUN_0042eb40(int *param_1,int param_2)

{
  HWND pHVar1;
  HDC hdc;
  int iVar2;
  int iVar3;
  int iVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar5;
  tagPAINTSTRUCT *ptVar6;
  tagPAINTSTRUCT local_54;
  int local_14;
  int local_10;
  int local_c;
  int *local_8;
  
  hdc = *(HDC *)(param_2 + 4);
  local_c = param_2;
  local_8 = param_1;
  if (hdc == (HDC)0x0) {
    ptVar6 = &local_54;
    pHVar1 = (HWND)FUN_00430e98(param_1);
    hdc = BeginPaint(pHVar1,ptVar6);
  }
  uVar5 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffff94;
  if (local_8[0x4d] == 0) {
    (**(code **)(*local_8 + 0xa8))(local_8,hdc);
  }
  else {
    local_14 = SaveDC(hdc);
    local_10 = 2;
    iVar4 = *(int *)(local_8[0x4d] + 8);
    if (-1 < iVar4 + -1) {
      iVar3 = 0;
      do {
        iVar2 = FUN_0040f4e8((undefined4 *)local_8[0x4d],iVar3);
        if (((*(char *)(iVar2 + 0x47) != '\0') ||
            (((*(byte *)(iVar2 + 0x20) & 0x10) != 0 && ((*(byte *)(iVar2 + 0x41) & 4) == 0)))) &&
           ((*(byte *)(iVar2 + 0x40) & 0x40) != 0)) {
          local_10 = ExcludeClipRect(hdc,*(int *)(iVar2 + 0x30),*(int *)(iVar2 + 0x34),
                                     *(int *)(iVar2 + 0x30) + *(int *)(iVar2 + 0x38),
                                     *(int *)(iVar2 + 0x34) + *(int *)(iVar2 + 0x3c));
          if (local_10 == 1) break;
        }
        iVar3 = iVar3 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
    }
    if (local_10 != 1) {
      (**(code **)(*local_8 + 0xa8))(local_8,hdc);
    }
    RestoreDC(hdc,local_14);
  }
  FUN_0042ec98((int)local_8,hdc,0);
  *in_FS_OFFSET = uVar5;
  if (*(int *)(local_c + 4) == 0) {
    ptVar6 = &local_54;
    pHVar1 = (HWND)FUN_00430e98(local_8);
    EndPaint(pHVar1,ptVar6);
  }
  return;
}



void FUN_0042ec98(int param_1,HDC param_2,int param_3)

{
  int iVar1;
  BOOL BVar2;
  int nSavedDC;
  int iVar3;
  COLORREF CVar4;
  HBRUSH pHVar5;
  int iVar6;
  HBRUSH pHVar7;
  int iStack_24;
  RECT RStack_20;
  
  if (((*(char *)(param_1 + 0x144) != '\0') && (*(char *)(param_1 + 0x17c) != '\0')) &&
     (*(int *)(param_1 + 0x148) != 0)) {
    (**(code **)(**(int **)(param_1 + 0x148) + 0x20))(*(int **)(param_1 + 0x148),param_2);
  }
  if (*(int *)(param_1 + 0x134) != 0) {
    iVar6 = 0;
    if ((param_3 != 0) && (iVar6 = FUN_0040f544(*(int *)(param_1 + 0x134),param_3), iVar6 < 0)) {
      iVar6 = 0;
    }
    iVar3 = *(int *)(*(int *)(param_1 + 0x134) + 8);
    for (; iVar6 < iVar3; iVar6 = iVar6 + 1) {
      iVar1 = FUN_0040f4e8(*(undefined4 **)(param_1 + 0x134),iVar6);
      if ((*(char *)(iVar1 + 0x47) != '\0') ||
         (((*(byte *)(iVar1 + 0x20) & 0x10) != 0 && ((*(byte *)(iVar1 + 0x41) & 4) == 0)))) {
        FUN_0040ea70(*(undefined4 *)(iVar1 + 0x30),*(undefined4 *)(iVar1 + 0x34),
                     *(int *)(iVar1 + 0x30) + *(int *)(iVar1 + 0x38),&RStack_20.left,
                     *(int *)(iVar1 + 0x34) + *(int *)(iVar1 + 0x3c));
        BVar2 = RectVisible(param_2,&RStack_20);
        if (BVar2 != 0) {
          if ((*(byte *)(param_1 + 0x44) & 0x80) != 0) {
            *(ushort *)(iVar1 + 0x44) = *(ushort *)(iVar1 + 0x44) | 0x80;
          }
          nSavedDC = SaveDC(param_2);
          FUN_00429888(param_2,*(int *)(iVar1 + 0x30),*(int *)(iVar1 + 0x34));
          IntersectClipRect(param_2,0,0,*(int *)(iVar1 + 0x38),*(int *)(iVar1 + 0x3c));
          FUN_0042bd64(iVar1,0xf,param_2,0);
          RestoreDC(param_2,nSavedDC);
          *(ushort *)(iVar1 + 0x44) = *(ushort *)(iVar1 + 0x44) & 0xff7f;
        }
      }
    }
  }
  if ((*(int *)(param_1 + 0x180) != 0) &&
     (iStack_24 = *(int *)(*(int *)(param_1 + 0x180) + 8), -1 < iStack_24 + -1)) {
    iVar6 = 0;
    do {
      iVar3 = FUN_0040f4e8(*(undefined4 **)(param_1 + 0x180),iVar6);
      if (((*(char *)(iVar3 + 0x138) != '\0') && ((*(byte *)(iVar3 + 0x40) & 0x10) != 0)) &&
         ((*(char *)(iVar3 + 0x47) != '\0' ||
          (((*(byte *)(iVar3 + 0x20) & 0x10) != 0 && ((*(byte *)(iVar3 + 0x41) & 4) == 0)))))) {
        CVar4 = FUN_00416b74(0x80000010);
        pHVar5 = CreateSolidBrush(CVar4);
        pHVar7 = pHVar5;
        FUN_0040ea70(*(int *)(iVar3 + 0x30) + -1,*(int *)(iVar3 + 0x34) + -1,
                     *(int *)(iVar3 + 0x30) + *(int *)(iVar3 + 0x38),&RStack_20.left,
                     *(int *)(iVar3 + 0x34) + *(int *)(iVar3 + 0x3c));
        FrameRect(param_2,&RStack_20,pHVar7);
        DeleteObject(pHVar5);
        CVar4 = FUN_00416b74(0x80000014);
        pHVar5 = CreateSolidBrush(CVar4);
        pHVar7 = pHVar5;
        FUN_0040ea70(*(undefined4 *)(iVar3 + 0x30),*(undefined4 *)(iVar3 + 0x34),
                     *(int *)(iVar3 + 0x30) + *(int *)(iVar3 + 0x38) + 1,&RStack_20.left,
                     *(int *)(iVar3 + 0x34) + *(int *)(iVar3 + 0x3c) + 1);
        FrameRect(param_2,&RStack_20,pHVar7);
        DeleteObject(pHVar5);
      }
      iVar6 = iVar6 + 1;
      iStack_24 = iStack_24 + -1;
    } while (iStack_24 != 0);
  }
  return;
}



void FUN_0042eec8(int *param_1,int param_2)

{
  int iVar1;
  HDC pHVar2;
  HWND pHVar3;
  HDC hdc;
  undefined4 *in_FS_OFFSET;
  int y1;
  tagPAINTSTRUCT *ptVar4;
  DWORD rop;
  undefined4 uVar5;
  undefined1 local_70 [8];
  int local_68;
  undefined1 local_60 [12];
  int local_54;
  tagPAINTSTRUCT local_50;
  HGDIOBJ local_10;
  HBITMAP local_c;
  HDC local_8;
  
  if (((char)param_1[0x7a] != '\0') && (*(int *)(param_2 + 4) == 0)) {
    pHVar2 = GetDC((HWND)0x0);
    (**(code **)(*param_1 + 0x40))(param_1,local_60);
    iVar1 = local_54;
    (**(code **)(*param_1 + 0x40))(param_1,local_70);
    local_c = CreateCompatibleBitmap(pHVar2,local_68,iVar1);
    ReleaseDC((HWND)0x0,pHVar2);
    local_8 = CreateCompatibleDC((HDC)0x0);
    local_10 = SelectObject(local_8,local_c);
    uVar5 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffff78;
    ptVar4 = &local_50;
    pHVar3 = (HWND)FUN_00430e98(param_1);
    hdc = BeginPaint(pHVar3,ptVar4);
    FUN_0042bd64((int)param_1,0x14,local_8,local_8);
    *(HDC *)(param_2 + 4) = local_8;
    FUN_0042eec8(param_1,param_2);
    *(undefined4 *)(param_2 + 4) = 0;
    rop = 0xcc0020;
    y1 = 0;
    iVar1 = 0;
    pHVar2 = local_8;
    (**(code **)(*param_1 + 0x40))(param_1,local_60);
    (**(code **)(*param_1 + 0x40))(param_1,local_70);
    BitBlt(hdc,0,0,local_68,local_54,pHVar2,iVar1,y1,rop);
    ptVar4 = &local_50;
    pHVar3 = (HWND)FUN_00430e98(param_1);
    EndPaint(pHVar3,ptVar4);
    *in_FS_OFFSET = uVar5;
    SelectObject(local_8,local_10);
    DeleteDC(local_8);
    DeleteObject(local_c);
    return;
  }
  if (((*(byte *)((int)param_1 + 0x45) & 1) == 0) &&
     (iVar1 = FUN_0042de00((int)param_1), iVar1 == 0)) {
    (**(code **)(*param_1 + -0x10))(param_1,param_2);
    return;
  }
  FUN_0042eb40(param_1,param_2);
  return;
}



void FUN_0042f028(int *param_1,int *param_2)

{
  bool bVar1;
  
  bVar1 = FUN_0042eb0c((HWND)param_2[2],param_2);
  if (!bVar1) {
    (**(code **)(*param_1 + -0x10))(param_1,param_2);
  }
  return;
}



void FUN_0042f088(int param_1,int param_2)

{
  FUN_0042bd64(param_1,0xb025,*(undefined4 *)(param_2 + 4),*(undefined4 *)(param_2 + 8));
  return;
}



void FUN_0042f18c(int *param_1,int param_2)

{
  HBRUSH hbr;
  RECT local_18;
  
  if (((char)param_1[0x7a] == '\0') || (*(int *)(param_2 + 4) == *(int *)(param_2 + 8))) {
    hbr = (HBRUSH)FUN_00417838(param_1[0x4c]);
    (**(code **)(*param_1 + 0x40))(param_1,&local_18);
    FillRect(*(HDC *)(param_2 + 4),&local_18,hbr);
  }
  *(undefined4 *)(param_2 + 0xc) = 1;
  return;
}



void FUN_0042f1d8(int *param_1,int param_2)

{
  bool bVar1;
  bool bVar2;
  bool bVar3;
  BOOL BVar4;
  
  if (((((char)param_1[0x4e] == '\0') || ((*(byte *)(param_1 + 0x10) & 0x10) == 0)) ||
      (param_1[9] == 0)) || ((*(byte *)(*(int *)(param_2 + 8) + 0x18) & 8) != 0)) {
    bVar1 = false;
  }
  else {
    bVar1 = true;
  }
  if ((*(byte *)(*(int *)(param_2 + 8) + 0x18) & 2) == 0) {
    BVar4 = IsWindowVisible((HWND)param_1[0x53]);
    if (BVar4 == 0) goto LAB_0042f21d;
    bVar2 = true;
  }
  else {
LAB_0042f21d:
    bVar2 = false;
  }
  if ((*(byte *)(*(int *)(param_2 + 8) + 0x18) & 1) == 0) {
    BVar4 = IsWindowVisible((HWND)param_1[0x53]);
    if (BVar4 != 0) {
      bVar3 = true;
      goto LAB_0042f245;
    }
  }
  bVar3 = false;
LAB_0042f245:
  if ((bVar1) && (bVar2 || bVar3)) {
    FUN_00430da0((int)param_1);
  }
  if ((*(byte *)((int)param_1 + 0x45) & 2) == 0) {
    FUN_004311a0((int)param_1);
  }
  FUN_0042c54c(param_1,param_2);
  if ((bVar1) && ((bVar2 || bVar3 || ((*(byte *)(*(int *)(param_2 + 8) + 0x18) & 0xc0) != 0)))) {
    FUN_00430da0((int)param_1);
  }
  return;
}



void FUN_0042f298(int *param_1,int param_2)

{
  int iVar1;
  char cVar2;
  
  if ((DAT_0042f2e4 == (DAT_0042f2e0 & *(ushort *)(param_1 + 8))) &&
     (iVar1 = *(int *)(param_2 + 8), (*(byte *)(iVar1 + 0x18) & 1) == 0)) {
    cVar2 = FUN_0042c238(param_1,(int *)(iVar1 + 0x10),(int *)(iVar1 + 0x14));
    if (cVar2 == '\0') {
      *(uint *)(iVar1 + 0x18) = *(uint *)(iVar1 + 0x18) | 1;
    }
  }
  (**(code **)(*param_1 + -0x10))(param_1,param_2);
  return;
}



void FUN_0042f2e8(int *param_1,undefined4 param_2)

{
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  FUN_004311a0((int)param_1);
  (**(code **)(*param_1 + -0x10))(param_1,param_2);
  FUN_0042d990(param_1);
  if ((*(byte *)(param_1 + 8) & 1) == 0) {
    FUN_00403130(param_1,extraout_EDX,extraout_ECX);
  }
  return;
}



void FUN_0042f330(int *param_1,int param_2)

{
  int iVar1;
  HCURSOR hCursor;
  HWND pHVar2;
  HWND pHVar3;
  short sVar4;
  char cVar5;
  tagPOINT local_1c;
  int local_14 [2];
  
  if (*(int *)(param_2 + 4) == param_1[0x53]) {
    if (*(short *)(param_2 + 8) == -2) {
      if ((*(short *)(param_2 + 10) == 0x201) && (*(int *)(*(int *)PTR_DAT_004757c0 + 0x24) != 0)) {
        pHVar2 = GetLastActivePopup(*(HWND *)(*(int *)PTR_DAT_004757c0 + 0x24));
        pHVar3 = GetForegroundWindow();
        if (pHVar2 != pHVar3) {
          FUN_00448954(*(int *)PTR_DAT_004757c0);
          return;
        }
      }
    }
    else if (*(short *)(param_2 + 8) == 1) {
      sVar4 = *(short *)(*(int *)PTR_DAT_004758e0 + 0x38);
      if (sVar4 == 0) {
        GetCursorPos(&local_1c);
        cVar5 = '\0';
        FUN_0042a964(param_1,&local_1c.x,local_14);
        iVar1 = FUN_0042e708((int)param_1,local_14,0,cVar5);
        if (iVar1 != 0) {
          if ((*(byte *)(iVar1 + 0x20) & 0x10) == 0) {
            sVar4 = *(short *)(iVar1 + 0x68);
          }
          else {
            sVar4 = -2;
          }
        }
        if (sVar4 == 0) {
          if ((*(byte *)(param_1 + 8) & 0x10) == 0) {
            sVar4 = (short)param_1[0x1a];
          }
          else {
            sVar4 = -2;
          }
        }
      }
      if (sVar4 != 0) {
        hCursor = (HCURSOR)FUN_004470e0(*(int *)PTR_DAT_004758e0,(int)sVar4);
        SetCursor(hCursor);
        *(undefined4 *)(param_2 + 0xc) = 1;
        return;
      }
    }
  }
  (**(code **)(*param_1 + -0x10))(param_1,param_2);
  return;
}



void FUN_0042f480(int *param_1,undefined4 param_2,undefined4 param_3)

{
  undefined1 *puVar1;
  int iVar2;
  int *piVar3;
  HKL hkl;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  undefined *local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_8 = (undefined *)0x0;
  puStack_1c = &LAB_0042f55f;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  if (PTR_DAT_004758fc[8] != '\0') {
    puVar1 = &stack0xfffffffc;
    if (param_1[0x56] != 0) {
      FUN_00447098(*(int *)PTR_DAT_004758e0,(int *)&local_8,param_3);
      iVar2 = FUN_004083e0((undefined *)param_1[0x56],local_8);
      puVar1 = puStack_18;
      if (iVar2 != 0) {
        piVar3 = (int *)FUN_00446e98(*(int *)PTR_DAT_004758e0,extraout_EDX,extraout_ECX);
        iVar2 = (**(code **)(*piVar3 + 0x14))();
        puVar1 = puStack_18;
        if (iVar2 != 0) {
          hkl = *(HKL *)(*(int *)PTR_DAT_004758e0 + 0x30);
          if ((char)param_1[0x55] != '\0') {
            piVar3 = (int *)FUN_00446e98(*(int *)PTR_DAT_004758e0,extraout_EDX_00,extraout_ECX_00);
            iVar2 = (**(code **)(*piVar3 + 0x50))(piVar3,param_1[0x56]);
            if (-1 < iVar2) {
              piVar3 = (int *)FUN_00446e98(*(int *)PTR_DAT_004758e0,extraout_EDX_01,extraout_ECX_01)
              ;
              hkl = (HKL)(**(code **)(*piVar3 + 0x18))(piVar3,iVar2);
            }
          }
          ActivateKeyboardLayout(hkl,1);
          puVar1 = puStack_18;
        }
      }
    }
    puStack_18 = puVar1;
    iVar2 = FUN_00430e98(param_1);
    FUN_00435344(iVar2,(char)param_1[0x55]);
  }
  *in_FS_OFFSET = uStack_20;
  puStack_18 = &LAB_0042f566;
  puStack_1c = (undefined1 *)0x42f55e;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_0042f56c(int *param_1,undefined4 param_2,undefined4 param_3)

{
  undefined1 *puVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  undefined *local_8;
  
  puStack_10 = &stack0xfffffffc;
  local_8 = (undefined *)0x0;
  puStack_14 = &LAB_0042f5f6;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  if (PTR_DAT_004758fc[8] != '\0') {
    puVar1 = &stack0xfffffffc;
    if (param_1[0x56] != 0) {
      FUN_00447098(*(int *)PTR_DAT_004758e0,(int *)&local_8,param_3);
      iVar2 = FUN_004083e0((undefined *)param_1[0x56],local_8);
      puVar1 = puStack_10;
      if (iVar2 != 0) {
        ActivateKeyboardLayout(*(HKL *)(*(int *)PTR_DAT_004758e0 + 0x30),1);
        puVar1 = puStack_10;
      }
    }
    puStack_10 = puVar1;
    if ((char)param_1[0x55] == '\0') {
      FUN_00430e98(param_1);
      FUN_00435328();
    }
  }
  *in_FS_OFFSET = uStack_18;
  puStack_10 = &LAB_0042f5fd;
  puStack_14 = (undefined1 *)0x42f5f5;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_0042f604(undefined4 param_1,int *param_2)

{
  (**(code **)(*param_2 + 0x60))(param_2,param_1);
  return;
}



void FUN_0042f60c(void)

{
  return;
}



void FUN_0042f6a0(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
                 undefined1 param_5,undefined4 param_6)

{
  if (*(short *)(param_1 + 0x192) != 0) {
    (**(code **)(param_1 + 400))
              (*(undefined4 *)(param_1 + 0x194),param_1,param_2,param_4,param_5,param_6,param_3);
  }
  return;
}



undefined1 FUN_0042f714(int param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  char local_10;
  undefined3 uStack_f;
  
  _local_10 = CONCAT31((int3)((uint)param_3 >> 8),1);
  if (*(short *)(param_1 + 0x1e2) != 0) {
    (**(code **)(param_1 + 0x1e0))
              (*(undefined4 *)(param_1 + 0x1e4),param_1,param_3,&local_10,param_2);
  }
  if ((local_10 != '\0') && (iVar1 = FUN_0042bd64(param_1,0xb039,param_2,param_3), iVar1 == 0)) {
    return 1;
  }
  return 0;
}



void FUN_0042f76c(int param_1,char *param_2,undefined4 *param_3)

{
  int *piVar1;
  undefined4 uVar2;
  
  piVar1 = (int *)FUN_00414974(*(int *)(param_1 + 4),param_2);
  uVar2 = FUN_004030e4(piVar1,(int)PTR_PTR_00426ca8);
  *param_3 = uVar2;
  return;
}



undefined4 FUN_0042f790(int param_1)

{
  if (*(int *)(param_1 + 0x140) != 0) {
    return *(undefined4 *)(*(int *)(param_1 + 0x140) + 8);
  }
  return 0;
}



undefined4 FUN_0042f7a4(int param_1,int param_2)

{
  undefined4 uVar1;
  
  if (*(undefined4 **)(param_1 + 0x140) == (undefined4 *)0x0) {
    uVar1 = 0;
  }
  else {
    uVar1 = FUN_0040f4e8(*(undefined4 **)(param_1 + 0x140),param_2);
  }
  return uVar1;
}



int FUN_0042f824(int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  iVar1 = FUN_0042f790(param_1);
  if ((0 < iVar1) && (iVar3 = iVar1 + -1, -1 < iVar3)) {
    do {
      iVar2 = FUN_0040f4e8(*(undefined4 **)(param_1 + 0x140),iVar3);
      if (*(char *)(iVar2 + 0x47) == '\0') {
        iVar1 = iVar1 + -1;
      }
      iVar3 = iVar3 + -1;
    } while (iVar3 != -1);
  }
  return iVar1;
}



void FUN_0042f8cc(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 uVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  int *local_8;
  
  puStack_14 = &stack0xfffffffc;
  local_8 = (int *)0x0;
  puStack_18 = &LAB_0042f973;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  if ((param_2 != (char)param_1[0x51]) &&
     (*(char *)(param_1 + 0x51) = param_2, (*(byte *)(param_1 + 8) & 0x10) == 0)) {
    FUN_00428ca8((int)param_1,param_2,param_3);
    if (param_2 == '\0') {
      FUN_00402f54((int *)param_1[0x50]);
      param_1[0x50] = 0;
      FUN_0040553c(param_1 + 0x52);
    }
    else {
      uVar2 = extraout_ECX;
      if (param_1[0x50] == 0) {
        iVar1 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX);
        param_1[0x50] = iVar1;
        uVar2 = extraout_ECX_00;
      }
      FUN_00403130(param_1,&local_8,uVar2);
      FUN_00405554(param_1 + 0x52,local_8);
    }
  }
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_0042f97a;
  puStack_18 = (undefined1 *)0x42f972;
  FUN_0040553c((int *)&local_8);
  return;
}



void FUN_0042f980(int *param_1,int param_2)

{
  HWND hWndTo;
  int iVar1;
  LONG *pLVar2;
  tagPOINT *ptVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar4;
  UINT cPoints;
  tagPOINT local_1c [2];
  int local_c;
  int *local_8;
  
  if (*(int *)(param_2 + 0xc) == 0) {
    pLVar2 = (LONG *)(*(int *)(param_2 + 4) + 0x44);
    ptVar3 = local_1c;
    local_c = param_2;
    local_8 = param_1;
    for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {
      ptVar3->x = *pLVar2;
      pLVar2 = pLVar2 + 1;
      ptVar3 = (tagPOINT *)&ptVar3->y;
    }
    cPoints = 2;
    ptVar3 = local_1c;
    hWndTo = (HWND)FUN_00430e98(local_8);
    MapWindowPoints((HWND)0x0,hWndTo,ptVar3,cPoints);
    FUN_0042d968((int)local_8);
    uVar4 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffffcc;
    FUN_00403130(*(int **)(*(int *)(local_c + 4) + 0x38),local_8,local_1c);
    if (((char)local_8[0x5f] != '\0') && (local_8[0x52] != 0)) {
      iVar1 = *(int *)(local_c + 4);
      (**(code **)(*(int *)local_8[0x52] + 0x18))
                ((int *)local_8[0x52],*(undefined4 *)(iVar1 + 0x38),*(undefined1 *)(iVar1 + 0x54),
                 *(undefined4 *)(iVar1 + 0x58));
    }
    *in_FS_OFFSET = uVar4;
    FUN_0042d970(local_8);
    return;
  }
  return;
}



void FUN_0042fa70(int param_1,int param_2)

{
  *(undefined4 *)(param_2 + 0xc) = 0;
  if ((*(char *)(param_1 + 0x17c) != '\0') && (*(int *)(param_1 + 0x148) != 0)) {
    (**(code **)(**(int **)(param_1 + 0x148) + 0x28))
              (*(int **)(param_1 + 0x148),*(undefined4 *)(param_2 + 8));
  }
  return;
}



undefined1 FUN_0042fb44(int *param_1,int param_2)

{
  char cVar1;
  byte bVar2;
  int *piVar3;
  undefined3 extraout_var;
  
  piVar3 = FUN_00440984(param_1);
  if ((((piVar3 != (int *)0x0) && (param_1 != piVar3)) && (*(char *)((int)piVar3 + 0x215) != '\0'))
     && (cVar1 = FUN_0042fb44(piVar3,param_2), cVar1 != '\0')) {
    return 1;
  }
  bVar2 = FUN_0044088c(*(uint *)(param_2 + 8));
  if (((*(byte *)((int)param_1 + 0x41) & 0x10) == 0) &&
     (FUN_00403130(param_1,param_2 + 4,CONCAT31(extraout_var,bVar2)), *(short *)(param_2 + 4) == 0))
  {
    return 1;
  }
  return 0;
}



void FUN_0042fbac(int *param_1,int param_2)

{
  char cVar1;
  
  cVar1 = FUN_0042fb44(param_1,param_2);
  if (cVar1 == '\0') {
    (**(code **)(*param_1 + -0x10))(param_1,param_2);
  }
  return;
}



undefined1 FUN_0042fc14(int *param_1,int param_2)

{
  char cVar1;
  byte bVar2;
  int *piVar3;
  undefined3 extraout_var;
  
  piVar3 = FUN_00440984(param_1);
  if ((((piVar3 != (int *)0x0) && (param_1 != piVar3)) && (*(char *)((int)piVar3 + 0x215) != '\0'))
     && (cVar1 = FUN_0042fc14(piVar3,param_2), cVar1 != '\0')) {
    return 1;
  }
  bVar2 = FUN_0044088c(*(uint *)(param_2 + 8));
  if (((*(byte *)((int)param_1 + 0x41) & 0x10) == 0) &&
     (FUN_00403130(param_1,param_2 + 4,CONCAT31(extraout_var,bVar2)), *(short *)(param_2 + 4) == 0))
  {
    return 1;
  }
  return 0;
}



void FUN_0042fcbc(int param_1,undefined4 param_2)

{
  if (*(short *)(param_1 + 0x1ba) != 0) {
    (**(code **)(param_1 + 0x1b8))(*(undefined4 *)(param_1 + 0x1bc),param_1,param_2);
  }
  return;
}



uint FUN_0042fcdc(int *param_1,int param_2,undefined4 param_3)

{
  int *piVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 uVar2;
  undefined4 local_10;
  
  local_10 = CONCAT31((int3)((uint)param_3 >> 8),1);
  piVar1 = FUN_00440984(param_1);
  uVar2 = extraout_ECX;
  if (((piVar1 != (int *)0x0) && (param_1 != piVar1)) && (*(char *)((int)piVar1 + 0x215) != '\0')) {
    piVar1 = (int *)FUN_0042fcdc(piVar1,param_2,extraout_ECX);
    uVar2 = extraout_ECX_00;
    if ((char)piVar1 != '\0') goto LAB_0042fd3f;
  }
  if ((*(byte *)((int)param_1 + 0x41) & 0x10) == 0) {
    local_10._0_2_ = CONCAT11(*(undefined1 *)(param_2 + 4),(undefined1)local_10);
    FUN_00403130(param_1,(int)&local_10 + 1,uVar2);
    piVar1 = (int *)0x0;
    *(ushort *)(param_2 + 4) = (ushort)local_10._1_1_;
    if (*(char *)(param_2 + 4) == '\0') goto LAB_0042fd3f;
  }
  local_10 = 0;
LAB_0042fd3f:
  return CONCAT31((int3)((uint)piVar1 >> 8),(undefined1)local_10);
}



void FUN_0042fd68(int *param_1,int param_2)

{
  char cVar1;
  undefined4 uVar2;
  undefined4 extraout_EDX;
  int aiStack_14 [2];
  
  *(undefined4 *)(param_2 + 0xc) = 0;
  FUN_00407184(*(undefined4 *)(param_2 + 8),aiStack_14);
  cVar1 = FUN_00403130(param_1,CONCAT31((int3)((uint)extraout_EDX >> 8),*(undefined1 *)(param_2 + 4)
                                       ),(int)*(short *)(param_2 + 6));
  if (cVar1 == '\0') {
    if (param_1[9] != 0) {
      uVar2 = FUN_0042bd64(param_1[9],0xb043,*(undefined4 *)(param_2 + 4),
                           *(undefined4 *)(param_2 + 8));
      *(undefined4 *)(param_2 + 0xc) = uVar2;
    }
  }
  else {
    *(undefined4 *)(param_2 + 0xc) = 1;
  }
  return;
}



void FUN_0042fdc4(int *param_1,int param_2)

{
  byte bVar1;
  int iVar2;
  undefined4 extraout_ECX;
  
  iVar2 = DAT_00476748;
  if (*(char *)(DAT_00476748 + 0x20) == '\0') {
    *(undefined1 *)(DAT_00476748 + 0x20) = 1;
    iVar2 = FUN_0043505c(DAT_00476748,0x68);
  }
  bVar1 = FUN_00440838(CONCAT22((short)((uint)iVar2 >> 0x10),*(undefined2 *)(param_2 + 4)));
  *(byte *)(param_2 + 4) = bVar1;
  FUN_00403130(param_1,param_2,extraout_ECX);
  if (*(int *)(param_2 + 0xc) == 0) {
    (**(code **)(*param_1 + -0x10))(param_1,param_2);
  }
  return;
}



void FUN_0042fe1c(int *param_1,int param_2)

{
  int *piVar1;
  undefined4 uVar2;
  undefined4 extraout_ECX;
  
  piVar1 = FUN_00440984(param_1);
  if ((piVar1 == (int *)0x0) || (param_1 == piVar1)) {
    uVar2 = FUN_0042bd64((int)param_1,0xb043,*(undefined4 *)(param_2 + 4),
                         *(undefined4 *)(param_2 + 8));
    *(undefined4 *)(param_2 + 0xc) = uVar2;
  }
  else {
    FUN_00403130(piVar1,param_2,extraout_ECX);
  }
  return;
}



undefined1 FUN_0042ff24(int param_1,undefined1 param_2,undefined4 *param_3)

{
  undefined4 local_18;
  undefined4 uStack_14;
  undefined1 local_10 [4];
  
  local_18 = *param_3;
  uStack_14 = param_3[1];
  local_10[0] = 0;
  if (*(short *)(param_1 + 0x1d2) != 0) {
    (**(code **)(param_1 + 0x1d0))
              (*(undefined4 *)(param_1 + 0x1d4),param_1,param_2,local_10,&local_18);
  }
  return local_10[0];
}



undefined1 FUN_0042ffbc(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  char cVar1;
  int iVar2;
  int *piVar3;
  int iVar4;
  int *piVar5;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  int iVar6;
  
  if ((*(char *)(param_1 + 0x168) != '\0') && (iVar2 = FUN_0042de00(param_1), -1 < iVar2 + -1)) {
    iVar6 = 0;
    do {
      piVar3 = (int *)FUN_0042ddc4(param_1,iVar6);
      if (((*(char *)((int)piVar3 + 0x47) != '\0') &&
          (cVar1 = (**(code **)(*piVar3 + 0x4c))(), cVar1 != '\0')) &&
         ((((*(byte *)((int)piVar3 + 0x42) & 1) != 0 &&
           (iVar4 = FUN_0042bd64((int)piVar3,0x112,*(undefined4 *)(*(int *)(param_4 + -4) + 4),
                                 *(undefined4 *)(*(int *)(param_4 + -4) + 8)), iVar4 != 0)) ||
          ((piVar5 = FUN_004030cc(piVar3,(int)PTR_PTR_00427220), (char)piVar5 != '\0' &&
           (cVar1 = FUN_0042ffbc((int)piVar3,extraout_EDX,extraout_ECX,param_4), cVar1 != '\0'))))))
      {
        return 1;
      }
      iVar6 = iVar6 + 1;
      iVar2 = iVar2 + -1;
    } while (iVar2 != 0);
  }
  return 0;
}



void FUN_0043006c(int *param_1,int param_2,undefined4 param_3)

{
  char cVar1;
  BOOL BVar2;
  HWND pHVar3;
  int *piVar4;
  int iVar5;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  int extraout_EDX;
  int extraout_EDX_00;
  int extraout_EDX_01;
  int extraout_EDX_02;
  int iVar6;
  
  iVar6 = param_2;
  if ((((((*(uint *)(param_2 + 4) & 0xfff0) == 0xf100) && (*(short *)(param_2 + 8) != 0x20)) &&
       (*(short *)(param_2 + 8) != 0x2d)) &&
      ((BVar2 = IsIconic((HWND)param_1[0x53]), param_3 = extraout_ECX, iVar6 = extraout_EDX,
       BVar2 == 0 &&
       (pHVar3 = GetCapture(), param_3 = extraout_ECX_00, iVar6 = extraout_EDX_00,
       pHVar3 == (HWND)0x0)))) &&
     ((param_1 != *(int **)(*(int *)PTR_DAT_004757c0 + 0x38) &&
      ((piVar4 = FUN_00440984(param_1), param_3 = extraout_ECX_01, iVar6 = extraout_EDX_01,
       piVar4 != (int *)0x0 &&
       (iVar5 = FUN_0042bd64((int)piVar4,0xb017,0,param_2), param_3 = extraout_ECX_02,
       iVar6 = extraout_EDX_02, iVar5 != 0)))))) {
    return;
  }
  if (((*(uint *)(param_2 + 4) & 0xfff0) == 0xf100) &&
     (cVar1 = FUN_0042ffbc((int)param_1,iVar6,param_3,(int)&stack0xfffffffc), cVar1 != '\0')) {
    return;
  }
  (**(code **)(*param_1 + -0x10))(param_1,param_2);
  return;
}



void FUN_00430134(int *param_1,int *param_2)

{
  bool bVar1;
  
  if ((((short)param_2[1] == 1) || ((short)param_2[1] == 2)) &&
     (bVar1 = FUN_0042eb0c((HWND)param_2[2],param_2), bVar1)) {
    return;
  }
  (**(code **)(*param_1 + -0x10))(param_1,param_2);
  return;
}



void FUN_00430188(int *param_1)

{
  (**(code **)(*param_1 + -0x10))();
  RemovePropA((HWND)param_1[0x53],(LPCSTR)(uint)DAT_00476756);
  RemovePropA((HWND)param_1[0x53],(LPCSTR)(uint)DAT_00476754);
  return;
}



void FUN_004301d8(int *param_1,int param_2)

{
  if (((*(byte *)(param_1 + 8) & 0x10) != 0) && (param_1[9] != 0)) {
    *(undefined4 *)(param_2 + 0xc) = 1;
    return;
  }
  (**(code **)(*param_1 + -0x10))();
  return;
}



undefined1 FUN_004301fc(int *param_1,undefined4 param_2,undefined4 param_3)

{
  undefined1 uVar1;
  byte bVar2;
  int iVar3;
  int *piVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 local_10;
  
  uVar1 = FUN_0042a160(param_1,param_2,param_3);
  local_10._0_2_ = CONCAT11(uVar1,(char)param_2);
  local_10 = (uint)(ushort)local_10;
  if (*(char *)((int)param_1 + 0x47) != '\0') {
    iVar3 = FUN_0042de00((int)param_1);
    iVar3 = iVar3 + -1;
    if (-1 < iVar3) {
      do {
        if (((byte)local_10 & local_10._1_1_) != 0) break;
        piVar4 = (int *)FUN_0042ddc4((int)param_1,iVar3);
        bVar2 = FUN_00403130(piVar4,CONCAT31((int3)((uint)extraout_EDX >> 8),(byte)local_10),
                             extraout_ECX);
        local_10._0_2_ = CONCAT11(bVar2 | local_10._1_1_,(byte)local_10);
        local_10 = (uint)(ushort)local_10;
        iVar3 = iVar3 + -1;
      } while (iVar3 != -1);
    }
  }
  return local_10._1_1_;
}



void FUN_00430284(int *param_1,int param_2,undefined4 param_3)

{
  uint uVar1;
  
  uVar1 = FUN_00403130(param_1,0,param_3);
  *(uint *)(param_2 + 0xc) = uVar1 & 0x7f;
  return;
}



void FUN_004302bc(int *param_1,int param_2)

{
  undefined2 extraout_var;
  undefined2 extraout_var_00;
  undefined2 uVar1;
  
  FUN_0042c68c(param_1,param_2);
  uVar1 = extraout_var;
  if ((PTR_DAT_004758fc[9] != '\0') && (*(int *)(param_2 + 4) == 0)) {
    FUN_0042e448((int)param_1);
    uVar1 = extraout_var_00;
  }
  FUN_0042de60((int)param_1,CONCAT22(uVar1,0xb03d));
  return;
}



void FUN_004302f4(int *param_1,undefined4 param_2,undefined4 param_3)

{
  undefined4 uVar1;
  LPCSTR pCVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  UINT UVar3;
  
  if (PTR_DAT_004758fc[9] != '\0') {
    uVar1 = FUN_0042b3a0((int)param_1);
    param_3 = extraout_ECX;
    param_2 = extraout_EDX;
    if ((char)uVar1 == '\0') {
      if (*(int *)(*(int *)PTR_DAT_004757c0 + 0x30) != 0) {
        UVar3 = 1;
        pCVar2 = FUN_00404020(*(undefined **)(*(int *)PTR_DAT_004757c0 + 0x30));
        LoadKeyboardLayoutA(pCVar2,UVar3);
        param_3 = extraout_ECX_01;
        param_2 = extraout_EDX_01;
      }
    }
    else if (*(int *)(*(int *)PTR_DAT_004757c0 + 0x2c) != 0) {
      UVar3 = 1;
      pCVar2 = FUN_00404020(*(undefined **)(*(int *)PTR_DAT_004757c0 + 0x2c));
      LoadKeyboardLayoutA(pCVar2,UVar3);
      param_3 = extraout_ECX_00;
      param_2 = extraout_EDX_00;
    }
  }
  FUN_00403130(param_1,param_2,param_3);
  return;
}



void FUN_004303b8(int param_1,int param_2)

{
  FUN_0042de20(param_1,param_2);
  return;
}



void FUN_004303c0(int param_1,int param_2)

{
  FUN_0042de20(param_1,param_2);
  return;
}



void FUN_004303c8(int param_1,int param_2)

{
  FUN_0042de20(param_1,param_2);
  return;
}



void FUN_004303d0(int *param_1)

{
  if ((*(char *)((int)param_1 + 0x47) == '\0') && (param_1[9] != 0)) {
    FUN_0042dbc0(param_1,'\0');
  }
  if (((*(byte *)(param_1 + 8) & 0x10) == 0) || ((*(byte *)((int)param_1 + 0x41) & 4) != 0)) {
    FUN_0042e598(param_1);
  }
  return;
}



void FUN_00430428(int *param_1)

{
  char cVar1;
  bool bVar2;
  
  cVar1 = (**(code **)(*param_1 + 0x4c))();
  if ((cVar1 == '\0') && (param_1[9] != 0)) {
    FUN_0042dbc0(param_1,'\0');
  }
  bVar2 = FUN_00431194((int)param_1);
  if ((bVar2) && ((*(byte *)(param_1 + 8) & 0x10) == 0)) {
    cVar1 = (**(code **)(*param_1 + 0x4c))();
    EnableWindow((HWND)param_1[0x53],-(uint)(cVar1 != '\0'));
  }
  return;
}



void FUN_00430470(int *param_1)

{
  undefined2 extraout_var;
  
  FUN_0042c634(param_1);
  FUN_00417804((int *)param_1[0x4c],param_1[0x18]);
  FUN_0042de60((int)param_1,CONCAT22(extraout_var,0xb009));
  return;
}



void FUN_00430498(int *param_1)

{
  bool bVar1;
  undefined4 uVar2;
  undefined2 extraout_var;
  undefined2 extraout_var_00;
  undefined2 uVar3;
  undefined4 uVar4;
  
  FUN_0042c62c(param_1);
  bVar1 = FUN_00431194((int)param_1);
  uVar3 = extraout_var;
  if (bVar1) {
    uVar4 = 0;
    uVar2 = FUN_00417048(param_1[0x16]);
    FUN_0042bd64((int)param_1,0x30,uVar2,uVar4);
    uVar3 = extraout_var_00;
  }
  FUN_0042de60((int)param_1,CONCAT22(uVar3,0xb008));
  return;
}



void FUN_00430514(int *param_1)

{
  bool bVar1;
  HWND hWnd;
  HWND hWndInsertAfter;
  int X;
  int Y;
  int cx;
  int cy;
  UINT uFlags;
  
  (**(code **)(*param_1 + -0x10))();
  bVar1 = FUN_00431194((int)param_1);
  if (bVar1) {
    uFlags = 0x37;
    cy = 0;
    cx = 0;
    Y = 0;
    X = 0;
    hWndInsertAfter = (HWND)0x0;
    hWnd = (HWND)FUN_00430e98(param_1);
    SetWindowPos(hWnd,hWndInsertAfter,X,Y,cx,cy,uFlags);
  }
  return;
}



void FUN_00430544(int param_1,undefined4 param_2)

{
  bool bVar1;
  BOOL BVar2;
  undefined2 uVar3;
  undefined2 extraout_var;
  undefined2 extraout_var_00;
  undefined2 extraout_var_01;
  
  uVar3 = (undefined2)((uint)param_2 >> 0x10);
  if (((*(byte *)(param_1 + 0x40) & 0x10) != 0) && (*(int *)(param_1 + 0x24) != 0)) {
    bVar1 = FUN_00431194(param_1);
    uVar3 = extraout_var;
    if (bVar1) {
      BVar2 = IsWindowVisible(*(HWND *)(param_1 + 0x14c));
      uVar3 = extraout_var_00;
      if (BVar2 != 0) {
        FUN_00430da0(param_1);
        uVar3 = extraout_var_01;
      }
    }
  }
  FUN_0042de60(param_1,CONCAT22(uVar3,0xb011));
  return;
}



void FUN_004305c4(int param_1,int param_2)

{
  FUN_0042de20(param_1,param_2);
  return;
}



void FUN_004305cc(int param_1,int param_2)

{
  FUN_0042de20(param_1,param_2);
  return;
}



void FUN_00430640(int param_1)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x24);
  if (iVar1 != 0) {
    (**(code **)(iVar1 + 0x28))(*(undefined4 *)(iVar1 + 0x2c));
  }
  return;
}



void FUN_00430654(int param_1,int param_2)

{
  FUN_0042c6fc(param_1);
  FUN_0042de20(param_1,param_2);
  return;
}



bool FUN_00430670(int *param_1,int param_2,undefined4 param_3)

{
  char cVar1;
  int *piVar2;
  int *piVar3;
  LRESULT LVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  int extraout_EDX;
  int extraout_EDX_00;
  int iVar5;
  
  if ((*(byte *)(param_1 + 8) & 0x10) == 0) {
    iVar5 = param_2;
    piVar3 = param_1;
    if (param_1 != (int *)0x0) {
      do {
        piVar2 = (int *)FUN_00403130(piVar3,iVar5,param_3);
        param_3 = extraout_ECX;
        iVar5 = extraout_EDX;
        if (((piVar2 != (int *)0x0) && (piVar2[0xb] != 0)) &&
           (cVar1 = FUN_00403130(piVar2,param_2,extraout_ECX), param_3 = extraout_ECX_00,
           iVar5 = extraout_EDX_00, cVar1 != '\0')) {
          return true;
        }
        piVar3 = (int *)piVar3[9];
      } while (piVar3 != (int *)0x0);
    }
    piVar3 = FUN_00440984(param_1);
    if ((piVar3 != (int *)0x0) &&
       (cVar1 = FUN_00403130(piVar3,param_2,extraout_ECX_01), cVar1 != '\0')) {
      return true;
    }
  }
  LVar4 = FUN_00427fc8(0xb016,(uint)*(ushort *)(param_2 + 4),*(LPARAM *)(param_2 + 8));
  return LVar4 != 0;
}



void FUN_00430704(int *param_1,int param_2,undefined4 param_3)

{
  bool bVar1;
  int iVar2;
  uint uVar3;
  int *piVar4;
  uint uVar5;
  undefined4 uVar6;
  
  *(undefined4 *)(param_2 + 0xc) = 1;
  bVar1 = FUN_00430670(param_1,param_2,param_3);
  if (bVar1) {
    return;
  }
  if ((*(byte *)(param_1 + 8) & 0x10) != 0) goto LAB_004307d1;
  iVar2 = FUN_0042bd64((int)param_1,0xb02e,(uint)*(ushort *)(param_2 + 4),param_1);
  if (iVar2 != 0) {
    return;
  }
  uVar5 = 0;
  uVar3 = (uint)*(ushort *)(param_2 + 4);
  if (uVar3 < 0x1c) {
    if ((uVar3 == 0x1b) || (uVar3 == 3)) {
LAB_00430781:
      uVar5 = 4;
    }
    else if (uVar3 == 9) {
      uVar5 = 2;
    }
    else if (uVar3 == 0xd) goto LAB_00430781;
  }
  else if (uVar3 - 0x25 < 4) {
    uVar5 = 1;
  }
  else if (uVar3 == 0x2b) goto LAB_00430781;
  if (((uVar5 != 0) &&
      (iVar2 = FUN_0042bd64((int)param_1,0xb01e,(uint)*(ushort *)(param_2 + 4),0), iVar2 == 0)) &&
     (uVar3 = FUN_0042bd64((int)param_1,0x87,0,0), (uVar3 & uVar5) == 0)) {
    uVar6 = *(undefined4 *)(param_2 + 8);
    piVar4 = FUN_00440984(param_1);
    iVar2 = FUN_0042bd64((int)piVar4,0xb005,(uint)*(ushort *)(param_2 + 4),uVar6);
    if (iVar2 != 0) {
      return;
    }
  }
LAB_004307d1:
  *(undefined4 *)(param_2 + 0xc) = 0;
  return;
}



void FUN_0043087c(int *param_1,int param_2,undefined4 param_3)

{
  bool bVar1;
  int iVar2;
  int *piVar3;
  undefined4 uVar4;
  
  *(undefined4 *)(param_2 + 0xc) = 1;
  bVar1 = FUN_00430670(param_1,param_2,param_3);
  if (bVar1) {
    return;
  }
  if ((*(byte *)(param_1 + 8) & 0x10) == 0) {
    iVar2 = FUN_0042bd64((int)param_1,0xb02e,(uint)*(ushort *)(param_2 + 4),param_1);
    if (iVar2 != 0) {
      return;
    }
    uVar4 = *(undefined4 *)(param_2 + 8);
    piVar3 = FUN_00440984(param_1);
    iVar2 = FUN_0042bd64((int)piVar3,0xb005,(uint)*(ushort *)(param_2 + 4),uVar4);
    if (iVar2 != 0) {
      return;
    }
  }
  *(undefined4 *)(param_2 + 0xc) = 0;
  return;
}



void FUN_004309e8(int param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  
  iVar1 = FUN_0042de00(param_1);
  if (-1 < iVar1 + -1) {
    iVar3 = 0;
    do {
      piVar2 = (int *)FUN_0042ddc4(param_1,iVar3);
      FUN_00403130(piVar2,param_2,param_3);
      iVar3 = iVar3 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  return;
}



void FUN_00430a30(int *param_1,int param_2,int param_3)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  puStack_14 = (undefined1 *)0x430a45;
  FUN_0042d968((int)param_1);
  puStack_18 = &LAB_00430a81;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  puStack_14 = &stack0xfffffffc;
  FUN_004309e8((int)param_1,param_2,param_3);
  FUN_0042aa3c(param_1,param_2,param_3);
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_00430a88;
  puStack_18 = (undefined1 *)0x430a80;
  FUN_0042d970(param_1);
  return;
}



void FUN_00430a90(int *param_1,int param_2,int param_3)

{
  bool bVar1;
  BOOL BVar2;
  int iVar3;
  int *piVar4;
  int *piVar5;
  int iVar6;
  
  if ((HWND)param_1[0x53] != (HWND)0x0) {
    BVar2 = IsWindowVisible((HWND)param_1[0x53]);
    if (BVar2 != 0) {
      bVar1 = true;
      goto LAB_00430aba;
    }
  }
  bVar1 = false;
LAB_00430aba:
  if (bVar1) {
    ScrollWindow((HWND)param_1[0x53],param_2,param_3,(RECT *)0x0,(RECT *)0x0);
  }
  iVar3 = FUN_0042de00((int)param_1);
  if (-1 < iVar3 + -1) {
    iVar6 = 0;
    do {
      piVar4 = (int *)FUN_0042ddc4((int)param_1,iVar6);
      piVar5 = FUN_004030cc(piVar4,(int)PTR_PTR_00427220);
      if (((char)piVar5 == '\0') || (piVar4[0x53] == 0)) {
        piVar4[0xc] = piVar4[0xc] + param_2;
        piVar4[0xd] = piVar4[0xd] + param_3;
      }
      else if (!bVar1) {
        SetWindowPos((HWND)piVar4[0x53],(HWND)0x0,piVar4[0xc] + param_2,piVar4[0xd] + param_3,
                     piVar4[0xe],piVar4[0xf],0x14);
      }
      iVar6 = iVar6 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  FUN_0042d990(param_1);
  return;
}



void FUN_00430b80(int param_1,int param_2)

{
  int iVar1;
  undefined4 *puVar2;
  int iVar3;
  HWND hWndInsertAfter;
  int *piVar4;
  
  iVar3 = *(int *)(param_1 + 0x24);
  if (iVar3 != 0) {
    if (*(int *)(iVar3 + 0x134) != 0) {
      param_2 = param_2 - *(int *)(*(int *)(iVar3 + 0x134) + 8);
    }
    iVar3 = FUN_0040f544(*(int *)(iVar3 + 0x180),param_1);
    if (-1 < iVar3) {
      piVar4 = *(int **)(*(int *)(param_1 + 0x24) + 0x180);
      iVar1 = piVar4[2];
      if (param_2 < 0) {
        param_2 = 0;
      }
      if (iVar1 <= param_2) {
        param_2 = iVar1 + -1;
      }
      if (iVar3 != param_2) {
        FUN_0040f3d8(piVar4,iVar3);
        FUN_0040f564(*(int **)(*(int *)(param_1 + 0x24) + 0x180),param_2,param_1);
      }
    }
    if (*(int *)(param_1 + 0x14c) != 0) {
      if (param_2 == 0) {
        hWndInsertAfter = (HWND)0x1;
      }
      else {
        puVar2 = *(undefined4 **)(*(int *)(param_1 + 0x24) + 0x180);
        if (param_2 == puVar2[2] + -1) {
          hWndInsertAfter = (HWND)0x0;
        }
        else if (iVar3 < param_2) {
          piVar4 = (int *)FUN_0040f4e8(puVar2,param_2 + 1);
          hWndInsertAfter = (HWND)FUN_00430e98(piVar4);
        }
        else {
          if (iVar3 <= param_2) {
            return;
          }
          piVar4 = (int *)FUN_0040f4e8(puVar2,param_2);
          hWndInsertAfter = (HWND)FUN_00430e98(piVar4);
        }
      }
      SetWindowPos(*(HWND *)(param_1 + 0x14c),hWndInsertAfter,0,0,0,0,3);
    }
  }
  return;
}



void FUN_00430d88(int *param_1)

{
  (**(code **)(*param_1 + 0x74))();
  (**(code **)(*param_1 + 0x80))();
  return;
}



void FUN_00430da0(int param_1)

{
  tagRECT local_14;
  
  FUN_0042a7c8(param_1,&local_14.left);
  InflateRect(&local_14,1,1);
  InvalidateRect(*(HWND *)(*(int *)(param_1 + 0x24) + 0x14c),&local_14,-1);
  return;
}



undefined4 FUN_00430e50(int param_1)

{
  HWND pHVar1;
  
  if (*(int *)(param_1 + 0x14c) != 0) {
    pHVar1 = GetFocus();
    if (pHVar1 == *(HWND *)(param_1 + 0x14c)) {
      return CONCAT31((int3)((uint)pHVar1 >> 8),1);
    }
  }
  return 0;
}



void FUN_00430e74(int *param_1)

{
  if (param_1[0x53] == 0) {
    if ((int *)param_1[9] != (int *)0x0) {
      FUN_00430e74((int *)param_1[9]);
    }
    (**(code **)(*param_1 + 0x8c))();
  }
  return;
}



int FUN_00430e98(int *param_1)

{
  FUN_00430e74(param_1);
  return param_1[0x53];
}



void FUN_00430f60(int *param_1,LPRECT param_2)

{
  HWND hWnd;
  
  hWnd = (HWND)FUN_00430e98(param_1);
  GetClientRect(hWnd,param_2);
  return;
}



void FUN_00430f78(int *param_1)

{
  bool bVar1;
  HWND hWnd;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  HWND hWndInsertAfter;
  int X;
  int Y;
  int cx;
  int cy;
  UINT uFlags;
  
  if ((*(byte *)(param_1 + 8) & 1) == 0) {
    bVar1 = FUN_00431194((int)param_1);
    if (bVar1) {
      uFlags = 0x16;
      cy = param_1[0xf];
      cx = param_1[0xe];
      Y = 0;
      X = 0;
      hWndInsertAfter = (HWND)0x0;
      hWnd = (HWND)FUN_00430e98(param_1);
      SetWindowPos(hWnd,hWndInsertAfter,X,Y,cx,cy,uFlags);
      FUN_00403130(param_1,extraout_EDX,extraout_ECX);
    }
  }
  return;
}



void FUN_00430fb8(int param_1,int param_2)

{
  if (param_2 != *(int *)(param_1 + 300)) {
    *(int *)(param_1 + 300) = param_2;
    FUN_0042bd64(param_1,0xb03b,0,0);
  }
  return;
}



void FUN_00430fd8(int param_1,char param_2)

{
  if (param_2 != *(char *)(param_1 + 0x138)) {
    *(char *)(param_1 + 0x138) = param_2;
    *(undefined1 *)(param_1 + 0x160) = 0;
    FUN_0042bd64(param_1,0xb010,0,0);
  }
  return;
}



int FUN_0043102c(int param_1)

{
  int iVar1;
  
  if (*(int *)(param_1 + 0x24) != 0) {
    iVar1 = FUN_0040f544(*(int *)(*(int *)(param_1 + 0x24) + 0x16c),param_1);
    return iVar1;
  }
  return -1;
}



void FUN_00431050(int param_1,short param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  iVar3 = FUN_0043102c(param_1);
  iVar3 = (int)(short)iVar3;
  if (-1 < iVar3) {
    piVar1 = *(int **)(*(int *)(param_1 + 0x24) + 0x16c);
    iVar2 = piVar1[2];
    if (param_2 < 0) {
      param_2 = 0;
    }
    if (iVar2 <= param_2) {
      param_2 = (short)iVar2 + -1;
    }
    if (iVar3 != param_2) {
      FUN_0040f3d8(piVar1,iVar3);
      FUN_0040f564(*(int **)(*(int *)(param_1 + 0x24) + 0x16c),(int)param_2,param_1);
    }
  }
  return;
}



void FUN_004310c4(int param_1,char param_2)

{
  bool bVar1;
  uint uVar2;
  
  if (param_2 != *(char *)(param_1 + 0x174)) {
    *(char *)(param_1 + 0x174) = param_2;
    bVar1 = FUN_00431194(param_1);
    if (bVar1) {
      uVar2 = GetWindowLongA(*(HWND *)(param_1 + 0x14c),-0x10);
      uVar2 = uVar2 & 0xfffeffff;
      if (param_2 != '\0') {
        uVar2 = uVar2 | 0x10000;
      }
      SetWindowLongA(*(HWND *)(param_1 + 0x14c),-0x10,uVar2);
    }
    FUN_0042bd64(param_1,0xb028,0,0);
  }
  return;
}



void FUN_00431124(int *param_1,byte param_2,undefined4 param_3)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  int *local_8;
  
  puStack_14 = &stack0xfffffffc;
  local_8 = (int *)0x0;
  puStack_18 = &LAB_00431188;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  if ((param_2 != *(byte *)(param_1 + 0x5f)) &&
     (*(byte *)(param_1 + 0x5f) = param_2, ((*(byte *)(param_1 + 8) & 0x10) == 0 & param_2) != 0)) {
    FUN_00403130(param_1,&local_8,param_3);
    FUN_00405554(param_1 + 0x52,local_8);
  }
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_0043118f;
  puStack_18 = (undefined1 *)0x431187;
  FUN_0040553c((int *)&local_8);
  return;
}



bool FUN_00431194(int param_1)

{
  return *(int *)(param_1 + 0x14c) != 0;
}



void FUN_004311a0(int param_1)

{
  BOOL BVar1;
  uint uVar2;
  HWND hWnd;
  int iVar3;
  RECT *pRVar4;
  LONG *pLVar5;
  undefined1 local_48 [12];
  int local_3c;
  WINDOWPLACEMENT local_38;
  
  BVar1 = IsIconic(*(HWND *)(param_1 + 0x14c));
  if (BVar1 == 0) {
    GetWindowRect(*(HWND *)(param_1 + 0x14c),(LPRECT)local_48);
  }
  else {
    local_38.length = 0x2c;
    GetWindowPlacement(*(HWND *)(param_1 + 0x14c),&local_38);
    pRVar4 = &local_38.rcNormalPosition;
    pLVar5 = (LONG *)local_48;
    for (iVar3 = 4; iVar3 != 0; iVar3 = iVar3 + -1) {
      *pLVar5 = pRVar4->left;
      pRVar4 = (RECT *)&pRVar4->top;
      pLVar5 = pLVar5 + 1;
    }
  }
  uVar2 = GetWindowLongA(*(HWND *)(param_1 + 0x14c),-0x10);
  if (((uVar2 & 0x40000000) != 0) &&
     (hWnd = (HWND)GetWindowLongA(*(HWND *)(param_1 + 0x14c),-8), hWnd != (HWND)0x0)) {
    ScreenToClient(hWnd,(LPPOINT)local_48);
    ScreenToClient(hWnd,(LPPOINT)(local_48 + 8));
  }
  *(undefined4 *)(param_1 + 0x30) = local_48._0_4_;
  *(undefined4 *)(param_1 + 0x34) = local_48._4_4_;
  *(undefined4 *)(param_1 + 0x38) = local_48._8_4_ - local_48._0_4_;
  *(int *)(param_1 + 0x3c) = local_3c - local_48._4_4_;
  FUN_0042a4d8(param_1);
  return;
}



void FUN_00431258(int param_1,int *param_2)

{
  int *piVar1;
  undefined4 extraout_ECX;
  int iVar2;
  undefined4 local_14;
  
  if ((*(int *)(param_1 + 0x16c) != 0) &&
     (iVar2 = *(int *)(*(int *)(param_1 + 0x16c) + 8), -1 < iVar2 + -1)) {
    local_14 = 0;
    do {
      piVar1 = (int *)FUN_0040f4e8(*(undefined4 **)(param_1 + 0x16c),local_14);
      FUN_0040f38c(param_2,(int)piVar1);
      FUN_00403130(piVar1,param_2,extraout_ECX);
      local_14 = local_14 + 1;
      iVar2 = iVar2 + -1;
    } while (iVar2 != 0);
  }
  return;
}



void FUN_004312b0(int *param_1,int param_2,undefined4 param_3,char param_4,char param_5)

{
  char cVar1;
  int *piVar2;
  int *piVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_EDX;
  int iVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_30;
  undefined1 *puStack_2c;
  undefined1 *puStack_28;
  int local_14;
  int *local_10;
  
  local_10 = (int *)0x0;
  puStack_28 = (undefined1 *)0x4312d2;
  piVar2 = (int *)FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',param_3);
  puStack_2c = &LAB_004313a6;
  uStack_30 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_30;
  puStack_28 = &stack0xfffffffc;
  FUN_00403130(param_1,piVar2,extraout_ECX);
  if (0 < piVar2[2]) {
    local_14 = FUN_0040f544((int)piVar2,param_2);
    iVar4 = local_14;
    if (local_14 == -1) {
      if ((char)param_3 == '\0') {
        local_14 = 0;
        iVar4 = local_14;
      }
      else {
        local_14 = piVar2[2] + -1;
        iVar4 = local_14;
      }
    }
    do {
      if ((char)param_3 == '\0') {
        if (iVar4 == 0) {
          iVar4 = piVar2[2];
        }
        iVar4 = iVar4 + -1;
      }
      else {
        iVar4 = iVar4 + 1;
        if (iVar4 == piVar2[2]) {
          iVar4 = 0;
        }
      }
      piVar3 = (int *)FUN_0040f4e8(piVar2,iVar4);
      cVar1 = FUN_00403130(piVar3,extraout_EDX,extraout_ECX_00);
      if (((cVar1 != '\0') && ((param_5 == '\0' || ((char)piVar3[0x5d] != '\0')))) &&
         ((param_4 == '\0' || ((int *)piVar3[9] == param_1)))) {
        local_10 = piVar3;
      }
    } while ((local_10 == (int *)0x0) && (iVar4 != local_14));
  }
  *in_FS_OFFSET = uStack_30;
  puStack_28 = &LAB_004313ad;
  puStack_2c = (undefined1 *)0x4313a5;
  FUN_00402f54(piVar2);
  return;
}



void FUN_004313bc(int *param_1,int param_2,undefined4 param_3,byte param_4)

{
  int *piVar1;
  
  piVar1 = (int *)FUN_004312b0(param_1,param_2,param_3,param_4 ^ 1,param_4);
  if (piVar1 != (int *)0x0) {
    (**(code **)(*piVar1 + 0xb0))();
  }
  return;
}



void FUN_004313e8(int param_1,int param_2,undefined4 param_3,undefined *param_4,undefined4 param_5)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  iVar1 = FUN_0042de00(param_1);
  if (-1 < iVar1 + -1) {
    iVar3 = 0;
    do {
      iVar2 = FUN_0042ddc4(param_1,iVar3);
      if (*(int *)(iVar2 + 4) == param_2) {
        (*(code *)param_4)(param_5,iVar2);
      }
      iVar3 = iVar3 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  return;
}



void FUN_00431430(undefined4 param_1,int *param_2,int param_3)

{
  int *piVar1;
  
  piVar1 = FUN_004030cc(param_2,(int)PTR_PTR_00427220);
  if ((char)piVar1 != '\0') {
    FUN_00430b80((int)param_2,param_3);
    return;
  }
  piVar1 = FUN_004030cc(param_2,(int)PTR_PTR_00426ca8);
  if ((char)piVar1 != '\0') {
    FUN_0042b014(param_2,param_3);
  }
  return;
}



void FUN_00431478(int *param_1,undefined4 *param_2,undefined4 *param_3,undefined4 *param_4,
                 undefined4 *param_5)

{
  int iVar1;
  
  iVar1 = param_1[0x19];
  if (*(int *)(iVar1 + 0x14) == 0) {
    *param_2 = 0;
  }
  else {
    *param_2 = *(undefined4 *)(param_1[0x19] + 0x14);
  }
  if (*(int *)(iVar1 + 0x10) == 0) {
    *param_3 = 0;
  }
  else {
    *param_3 = *(undefined4 *)(param_1[0x19] + 0x10);
  }
  if (*(int *)(iVar1 + 0xc) == 0) {
    *param_5 = 0;
  }
  else {
    *param_5 = *(undefined4 *)(param_1[0x19] + 0xc);
  }
  if (*(int *)(iVar1 + 8) == 0) {
    *param_4 = 0;
  }
  else {
    *param_4 = *(undefined4 *)(param_1[0x19] + 8);
  }
  (**(code **)(*param_1 + 0x38))();
  return;
}



void FUN_004314f8(int *param_1,int *param_2,int *param_3,int *param_4,int *param_5)

{
  bool bVar1;
  byte bVar2;
  char cVar3;
  int iVar4;
  BOOL BVar5;
  int *piVar6;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_7c;
  undefined1 *puStack_78;
  RECT local_64;
  char local_51;
  int local_50;
  int local_4c;
  int local_48;
  int local_44;
  int local_40;
  int local_3c;
  int local_38;
  int local_34;
  int local_30;
  int local_2c;
  int local_28;
  int local_24;
  int local_20;
  int local_1c;
  int local_18;
  int local_14;
  int local_10;
  int *local_c;
  int *local_8;
  
  local_c = param_3;
  local_8 = param_2;
  bVar1 = FUN_00431194((int)param_1);
  if ((bVar1) && (iVar4 = FUN_0042de00((int)param_1), iVar4 != 0)) {
    (**(code **)(*param_1 + 0x40))(param_1,&local_64);
    (**(code **)(*param_1 + 0x84))(param_1,&local_64);
    puStack_78 = (undefined1 *)0x431547;
    BVar5 = IsRectEmpty(&local_64);
    if (BVar5 == 0) {
      local_18 = param_1[0xe] - (local_64.right - local_64.left);
      local_1c = param_1[0xf] - (local_64.bottom - local_64.top);
      if (0 < *local_8) {
        *local_8 = *local_8 - local_18;
      }
      if (0 < *local_c) {
        *local_c = *local_c - local_1c;
      }
      if (0 < *param_5) {
        *param_5 = *param_5 - local_18;
      }
      if (0 < *param_4) {
        *param_4 = *param_4 - local_1c;
      }
      puStack_78 = &LAB_004318ba;
      uStack_7c = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack_7c;
      local_24 = 0;
      local_34 = 0;
      local_28 = 0;
      local_38 = 0;
      local_2c = 0;
      local_3c = 0;
      local_30 = 0;
      local_40 = 0;
      local_14 = local_1c;
      local_10 = local_18;
      iVar4 = FUN_0042de00((int)param_1);
      if (-1 < iVar4 + -1) {
        local_20 = 0;
        do {
          piVar6 = (int *)FUN_0042ddc4((int)param_1,local_20);
          if ((*(char *)((int)piVar6 + 0x47) != '\0') ||
             (((*(byte *)(piVar6 + 8) & 0x10) != 0 && ((*(byte *)((int)piVar6 + 0x41) & 4) == 0))))
          {
            FUN_00431478(piVar6,&local_44,&local_4c,&local_50,&local_48);
            cVar3 = *(char *)((int)piVar6 + 0x4b);
            if (cVar3 == '\0') {
              if (DAT_004318cc == (*(byte *)((int)piVar6 + 0x51) & DAT_004318cc)) {
                local_51 = '\x01';
                if (0 < local_44) {
                  local_44 = ((local_64.right - local_64.left) - piVar6[0xe]) - local_44;
                }
                if (0 < local_48) {
                  local_48 = ((local_64.right - local_64.left) + local_48) - piVar6[0xe];
                }
              }
              else {
                local_51 = '\0';
              }
            }
            else if ((byte)(cVar3 - 1U) < 2) {
              local_51 = '\x01';
            }
            else if (cVar3 == '\x05') {
              local_51 = '\x02';
            }
            else {
              local_51 = '\x03';
            }
            if (*(char *)((int)piVar6 + 0x4b) == '\0') {
              if (DAT_004318d0 == (*(byte *)((int)piVar6 + 0x51) & DAT_004318d0)) {
                cVar3 = '\x01';
                if (0 < local_4c) {
                  local_4c = ((local_64.bottom - local_64.top) - piVar6[0xf]) - local_4c;
                }
                if (0 < local_50) {
                  local_50 = ((local_64.bottom - local_64.top) + local_50) - piVar6[0xf];
                }
              }
              else {
                cVar3 = '\0';
              }
            }
            else {
              bVar2 = *(char *)((int)piVar6 + 0x4b) - 3;
              if (bVar2 < 2) {
                cVar3 = '\x01';
              }
              else if (bVar2 == 2) {
                cVar3 = '\x02';
              }
              else {
                cVar3 = '\x03';
              }
            }
            if ((byte)(local_51 - 1U) < 2) {
              if (((0 < local_44) && (*local_8 < local_44)) &&
                 (*local_8 = local_44, local_24 < *local_8)) {
                local_24 = *local_8;
              }
              if (((0 < local_48) && (local_48 < *param_5)) &&
                 (*param_5 = local_48, local_28 < *param_5)) {
                local_28 = *param_5;
              }
            }
            else if (local_51 == '\x03') {
              local_34 = local_34 + piVar6[0xe];
              local_38 = local_38 + piVar6[0xe];
            }
            if ((byte)(cVar3 - 1U) < 2) {
              if (((0 < local_4c) && (*local_c < local_4c)) &&
                 (*local_c = local_4c, local_2c < *local_c)) {
                local_2c = *local_c;
              }
              if (((0 < local_50) && (local_50 < *param_4)) &&
                 (*param_4 = local_50, local_30 < *param_4)) {
                local_30 = *param_4;
              }
            }
            else if ((byte)(cVar3 - 1U) == 2) {
              local_3c = local_3c + piVar6[0xf];
              local_40 = local_40 + piVar6[0xf];
            }
          }
          local_20 = local_20 + 1;
          iVar4 = iVar4 + -1;
        } while (iVar4 != 0);
      }
      if ((0 < local_24) && (*local_8 < local_24 + local_34)) {
        *local_8 = local_24 + local_34;
      }
      if ((0 < local_28) && ((*param_5 == 0 || (*param_5 < local_28 + local_38)))) {
        *param_5 = local_28 + local_38;
      }
      if ((0 < local_2c) && (*local_c < local_2c + local_3c)) {
        *local_c = local_2c + local_3c;
      }
      if ((0 < local_30) && ((*param_4 == 0 || (*param_4 < local_30 + local_40)))) {
        *param_4 = local_30 + local_40;
      }
      *in_FS_OFFSET = uStack_7c;
      if (0 < *local_8) {
        *local_8 = *local_8 + local_10;
      }
      if (0 < *local_c) {
        *local_c = *local_c + local_14;
      }
      if (0 < *param_5) {
        *param_5 = *param_5 + local_18;
      }
      if (0 < *param_4) {
        *param_4 = *param_4 + local_1c;
      }
      return;
    }
  }
  return;
}



void FUN_00431910(int *param_1,int *param_2,char param_3)

{
  int *piVar1;
  
  FUN_0042c8d0(param_1,param_2,param_3);
  piVar1 = FUN_004030cc(param_2,(int)PTR_PTR_00435828);
  if (((char)piVar1 != '\0') && ((param_3 == '\0' || (param_1[0x54] == 0)))) {
    param_1[0x54] = param_2[0x17];
  }
  return;
}



undefined1 FUN_004319a8(int *param_1,undefined4 param_2,undefined4 param_3)

{
  byte bVar1;
  bool bVar2;
  undefined1 uVar3;
  int iVar4;
  int *piVar5;
  int iVar6;
  int iVar7;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_50;
  undefined1 *puStack_4c;
  undefined1 *puStack_48;
  int local_38;
  int local_34;
  int local_28;
  int local_24;
  int local_18;
  undefined1 local_11;
  undefined4 local_10;
  undefined4 local_c;
  int *local_8;
  
  local_11 = 1;
  puStack_48 = (undefined1 *)0x4319c6;
  local_10 = param_3;
  local_c = param_2;
  local_8 = param_1;
  bVar2 = FUN_00431194((int)param_1);
  if ((bVar2) && (*(char *)((int)local_8 + 0x4b) != '\x05')) {
    if ((*(byte *)(local_8 + 8) & 0x10) != 0) {
      puStack_48 = (undefined1 *)0x4319ec;
      iVar4 = FUN_0042de00((int)local_8);
      if (iVar4 < 1) {
        return local_11;
      }
    }
    puStack_48 = (undefined1 *)0x431a02;
    (**(code **)(*local_8 + 0xa4))(local_8,&local_28);
    puStack_48 = (undefined1 *)0x431a0d;
    (**(code **)(*local_8 + 0x40))(local_8,&local_38);
    puStack_48 = (undefined1 *)0x431a1b;
    (**(code **)(*local_8 + 0x84))(local_8,&local_38);
    puStack_48 = (undefined1 *)0x431a23;
    FUN_0042d968((int)local_8);
    puStack_4c = &LAB_00431acd;
    uStack_50 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_50;
    puStack_48 = &stack0xfffffffc;
    iVar4 = FUN_0042de00((int)local_8);
    if (-1 < iVar4 + -1) {
      local_18 = 0;
      do {
        piVar5 = (int *)FUN_0042ddc4((int)local_8,local_18);
        if ((*(char *)((int)piVar5 + 0x47) != '\0') ||
           (((*(byte *)(piVar5 + 8) & 0x10) != 0 && ((*(byte *)((int)piVar5 + 0x41) & 4) == 0)))) {
          bVar1 = *(byte *)((int)local_8 + 0x4b);
          if ((bVar1 == 0) || ((byte)(bVar1 - 3) < 2)) {
            iVar7 = local_28 - local_38;
          }
          else {
            iVar7 = 0;
          }
          if (bVar1 < 3) {
            iVar6 = local_24 - local_34;
          }
          else {
            iVar6 = 0;
          }
          (**(code **)(*piVar5 + 0x7c))
                    (piVar5,piVar5[0xc] - iVar7,piVar5[0xd] - iVar6,piVar5[0xf],piVar5[0xe]);
        }
        local_18 = local_18 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
    }
    *in_FS_OFFSET = uStack_50;
    puStack_48 = &DAT_00431ad4;
    *(ushort *)(local_8 + 0x11) = *(ushort *)(local_8 + 0x11) & 0xffef;
    puStack_4c = (undefined1 *)0x431acc;
    uVar3 = FUN_0042d970(local_8);
    return uVar3;
  }
  return local_11;
}



void FUN_00431b6c(int *param_1,int param_2)

{
  LPRECT lprc;
  int iVar1;
  
  (**(code **)(*param_1 + -0x10))(param_1,param_2);
  lprc = *(LPRECT *)(param_2 + 8);
  InflateRect(lprc,-param_1[0x4b],-param_1[0x4b]);
  if (*(char *)((int)param_1 + 0x125) != '\0') {
    iVar1 = 0;
    if (*(char *)((int)param_1 + 0x123) != '\0') {
      iVar1 = param_1[0x4a];
    }
    if ((char)param_1[0x49] != '\0') {
      iVar1 = iVar1 + param_1[0x4a];
    }
    if ((*(byte *)((int)param_1 + 0x122) & 1) != 0) {
      lprc->left = lprc->left + iVar1;
    }
    if ((*(byte *)((int)param_1 + 0x122) & 2) != 0) {
      lprc->top = lprc->top + iVar1;
    }
    if ((*(byte *)((int)param_1 + 0x122) & 4) != 0) {
      lprc->right = lprc->right - iVar1;
    }
    if ((*(byte *)((int)param_1 + 0x122) & 8) != 0) {
      lprc->bottom = lprc->bottom - iVar1;
    }
  }
  return;
}



int * FUN_00431ef0(int *param_1,char param_2,int *param_3)

{
  int *piVar1;
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00429f98(param_1,'\0',param_3);
  piVar1 = FUN_00417954((int *)PTR_PTR_004262cc,'\x01',extraout_ECX_00);
  param_1[0x48] = (int)piVar1;
  FUN_00429b28(piVar1,(int)param_1);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



void FUN_00431f4c(int *param_1,char param_2)

{
  int *piVar1;
  byte extraout_DL;
  
  piVar1 = FUN_004032b4(param_1,param_2);
  if (piVar1 == DAT_00474790) {
    FUN_0042825c((int *)0x0);
  }
  FUN_00402f54((int *)piVar1[0x48]);
  FUN_0042a068(piVar1,extraout_DL & 0xfc);
  if ('\0' < (char)extraout_DL) {
    FUN_004032a4(piVar1);
  }
  return;
}



void FUN_00431f8c(int *param_1,int param_2)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  
  if (*(int *)(param_2 + 4) != 0) {
    puStack_10 = (undefined1 *)0x431fae;
    FUN_00417f24(param_1[0x48]);
    puStack_14 = &LAB_00432027;
    uStack_18 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_18;
    puStack_1c = (undefined1 *)0x431fcd;
    puStack_10 = &stack0xfffffffc;
    FUN_00418454((int *)param_1[0x48],*(int *)(param_2 + 4));
    puStack_20 = &LAB_00432004;
    uStack_24 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_24;
    puStack_1c = &stack0xfffffffc;
    (**(code **)(*param_1 + 0x84))();
    *in_FS_OFFSET = uStack_24;
    puStack_1c = &LAB_0043200b;
    puStack_20 = (undefined1 *)0x432003;
    FUN_00418454((int *)param_1[0x48],0);
    return;
  }
  return;
}



int * FUN_00432038(int *param_1,char param_2,int *param_3)

{
  int *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_004327fc(param_1,'\0',param_3);
  FUN_0042af4c((int)param_1,0x80ffff);
  FUN_004182f4(param_1[0x7c]);
  FUN_00417920(*(int **)(param_1[0x7c] + 0x14),'\x01');
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_00432264(int *param_1)

{
  FUN_0042e400(param_1);
  return;
}



void FUN_00432304(int *param_1,int *param_2,uint *param_3)

{
  HWND hWnd;
  int iVar1;
  int *piVar2;
  undefined4 *in_FS_OFFSET;
  HWND hWndInsertAfter;
  int X;
  int Y;
  int cx;
  UINT uFlags;
  undefined4 uStack_30;
  undefined1 *puStack_2c;
  undefined1 *puStack_28;
  int local_18 [4];
  int *local_8;
  
  puStack_28 = &stack0xfffffffc;
  piVar2 = local_18;
  for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {
    *piVar2 = *param_2;
    param_2 = param_2 + 1;
    piVar2 = piVar2 + 1;
  }
  *(undefined1 *)(param_1 + 0x7e) = 1;
  puStack_2c = &LAB_00432411;
  uStack_30 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_30;
  local_8 = param_1;
  FUN_0042adf0((int)param_1,param_3);
  local_18[3] = local_18[3] + 4;
  FUN_0042be08((int)local_8,local_18);
  iVar1 = FUN_00446c6c();
  if (iVar1 < local_8[0xf] + local_18[1]) {
    local_18[1] = FUN_00446c6c();
    local_18[1] = local_18[1] - local_8[0xf];
  }
  iVar1 = FUN_00446c78();
  if (iVar1 < local_8[0xe] + local_18[0]) {
    local_18[0] = FUN_00446c78();
    local_18[0] = local_18[0] - local_8[0xe];
  }
  iVar1 = FUN_00446c60();
  if (local_18[0] < iVar1) {
    local_18[0] = FUN_00446c60();
  }
  iVar1 = FUN_00446c54();
  if (local_18[3] < iVar1) {
    local_18[3] = FUN_00446c54();
  }
  uFlags = 0x50;
  iVar1 = local_8[0xf];
  cx = local_8[0xe];
  hWndInsertAfter = (HWND)0xffffffff;
  X = local_18[0];
  Y = local_18[1];
  hWnd = (HWND)FUN_00430e98(local_8);
  SetWindowPos(hWnd,hWndInsertAfter,X,Y,cx,iVar1,uFlags);
  (**(code **)(*local_8 + 0x74))();
  *in_FS_OFFSET = uStack_30;
  *(undefined1 *)(local_8 + 0x7e) = 0;
  return;
}



void FUN_00432420(int *param_1,undefined4 *param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 *puVar2;
  undefined4 local_14 [4];
  
  puVar2 = local_14;
  for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {
    *puVar2 = *param_2;
    param_2 = param_2 + 1;
    puVar2 = puVar2 + 1;
  }
  (**(code **)(*param_1 + 0xb8))(param_1,local_14,param_3);
  return;
}



void FUN_0043244c(int param_1,undefined4 param_2,undefined *param_3,LPRECT param_4)

{
  uint uVar1;
  LPCSTR lpchText;
  HDC hdc;
  int cchText;
  LPRECT lprc;
  
  FUN_0040ea70(0,0,param_2,&param_4->left,0);
  uVar1 = FUN_0042ccec(param_1);
  uVar1 = uVar1 | 0xc10;
  cchText = -1;
  lprc = param_4;
  lpchText = FUN_00404020(param_3);
  hdc = (HDC)FUN_004183d4(*(int **)(param_1 + 0x1f0));
  DrawTextA(hdc,lpchText,cchText,lprc,uVar1);
  param_4->right = param_4->right + 6;
  param_4->bottom = param_4->bottom + 2;
  return;
}



void FUN_004324a8(HWND param_1,int param_2,int param_3,int *param_4)

{
  tagRECT local_1c;
  tagPOINT local_c;
  
  local_c.x = param_2;
  local_c.y = param_3;
  ClientToScreen(param_1,&local_c);
  GetWindowRect(param_1,&local_1c);
  *param_4 = local_c.x - local_1c.left;
  param_4[1] = local_c.y - local_1c.top;
  return;
}



void FUN_004324e8(int *param_1,undefined4 param_2,undefined4 param_3)

{
  FUN_00436764(param_1,param_2,param_3);
  FUN_00432614((int)param_1,-1);
  return;
}



void FUN_00432500(int param_1)

{
  UINT flags;
  int cx;
  HICON pHVar1;
  undefined4 *in_FS_OFFSET;
  int cy;
  undefined4 uVar2;
  int cInitial;
  int cGrow;
  POINT local_10;
  HIMAGELIST local_8;
  
  if (*(short *)(param_1 + 0x60) != -1) {
    cGrow = 1;
    cInitial = 0xe;
    flags = (**(code **)PTR_DAT_00475690)();
    cy = 0xd;
    cx = (**(code **)PTR_DAT_00475690)();
    local_8 = ImageList_Create(cx,cy,flags,cInitial,cGrow);
    uVar2 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffffd8;
    pHVar1 = (HICON)FUN_004470e0(*(int *)PTR_DAT_004758e0,(int)*(short *)(param_1 + 0x60));
    FUN_0041ea5c(local_8,pHVar1);
    pHVar1 = (HICON)FUN_004470e0(*(int *)PTR_DAT_004758e0,(int)*(short *)(param_1 + 0x60));
    FUN_0041ea5c(local_8,pHVar1);
    ImageList_SetDragCursorImage(local_8,0,0,0);
    ImageList_GetDragImage((POINT *)0x0,&local_10);
    ImageList_SetDragCursorImage(local_8,1,local_10.x,local_10.y);
    *in_FS_OFFSET = uVar2;
    ImageList_Destroy(local_8);
    return;
  }
  return;
}



bool FUN_004325cc(int *param_1,int param_2,int param_3,int param_4)

{
  bool bVar1;
  HIMAGELIST himlTrack;
  
  bVar1 = FUN_0043681c((int)param_1);
  if (bVar1) {
    param_1[0x1c] = param_2;
    param_1[0x1a] = param_3;
    param_1[0x1b] = param_4;
    himlTrack = (HIMAGELIST)FUN_004369f0(param_1);
    ImageList_BeginDrag(himlTrack,param_2,param_3,param_4);
    *(undefined1 *)((int)param_1 + 0x62) = 1;
  }
  return bVar1;
}



void FUN_00432614(int param_1,short param_2)

{
  if ((param_2 != *(short *)(param_1 + 0x60)) &&
     (*(short *)(param_1 + 0x60) = param_2, *(char *)(param_1 + 0x62) != '\0')) {
    FUN_00432500(param_1);
  }
  return;
}



bool FUN_00432658(int *param_1,HWND param_2,int param_3,int param_4)

{
  bool bVar1;
  bool bVar2;
  
  bVar2 = false;
  bVar1 = FUN_0043681c((int)param_1);
  if (bVar1) {
    if (*(char *)((int)param_1 + 0x62) == '\0') {
      FUN_004325cc(param_1,param_1[0x1c],param_1[0x1a],param_1[0x1b]);
    }
    FUN_00432500((int)param_1);
    bVar2 = FUN_004326b8((int)param_1,param_2,param_3,param_4);
    if (bVar2) {
      ShowCursor(0);
    }
  }
  return bVar2;
}



bool FUN_004326b8(int param_1,HWND param_2,int param_3,int param_4)

{
  bool bVar1;
  BOOL BVar2;
  bool bVar3;
  int local_10;
  int local_c;
  int local_8;
  
  bVar3 = false;
  local_8 = param_3;
  bVar1 = FUN_0043681c(param_1);
  if ((bVar1) && (param_2 != *(HWND *)(param_1 + 100))) {
    FUN_0043271c(param_1);
    *(HWND *)(param_1 + 100) = param_2;
    FUN_004324a8(param_2,local_8,param_4,&local_10);
    BVar2 = ImageList_DragEnter(*(HWND *)(param_1 + 100),local_10,local_c);
    bVar3 = BVar2 != 0;
  }
  return bVar3;
}



void FUN_0043271c(int param_1)

{
  bool bVar1;
  
  bVar1 = FUN_0043681c(param_1);
  if ((bVar1) && (*(int *)(param_1 + 100) != 0)) {
    ImageList_DragLeave(*(HWND *)(param_1 + 100));
    *(undefined4 *)(param_1 + 100) = 0;
  }
  return;
}



bool FUN_00432740(int param_1,int param_2,int param_3)

{
  bool bVar1;
  BOOL BVar2;
  int local_14;
  int local_10;
  
  bVar1 = FUN_0043681c(param_1);
  if (bVar1) {
    FUN_004324a8(*(HWND *)(param_1 + 100),param_2,param_3,&local_14);
    BVar2 = ImageList_DragMove(local_14,local_10);
    bVar1 = BVar2 != 0;
  }
  else {
    bVar1 = false;
  }
  return bVar1;
}



void FUN_00432784(int param_1)

{
  bool bVar1;
  
  bVar1 = FUN_0043681c(param_1);
  if (bVar1) {
    ImageList_DragShowNolock(-1);
  }
  return;
}



void FUN_0043279c(int param_1)

{
  bool bVar1;
  
  bVar1 = FUN_0043681c(param_1);
  if (bVar1) {
    ImageList_DragShowNolock(0);
  }
  return;
}



bool FUN_004327b4(int param_1)

{
  bool bVar1;
  int iVar2;
  
  bVar1 = FUN_0043681c(param_1);
  if ((bVar1) && (*(char *)(param_1 + 0x62) != '\0')) {
    iVar2 = FUN_0043271c(param_1);
    ImageList_EndDrag();
    bVar1 = iVar2 != 0;
    *(undefined1 *)(param_1 + 0x62) = 0;
    FUN_00432614(param_1,-1);
    ShowCursor(-1);
  }
  else {
    bVar1 = false;
  }
  return bVar1;
}



int * FUN_004327fc(int *param_1,char param_2,int *param_3)

{
  int *piVar1;
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0042cf04(param_1,'\0',param_3);
  piVar1 = FUN_00417954((int *)PTR_PTR_004262cc,'\x01',extraout_ECX_00);
  param_1[0x7c] = (int)piVar1;
  FUN_00429b28(piVar1,(int)param_1);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



void FUN_00432958(int *param_1,char param_2,int param_3)

{
  int extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_00000000;
  undefined4 in_stack_fffffff0;
  undefined4 in_stack_fffffff4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_fffffff0,in_stack_fffffff4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  param_1[7] = param_3;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_00000000;
  }
  return;
}



int FUN_0043297c(int param_1)

{
  int iVar1;
  int iVar2;
  
  iVar2 = 0;
  for (iVar1 = *(int *)(param_1 + 8); iVar1 != 0; iVar1 = *(int *)(iVar1 + 0xc)) {
    iVar2 = iVar2 + 1;
  }
  return iVar2;
}



void FUN_00432990(int param_1)

{
  int *piVar1;
  int iVar2;
  
  iVar2 = param_1;
  if (param_1 != *(int *)(*(int *)(param_1 + 0x1c) + 100)) {
    iVar2 = *(int *)(param_1 + 0x14);
  }
  if (*(char *)(iVar2 + 0x10) != '\x01') {
    if (*(char *)(iVar2 + 0x10) == '\x02') {
      FUN_00432a20(param_1,'\x02');
    }
    else {
      piVar1 = FUN_0040aa10((int *)PTR_DAT_00407654,'\x01',(undefined4 *)0x0);
      FUN_004036ac(piVar1);
    }
    return;
  }
  FUN_00432a20(param_1,'\x01');
  return;
}



void FUN_004329d8(int param_1)

{
  int *piVar1;
  int iVar2;
  
  iVar2 = param_1;
  if (param_1 != *(int *)(*(int *)(param_1 + 0x1c) + 100)) {
    iVar2 = *(int *)(param_1 + 0x14);
  }
  if (*(char *)(iVar2 + 0x10) != '\x01') {
    if (*(char *)(iVar2 + 0x10) == '\x02') {
      FUN_00432a8c(param_1,'\x02');
    }
    else {
      piVar1 = FUN_0040aa10((int *)PTR_DAT_00407654,'\x01',(undefined4 *)0x0);
      FUN_004036ac(piVar1);
    }
    return;
  }
  FUN_00432a8c(param_1,'\x01');
  return;
}



undefined4 FUN_00432a20(int param_1,char param_2)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  undefined4 uStack_18;
  undefined4 uStack_14;
  
  iVar1 = param_1;
  while (iVar3 = iVar1, iVar3 != *(int *)(*(int *)(param_1 + 0x1c) + 100)) {
    iVar1 = *(int *)(iVar3 + 0x14);
    if ((param_2 == *(char *)(iVar1 + 0x10)) && (*(int *)(iVar3 + 0x18) != 0)) {
      return *(undefined4 *)(*(int *)(iVar3 + 0x18) + 0x20);
    }
  }
  piVar2 = *(int **)(*(int *)(param_1 + 0x1c) + 0x14);
  (**(code **)(*piVar2 + 0x40))(piVar2,&uStack_18);
  piVar2 = *(int **)(*(int *)(param_1 + 0x1c) + 0x14);
  (**(code **)(*piVar2 + 0x84))(piVar2,&uStack_18);
  if (param_2 == '\x01') {
    return uStack_14;
  }
  if (param_2 == '\x02') {
    return uStack_18;
  }
  return 0;
}



int FUN_00432a8c(int param_1,char param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  int iStack_1c;
  int iStack_18;
  int iStack_14;
  int iStack_10;
  
  if ((param_1 == *(int *)(*(int *)(param_1 + 0x1c) + 100)) ||
     (((iVar3 = *(int *)(*(int *)(param_1 + 0x1c) + 100), iVar2 = param_1,
       iVar3 == *(int *)(param_1 + 0x14) && (*(int *)(param_1 + 4) != 0)) &&
      (iVar3 = FUN_0043297c(iVar3), iVar3 == 1)))) {
    piVar1 = *(int **)(*(int *)(param_1 + 0x1c) + 0x14);
    (**(code **)(*piVar1 + 0x40))(piVar1,&iStack_1c);
    piVar1 = *(int **)(*(int *)(param_1 + 0x1c) + 0x14);
    (**(code **)(*piVar1 + 0x84))(piVar1,&iStack_1c);
    if (param_2 == '\x01') {
      iStack_10 = iStack_10 - iStack_18;
    }
    else {
      iStack_10 = iStack_14 - iStack_1c;
    }
  }
  else {
    do {
      iVar3 = iVar2;
      if (iVar3 == *(int *)(*(int *)(param_1 + 0x1c) + 100)) {
        iVar3 = *(int *)(*(int *)(param_1 + 0x1c) + 100);
        if (param_2 == *(char *)(iVar3 + 0x10)) {
          return *(int *)(*(int *)(param_1 + 0x1c) + 0x68);
        }
        return *(int *)(iVar3 + 0x20);
      }
      iVar2 = *(int *)(iVar3 + 0x14);
    } while (param_2 != *(char *)(*(int *)(iVar3 + 0x14) + 0x10));
    iStack_10 = FUN_00432990(iVar3);
    iStack_10 = *(int *)(iVar3 + 0x20) - iStack_10;
  }
  return iStack_10;
}



void FUN_00432b34(int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  
  if (*(char *)(param_1 + 0x10) == '\x01') {
    iVar2 = FUN_00432a8c(param_1,'\x01');
  }
  else {
    if (*(char *)(param_1 + 0x10) != '\x02') {
      return;
    }
    iVar2 = FUN_00432a8c(param_1,'\x02');
  }
  iVar1 = *(int *)(param_1 + 8);
  iVar3 = FUN_0043297c(param_1);
  iVar3 = iVar2 / iVar3;
  iVar4 = FUN_00432990(iVar1);
  *(int *)(iVar1 + 0x20) = iVar4 + iVar3;
  FUN_00432cb4(iVar1);
  for (iVar1 = *(int *)(iVar1 + 0xc); iVar1 != 0; iVar1 = *(int *)(iVar1 + 0xc)) {
    *(int *)(iVar1 + 0x20) = *(int *)(*(int *)(iVar1 + 0x18) + 0x20) + iVar3;
    if (*(int *)(iVar1 + 0xc) == 0) {
      *(int *)(iVar1 + 0x20) = *(int *)(iVar1 + 0x20) + iVar2 % iVar3;
    }
    FUN_00432cb4(iVar1);
  }
  return;
}



void FUN_00432bc4(int param_1,int *param_2)

{
  int *piVar1;
  
  FUN_00403bdc(param_2);
  if (*(int *)(param_1 + 4) != 0) {
    if (*(int *)(*(int *)(param_1 + 4) + 8) == 0) {
      piVar1 = FUN_0040aacc((int *)PTR_DAT_00407654,'\x01',(undefined4 *)PTR_PTR_0047571c);
      FUN_004036ac(piVar1);
    }
    FUN_00403c30(param_2,*(undefined4 **)(*(int *)(param_1 + 4) + 8));
  }
  return;
}



uint FUN_00432c08(int param_1,undefined4 param_2)

{
  uint uVar1;
  undefined4 uVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  int *local_c;
  undefined1 local_5;
  
  local_c = (int *)0x0;
  uVar1 = *(uint *)(param_1 + 0x1c);
  puStack_1c = (undefined1 *)0x432c2f;
  uVar2 = FUN_00403130(*(int **)(uVar1 + 0x14),param_2,&local_c);
  local_5 = local_c != (int *)0x0;
  if ((bool)local_5) {
    *(int *)(uVar1 + 0x38) = param_1;
    puStack_20 = &LAB_00432c79;
    uStack_24 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_24;
    uVar2 = 0;
    puStack_1c = &stack0xfffffffc;
    FUN_0042b8fc(local_c,*(int **)(uVar1 + 0x14),0,0);
    *in_FS_OFFSET = uVar2;
    *(undefined4 *)(uVar1 + 0x38) = 0;
    return uVar1;
  }
  return CONCAT31((int3)((uint)uVar2 >> 8),local_5);
}



undefined4 FUN_00432c8c(void)

{
  int iVar1;
  int in_stack_00000004;
  
  iVar1 = *(int *)(*(int *)(in_stack_00000004 + -4) + 0x14);
  while( true ) {
    if (iVar1 == 0) {
      return 0;
    }
    if (*(int *)(iVar1 + 0xc) != 0) break;
    iVar1 = *(int *)(iVar1 + 0x14);
  }
  return 1;
}



void FUN_00432cb4(int param_1)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  int iVar4;
  int iVar5;
  int *piVar6;
  int local_18 [4];
  int local_8;
  
  if ((*(int *)(param_1 + 4) != 0) && (*(int *)(*(int *)(param_1 + 0x1c) + 0x6c) == 0)) {
    *(undefined1 *)(*(int *)(param_1 + 4) + 0x8c) = *(undefined1 *)(*(int *)(param_1 + 0x14) + 0x10)
    ;
    local_8 = param_1;
    iVar1 = FUN_00432a8c(param_1,'\x02');
    iVar2 = FUN_00432a8c(local_8,'\x01');
    uVar3 = FUN_00432c8c();
    if ((char)uVar3 != '\0') {
      if (*(char *)(*(int *)(local_8 + 0x14) + 0x10) == '\x01') {
        iVar1 = iVar1 - *(int *)(*(int *)(local_8 + 0x1c) + 0xc);
      }
      else {
        iVar2 = iVar2 - *(int *)(*(int *)(local_8 + 0x1c) + 0xc);
      }
    }
    if (((*(int *)(local_8 + 0xc) != 0) ||
        (((*(int *)(local_8 + 0x14) != *(int *)(*(int *)(local_8 + 0x1c) + 100) &&
          (*(char *)(*(int *)(local_8 + 0x14) + 0x10) ==
           *(char *)(*(int *)(*(int *)(local_8 + 0x1c) + 100) + 0x10))) &&
         (*(int *)(local_8 + 0x20) < *(int *)(*(int *)(local_8 + 0x1c) + 0x68))))) ||
       ((iVar4 = *(int *)(*(int *)(local_8 + 0x1c) + 100),
        *(char *)(*(int *)(local_8 + 0x14) + 0x10) != *(char *)(iVar4 + 0x10) &&
        (*(int *)(local_8 + 0x20) < *(int *)(iVar4 + 0x20))))) {
      if (*(char *)(*(int *)(local_8 + 0x14) + 0x10) == '\x01') {
        iVar2 = iVar2 - *(int *)(*(int *)(local_8 + 0x1c) + 0xc);
      }
      else {
        iVar1 = iVar1 - *(int *)(*(int *)(local_8 + 0x1c) + 0xc);
      }
    }
    piVar6 = local_18;
    iVar4 = FUN_00432a20(local_8,'\x01');
    iVar5 = FUN_00432a20(local_8,'\x02');
    FUN_0040ea8c(iVar5,iVar4,iVar1,piVar6,iVar2);
    (**(code **)**(undefined4 **)(local_8 + 0x1c))
              (*(undefined4 **)(local_8 + 0x1c),*(undefined4 *)(local_8 + 4),local_18);
    FUN_0042a7e8(*(int **)(local_8 + 4),local_18);
  }
  return;
}



void FUN_00432e04(int *param_1,char param_2,int param_3)

{
  undefined1 uVar1;
  int iVar2;
  int *piVar3;
  undefined4 uVar4;
  int extraout_ECX;
  undefined4 extraout_ECX_00;
  int iVar5;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar6;
  undefined4 uStack_38;
  undefined1 *puStack_34;
  undefined1 *puStack_30;
  undefined4 in_stack_ffffffd4;
  undefined4 in_stack_ffffffd8;
  
  if (param_2 != '\0') {
    puStack_30 = (undefined1 *)0x432e19;
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffd4,in_stack_ffffffd8);
    param_3 = extraout_ECX;
  }
  puStack_30 = (undefined1 *)0x432e2c;
  FUN_00402f24(param_1,'\0',param_3);
  param_1[3] = 4;
  param_1[5] = param_3;
  param_1[0x1c] = 0x40000;
  param_1[6] = 0xc;
  if ((*(char *)(param_3 + 0x4b) == '\x01') || (*(char *)(param_3 + 0x4b) == '\x02')) {
    uVar1 = 0;
  }
  else {
    uVar1 = 1;
  }
  *(undefined1 *)(param_1 + 7) = uVar1;
  puStack_30 = (undefined1 *)0x432e7c;
  iVar2 = FUN_00432958((int *)PTR_LAB_00427cbc,'\x01',(int)param_1);
  param_1[0x19] = iVar2;
  puStack_30 = (undefined1 *)0x432e8e;
  piVar3 = FUN_00417658((int *)PTR_PTR_00415ba4,'\x01',extraout_ECX_00);
  param_1[4] = (int)piVar3;
  puStack_30 = (undefined1 *)0x432ea2;
  uVar4 = FUN_0041e5bc(0,0xffffff);
  puStack_30 = (undefined1 *)0x432eab;
  FUN_004177d8(piVar3,uVar4);
  puStack_30 = (undefined1 *)0x432eb3;
  FUN_00432fcc((int)param_1);
  puStack_34 = &LAB_00432f10;
  uStack_38 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_38;
  puStack_30 = &stack0xfffffffc;
  iVar2 = FUN_0042de00(param_3);
  if (-1 < iVar2 + -1) {
    iVar5 = 0;
    do {
      uVar6 = 0;
      uVar4 = FUN_0042ddc4(param_3,iVar5);
      (**(code **)(*param_1 + 8))(param_1,uVar4,3,uVar6);
      iVar5 = iVar5 + 1;
      iVar2 = iVar2 + -1;
    } while (iVar2 != 0);
  }
  FUN_00432b34(param_1[0x19]);
  *in_FS_OFFSET = uStack_38;
  puStack_30 = &LAB_00432f17;
  puStack_34 = (undefined1 *)0x432f0f;
  FUN_00432fd0((int)param_1);
  return;
}



void FUN_00432fcc(int param_1)

{
  *(int *)(param_1 + 0x6c) = *(int *)(param_1 + 0x6c) + 1;
  return;
}



void FUN_00432fd0(int param_1)

{
  *(int *)(param_1 + 0x6c) = *(int *)(param_1 + 0x6c) + -1;
  if (*(int *)(param_1 + 0x6c) < 1) {
    *(undefined4 *)(param_1 + 0x6c) = 0;
    FUN_004347b0(param_1);
  }
  return;
}



void FUN_00432fe4(int param_1,undefined4 param_2,int param_3,int param_4)

{
  int iVar1;
  undefined4 extraout_EDX;
  
  if (*(int *)(param_4 + -4) == *(int *)(param_1 + 4)) {
    *(int *)(param_4 + -8) = param_1;
    return;
  }
  if ((*(int *)(param_4 + -8) == 0) && (*(int *)(param_1 + 0xc) != 0)) {
    iVar1 = param_4;
    FUN_00432fe4(*(int *)(param_1 + 0xc),param_2,param_3,param_4);
    param_3 = iVar1;
    param_2 = extraout_EDX;
  }
  if ((*(int *)(param_4 + -8) == 0) && (*(int *)(param_1 + 8) != 0)) {
    FUN_00432fe4(*(int *)(param_1 + 8),param_2,param_3,param_4);
  }
  return;
}



undefined4 FUN_0043303c(int param_1,int param_2,int param_3)

{
  if ((param_2 != 0) && (*(int *)(param_1 + 100) != 0)) {
    FUN_00432fe4(*(int *)(param_1 + 100),0,param_3,(int)&stack0xfffffffc);
  }
  return 0;
}



void FUN_00433068(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int extraout_ECX;
  int iVar1;
  
  (**(code **)(param_4 + 8))(*(undefined4 *)(param_4 + 0xc),param_1);
  iVar1 = extraout_ECX;
  if (*(int *)(param_1 + 0xc) != 0) {
    iVar1 = param_4;
    FUN_00433068(*(int *)(param_1 + 0xc),param_4,extraout_ECX,param_4);
  }
  if (*(int *)(param_1 + 8) != 0) {
    FUN_00433068(*(int *)(param_1 + 8),param_4,iVar1,param_4);
  }
  return;
}



void FUN_004330a4(int param_1,int param_2,undefined4 param_3)

{
  if (param_2 == 0) {
    param_2 = *(int *)(param_1 + 100);
  }
  FUN_00433068(param_2,param_2,param_3,(int)&stack0xfffffffc);
  return;
}



void FUN_004330bc(int param_1,int param_2,undefined4 *param_3)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int *piVar5;
  byte bVar6;
  int local_1c [4];
  
  bVar6 = 0;
  piVar5 = local_1c;
  iVar1 = FUN_0043303c(param_1,param_2,(int)param_3);
  if (iVar1 == 0) {
    FUN_00402c14(param_3,0x10,0);
  }
  else {
    iVar2 = FUN_00432a8c(iVar1,'\x01');
    iVar3 = FUN_00432a8c(iVar1,'\x02');
    iVar4 = FUN_00432a20(iVar1,'\x01');
    iVar1 = FUN_00432a20(iVar1,'\x02');
    FUN_0040ea8c(iVar1,iVar4,iVar3,piVar5,iVar2);
    piVar5 = local_1c;
    for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {
      *param_3 = *piVar5;
      piVar5 = piVar5 + (uint)bVar6 * -2 + 1;
      param_3 = param_3 + (uint)bVar6 * -2 + 1;
    }
  }
  return;
}



void FUN_00433350(int param_1,int param_2,int param_3,char param_4,undefined1 param_5)

{
  uint uVar1;
  int iVar2;
  int iVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 uVar4;
  undefined4 extraout_ECX_03;
  
  iVar2 = FUN_00432958((int *)PTR_LAB_00427cbc,'\x01',param_1);
  *(undefined1 *)(iVar2 + 0x10) = param_5;
  if (param_3 == 0) {
    *(undefined4 *)(iVar2 + 0x20) = *(undefined4 *)(param_1 + 0x68);
    *(undefined4 *)(param_1 + 0x68) = *(undefined4 *)(*(int *)(param_1 + 100) + 0x20);
    *(undefined1 *)(param_1 + 0x48) = param_5;
    *(undefined4 *)(param_1 + 0x40) = 0;
    *(undefined4 *)(param_1 + 0x44) = 0x3fe00000;
    if (param_4 == '\0') {
      *(int *)(iVar2 + 8) = param_2;
      iVar3 = *(int *)(param_1 + 100);
      *(int *)(iVar3 + 0x14) = iVar2;
      *(int *)(iVar3 + 0x18) = param_2;
      *(int *)(param_2 + 0xc) = iVar3;
      *(int *)(param_2 + 0x14) = iVar2;
      *(int *)(param_1 + 100) = iVar2;
      FUN_004330a4(param_1,*(int *)(iVar2 + 8),extraout_ECX);
      uVar1 = *(uint *)(*(int *)(param_1 + 100) + 0x20);
      iVar3 = (int)uVar1 >> 1;
      if (iVar3 < 0) {
        iVar3 = iVar3 + (uint)((uVar1 & 1) != 0);
      }
      *(int *)(param_1 + 0x4c) = iVar3;
      FUN_004330a4(param_1,*(int *)(iVar2 + 8),extraout_ECX_01);
      uVar1 = *(uint *)(*(int *)(param_1 + 100) + 0x20);
      iVar3 = (int)uVar1 >> 1;
      if (iVar3 < 0) {
        iVar3 = iVar3 + (uint)((uVar1 & 1) != 0);
      }
      *(int *)(param_2 + 0x20) = iVar3;
      uVar4 = extraout_ECX_02;
    }
    else {
      *(undefined4 *)(iVar2 + 8) = *(undefined4 *)(param_1 + 100);
      iVar3 = *(int *)(param_1 + 100);
      *(int *)(iVar3 + 0x14) = iVar2;
      *(int *)(iVar3 + 0xc) = param_2;
      *(int *)(param_2 + 0x18) = iVar3;
      *(int *)(param_2 + 0x14) = iVar2;
      *(int *)(param_1 + 100) = iVar2;
      FUN_004330a4(param_1,*(int *)(iVar2 + 8),extraout_ECX);
      uVar4 = extraout_ECX_00;
    }
    FUN_004330a4(param_1,0,uVar4);
  }
  else {
    *(undefined4 *)(iVar2 + 0x20) = *(undefined4 *)(param_3 + 0x20);
    *(undefined4 *)(iVar2 + 0x14) = *(undefined4 *)(param_3 + 0x14);
    iVar3 = *(int *)(param_3 + 0x18);
    *(int *)(iVar2 + 0x18) = iVar3;
    if (iVar3 != 0) {
      *(int *)(iVar3 + 0xc) = iVar2;
    }
    iVar3 = *(int *)(param_3 + 0xc);
    *(int *)(iVar2 + 0xc) = iVar3;
    if (iVar3 != 0) {
      *(int *)(iVar3 + 0x18) = iVar2;
    }
    if (param_3 == *(int *)(*(int *)(iVar2 + 0x14) + 8)) {
      *(int *)(*(int *)(iVar2 + 0x14) + 8) = iVar2;
    }
    *(int *)(param_2 + 0x14) = iVar2;
    *(int *)(param_3 + 0x14) = iVar2;
    if (param_4 == '\0') {
      *(int *)(iVar2 + 8) = param_2;
      *(int *)(param_3 + 0x18) = param_2;
      *(undefined4 *)(param_3 + 0xc) = 0;
      *(int *)(param_2 + 0xc) = param_3;
    }
    else {
      *(int *)(iVar2 + 8) = param_3;
      *(undefined4 *)(param_3 + 0x18) = 0;
      *(int *)(param_3 + 0xc) = param_2;
      *(int *)(param_2 + 0x18) = param_3;
    }
  }
  FUN_00432b34(iVar2);
  FUN_004330a4(param_1,0,extraout_ECX_03);
  return;
}



void FUN_004334d8(int param_1,int param_2,int param_3,char param_4)

{
  int iVar1;
  
  if ((param_3 == 0) &&
     (param_3 = *(int *)(*(int *)(param_1 + 100) + 8), iVar1 = param_3, param_4 != '\0')) {
    do {
      param_3 = iVar1;
      iVar1 = *(int *)(param_3 + 0xc);
    } while (*(int *)(param_3 + 0xc) != 0);
  }
  if (param_4 == '\0') {
    *(int *)(param_2 + 0xc) = param_3;
    iVar1 = *(int *)(param_3 + 0x18);
    *(int *)(param_2 + 0x18) = iVar1;
    if (iVar1 != 0) {
      *(int *)(iVar1 + 0xc) = param_2;
    }
    *(int *)(param_3 + 0x18) = param_2;
    iVar1 = *(int *)(param_3 + 0x14);
    *(int *)(param_2 + 0x14) = iVar1;
    if (param_3 == *(int *)(iVar1 + 8)) {
      *(int *)(iVar1 + 8) = param_2;
    }
  }
  else {
    *(undefined4 *)(param_2 + 0x14) = *(undefined4 *)(param_3 + 0x14);
    *(int *)(param_2 + 0x18) = param_3;
    iVar1 = *(int *)(param_3 + 0xc);
    *(int *)(param_2 + 0xc) = iVar1;
    if (iVar1 != 0) {
      *(int *)(iVar1 + 0x18) = param_2;
    }
    *(int *)(param_3 + 0xc) = param_2;
  }
  FUN_00432b34(*(int *)(param_3 + 0x14));
  return;
}



void FUN_00433548(int param_1,int param_2,undefined4 param_3,int param_4)

{
  int iVar1;
  int iVar2;
  int extraout_ECX;
  int extraout_ECX_00;
  int extraout_ECX_01;
  int iVar3;
  int extraout_EDX;
  int extraout_EDX_00;
  int extraout_EDX_01;
  int extraout_EDX_02;
  
  if (*(char *)(*(int *)(param_1 + 0x14) + 0x10) == '\x01') {
    iVar1 = *(int *)(*(int *)(param_4 + -4) + 4);
    param_2 = *(int *)(param_1 + 0x20);
    if (iVar1 <= param_2) {
      iVar3 = *(int *)(param_4 + -8);
      param_2 = param_2 - *(int *)(iVar3 + 0xc);
      if (param_2 <= iVar1) {
        **(undefined4 **)(param_4 + -0xc) = 0x12;
        *(int *)(param_4 + -0x10) = param_1;
        goto LAB_00433712;
      }
    }
  }
  iVar3 = *(int *)(param_1 + 0x14);
  if (*(char *)(iVar3 + 0x10) == '\x02') {
    param_2 = *(int *)(param_1 + 0x20);
    if (**(int **)(param_4 + -4) <= param_2) {
      iVar3 = *(int *)(param_4 + -8);
      param_2 = param_2 - *(int *)(iVar3 + 0xc);
      if (param_2 <= **(int **)(param_4 + -4)) {
        **(undefined4 **)(param_4 + -0xc) = 0x12;
        *(int *)(param_4 + -0x10) = param_1;
        goto LAB_00433712;
      }
    }
  }
  if (*(int *)(param_1 + 4) != 0) {
    iVar1 = FUN_00432a20(param_1,'\x01');
    iVar2 = FUN_00432a20(param_1,'\x02');
    iVar3 = extraout_ECX;
    param_2 = extraout_EDX;
    if (*(char *)(*(int *)(param_4 + -8) + 0x1c) == '\0') {
      if (((iVar2 <= **(int **)(param_4 + -4)) &&
          (param_2 = *(int *)(param_4 + -8),
          **(int **)(param_4 + -4) <= iVar2 + *(int *)(param_2 + 0x18))) &&
         (iVar1 <= *(int *)(*(int *)(param_4 + -4) + 4))) {
        iVar2 = FUN_00432a8c(param_1,'\x01');
        iVar3 = extraout_ECX_01;
        param_2 = extraout_EDX_01;
        if (*(int *)(*(int *)(param_4 + -4) + 4) <= iVar1 + iVar2) {
          *(int *)(param_4 + -0x10) = param_1;
          param_2 = *(int *)(*(int *)(param_1 + 4) + 0x34) + 0xf;
          if (*(int *)(*(int *)(param_4 + -4) + 4) < param_2) {
            **(undefined4 **)(param_4 + -0xc) = 0x14;
          }
          else {
            **(undefined4 **)(param_4 + -0xc) = 2;
          }
        }
      }
    }
    else if (((iVar1 <= *(int *)(*(int *)(param_4 + -4) + 4)) &&
             (param_2 = *(int *)(param_4 + -8),
             *(int *)(*(int *)(param_4 + -4) + 4) <= iVar1 + *(int *)(param_2 + 0x18))) &&
            (iVar2 <= **(int **)(param_4 + -4))) {
      iVar1 = FUN_00432a8c(param_1,'\x02');
      iVar3 = extraout_ECX_00;
      param_2 = extraout_EDX_00;
      if (**(int **)(param_4 + -4) <= iVar2 + iVar1) {
        *(int *)(param_4 + -0x10) = param_1;
        param_2 = *(int *)(*(int *)(param_1 + 4) + 0x30) + *(int *)(*(int *)(param_1 + 4) + 0x38) +
                  -0xf;
        if (param_2 < **(int **)(param_4 + -4)) {
          **(undefined4 **)(param_4 + -0xc) = 0x14;
        }
        else {
          **(undefined4 **)(param_4 + -0xc) = 2;
        }
      }
    }
  }
LAB_00433712:
  if ((*(int *)(param_4 + -0x10) == 0) && (*(int *)(param_1 + 0xc) != 0)) {
    iVar1 = param_4;
    FUN_00433548(*(int *)(param_1 + 0xc),param_2,iVar3,param_4);
    iVar3 = iVar1;
    param_2 = extraout_EDX_02;
  }
  if ((*(int *)(param_4 + -0x10) == 0) && (*(int *)(param_1 + 8) != 0)) {
    FUN_00433548(*(int *)(param_1 + 8),param_2,iVar3,param_4);
  }
  return;
}



int * FUN_00433750(int *param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  POINT pt;
  int iVar1;
  int *piVar2;
  int *piVar3;
  BOOL BVar4;
  LONG LVar5;
  LONG LVar6;
  RECT local_1c;
  LONG local_c;
  LONG local_8;
  
  iVar1 = FUN_0042de00(*(int *)(*(int *)(param_4 + -8) + 0x14));
  iVar1 = iVar1 + -1;
  if (-1 < iVar1) {
    do {
      piVar2 = (int *)FUN_0042ddc4(*(int *)(*(int *)(param_4 + -8) + 0x14),iVar1);
      if ((*(char *)((int)piVar2 + 0x47) != '\0') &&
         ((piVar3 = FUN_004030cc(piVar2,(int)PTR_PTR_00427220), (char)piVar3 == '\0' ||
          ((char)piVar2[0x5a] != '\0')))) {
        FUN_0040ea58(*param_1 - piVar2[0xc],param_1[1] - piVar2[0xd],&local_c);
        LVar5 = local_c;
        LVar6 = local_8;
        (**(code **)(*piVar2 + 0x40))(piVar2,&local_1c);
        pt.y = LVar6;
        pt.x = LVar5;
        BVar4 = PtInRect(&local_1c,pt);
        if (BVar4 != 0) {
          return piVar2;
        }
      }
      iVar1 = iVar1 + -1;
    } while (iVar1 != -1);
  }
  return (int *)0x0;
}



int FUN_004337e4(int param_1,int *param_2,undefined4 *param_3)

{
  int *piVar1;
  int iVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined1 *puVar3;
  int local_14;
  
  puVar3 = &stack0xfffffffc;
  local_14 = 0;
  *param_3 = 0;
  piVar1 = FUN_00433750(param_2,0,param_3,(int)&stack0xfffffffc);
  if ((piVar1 == (int *)0x0) || (*(int *)(param_1 + 0x14) != piVar1[0x24])) {
    if (*(int *)(*(int *)(param_1 + 100) + 8) != 0) {
      iVar2 = FUN_0043297c(*(int *)(param_1 + 100));
      if ((0 < iVar2) && (piVar1 == (int *)0x0)) {
        FUN_00433548(*(int *)(*(int *)(param_1 + 100) + 8),extraout_EDX,extraout_ECX,
                     (int)&stack0xfffffffc);
      }
    }
  }
  else {
    local_14 = FUN_0043303c(param_1,(int)piVar1,(int)puVar3);
    if (local_14 != 0) {
      *param_3 = 1;
    }
  }
  return local_14;
}



void FUN_00433870(int *param_1,undefined4 param_2,uint param_3,int param_4)

{
  uint local_8;
  
  local_8 = param_3;
  FUN_00403bdc(param_1);
  (**(code **)(**(int **)(param_4 + -4) + 4))(*(int **)(param_4 + -4),&local_8,4);
  if (0 < (int)local_8) {
    FUN_00404190(param_1,local_8);
    (**(code **)(**(int **)(param_4 + -4) + 4))(*(int **)(param_4 + -4),*param_1,local_8);
  }
  return;
}



void FUN_004338b8(int param_1,int *param_2)

{
  undefined1 *puVar1;
  int *piVar2;
  uint uVar3;
  int *piVar4;
  undefined1 *extraout_ECX;
  undefined1 *extraout_ECX_00;
  undefined1 *extraout_ECX_01;
  undefined1 *puVar5;
  uint extraout_ECX_02;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 uVar6;
  undefined4 extraout_EDX_03;
  int iVar7;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar8;
  undefined4 uStack_3c;
  undefined1 *puStack_38;
  undefined1 *puStack_34;
  int local_24;
  int local_20;
  int local_1c;
  int local_18;
  int *local_14;
  int local_10;
  int local_c;
  int *local_8;
  
  puStack_34 = &stack0xfffffffc;
  local_10 = 0;
  puStack_38 = &LAB_00433ab0;
  uStack_3c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_3c;
  local_c = param_1;
  local_8 = param_2;
  FUN_00433f90(param_1,*(int **)(param_1 + 100),0);
  FUN_00432fcc(local_c);
  uVar8 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffffb8;
  (**(code **)(*local_8 + 4))(local_8,&local_20,4);
  (**(code **)(*local_8 + 4))(local_8,&local_24,4);
  if (-1 < local_24 + -1) {
    local_20 = 0;
    puVar5 = extraout_ECX;
    uVar6 = extraout_EDX;
    iVar7 = local_24;
    do {
      puVar1 = &stack0xfffffffc;
      FUN_00433870(&local_10,uVar6,(uint)puVar5,(int)&stack0xfffffffc);
      puVar5 = puVar1;
      uVar6 = extraout_EDX_00;
      if (local_10 != 0) {
        FUN_00403130(*(int **)(local_c + 0x14),local_10,&local_14);
        puVar5 = extraout_ECX_00;
        uVar6 = extraout_EDX_01;
        if (local_14 != (int *)0x0) {
          FUN_0042acd8(local_14,0,extraout_ECX_00);
          uVar8 = 0;
          FUN_0042b8fc(local_14,*(int **)(local_c + 0x14),0,0);
          puVar5 = extraout_ECX_01;
          uVar6 = extraout_EDX_02;
        }
      }
      local_20 = local_20 + 1;
      iVar7 = iVar7 + -1;
    } while (iVar7 != 0);
  }
  (**(code **)(*local_8 + 4))(local_8,local_c + 0x68,4);
  local_1c = 0;
  piVar4 = (int *)0x0;
LAB_00433995:
  do {
    (**(code **)(*local_8 + 4))(local_8,&local_18,4);
    if (local_18 == DAT_004747e4) {
      *in_FS_OFFSET = uVar8;
      FUN_00432fd0(local_c);
      return;
    }
    piVar2 = (int *)FUN_00432958((int *)PTR_LAB_00427cbc,'\x01',local_c);
    (**(code **)(*local_8 + 4))(local_8,piVar2 + 4,1);
    (**(code **)(*local_8 + 4))(local_8,piVar2 + 8,4);
    FUN_00433870(&local_10,extraout_EDX_03,extraout_ECX_02,(int)&stack0xfffffffc);
    if (local_10 != 0) {
      uVar3 = FUN_00432c08((int)piVar2,local_10);
      if ((char)uVar3 == '\0') {
        FUN_00402f54(piVar2);
        goto LAB_00433995;
      }
    }
    if (local_18 == 0) {
      *(int **)(local_c + 100) = piVar2;
    }
    else if (local_18 == local_1c) {
      piVar4[3] = (int)piVar2;
      piVar2[6] = (int)piVar4;
      piVar2[5] = piVar4[5];
    }
    else if (local_1c < local_18) {
      piVar4[2] = (int)piVar2;
      piVar2[5] = (int)piVar4;
    }
    else if (local_18 < local_1c) {
      local_1c = local_1c - local_18;
      if (0 < local_1c) {
        local_20 = 1;
        do {
          piVar4 = (int *)piVar4[5];
          local_20 = local_20 + 1;
          local_1c = local_1c + -1;
        } while (local_1c != 0);
      }
      piVar4[3] = (int)piVar2;
      piVar2[6] = (int)piVar4;
      piVar2[5] = piVar4[5];
    }
    local_1c = local_18;
    piVar4 = piVar2;
  } while( true );
}



void FUN_00433ac0(int param_1,int param_2,undefined4 param_3,int param_4)

{
  int iVar1;
  HDC pHVar2;
  tagRECT *ptVar3;
  UINT UVar4;
  UINT UVar5;
  tagRECT local_14;
  
  UVar5 = 0;
  UVar4 = 1;
  iVar1 = *(int *)(*(int *)(param_4 + -8) + 0x18);
  FUN_0040ea70(param_1,param_2,iVar1 + param_1 + -2,&local_14.left,iVar1 + param_2 + -2);
  ptVar3 = &local_14;
  pHVar2 = (HDC)FUN_004183d4(*(int **)(param_4 + -4));
  DrawFrameControl(pHVar2,ptVar3,UVar4,UVar5);
  return;
}



void FUN_00433b18(int param_1,int param_2,int param_3,int param_4,int param_5)

{
  FUN_00417520(*(int **)(*(int *)(param_5 + -4) + 0x10),0x80000014);
  FUN_00417f4c(*(int **)(param_5 + -4),param_3,param_2);
  FUN_00417eec(*(int **)(param_5 + -4),param_1,param_2);
  FUN_00417eec(*(int **)(param_5 + -4),param_1,param_4);
  FUN_00417520(*(int **)(*(int *)(param_5 + -4) + 0x10),0x80000010);
  FUN_00417eec(*(int **)(param_5 + -4),param_3,param_4);
  FUN_00417eec(*(int **)(param_5 + -4),param_3,param_2 + -1);
  return;
}



void FUN_00433ba0(int param_1,undefined4 param_2,undefined4 param_3,int *param_4)

{
  if ((byte)(*(char *)(*(int *)(param_1 + 0x14) + 0x4b) - 1U) < 2) {
    FUN_00433ac0(*param_4 + 1,param_4[1] + 1,param_3,(int)&stack0xfffffffc);
    FUN_00433b18(*param_4 + 3,param_4[1] + *(int *)(param_1 + 0x18) + 1,*param_4 + 5,param_4[3] + -2
                 ,(int)&stack0xfffffffc);
    FUN_00433b18(*param_4 + 6,param_4[1] + *(int *)(param_1 + 0x18) + 1,*param_4 + 8,param_4[3] + -2
                 ,(int)&stack0xfffffffc);
  }
  else {
    FUN_00433ac0((param_4[2] - *(int *)(param_1 + 0x18)) + 1,param_4[1] + 1,param_3,
                 (int)&stack0xfffffffc);
    FUN_00433b18(*param_4 + 2,param_4[1] + 3,(param_4[2] - *(int *)(param_1 + 0x18)) + -2,
                 param_4[1] + 5,(int)&stack0xfffffffc);
    FUN_00433b18(*param_4 + 2,param_4[1] + 6,(param_4[2] - *(int *)(param_1 + 0x18)) + -2,
                 param_4[1] + 8,(int)&stack0xfffffffc);
  }
  return;
}



void FUN_00433f5c(int *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  undefined4 uVar1;
  
  if ((int *)param_1[3] != (int *)0x0) {
    uVar1 = param_4;
    FUN_00433f5c((int *)param_1[3],param_4,param_3,param_4);
    param_3 = uVar1;
  }
  if ((int *)param_1[2] != (int *)0x0) {
    FUN_00433f5c((int *)param_1[2],param_4,param_3,param_4);
  }
  FUN_00402f54(param_1);
  return;
}



void FUN_00433f90(int param_1,int *param_2,undefined4 param_3)

{
  if (param_2 != (int *)0x0) {
    if ((int *)param_2[2] != (int *)0x0) {
      FUN_00433f5c((int *)param_2[2],param_2,param_3,&stack0xfffffffc);
    }
    if (param_2[6] == 0) {
      if (param_2[5] != 0) {
        *(int *)(param_2[5] + 8) = param_2[3];
      }
    }
    else {
      *(int *)(param_2[6] + 0xc) = param_2[3];
    }
    if (param_2[3] != 0) {
      *(int *)(param_2[3] + 0x18) = param_2[6];
    }
    if (param_2 == *(int **)(param_1 + 100)) {
      *(undefined4 *)(param_1 + 100) = 0;
    }
    FUN_00402f54(param_2);
  }
  return;
}



void FUN_00434028(int param_1,int *param_2)

{
  undefined1 *puVar1;
  int *piVar2;
  int iVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 uVar4;
  undefined4 extraout_ECX_02;
  undefined4 extraout_ECX_03;
  undefined4 unaff_ESI;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_2c;
  undefined1 *puStack_28;
  undefined1 *puStack_24;
  undefined4 *local_14;
  undefined4 *local_10;
  undefined4 *local_c;
  undefined4 *local_8;
  
  puStack_24 = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  local_c = (undefined4 *)0x0;
  local_10 = (undefined4 *)0x0;
  local_14 = (undefined4 *)0x0;
  puStack_28 = &LAB_0043427e;
  uStack_2c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_2c;
  puVar1 = &stack0xfffffffc;
  if (param_2 == (int *)0x0) {
    FUN_004054e4((undefined4 *)PTR_PTR_0047569c,(int *)&local_8);
    FUN_004054e4((undefined4 *)PTR_PTR_004755b4,(int *)&local_c);
    FUN_00403e64((int *)&local_8,local_c);
    piVar2 = FUN_0040aa10((int *)PTR_DAT_00407654,'\x01',local_8);
    FUN_004036ac(piVar2);
    puVar1 = puStack_24;
  }
  puStack_24 = puVar1;
  if (param_2[1] == 0) {
    FUN_004054e4((undefined4 *)PTR_PTR_0047569c,(int *)&local_10);
    puStack_24 = (undefined1 *)0x4340a9;
    FUN_004054e4((undefined4 *)PTR_PTR_00475808,(int *)&local_14);
    FUN_00403e64((int *)&local_10,local_14);
    piVar2 = FUN_0040aa10((int *)PTR_DAT_00407654,'\x01',local_10);
    FUN_004036ac(piVar2);
  }
  iVar3 = FUN_0043297c(param_2[5]);
  if (iVar3 == 1) {
    iVar3 = *(int *)(param_1 + 100);
    *(undefined4 *)(iVar3 + 8) = 0;
    *(undefined1 *)(iVar3 + 0x10) = 0;
  }
  else if (iVar3 == 2) {
    piVar2 = (int *)param_2[6];
    if (piVar2 == (int *)0x0) {
      piVar2 = (int *)param_2[3];
    }
    if (piVar2[1] == 0) {
      if (param_2[5] == *(int *)(param_1 + 100)) {
        piVar2[8] = *(int *)(param_1 + 0x68);
        *(undefined4 *)(param_1 + 0x68) = *(undefined4 *)(*(int *)(param_1 + 100) + 0x20);
        FUN_00402f54(*(int **)(param_1 + 100));
        *(int **)(param_1 + 100) = piVar2;
        piVar2[3] = 0;
        piVar2[6] = 0;
        piVar2[5] = 0;
        FUN_004347b0(param_1);
      }
      else {
        iVar3 = *(int *)(param_2[5] + 0x18);
        *(int *)(piVar2[2] + 0x18) = iVar3;
        if (iVar3 == 0) {
          *(int *)(*(int *)(param_2[5] + 0x14) + 8) = piVar2[2];
        }
        else {
          *(int *)(iVar3 + 0xc) = piVar2[2];
        }
        iVar3 = piVar2[2];
        *(undefined4 *)(iVar3 + 0x14) = *(undefined4 *)(param_2[5] + 0x14);
        do {
          iVar3 = *(int *)(iVar3 + 0xc);
          *(undefined4 *)(iVar3 + 0x14) = *(undefined4 *)(param_2[5] + 0x14);
        } while (*(int *)(iVar3 + 0xc) != 0);
        *(undefined4 *)(iVar3 + 0xc) = *(undefined4 *)(param_2[5] + 0xc);
        if (*(int *)(iVar3 + 0xc) != 0) {
          *(int *)(*(int *)(iVar3 + 0xc) + 0x18) = iVar3;
        }
        puStack_24 = &LAB_004347d8;
        puStack_28 = (undefined1 *)0x4341fe;
        FUN_004330a4(param_1,*(int *)(iVar3 + 0x14),extraout_ECX);
        FUN_00402f54((int *)param_2[5]);
        FUN_00402f54(piVar2);
      }
    }
    else {
      iVar3 = param_2[5];
      if (*(int *)(param_1 + 100) == iVar3) {
        *(int **)(*(int *)(param_1 + 100) + 8) = piVar2;
        piVar2[6] = 0;
        piVar2[3] = 0;
        iVar3 = FUN_004329d8(*(int *)(param_1 + 100));
        piVar2[8] = iVar3;
        FUN_00432cb4((int)piVar2);
        uVar4 = extraout_ECX_00;
      }
      else {
        *(undefined1 *)(iVar3 + 0x10) = 0;
        *(int *)(iVar3 + 4) = piVar2[1];
        *(undefined4 *)(iVar3 + 8) = 0;
        FUN_00402f54(piVar2);
        uVar4 = extraout_ECX_01;
      }
      puStack_24 = &LAB_004347d8;
      puStack_28 = (undefined1 *)0x434155;
      FUN_004330a4(param_1,param_2[5],uVar4);
    }
  }
  else {
    iVar3 = param_2[6];
    if (iVar3 == 0) {
      *(int *)(param_2[5] + 8) = param_2[3];
      iVar3 = param_2[3];
      *(undefined4 *)(iVar3 + 0x18) = 0;
      FUN_00432cb4(iVar3);
      uVar4 = extraout_ECX_02;
    }
    else {
      *(int *)(iVar3 + 0xc) = param_2[3];
      if (param_2[3] != 0) {
        *(int *)(param_2[3] + 0x18) = iVar3;
      }
      iVar3 = param_2[6];
      *(int *)(iVar3 + 0x20) = param_2[8];
      FUN_00432cb4(iVar3);
      uVar4 = extraout_ECX_03;
    }
    puStack_24 = &LAB_004347d8;
    puStack_28 = (undefined1 *)0x43425c;
    FUN_004330a4(param_1,param_2[5],uVar4);
  }
  FUN_00402f54(param_2);
  *in_FS_OFFSET = unaff_ESI;
  local_14 = (undefined4 *)&LAB_00434285;
  FUN_00403c00((int *)&local_14,4);
  return;
}



void FUN_00434394(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  int local_c;
  int local_8;
  
  puStack_14 = (undefined1 *)0x4343a6;
  local_8 = param_1;
  FUN_00404010(param_1);
  puStack_18 = &LAB_004343ff;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  puStack_14 = &stack0xfffffffc;
  local_c = FUN_00403e5c(local_8);
  (**(code **)(**(int **)(param_4 + -4) + 8))(*(int **)(param_4 + -4),&local_c,4);
  if (0 < local_c) {
    (**(code **)(**(int **)(param_4 + -4) + 8))(*(int **)(param_4 + -4),local_8,local_c);
  }
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_00434406;
  puStack_18 = (undefined1 *)0x4343fe;
  FUN_00403bdc(&local_8);
  return;
}



void FUN_0043440c(int param_1,int param_2,undefined4 param_3,int param_4)

{
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  int iVar1;
  int iVar2;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  int local_c;
  int local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_c = 0;
  puStack_1c = &LAB_004344bb;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  local_8 = param_2;
  (**(code **)(**(int **)(param_4 + -4) + 8))(*(int **)(param_4 + -4),&local_8,4);
  (**(code **)(**(int **)(param_4 + -4) + 8))(*(int **)(param_4 + -4),param_1 + 0x10,1);
  (**(code **)(**(int **)(param_4 + -4) + 8))(*(int **)(param_4 + -4),param_1 + 0x20,4);
  iVar1 = param_4;
  FUN_00432bc4(param_1,&local_c);
  FUN_00434394(local_c,extraout_EDX,extraout_ECX,iVar1);
  iVar2 = iVar1;
  if (*(int *)(param_1 + 8) != 0) {
    iVar2 = param_4;
    FUN_0043440c(*(int *)(param_1 + 8),local_8 + 1,iVar1,param_4);
  }
  if (*(int *)(param_1 + 0xc) != 0) {
    FUN_0043440c(*(int *)(param_1 + 0xc),local_8,iVar2,param_4);
  }
  *in_FS_OFFSET = uStack_20;
  puStack_18 = &LAB_004344c2;
  puStack_1c = (undefined1 *)0x4344ba;
  FUN_00403bdc(&local_c);
  return;
}



void FUN_00434610(int param_1,undefined4 param_2,int param_3,int param_4)

{
  int iVar1;
  
  if (param_1 != 0) {
    if ((*(int *)(param_1 + 0xc) == 0) && (param_1 != *(int *)(*(int *)(param_4 + -4) + 100))) {
      if (*(int *)(*(int *)(param_4 + -4) + 100) == *(int *)(param_1 + 0x14)) {
        *(undefined4 *)(param_1 + 0x20) = *(undefined4 *)(*(int *)(param_4 + -4) + 0x68);
      }
      else {
        *(undefined4 *)(param_1 + 0x20) =
             *(undefined4 *)(*(int *)(*(int *)(param_1 + 0x14) + 0x14) + 0x20);
      }
    }
    if (*(int *)(param_1 + 8) != 0) {
      iVar1 = param_4;
      FUN_00434610(*(int *)(param_1 + 8),param_4,param_3,param_4);
      param_3 = iVar1;
    }
    if (*(int *)(param_1 + 0xc) != 0) {
      FUN_00434610(*(int *)(param_1 + 0xc),param_4,param_3,param_4);
    }
  }
  return;
}



void FUN_00434678(int param_1,int param_2,int param_3)

{
  int iVar1;
  undefined1 *puVar2;
  
  puVar2 = &stack0xfffffffc;
  if (param_2 == 0) {
    param_2 = *(int *)(*(int *)(param_1 + 100) + 8);
  }
  FUN_00434610(param_2,param_2,param_3,(int)&stack0xfffffffc);
  iVar1 = **(int **)(param_1 + 0x14);
  (**(code **)(iVar1 + 0x74))(*(int **)(param_1 + 0x14),iVar1,puVar2);
  return;
}



void FUN_004346d8(int param_1,undefined4 param_2,undefined4 *param_3)

{
  undefined4 uVar1;
  undefined4 uVar2;
  HWND pHVar3;
  HDC pHVar4;
  
  uVar1 = *param_3;
  uVar2 = param_3[1];
  *(undefined4 *)(param_1 + 0x60) = param_2;
  pHVar3 = (HWND)FUN_00430e98(*(int **)(param_1 + 0x14));
  FUN_00435034(DAT_00476748,pHVar3);
  pHVar3 = (HWND)FUN_00430e98(*(int **)(param_1 + 0x14));
  *(HWND *)(param_1 + 0x5c) = pHVar3;
  pHVar4 = GetDCEx(pHVar3,(HRGN)0x0,0x412);
  *(HDC *)(param_1 + 0x58) = pHVar4;
  *(undefined4 *)(param_1 + 0x50) = uVar1;
  *(undefined4 *)(param_1 + 0x54) = uVar2;
  FUN_004347e8(param_1);
  return;
}



void FUN_00434738(int param_1)

{
  int iVar1;
  int extraout_ECX;
  undefined4 extraout_ECX_00;
  int iVar2;
  
  FUN_00435034(DAT_00476748,(HWND)0x0);
  FUN_004347e8(param_1);
  ReleaseDC(*(HWND *)(param_1 + 0x5c),*(HDC *)(param_1 + 0x58));
  iVar1 = *(int *)(param_1 + 0x60);
  if (*(char *)(*(int *)(iVar1 + 0x14) + 0x10) == '\x01') {
    iVar2 = (int)*(uint *)(param_1 + 0xc) >> 1;
    if (iVar2 < 0) {
      iVar2 = iVar2 + (uint)((*(uint *)(param_1 + 0xc) & 1) != 0);
    }
    *(int *)(iVar1 + 0x20) = iVar2 + *(int *)(param_1 + 0x54);
  }
  else {
    iVar2 = (int)*(uint *)(param_1 + 0xc) >> 1;
    if (iVar2 < 0) {
      iVar2 = iVar2 + (uint)((*(uint *)(param_1 + 0xc) & 1) != 0);
    }
    *(int *)(iVar1 + 0x20) = iVar2 + *(int *)(param_1 + 0x50);
  }
  FUN_00434678(param_1,*(int *)(*(int *)(param_1 + 0x60) + 0x14),extraout_ECX);
  FUN_004330a4(param_1,*(int *)(*(int *)(param_1 + 0x60) + 0x14),extraout_ECX_00);
  *(undefined4 *)(param_1 + 0x60) = 0;
  return;
}



void FUN_004347b0(int param_1)

{
  int iVar1;
  undefined4 extraout_ECX;
  
  if (*(int *)(param_1 + 0x6c) == 0) {
    iVar1 = FUN_0042f790(*(int *)(param_1 + 0x14));
    if (0 < iVar1) {
      FUN_004330a4(param_1,0,extraout_ECX);
    }
  }
  return;
}



void FUN_004347e8(int param_1)

{
  int iVar1;
  HGDIOBJ pvVar2;
  undefined4 local_18;
  undefined4 local_14;
  undefined4 local_10;
  undefined4 local_c;
  
  iVar1 = *(int *)(param_1 + 0x60);
  if (iVar1 != 0) {
    if (*(char *)(*(int *)(iVar1 + 0x14) + 0x10) == '\x01') {
      local_18 = FUN_00432a20(iVar1,'\x02');
      local_14 = (int)*(uint *)(param_1 + 0xc) >> 1;
      if (local_14 < 0) {
        local_14 = local_14 + (uint)((*(uint *)(param_1 + 0xc) & 1) != 0);
      }
      local_14 = *(int *)(param_1 + 0x54) - local_14;
      local_10 = FUN_00432a8c(*(int *)(param_1 + 0x60),'\x02');
      local_10 = local_10 + local_18;
      local_c = local_14 + *(int *)(param_1 + 0xc);
    }
    else {
      local_18 = (int)*(uint *)(param_1 + 0xc) >> 1;
      if (local_18 < 0) {
        local_18 = local_18 + (uint)((*(uint *)(param_1 + 0xc) & 1) != 0);
      }
      local_18 = *(int *)(param_1 + 0x50) - local_18;
      local_14 = FUN_00432a20(iVar1,'\x01');
      local_10 = local_18 + *(int *)(param_1 + 0xc);
      local_c = FUN_00432a8c(*(int *)(param_1 + 0x60),'\x01');
      local_c = local_c + local_14;
    }
    pvVar2 = (HGDIOBJ)FUN_00417838(*(int *)(param_1 + 0x10));
    pvVar2 = SelectObject(*(HDC *)(param_1 + 0x58),pvVar2);
    PatBlt(*(HDC *)(param_1 + 0x58),local_18,local_14,local_10 - local_18,local_c - local_14,
           0x5a0049);
    SelectObject(*(HDC *)(param_1 + 0x58),pvVar2);
  }
  return;
}



int FUN_004348d4(int param_1,int param_2)

{
  if (param_2 < param_1) {
    param_1 = param_2;
  }
  return param_1;
}



void FUN_004348dc(int param_1,undefined4 param_2,int param_3,int param_4)

{
  int iVar1;
  int extraout_ECX;
  
  if ((((param_1 != *(int *)(param_4 + -4)) &&
       (param_3 = *(int *)(*(int *)(param_4 + -4) + 0x14),
       *(char *)(*(int *)(param_1 + 0x14) + 0x10) == *(char *)(param_3 + 0x10))) &&
      (*(int *)(*(int *)(param_4 + -4) + 0x20) < *(int *)(param_1 + 0x20))) &&
     ((*(int *)(param_1 + 4) == 0 ||
      ((*(int *)(param_1 + 4) != 0 && (*(char *)(*(int *)(param_1 + 4) + 0x47) != '\0')))))) {
    iVar1 = FUN_004348d4(*(int *)(param_4 + -8),*(int *)(param_1 + 0x20));
    *(int *)(param_4 + -8) = iVar1;
    param_3 = extraout_ECX;
  }
  if (*(int *)(param_1 + 0xc) != 0) {
    iVar1 = param_4;
    FUN_004348dc(*(int *)(param_1 + 0xc),param_4,param_3,param_4);
    param_3 = iVar1;
  }
  if (*(int *)(param_1 + 8) != 0) {
    FUN_004348dc(*(int *)(param_1 + 8),param_4,param_3,param_4);
  }
  return;
}



int FUN_00434958(int param_1,int param_2,undefined4 param_3)

{
  undefined4 extraout_ECX;
  int local_c;
  
  if (*(int *)(param_2 + 0xc) == 0) {
    local_c = FUN_004329d8(param_2);
    local_c = local_c + *(int *)(param_2 + 0x20);
    param_3 = extraout_ECX;
  }
  else {
    local_c = *(int *)(*(int *)(param_2 + 0xc) + 0x20);
  }
  FUN_004348dc(*(int *)(*(int *)(param_1 + 100) + 8),param_2,param_3,(int)&stack0xfffffffc);
  return local_c;
}



undefined4 FUN_0043499c(int param_1,int param_2)

{
  int iVar1;
  undefined4 unaff_EBX;
  undefined4 uVar2;
  int local_24;
  int local_20;
  int local_1c;
  int local_18;
  int local_14;
  int local_10;
  int local_c;
  int local_8;
  undefined3 uVar3;
  
  uVar3 = (undefined3)((uint)unaff_EBX >> 8);
  uVar2 = CONCAT31(uVar3,4);
  if (param_2 != 0) {
    FUN_0042a7c8(param_1,&local_14);
    FUN_0042a7c8(param_2,&local_24);
    if (((local_20 < local_10) || (local_18 <= local_8)) || (local_c < local_1c)) {
      if (((local_24 < local_14) || (local_1c <= local_c)) || (local_8 < local_18)) {
        iVar1 = local_20 + local_18 >> 1;
        if (iVar1 < 0) {
          iVar1 = iVar1 + (uint)((local_20 + local_18 & 1U) != 0);
        }
        if (iVar1 <= local_10) {
          uVar2 = CONCAT31(uVar3,2);
        }
      }
      else {
        uVar2 = CONCAT31(uVar3,3);
      }
    }
    else {
      uVar2 = CONCAT31(uVar3,1);
    }
  }
  return uVar2;
}



void FUN_00434a18(int *param_1,int param_2,int param_3)

{
  int iVar1;
  undefined4 uVar2;
  undefined4 uStack_18;
  int local_14 [2];
  
  if ((char)param_3 == '\0') {
    (**(code **)(*param_1 + 0x18))(param_1,param_2);
  }
  else {
    iVar1 = FUN_0043303c((int)param_1,param_2,param_3);
    if (iVar1 == 0) {
      FUN_0040ea58(*(undefined4 *)(param_2 + 0x30),*(undefined4 *)(param_2 + 0x34),local_14);
      iVar1 = FUN_004337e4((int)param_1,local_14,&uStack_18);
      if (iVar1 == 0) {
        iVar1 = 0;
      }
      else {
        iVar1 = *(int *)(iVar1 + 4);
      }
      uVar2 = FUN_0043499c(param_2,iVar1);
      (**(code **)(*param_1 + 8))(param_1,param_2,uVar2,iVar1);
    }
  }
  return;
}



void FUN_00434a84(void)

{
  int iVar1;
  int iVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  int *piVar3;
  int in_stack_00000004;
  
  piVar3 = (int *)(in_stack_00000004 + -4);
  iVar1 = *(int *)(*piVar3 + 0x18);
  if (*(char *)(*(int *)(*(int *)(*piVar3 + 0x60) + 0x14) + 0x10) == '\x01') {
    iVar2 = FUN_00432a20(*(int *)(*piVar3 + 0x60),'\x01');
    if (*(int *)(*piVar3 + 0x54) <= iVar2 + iVar1) {
      *(int *)(*piVar3 + 0x54) = iVar2 + iVar1;
    }
    iVar2 = FUN_00434958(*piVar3,*(int *)(*piVar3 + 0x60),extraout_ECX);
    if (iVar2 - iVar1 <= *(int *)(*piVar3 + 0x54)) {
      *(int *)(*piVar3 + 0x54) = iVar2 - iVar1;
    }
  }
  else {
    iVar2 = FUN_00432a20(*(int *)(*piVar3 + 0x60),'\x02');
    if (*(int *)(*piVar3 + 0x50) <= iVar2 + iVar1) {
      *(int *)(*piVar3 + 0x50) = iVar2 + iVar1;
    }
    iVar2 = FUN_00434958(*piVar3,*(int *)(*piVar3 + 0x60),extraout_ECX_00);
    if (iVar2 - iVar1 <= *(int *)(*piVar3 + 0x50)) {
      *(int *)(*piVar3 + 0x50) = iVar2 - iVar1;
    }
  }
  return;
}



int * FUN_00434ef8(int *param_1,char param_2,undefined4 param_3)

{
  undefined1 uVar1;
  undefined4 extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00402f24(param_1,'\0',param_3);
  *(undefined1 *)(param_1 + 1) = 1;
  param_1[2] = 5;
  if (((*(int *)PTR_DAT_004758f8 == 2) && (3 < *(int *)PTR_DAT_00475680)) ||
     ((*(int *)PTR_DAT_004758f8 == 1 &&
      ((4 < *(int *)PTR_DAT_00475680 ||
       ((*(int *)PTR_DAT_00475680 == 4 && (9 < *(int *)PTR_DAT_004757f4)))))))) {
    uVar1 = 1;
  }
  else {
    uVar1 = 0;
  }
  *(undefined1 *)((int)param_1 + 0xd) = uVar1;
  FUN_0043505c((int)param_1,0);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_00434fb8(void)

{
  GetCapture();
  return;
}



void FUN_00434fc0(int param_1)

{
  int iVar1;
  
  iVar1 = (**(code **)PTR_DAT_00475690)();
  *(bool *)(param_1 + 0xc) = iVar1 != 0;
  return;
}



int FUN_00434fdc(int param_1)

{
  int iVar1;
  int iVar2;
  
  iVar1 = (**(code **)PTR_DAT_00475690)();
  iVar2 = -iVar1;
  *(bool *)(param_1 + 0x20) = iVar1 != 0;
  if (iVar1 != 0) {
    iVar2 = SystemParametersInfoA(0x68,0,(PVOID)(param_1 + 0x10),0);
  }
  return iVar2;
}



void FUN_0043500c(int param_1,undefined4 param_2,LRESULT param_3)

{
  HWND pHVar1;
  LRESULT LStack_8;
  
  LStack_8 = param_3;
  pHVar1 = FUN_004071ec((UINT *)(param_1 + 0x1c),(UINT *)(param_1 + 0x24),(UINT *)(param_1 + 0x14),
                        (LRESULT *)(param_1 + 0x10),&LStack_8);
  *(HWND *)(param_1 + 0x18) = pHVar1;
  *(bool *)(param_1 + 0x20) = *(int *)(param_1 + 0x1c) != 0;
  return;
}



void FUN_00435034(undefined4 param_1,HWND param_2)

{
  HWND pHVar1;
  
  pHVar1 = (HWND)FUN_00434fb8();
  if (param_2 != pHVar1) {
    if (param_2 == (HWND)0x0) {
      ReleaseCapture();
    }
    else {
      SetCapture(param_2);
    }
  }
  return;
}



void FUN_0043505c(int param_1,int param_2)

{
  LRESULT LVar1;
  LRESULT extraout_ECX;
  undefined4 extraout_EDX;
  
  if (param_2 == 0) {
    FUN_00434fc0(param_1);
    if (*(char *)(param_1 + 0xd) != '\0') {
      FUN_00434fdc(param_1);
      return;
    }
    FUN_0043500c(param_1,extraout_EDX,extraout_ECX);
  }
  else if ((param_2 == 0x68) && (*(char *)(param_1 + 0x20) != '\0')) {
    if (*(char *)(param_1 + 0xd) == '\0') {
      LVar1 = SendMessageA(*(HWND *)(param_1 + 0x18),*(UINT *)(param_1 + 0x14),0,0);
      *(LRESULT *)(param_1 + 0x10) = LVar1;
    }
    else {
      SystemParametersInfoA(0x68,0,(PVOID)(param_1 + 0x10),0);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_004350c0(void)

{
  UINT uMode;
  HMODULE hModule;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  
  if (PTR_DAT_004758fc[8] != '\0') {
    uMode = SetErrorMode(0x8000);
    uStack_18 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_18;
    if (DAT_0047678c == (FARPROC)0x0) {
      hModule = GetModuleHandleA(s_USER32_00435234);
      DAT_0047678c = GetProcAddress(hModule,s_WINNLSEnableIME_0043523c);
    }
    if (DAT_004747f0 == (HMODULE)0x0) {
      DAT_004747f0 = LoadLibraryA(s_IMM32_DLL_0043524c);
      if (DAT_004747f0 != (HMODULE)0x0) {
        DAT_00476790 = GetProcAddress(DAT_004747f0,s_ImmGetContext_00435258);
        DAT_00476794 = GetProcAddress(DAT_004747f0,s_ImmReleaseContext_00435268);
        DAT_00476798 = GetProcAddress(DAT_004747f0,s_ImmGetConversionStatus_0043527c);
        DAT_0047679c = GetProcAddress(DAT_004747f0,s_ImmSetConversionStatus_00435294);
        DAT_004767a0 = GetProcAddress(DAT_004747f0,s_ImmSetOpenStatus_004352ac);
        _DAT_004767a4 = GetProcAddress(DAT_004747f0,s_ImmSetCompositionWindow_004352c0);
        _DAT_004767a8 = GetProcAddress(DAT_004747f0,s_ImmSetCompositionFontA_004352d8);
        _DAT_004767ac = GetProcAddress(DAT_004747f0,s_ImmGetCompositionStringA_004352f0);
        DAT_004767b0 = GetProcAddress(DAT_004747f0,s_ImmIsIME_0043530c);
        _DAT_004767b4 = GetProcAddress(DAT_004747f0,s_ImmNotifyIME_00435318);
      }
    }
    *in_FS_OFFSET = uStack_18;
    uStack_18 = 0x435225;
    SetErrorMode(uMode);
    return;
  }
  return;
}



undefined4 FUN_00435328(void)

{
  undefined4 uVar1;
  
  if (DAT_0047678c != (code *)0x0) {
    uVar1 = (*DAT_0047678c)();
    return uVar1;
  }
  return 0;
}



void FUN_00435344(undefined4 param_1,char param_2)

{
  int iVar1;
  
  if ((PTR_DAT_004758fc[8] != '\0') && (param_2 != '\x03')) {
    if (param_2 == '\0') {
      FUN_00435328();
    }
    else {
      FUN_00435328();
      if (DAT_004747f0 != 0) {
        iVar1 = (*DAT_00476790)();
        if (iVar1 != 0) {
          (*DAT_00476798)();
          if (param_2 == '\x01') {
            (*DAT_004767a0)();
          }
          else if (param_2 == '\x02') {
            (*DAT_004767a0)();
          }
          else {
            (*DAT_004767a0)();
            (*DAT_00476798)();
          }
          (*DAT_0047679c)();
          (*DAT_00476794)();
        }
      }
    }
  }
  return;
}



undefined4 FUN_00435420(void)

{
  undefined4 uVar1;
  
  if (DAT_004747f0 != 0) {
    uVar1 = (*DAT_004767b0)();
    return uVar1;
  }
  return 0;
}



void FUN_00435434(void)

{
  FUN_00402f54(*(int **)PTR_DAT_004757c0);
  *(undefined4 *)PTR_DAT_004757c0 = 0;
  FUN_00402f54(*(int **)PTR_DAT_004758e0);
  *(undefined4 *)PTR_DAT_004758e0 = 0;
  FUN_00402f54(DAT_00476748);
  DAT_00476748 = (int *)0x0;
  FUN_00402f54(DAT_00476788);
  GlobalDeleteAtom(DAT_00476756);
  GlobalDeleteAtom(DAT_00476754);
  if (DAT_004747f0 != (HMODULE)0x0) {
    FreeLibrary(DAT_004747f0);
  }
  return;
}



int FUN_00435a08(int param_1)

{
  int iVar1;
  
  if (*(int *)(param_1 + 0x4c) != 0) {
    iVar1 = FUN_0040f544(*(int *)(*(int *)(param_1 + 0x4c) + 0x24),param_1);
    return iVar1;
  }
  return -1;
}



void FUN_00435a44(int *param_1,int *param_2,uint param_3)

{
  int *piVar1;
  int *piVar2;
  
  FUN_004148cc(param_1,param_2,param_3);
  piVar1 = (int *)param_2[0xb];
  piVar2 = FUN_004030cc(piVar1,(int)PTR_PTR_00435750);
  if ((char)piVar2 != '\0') {
    FUN_00435aec((int)param_1,(int)piVar1);
  }
  return;
}



void FUN_00435a78(int param_1,int param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  iVar3 = FUN_00435a08(param_1);
  if (-1 < iVar3) {
    piVar1 = *(int **)(*(int *)(param_1 + 0x4c) + 0x24);
    iVar2 = piVar1[2];
    if (param_2 < 0) {
      param_2 = 0;
    }
    if (iVar2 <= param_2) {
      param_2 = iVar2 + -1;
    }
    if (iVar3 != param_2) {
      FUN_0040f3d8(piVar1,iVar3);
      FUN_0040f564(*(int **)(*(int *)(param_1 + 0x4c) + 0x24),param_2,param_1);
    }
  }
  return;
}



void FUN_00435aec(int param_1,int param_2)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x4c);
  if (param_2 != iVar1) {
    if (iVar1 != 0) {
      FUN_00435dc8(iVar1,param_1);
    }
    if (param_2 != 0) {
      FUN_00435da8(param_2,param_1);
    }
  }
  return;
}



undefined4 FUN_00435b40(int param_1,undefined4 param_2,uint param_3)

{
  uint uVar1;
  LRESULT LVar2;
  uint extraout_ECX;
  
  if ((((*(int **)(param_1 + 0x4c) == (int *)0x0) ||
       (uVar1 = FUN_00403130(*(int **)(param_1 + 0x4c),param_1,param_3), param_3 = extraout_ECX,
       (char)uVar1 == '\0')) &&
      (uVar1 = FUN_00449f6c(*(int *)PTR_DAT_004757c0,param_1,param_3), (char)uVar1 == '\0')) &&
     (uVar1 = FUN_00414dc0(param_1), (char)uVar1 == '\0')) {
    LVar2 = FUN_00427fc8(0xb040,0,param_1);
    uVar1 = LVar2 - 1;
    if (uVar1 != 0) {
      return 0;
    }
  }
  return CONCAT31((int3)(uVar1 >> 8),1);
}



void FUN_00435cf0(int param_1,int *param_2,int param_3)

{
  int iVar1;
  
  iVar1 = FUN_0040f544(*(int *)(param_1 + 0x24),(int)param_2);
  if (-1 < iVar1) {
    iVar1 = FUN_004030e4(param_2,(int)PTR_PTR_0043562c);
    FUN_00435a78(iVar1,param_3);
  }
  return;
}



void FUN_00435d20(int param_1,int param_2)

{
  undefined4 extraout_ECX;
  
  if (*(int *)(param_1 + 0x2c) != 0) {
    FUN_00437690(*(int *)(param_1 + 0x2c),*(int *)(param_1 + 0x28));
  }
  *(int *)(param_1 + 0x2c) = param_2;
  if (param_2 != 0) {
    FUN_004376d4(param_2,*(int *)(param_1 + 0x28));
    FUN_00414540(*(int *)(param_1 + 0x2c),param_1,extraout_ECX);
  }
  return;
}



void FUN_00435d60(int param_1,int *param_2,char param_3)

{
  int *piVar1;
  
  FUN_0041478c(param_1,(int)param_2,param_3);
  if (param_3 == '\x01') {
    if (param_2 == *(int **)(param_1 + 0x2c)) {
      FUN_00435d20(param_1,0);
    }
    else {
      piVar1 = FUN_004030cc(param_2,(int)PTR_PTR_0043562c);
      if ((char)piVar1 != '\0') {
        FUN_00435dc8(param_1,(int)param_2);
      }
    }
  }
  return;
}



void FUN_00435da8(int param_1,int param_2)

{
  undefined4 extraout_ECX;
  
  FUN_0040f38c(*(int **)(param_1 + 0x24),param_2);
  *(int *)(param_2 + 0x4c) = param_1;
  FUN_00414540(param_2,param_1,extraout_ECX);
  return;
}



void FUN_00435dc8(int param_1,int param_2)

{
  int iVar1;
  
  iVar1 = FUN_0040f680(*(int **)(param_1 + 0x24),param_2);
  if (-1 < iVar1) {
    *(undefined4 *)(param_2 + 0x4c) = 0;
  }
  return;
}



void FUN_00435de4(int param_1)

{
  int *piVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  
  if (*(short *)(param_1 + 0x32) != 0) {
    (**(code **)(param_1 + 0x30))(*(undefined4 *)(param_1 + 0x34),param_1);
  }
  iVar3 = *(int *)(*(int *)(param_1 + 0x24) + 8);
  if (-1 < iVar3 + -1) {
    iVar4 = 0;
    do {
      piVar1 = (int *)FUN_0040f4e8(*(undefined4 **)(param_1 + 0x24),iVar4);
      (**(code **)(*piVar1 + 0x30))();
      iVar4 = iVar4 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  if ((*(byte *)(param_1 + 0x20) & 0x10) != 0) {
    piVar1 = *(int **)(param_1 + 4);
    piVar2 = FUN_004030cc(piVar1,(int)PTR_PTR_0043f2bc);
    if (((char)piVar2 != '\0') && (piVar1[0x8e] != 0)) {
      (**(code **)(*(int *)piVar1[0x8e] + 0xc))();
    }
  }
  return;
}



undefined4 FUN_00435e4c(int param_1,int param_2)

{
  byte bVar1;
  short sVar2;
  int iVar3;
  int *piVar4;
  undefined4 uVar5;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  int iVar6;
  int iVar7;
  
  bVar1 = FUN_0044088c(*(uint *)(param_2 + 8));
  sVar2 = FUN_00438c70(*(short *)(param_2 + 4),bVar1);
  iVar7 = *(int *)(*(int *)(param_1 + 0x24) + 8);
  if (-1 < iVar7 + -1) {
    iVar6 = 0;
    do {
      iVar3 = FUN_0040f4e8(*(undefined4 **)(param_1 + 0x24),iVar6);
      if (sVar2 == *(short *)(iVar3 + 0x68)) {
        piVar4 = (int *)FUN_0040f4e8(*(undefined4 **)(param_1 + 0x24),iVar6);
        uVar5 = FUN_00403130(piVar4,extraout_EDX,extraout_ECX);
        return uVar5;
      }
      iVar6 = iVar6 + 1;
      iVar7 = iVar7 + -1;
    } while (iVar7 != 0);
  }
  return 0;
}



void FUN_00435eec(int param_1)

{
  FUN_004030cc(*(int **)(param_1 + 0x10),(int)PTR_PTR_00435828);
  return;
}



void FUN_00435f00(int param_1)

{
  FUN_004030cc(*(int **)(param_1 + 0x10),(int)PTR_PTR_00435828);
  return;
}



void FUN_00435f14(int param_1)

{
  FUN_004030cc(*(int **)(param_1 + 0x10),(int)PTR_PTR_00435828);
  return;
}



void FUN_00435f28(int param_1)

{
  FUN_004030cc(*(int **)(param_1 + 0x10),(int)PTR_PTR_00435828);
  return;
}



void FUN_00435f3c(int param_1)

{
  FUN_004030cc(*(int **)(param_1 + 0x10),(int)PTR_PTR_00435828);
  return;
}



void FUN_00435f50(int param_1)

{
  FUN_004030cc(*(int **)(param_1 + 0x10),(int)PTR_PTR_00435828);
  return;
}



void FUN_00435f64(int param_1)

{
  FUN_004030cc(*(int **)(param_1 + 0x10),(int)PTR_PTR_00435828);
  return;
}



void FUN_00435f78(int param_1)

{
  FUN_004030cc(*(int **)(param_1 + 0x10),(int)PTR_PTR_00435828);
  return;
}



int * FUN_00435fac(int *param_1,char param_2,int *param_3)

{
  int *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00414d24(param_1,'\0',param_3);
  *(undefined1 *)(param_1 + 0x14) = 1;
  *(undefined1 *)((int)param_1 + 0x59) = 1;
  param_1[0x19] = -1;
  *(undefined1 *)((int)param_1 + 0x6a) = 1;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_004360a8(int *param_1,uint *param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  undefined1 in_ZF;
  
  FUN_00403f6c(param_2,(uint *)param_1[0x15]);
  if (!(bool)in_ZF) {
    iVar3 = *(int *)(param_1[0x10] + 8);
    if (-1 < iVar3 + -1) {
      iVar2 = 0;
      do {
        piVar1 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x10],iVar2);
        piVar1 = FUN_004030cc(piVar1,(int)PTR_LAB_0043591c);
        if ((char)piVar1 != '\0') {
          piVar1 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x10],iVar2);
          (**(code **)(*piVar1 + 0x40))(piVar1,param_2);
        }
        iVar2 = iVar2 + 1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
    FUN_00403c30(param_1 + 0x15,param_2);
    (**(code **)(*param_1 + 0x30))();
  }
  return;
}



void FUN_00436110(int *param_1,undefined4 param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  if ((char)param_2 != (char)param_1[0x16]) {
    iVar3 = *(int *)(param_1[0x10] + 8);
    if (-1 < iVar3 + -1) {
      iVar2 = 0;
      do {
        piVar1 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x10],iVar2);
        piVar1 = FUN_004030cc(piVar1,(int)PTR_LAB_0043591c);
        if ((char)piVar1 != '\0') {
          piVar1 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x10],iVar2);
          (**(code **)(*piVar1 + 0x44))(piVar1,param_2);
        }
        iVar2 = iVar2 + 1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
    *(char *)(param_1 + 0x16) = (char)param_2;
    (**(code **)(*param_1 + 0x30))();
  }
  return;
}



void FUN_00436168(int *param_1,undefined4 param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  if ((char)param_2 != *(char *)((int)param_1 + 0x59)) {
    iVar3 = *(int *)(param_1[0x10] + 8);
    if (-1 < iVar3 + -1) {
      iVar2 = 0;
      do {
        piVar1 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x10],iVar2);
        piVar1 = FUN_004030cc(piVar1,(int)PTR_LAB_0043591c);
        if ((char)piVar1 != '\0') {
          piVar1 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x10],iVar2);
          (**(code **)(*piVar1 + 0x48))(piVar1,param_2);
        }
        iVar2 = iVar2 + 1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
    *(char *)((int)param_1 + 0x59) = (char)param_2;
    (**(code **)(*param_1 + 0x30))();
  }
  return;
}



void FUN_004361c0(int *param_1,int param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  if (param_2 != param_1[0x17]) {
    iVar3 = *(int *)(param_1[0x10] + 8);
    if (-1 < iVar3 + -1) {
      iVar2 = 0;
      do {
        piVar1 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x10],iVar2);
        piVar1 = FUN_004030cc(piVar1,(int)PTR_LAB_0043591c);
        if ((char)piVar1 != '\0') {
          piVar1 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x10],iVar2);
          (**(code **)(*piVar1 + 0x4c))(piVar1,param_2);
        }
        iVar2 = iVar2 + 1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
    param_1[0x17] = param_2;
    (**(code **)(*param_1 + 0x30))();
  }
  return;
}



void FUN_00436218(int *param_1,uint *param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  undefined1 in_ZF;
  
  FUN_00403f6c(param_2,(uint *)param_1[0x18]);
  if (!(bool)in_ZF) {
    iVar3 = *(int *)(param_1[0x10] + 8);
    if (-1 < iVar3 + -1) {
      iVar2 = 0;
      do {
        piVar1 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x10],iVar2);
        piVar1 = FUN_004030cc(piVar1,(int)PTR_LAB_0043591c);
        if ((char)piVar1 != '\0') {
          piVar1 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x10],iVar2);
          (**(code **)(*piVar1 + 0x50))(piVar1,param_2);
        }
        iVar2 = iVar2 + 1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
    FUN_00403c30(param_1 + 0x18,param_2);
    (**(code **)(*param_1 + 0x30))();
  }
  return;
}



void FUN_00436280(int *param_1,int param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  if (param_2 != param_1[0x19]) {
    iVar3 = *(int *)(param_1[0x10] + 8);
    if (-1 < iVar3 + -1) {
      iVar2 = 0;
      do {
        piVar1 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x10],iVar2);
        piVar1 = FUN_004030cc(piVar1,(int)PTR_LAB_0043591c);
        if ((char)piVar1 != '\0') {
          piVar1 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x10],iVar2);
          (**(code **)(*piVar1 + 0x54))(piVar1,param_2);
        }
        iVar2 = iVar2 + 1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
    param_1[0x19] = param_2;
    (**(code **)(*param_1 + 0x30))();
  }
  return;
}



void FUN_004362d8(int *param_1,undefined4 param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  if ((short)param_2 != (short)param_1[0x1a]) {
    iVar3 = *(int *)(param_1[0x10] + 8);
    if (-1 < iVar3 + -1) {
      iVar2 = 0;
      do {
        piVar1 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x10],iVar2);
        piVar1 = FUN_004030cc(piVar1,(int)PTR_LAB_0043591c);
        if ((char)piVar1 != '\0') {
          piVar1 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x10],iVar2);
          (**(code **)(*piVar1 + 0x58))(piVar1,param_2);
        }
        iVar2 = iVar2 + 1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
    *(short *)(param_1 + 0x1a) = (short)param_2;
    (**(code **)(*param_1 + 0x30))();
  }
  return;
}



void FUN_00436334(int *param_1,undefined4 param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  if ((char)param_2 != *(char *)((int)param_1 + 0x6a)) {
    iVar3 = *(int *)(param_1[0x10] + 8);
    if (-1 < iVar3 + -1) {
      iVar2 = 0;
      do {
        piVar1 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x10],iVar2);
        piVar1 = FUN_004030cc(piVar1,(int)PTR_LAB_0043591c);
        if ((char)piVar1 != '\0') {
          piVar1 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x10],iVar2);
          (**(code **)(*piVar1 + 0x5c))(piVar1,param_2);
        }
        iVar2 = iVar2 + 1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
    *(char *)((int)param_1 + 0x6a) = (char)param_2;
    (**(code **)(*param_1 + 0x30))();
  }
  return;
}



void FUN_0043638c(int *param_1,uint *param_2)

{
  bool bVar1;
  undefined1 in_ZF;
  
  FUN_00403f6c((uint *)param_1[2],(uint *)param_1[0x15]);
  if (((bool)in_ZF) && ((param_1[1] == 0 || ((*(byte *)(param_1[1] + 0x20) & 1) == 0)))) {
    bVar1 = true;
  }
  else {
    bVar1 = false;
  }
  FUN_004149c4(param_1,param_2);
  if ((bVar1) && (*(int *)(param_1[0x10] + 8) == 0)) {
    FUN_004360a8(param_1,param_2);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0043641c(void)

{
  undefined4 uVar1;
  undefined4 *in_FS_OFFSET;
  undefined1 auStack_10 [12];
  
  uVar1 = *in_FS_OFFSET;
  *in_FS_OFFSET = auStack_10;
  _DAT_004767b8 = _DAT_004767b8 + 1;
  *in_FS_OFFSET = uVar1;
  return;
}



int FUN_00436618(uint param_1)

{
  int iVar1;
  
  iVar1 = FUN_00416b74(param_1);
  if (iVar1 == 0x1fffffff) {
    return -1;
  }
  if (iVar1 == 0x20000000) {
    iVar1 = -0x1000000;
  }
  return iVar1;
}



int FUN_00436638(int param_1)

{
  if (param_1 == -0x1000000) {
    param_1 = 0x20000000;
  }
  else if (param_1 == -1) {
    return 0x1fffffff;
  }
  return param_1;
}



int * FUN_004366a4(int *param_1,char param_2,int param_3,int param_4)

{
  int extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00414460(param_1,'\0',(int *)0x0);
  param_1[10] = param_3;
  param_1[9] = param_4;
  (**(code **)(*param_1 + 0x34))();
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



void FUN_004366f8(int *param_1,char param_2)

{
  int *piVar1;
  int iVar2;
  byte extraout_DL;
  
  piVar1 = FUN_004032b4(param_1,param_2);
  while (0 < (int)((undefined4 *)piVar1[0x10])[2]) {
    iVar2 = FUN_0040f5d0((undefined4 *)piVar1[0x10]);
    FUN_00437690((int)piVar1,iVar2);
  }
  FUN_00402f54((int *)piVar1[0x11]);
  FUN_00436a54(piVar1);
  FUN_00402f54((int *)piVar1[0x10]);
  piVar1[0x10] = 0;
  if ((int *)piVar1[0x12] != (int *)0x0) {
    FUN_00402f54((int *)piVar1[0x12]);
  }
  FUN_004144ac(piVar1,extraout_DL & 0xfc);
  if ('\0' < (char)extraout_DL) {
    FUN_004032a4(piVar1);
  }
  return;
}



void FUN_00436764(int *param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  int *piVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 uVar3;
  undefined4 extraout_ECX_01;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 uVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  undefined4 *local_8;
  
  puStack_10 = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  puStack_14 = &LAB_00436811;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  iVar1 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',param_3);
  param_1[0x10] = iVar1;
  if (((param_1[9] < 1) || (0x8000 < param_1[9])) ||
     (uVar3 = extraout_ECX, uVar4 = extraout_EDX, param_1[10] < 1)) {
    FUN_004054e4((undefined4 *)PTR_PTR_0047563c,(int *)&local_8);
    piVar2 = FUN_0040aa10((int *)PTR_DAT_0040dc48,'\x01',local_8);
    FUN_004036ac(piVar2);
    uVar3 = extraout_ECX_00;
    uVar4 = extraout_EDX_00;
  }
  param_1[0xb] = 4;
  *(undefined1 *)((int)param_1 + 0x35) = 1;
  FUN_00437614(param_1,CONCAT31((int3)((uint)uVar4 >> 8),2),uVar3);
  *(undefined1 *)((int)param_1 + 0x37) = 0;
  param_1[0xe] = 0x1fffffff;
  param_1[0xf] = 0x1fffffff;
  piVar2 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX_01);
  param_1[0x11] = (int)piVar2;
  FUN_00436830((int)param_1);
  *in_FS_OFFSET = local_8;
  FUN_00403bdc((int *)&local_8);
  return;
}



bool FUN_0043681c(int param_1)

{
  return *(int *)(param_1 + 0x30) != 0;
}



void FUN_00436824(int *param_1)

{
  if (param_1[0xc] == 0) {
    FUN_00436a88(param_1);
  }
  return;
}



void FUN_00436830(int param_1)

{
  HBITMAP pHVar1;
  int iVar2;
  undefined4 uVar3;
  undefined4 uVar4;
  int *piVar5;
  undefined4 *in_FS_OFFSET;
  RECT *pRVar6;
  undefined4 uVar7;
  RECT local_1c;
  HDC local_c;
  int local_8;
  
  local_8 = param_1;
  local_c = GetDC((HWND)0x0);
  uVar7 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffffd4;
  piVar5 = *(int **)(local_8 + 0x44);
  pHVar1 = CreateCompatibleBitmap(local_c,*(int *)(local_8 + 0x28),*(int *)(local_8 + 0x24));
  FUN_0041d3e0(piVar5,pHVar1);
  iVar2 = FUN_0041c784(piVar5);
  FUN_00417804(*(int **)(iVar2 + 0x14),0);
  uVar3 = (**(code **)(*piVar5 + 0x20))();
  pRVar6 = &local_1c;
  uVar4 = (**(code **)(*piVar5 + 0x2c))();
  FUN_0040ea70(0,0,uVar4,&pRVar6->left,uVar3);
  pRVar6 = &local_1c;
  piVar5 = (int *)FUN_0041c784(piVar5);
  FUN_00417eb0(piVar5,pRVar6);
  *in_FS_OFFSET = uVar7;
  ReleaseDC((HWND)0x0,local_c);
  return;
}



void FUN_004368f4(int param_1,HIMAGELIST param_2)

{
  int local_c;
  int local_8;
  
  local_8 = *(int *)(param_1 + 0x28);
  local_c = *(int *)(param_1 + 0x24);
  ImageList_GetIconSize(param_2,&local_8,&local_c);
  *(int *)(param_1 + 0x28) = local_8;
  *(int *)(param_1 + 0x24) = local_c;
  FUN_00436830(param_1);
  return;
}



void FUN_0043692c(int *param_1,int param_2)

{
  bool bVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  if (param_2 != param_1[10]) {
    param_1[10] = param_2;
    bVar1 = FUN_0043681c((int)param_1);
    if (bVar1) {
      ImageList_SetIconSize((HIMAGELIST)param_1[0xc],param_1[10],param_1[9]);
    }
    FUN_00436fe4(param_1);
    FUN_00436830((int)param_1);
    FUN_00403130(param_1,extraout_EDX,extraout_ECX);
  }
  return;
}



void FUN_00436970(int *param_1,int param_2)

{
  bool bVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  if (param_2 != param_1[9]) {
    param_1[9] = param_2;
    bVar1 = FUN_0043681c((int)param_1);
    if (bVar1) {
      ImageList_SetIconSize((HIMAGELIST)param_1[0xc],param_1[10],param_1[9]);
    }
    FUN_00436fe4(param_1);
    FUN_00436830((int)param_1);
    FUN_00403130(param_1,extraout_EDX,extraout_ECX);
  }
  return;
}



void FUN_004369b4(int *param_1,HIMAGELIST param_2)

{
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  FUN_00436a54(param_1);
  if (param_2 != (HIMAGELIST)0x0) {
    FUN_004368f4((int)param_1,param_2);
    param_1[0xc] = (int)param_2;
    FUN_00403130(param_1,extraout_EDX,extraout_ECX);
  }
  return;
}



int FUN_004369e0(int param_1,int param_2)

{
  int iVar1;
  
  if (param_2 != 0) {
    return param_2;
  }
  iVar1 = (**(code **)(**(int **)(param_1 + 0x44) + 0x60))();
  return iVar1;
}



int FUN_004369f0(int *param_1)

{
  FUN_00436824(param_1);
  return param_1[0xc];
}



void FUN_00436a00(int param_1,int *param_2,int *param_3)

{
  undefined4 uVar1;
  
  FUN_0043759c(param_1,param_2);
  if (param_2 == (int *)0x0) {
    (**(code **)(**(int **)(param_1 + 0x44) + 0x60))();
  }
  else {
    uVar1 = FUN_0041c7e8((int)param_2);
    if ((char)uVar1 == '\x01') {
      (**(code **)(*param_2 + 0x60))();
    }
    else {
      (**(code **)(*param_3 + 8))(param_3,param_2);
      (**(code **)(*param_3 + 0x68))(param_3,1);
      (**(code **)(*param_3 + 0x60))();
    }
  }
  return;
}



void FUN_00436a54(int *param_1)

{
  bool bVar1;
  HIMAGELIST himl;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 uVar2;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 uVar3;
  
  bVar1 = FUN_0043681c((int)param_1);
  uVar2 = extraout_ECX;
  uVar3 = extraout_EDX;
  if ((bVar1) && (*(char *)((int)param_1 + 0x36) == '\0')) {
    himl = (HIMAGELIST)FUN_004369f0(param_1);
    ImageList_Destroy(himl);
    uVar2 = extraout_ECX_00;
    uVar3 = extraout_EDX_00;
  }
  param_1[0xc] = 0;
  FUN_00403130(param_1,uVar3,uVar2);
  return;
}



void FUN_00436a88(int *param_1)

{
  HIMAGELIST p_Var1;
  int *piVar2;
  undefined4 unaff_ESI;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  undefined4 *local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  puStack_1c = &LAB_00436b17;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  p_Var1 = ImageList_Create(param_1[10],param_1[9],
                            *(uint *)(&DAT_004747fc + (uint)*(byte *)((int)param_1 + 0x35) * 4) |
                            0xfe,param_1[0xb],param_1[0xb]);
  param_1[0xc] = (int)p_Var1;
  if (p_Var1 == (HIMAGELIST)0x0) {
    FUN_004054e4((undefined4 *)PTR_PTR_004757cc,(int *)&local_8);
    piVar2 = FUN_0040aa10((int *)PTR_DAT_0040dc48,'\x01',local_8);
    FUN_004036ac(piVar2);
  }
  if (param_1[0xe] != 0x1fffffff) {
    FUN_00436ff0(param_1,param_1[0xe]);
  }
  *in_FS_OFFSET = unaff_ESI;
  local_8 = (undefined4 *)&LAB_00436b1e;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_00436b24(int *param_1,int *param_2,int *param_3)

{
  int *piVar1;
  int *piVar2;
  HBITMAP hbmMask;
  HBITMAP hbmImage;
  undefined4 extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_34;
  undefined1 *puStack_30;
  undefined1 *puStack_2c;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  
  puStack_20 = (undefined1 *)0x436b3f;
  piVar1 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',param_3);
  puStack_24 = &LAB_00436bd3;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  puStack_2c = (undefined1 *)0x436b5c;
  puStack_20 = &stack0xfffffffc;
  piVar2 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX);
  puStack_30 = &LAB_00436bb6;
  uStack_34 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_34;
  puStack_2c = &stack0xfffffffc;
  FUN_00436824(param_1);
  hbmMask = (HBITMAP)FUN_00436a00((int)param_1,param_3,piVar2);
  hbmImage = (HBITMAP)FUN_00436a00((int)param_1,param_2,piVar1);
  ImageList_Add((HIMAGELIST)param_1[0xc],hbmImage,hbmMask);
  *in_FS_OFFSET = uStack_34;
  puStack_2c = &LAB_00436bbd;
  puStack_30 = (undefined1 *)0x436bb5;
  FUN_00402f54(piVar2);
  return;
}



void FUN_00436bf0(int *param_1,int *param_2,int param_3)

{
  int *piVar1;
  int *piVar2;
  int iVar3;
  HBITMAP pHVar4;
  HBITMAP pHVar5;
  HIMAGELIST himl;
  undefined4 extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar6;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  
  puStack_20 = (undefined1 *)0x436c0b;
  piVar1 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',param_3);
  puStack_24 = &LAB_00436cef;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  if ((*(char *)((int)param_1 + 0x35) != '\0') && (param_3 != -1)) {
    puStack_20 = &stack0xfffffffc;
    piVar2 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX);
    uVar6 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffffcc;
    (**(code **)(*piVar2 + 8))(piVar2,param_2);
    FUN_0041d8ec(piVar2,param_3);
    FUN_00436824(param_1);
    iVar3 = (**(code **)(*piVar2 + 100))();
    pHVar4 = (HBITMAP)FUN_004369e0((int)param_1,iVar3);
    pHVar5 = (HBITMAP)FUN_00436a00((int)param_1,param_2,piVar1);
    ImageList_Add((HIMAGELIST)param_1[0xc],pHVar5,pHVar4);
    *in_FS_OFFSET = uVar6;
    FUN_00402f54(piVar2);
    return;
  }
  pHVar5 = (HBITMAP)0x0;
  puStack_20 = &stack0xfffffffc;
  pHVar4 = (HBITMAP)FUN_00436a00((int)param_1,param_2,piVar1);
  himl = (HIMAGELIST)FUN_004369f0(param_1);
  ImageList_Add(himl,pHVar4,pHVar5);
  *in_FS_OFFSET = uStack_28;
  puStack_20 = &LAB_00436cf6;
  puStack_24 = (undefined1 *)0x436cee;
  FUN_00402f54(piVar1);
  return;
}



int FUN_00436d0c(int *param_1)

{
  bool bVar1;
  HIMAGELIST himl;
  int iVar2;
  
  bVar1 = FUN_0043681c((int)param_1);
  if (bVar1) {
    himl = (HIMAGELIST)FUN_004369f0(param_1);
    iVar2 = ImageList_GetImageCount(himl);
    return iVar2;
  }
  return 0;
}



void FUN_00436d30(int *param_1,int param_2,int *param_3,int param_4)

{
  bool bVar1;
  int *piVar2;
  HDC pHVar3;
  HIMAGELIST p_Var4;
  HBITMAP hbmMask;
  HBITMAP hbmImage;
  BOOL BVar5;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 uVar6;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 uVar7;
  undefined4 unaff_EBX;
  undefined4 *in_FS_OFFSET;
  int iVar8;
  int iVar9;
  int iVar10;
  UINT UVar11;
  undefined4 uStack_54;
  undefined1 *puStack_50;
  undefined1 *puStack_4c;
  undefined4 uStack_48;
  undefined1 *puStack_44;
  undefined1 *puStack_40;
  undefined1 *puStack_3c;
  undefined1 *puStack_38;
  undefined1 *puStack_34;
  undefined4 uStack_30;
  undefined1 *puStack_2c;
  undefined1 *puStack_28;
  undefined4 *local_1c;
  undefined4 *local_18;
  int *local_14;
  int *local_10;
  int local_c;
  int *local_8;
  
  puStack_28 = &stack0xfffffffc;
  local_1c = (undefined4 *)0x0;
  local_18 = (undefined4 *)0x0;
  puStack_2c = &LAB_00436f47;
  uStack_30 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_30;
  puStack_34 = (undefined1 *)0x436d5d;
  local_8 = param_1;
  bVar1 = FUN_0043681c((int)param_1);
  uVar6 = extraout_ECX;
  uVar7 = extraout_EDX;
  if (bVar1) {
    puStack_34 = (undefined1 *)0x436d6f;
    FUN_0043759c((int)local_8,param_3);
    puStack_34 = (undefined1 *)0x436d7c;
    local_c = FUN_00436bf0(local_8,param_3,param_4);
    if (local_c != -1) {
      puStack_38 = &LAB_00436ef8;
      puStack_3c = (undefined1 *)*in_FS_OFFSET;
      *in_FS_OFFSET = &puStack_3c;
      puStack_40 = (undefined1 *)0x436da3;
      puStack_34 = &stack0xfffffffc;
      local_10 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX_00);
      puStack_44 = &LAB_00436ed8;
      uStack_48 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack_48;
      puStack_4c = (undefined1 *)0x436dc2;
      puStack_40 = &stack0xfffffffc;
      (**(code **)(*local_10 + 0x34))(local_10,local_8[9]);
      puStack_4c = (undefined1 *)0x436dd0;
      (**(code **)(*local_10 + 0x40))(local_10,local_8[10]);
      puStack_4c = (undefined1 *)0x436ddc;
      local_14 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX_01);
      puStack_50 = &LAB_00436ebb;
      uStack_54 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack_54;
      puStack_4c = &stack0xfffffffc;
      FUN_0041d630(local_14,1);
      (**(code **)(*local_14 + 0x34))(local_14,local_8[9]);
      (**(code **)(*local_14 + 0x40))(local_14,local_8[10]);
      UVar11 = 0;
      iVar10 = 0;
      iVar9 = 0;
      piVar2 = (int *)FUN_0041c784(local_10);
      pHVar3 = (HDC)FUN_004183d4(piVar2);
      iVar8 = local_c;
      p_Var4 = (HIMAGELIST)FUN_004369f0(local_8);
      ImageList_Draw(p_Var4,iVar8,pHVar3,iVar9,iVar10,UVar11);
      UVar11 = 0x10;
      iVar10 = 0;
      iVar9 = 0;
      piVar2 = (int *)FUN_0041c784(local_14);
      pHVar3 = (HDC)FUN_004183d4(piVar2);
      iVar8 = local_c;
      p_Var4 = (HIMAGELIST)FUN_004369f0(local_8);
      ImageList_Draw(p_Var4,iVar8,pHVar3,iVar9,iVar10,UVar11);
      hbmMask = (HBITMAP)(**(code **)(*local_14 + 0x60))();
      hbmImage = (HBITMAP)(**(code **)(*local_10 + 0x60))();
      p_Var4 = (HIMAGELIST)FUN_004369f0(local_8);
      BVar5 = ImageList_Replace(p_Var4,param_2,hbmImage,hbmMask);
      if (BVar5 == 0) {
        FUN_004054e4((undefined4 *)PTR_PTR_004755f8,(int *)&local_18);
        piVar2 = FUN_0040aa10((int *)PTR_DAT_0040dc48,'\x01',local_18);
        FUN_004036ac(piVar2);
      }
      *in_FS_OFFSET = puStack_44;
      puStack_3c = &LAB_00436ec2;
      puStack_40 = (undefined1 *)0x436eba;
      FUN_00402f54(local_14);
      return;
    }
    puStack_34 = (undefined1 *)0x436f0c;
    FUN_004054e4((undefined4 *)PTR_PTR_004755f8,(int *)&local_1c);
    puStack_34 = (undefined1 *)0x436f1b;
    piVar2 = FUN_0040aa10((int *)PTR_DAT_0040dc48,'\x01',local_1c);
    puStack_34 = (undefined1 *)0x436f20;
    FUN_004036ac(piVar2);
    uVar6 = extraout_ECX_02;
    uVar7 = extraout_EDX_00;
  }
  FUN_00403130(local_8,uVar7,uVar6);
  *in_FS_OFFSET = unaff_EBX;
  local_18 = (undefined4 *)&LAB_00436f4e;
  local_1c = (undefined4 *)0x436f46;
  FUN_00403c00((int *)&local_1c,2);
  return;
}



void FUN_00436f58(int *param_1,int param_2)

{
  bool bVar1;
  int iVar2;
  int *piVar3;
  HIMAGELIST himl;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 uVar4;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 uVar5;
  undefined4 unaff_EBX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY_1c;
  undefined1 *puStackY_18;
  undefined4 *local_8;
  
  local_8 = (undefined4 *)0x0;
  puStackY_18 = &LAB_00436fd7;
  uStackY_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY_1c;
  iVar2 = FUN_00436d0c(param_1);
  if (iVar2 <= param_2) {
    FUN_004054e4((undefined4 *)PTR_PTR_0047564c,(int *)&local_8);
    piVar3 = FUN_0040aa10((int *)PTR_DAT_0040dc48,'\x01',local_8);
    FUN_004036ac(piVar3);
  }
  bVar1 = FUN_0043681c((int)param_1);
  uVar4 = extraout_ECX;
  uVar5 = extraout_EDX;
  if (bVar1) {
    himl = (HIMAGELIST)FUN_004369f0(param_1);
    puStackY_18 = (undefined1 *)0x436fb6;
    ImageList_Remove(himl,param_2);
    uVar4 = extraout_ECX_00;
    uVar5 = extraout_EDX_00;
  }
  FUN_00403130(param_1,uVar5,uVar4);
  *in_FS_OFFSET = unaff_EBX;
  local_8 = (undefined4 *)0x436fd6;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_00436fe4(int *param_1)

{
  FUN_00436f58(param_1,-1);
  return;
}



void FUN_00436ff0(int *param_1,uint param_2)

{
  bool bVar1;
  COLORREF clrBk;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 uVar2;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 uVar3;
  
  bVar1 = FUN_0043681c((int)param_1);
  if (bVar1) {
    clrBk = FUN_00436618(param_2);
    ImageList_SetBkColor((HIMAGELIST)param_1[0xc],clrBk);
    uVar2 = extraout_ECX_00;
    uVar3 = extraout_EDX_00;
  }
  else {
    param_1[0xe] = param_2;
    uVar2 = extraout_ECX;
    uVar3 = extraout_EDX;
  }
  FUN_00403130(param_1,uVar3,uVar2);
  return;
}



int FUN_00437028(int *param_1)

{
  bool bVar1;
  HIMAGELIST himl;
  COLORREF CVar2;
  int iVar3;
  
  bVar1 = FUN_0043681c((int)param_1);
  if (bVar1) {
    himl = (HIMAGELIST)FUN_004369f0(param_1);
    CVar2 = ImageList_GetBkColor(himl);
    iVar3 = FUN_00436638(CVar2);
    return iVar3;
  }
  return param_1[0xe];
}



void FUN_00437050(int *param_1,int param_2,int *param_3,char param_4,UINT param_5,int param_6,
                 int param_7)

{
  bool bVar1;
  COLORREF CVar2;
  uint uVar3;
  COLORREF CVar4;
  HDC pHVar5;
  HIMAGELIST p_Var6;
  int *piVar7;
  int iVar8;
  undefined4 extraout_ECX;
  int iVar9;
  int dx;
  int iVar10;
  int dy;
  RECT *pRVar11;
  UINT fStyle;
  RECT local_2c;
  undefined4 local_1c [4];
  HDC local_c;
  int local_8;
  
  local_8 = param_2;
  bVar1 = FUN_0043681c((int)param_1);
  if (bVar1) {
    if (param_4 == '\0') {
      if (param_1[0x12] == 0) {
        piVar7 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX);
        param_1[0x12] = (int)piVar7;
        FUN_0041d630(piVar7,1);
        (**(code **)(*piVar7 + 0x40))(piVar7,param_1[10]);
        (**(code **)(*piVar7 + 0x34))(piVar7,param_1[9]);
      }
      iVar8 = FUN_0041c784((int *)param_1[0x12]);
      FUN_00417804(*(int **)(iVar8 + 0x14),0xffffff);
      FUN_0040ea70(0,0,param_1[10],&local_2c.left,param_1[9]);
      pRVar11 = &local_2c;
      piVar7 = (int *)FUN_0041c784((int *)param_1[0x12]);
      FUN_00417eb0(piVar7,pRVar11);
      fStyle = 0;
      CVar4 = 0;
      CVar2 = 0xff000000;
      dy = 0;
      dx = 0;
      iVar10 = 0;
      iVar9 = 0;
      piVar7 = (int *)FUN_0041c784((int *)param_1[0x12]);
      pHVar5 = (HDC)FUN_004183d4(piVar7);
      iVar8 = local_8;
      p_Var6 = (HIMAGELIST)FUN_004369f0(param_1);
      ImageList_DrawEx(p_Var6,iVar8,pHVar5,iVar9,iVar10,dx,dy,CVar2,CVar4,fStyle);
      FUN_0040ea70(param_7,param_6,param_7 + param_1[10],local_1c,param_6 + param_1[9]);
      piVar7 = (int *)FUN_0041c784((int *)param_1[0x12]);
      local_c = (HDC)FUN_004183d4(piVar7);
      FUN_00417804((int *)param_3[5],0x80000014);
      pHVar5 = (HDC)FUN_004183d4(param_3);
      SetTextColor(pHVar5,0xffffff);
      SetBkColor(pHVar5,0);
      BitBlt(pHVar5,param_7 + 1,param_6 + 1,param_1[10],param_1[9],local_c,0,0,0xe20746);
      FUN_00417804((int *)param_3[5],0x80000010);
      pHVar5 = (HDC)FUN_004183d4(param_3);
      SetTextColor(pHVar5,0xffffff);
      SetBkColor(pHVar5,0);
      BitBlt(pHVar5,param_7,param_6,param_1[10],param_1[9],local_c,0,0,0xe20746);
    }
    else {
      CVar2 = FUN_00436618(param_1[0xf]);
      uVar3 = FUN_00437028(param_1);
      CVar4 = FUN_00436618(uVar3);
      iVar10 = 0;
      iVar9 = 0;
      pHVar5 = (HDC)FUN_004183d4(param_3);
      iVar8 = local_8;
      p_Var6 = (HIMAGELIST)FUN_004369f0(param_1);
      ImageList_DrawEx(p_Var6,iVar8,pHVar5,param_7,param_6,iVar9,iVar10,CVar4,CVar2,param_5);
    }
  }
  return;
}



void FUN_00437228(int *param_1,undefined4 param_2,undefined4 param_3,undefined1 param_4,
                 undefined4 param_5,undefined4 param_6)

{
  bool bVar1;
  
  bVar1 = FUN_0043681c((int)param_1);
  if (bVar1) {
    (**(code **)(*param_1 + 0x30))
              (param_1,param_5,param_2,
               CONCAT31((int3)((*(uint *)(&DAT_00474804 + (uint)*(byte *)(param_1 + 0xd) * 4) |
                               *(uint *)(&DAT_00474814 + (uint)*(byte *)((int)param_1 + 0x37) * 4))
                              >> 8),param_4),
               *(uint *)(&DAT_00474804 + (uint)*(byte *)(param_1 + 0xd) * 4) |
               *(uint *)(&DAT_00474814 + (uint)*(byte *)((int)param_1 + 0x37) * 4),param_6,param_3);
  }
  return;
}



void FUN_00437274(int *param_1,HIMAGELIST param_2)

{
  int iVar1;
  int *piVar2;
  HDC pHVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  int i;
  undefined4 *in_FS_OFFSET;
  int iVar4;
  int iVar5;
  UINT UVar6;
  undefined4 uStack_54;
  undefined1 *puStack_50;
  undefined1 *puStack_4c;
  undefined4 uStack_48;
  undefined1 *puStack_44;
  undefined1 *puStack_40;
  undefined4 uStack_3c;
  RECT local_24;
  int *local_14;
  int *local_10;
  HIMAGELIST local_c;
  int *local_8;
  
  uStack_3c = 0x43729d;
  local_c = param_2;
  local_8 = param_1;
  FUN_0040ea70(0,0,param_1[10],&local_24.left,param_1[9]);
  FUN_00437ce4((int)local_8);
  uStack_3c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_3c;
  puStack_40 = (undefined1 *)0x4372bf;
  local_10 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX);
  puStack_44 = &LAB_004373df;
  uStack_48 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_48;
  puStack_4c = (undefined1 *)0x4372de;
  puStack_40 = &stack0xfffffffc;
  (**(code **)(*local_10 + 0x34))(local_10,local_8[9]);
  puStack_4c = (undefined1 *)0x4372ec;
  (**(code **)(*local_10 + 0x40))(local_10,local_8[10]);
  puStack_4c = (undefined1 *)0x4372f8;
  local_14 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX_00);
  puStack_50 = &LAB_004373c2;
  uStack_54 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_54;
  puStack_4c = &stack0xfffffffc;
  FUN_0041d630(local_14,1);
  (**(code **)(*local_14 + 0x34))(local_14,local_8[9]);
  (**(code **)(*local_14 + 0x40))(local_14,local_8[10]);
  iVar1 = ImageList_GetImageCount(local_c);
  if (-1 < iVar1 + -1) {
    i = 0;
    do {
      piVar2 = (int *)FUN_0041c784(local_10);
      FUN_00417eb0(piVar2,&local_24);
      UVar6 = 0;
      iVar5 = 0;
      iVar4 = 0;
      pHVar3 = (HDC)FUN_004183d4(piVar2);
      ImageList_Draw(local_c,i,pHVar3,iVar4,iVar5,UVar6);
      piVar2 = (int *)FUN_0041c784(local_14);
      FUN_00417eb0(piVar2,&local_24);
      UVar6 = 0x10;
      iVar5 = 0;
      iVar4 = 0;
      pHVar3 = (HDC)FUN_004183d4(piVar2);
      ImageList_Draw(local_c,i,pHVar3,iVar4,iVar5,UVar6);
      FUN_00436b24(local_8,local_10,local_14);
      i = i + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  *in_FS_OFFSET = uStack_54;
  puStack_4c = &LAB_004373c9;
  puStack_50 = (undefined1 *)0x4373c1;
  FUN_00402f54(local_14);
  return;
}



void FUN_0043740c(int *param_1,int *param_2)

{
  HIMAGELIST p_Var1;
  
  if (param_2 != (int *)0x0) {
    p_Var1 = (HIMAGELIST)FUN_004369f0(param_2);
    FUN_00437274(param_1,p_Var1);
  }
  return;
}



void FUN_0043759c(int param_1,int *param_2)

{
  int iVar1;
  int *piVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  undefined4 *local_8;
  
  puStack_14 = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  puStack_18 = &LAB_00437608;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  if (param_2 != (int *)0x0) {
    iVar1 = (**(code **)(*param_2 + 0x20))();
    if (*(int *)(param_1 + 0x24) <= iVar1) {
      iVar1 = (**(code **)(*param_2 + 0x2c))();
      if (*(int *)(param_1 + 0x28) <= iVar1) goto LAB_004375f2;
    }
    FUN_004054e4((undefined4 *)PTR_PTR_0047563c,(int *)&local_8);
    piVar2 = FUN_0040aa10((int *)PTR_DAT_0040dc48,'\x01',local_8);
    FUN_004036ac(piVar2);
  }
LAB_004375f2:
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_0043760f;
  puStack_18 = (undefined1 *)0x437607;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_00437614(int *param_1,undefined4 param_2,undefined4 param_3)

{
  if ((char)param_2 != (char)param_1[0xd]) {
    *(char *)(param_1 + 0xd) = (char)param_2;
    FUN_00403130(param_1,param_2,param_3);
  }
  return;
}



void FUN_00437630(undefined4 param_1,undefined4 *param_2)

{
  FUN_0040ea58(0,0,param_2);
  return;
}



void FUN_00437640(int param_1)

{
  int *piVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  int iVar2;
  int iVar3;
  
  *(undefined1 *)(param_1 + 0x4c) = 1;
  if (*(int *)(param_1 + 0x50) < 1) {
    if ((*(int *)(param_1 + 0x40) != 0) &&
       (iVar3 = *(int *)(*(int *)(param_1 + 0x40) + 8), -1 < iVar3 + -1)) {
      iVar2 = 0;
      do {
        piVar1 = (int *)FUN_0040f4e8(*(undefined4 **)(param_1 + 0x40),iVar2);
        FUN_00403130(piVar1,extraout_EDX,extraout_ECX);
        iVar2 = iVar2 + 1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
    if (*(short *)(param_1 + 0x5a) != 0) {
      (**(code **)(param_1 + 0x58))(*(undefined4 *)(param_1 + 0x5c),param_1);
    }
  }
  return;
}



void FUN_00437690(int param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  if ((*(int *)(param_1 + 0x40) != 0) &&
     (iVar3 = *(int *)(*(int *)(param_1 + 0x40) + 8), -1 < iVar3 + -1)) {
    iVar2 = 0;
    do {
      iVar1 = FUN_0040f4e8(*(undefined4 **)(param_1 + 0x40),iVar2);
      if (param_2 == iVar1) {
        *(undefined4 *)(param_2 + 4) = 0;
        FUN_0040f3d8(*(int **)(param_1 + 0x40),iVar2);
        return;
      }
      iVar2 = iVar2 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  return;
}



void FUN_004376d4(int param_1,int param_2)

{
  *(int *)(param_2 + 4) = param_1;
  if (*(int **)(param_1 + 0x40) != (int *)0x0) {
    FUN_0040f38c(*(int **)(param_1 + 0x40),param_2);
  }
  return;
}



undefined4 FUN_004376e8(int *param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  undefined4 uVar4;
  
  iVar1 = FUN_00411598(param_1);
  iVar2 = FUN_00411598(param_2);
  if (iVar1 == iVar2) {
    uVar3 = FUN_00411598(param_1);
    uVar4 = FUN_004082a8((int *)param_1[1],(int *)param_2[1],uVar3);
    if ((char)uVar4 != '\0') {
      return CONCAT31((int3)((uint)uVar4 >> 8),1);
    }
  }
  return 0;
}



undefined1 FUN_00437728(int *param_1,int *param_2)

{
  undefined1 uVar1;
  int iVar2;
  int iVar3;
  int *piVar4;
  int *piVar5;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 uVar6;
  undefined4 extraout_ECX_01;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_34;
  undefined1 *puStack_30;
  undefined1 *puStack_2c;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  
  if (param_2 != (int *)0x0) {
    puStack_20 = (undefined1 *)0x437740;
    iVar2 = FUN_00436d0c(param_1);
    puStack_20 = (undefined1 *)0x437749;
    iVar3 = FUN_00436d0c(param_2);
    if (iVar2 == iVar3) {
      puStack_20 = (undefined1 *)0x43775d;
      iVar2 = FUN_00436d0c(param_1);
      uVar6 = extraout_ECX;
      if (iVar2 == 0) {
        puStack_20 = (undefined1 *)0x437768;
        iVar2 = FUN_00436d0c(param_2);
        uVar6 = extraout_ECX_00;
        if (iVar2 == 0) {
          return 1;
        }
      }
      puStack_20 = (undefined1 *)0x437781;
      piVar4 = (int *)FUN_00402f24((int *)PTR_PTR_0040e3d0,'\x01',uVar6);
      puStack_24 = &LAB_00437804;
      uStack_28 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack_28;
      puStack_2c = (undefined1 *)0x43779c;
      puStack_20 = &stack0xfffffffc;
      FUN_00437c68(param_1,(int)piVar4);
      puStack_2c = (undefined1 *)0x4377a8;
      piVar5 = (int *)FUN_00402f24((int *)PTR_PTR_0040e3d0,'\x01',extraout_ECX_01);
      puStack_30 = &LAB_004377e7;
      uStack_34 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack_34;
      puStack_2c = &stack0xfffffffc;
      FUN_00437c68(param_2,(int)piVar5);
      FUN_004376e8(piVar4,piVar5);
      *in_FS_OFFSET = uStack_34;
      puStack_2c = &LAB_004377ee;
      puStack_30 = (undefined1 *)0x4377e6;
      uVar1 = FUN_00402f54(piVar5);
      return uVar1;
    }
  }
  return 0;
}



bool FUN_00437818(void)

{
  int *piVar1;
  char cVar2;
  int *piVar3;
  int iVar4;
  int in_stack_00000004;
  
  if (*(int *)(*(int *)(in_stack_00000004 + -4) + 0x20) == 0) {
    iVar4 = FUN_00436d0c(*(int **)(in_stack_00000004 + -8));
    return 0 < iVar4;
  }
  piVar1 = *(int **)(*(int *)(in_stack_00000004 + -4) + 0x20);
  piVar3 = FUN_004030cc(piVar1,(int)PTR_PTR_00436548);
  if (((char)piVar3 != '\0') &&
     (cVar2 = FUN_00437728(*(int **)(in_stack_00000004 + -8),piVar1), cVar2 != '\0')) {
    return false;
  }
  return true;
}



void FUN_004378cc(int *param_1,int *param_2)

{
  int iVar1;
  int *piVar2;
  int *piVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_ECX_03;
  undefined4 extraout_EDX;
  int iVar4;
  int iVar5;
  undefined4 *in_FS_OFFSET;
  int *piVar6;
  undefined4 uStack_74;
  undefined4 uStack_68;
  undefined1 *puStack_64;
  undefined1 *puStack_60;
  undefined4 uStack_5c;
  undefined1 *puStack_58;
  undefined1 *puStack_54;
  int local_44 [4];
  int local_34 [4];
  int local_24;
  int local_20;
  int local_1c;
  int *local_18;
  int *local_14;
  int *local_10;
  int *local_c;
  int *local_8;
  
  puStack_54 = (undefined1 *)0x4378e9;
  local_8 = param_1;
  FUN_004115d0(param_2,&local_1c,4);
  puStack_54 = (undefined1 *)0x4378f8;
  FUN_004115d0(param_2,&local_20,4);
  puStack_54 = (undefined1 *)0x437904;
  local_c = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX);
  puStack_58 = &LAB_00437b4d;
  uStack_5c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_5c;
  puStack_60 = (undefined1 *)0x43791c;
  puStack_54 = &stack0xfffffffc;
  iVar1 = FUN_0041157c(param_2);
  puStack_60 = (undefined1 *)0x437928;
  (**(code **)(*local_c + 0x50))(local_c,param_2);
  puStack_60 = (undefined1 *)0x437934;
  FUN_0041158c(param_2,local_1c + iVar1);
  puStack_60 = (undefined1 *)0x437940;
  local_14 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX_00);
  puStack_64 = &LAB_00437b30;
  uStack_68 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_68;
  puStack_60 = &stack0xfffffffc;
  (**(code **)(*local_14 + 0x50))(local_14,param_2);
  local_10 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX_01);
  (**(code **)(*local_10 + 0x40))(local_10,local_8[10]);
  (**(code **)(*local_10 + 0x34))(local_10,local_8[9]);
  local_18 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX_02);
  FUN_0041d630(local_18,1);
  (**(code **)(*local_18 + 0x40))(local_18,local_8[10]);
  (**(code **)(*local_18 + 0x34))(local_18,local_8[9]);
  uStack_74 = 0x4379d5;
  FUN_0040ea70(0,0,local_8[10],local_34,local_8[9]);
  FUN_00437ce4((int)local_8);
  uStack_74 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_74;
  iVar1 = (**(code **)(*local_c + 0x20))();
  if (-1 < iVar1 / local_8[9] + -1) {
    iVar5 = 0;
    local_24 = iVar1 / local_8[9];
    do {
      if (local_20 == 0) break;
      iVar1 = (**(code **)(*local_c + 0x2c))();
      iVar1 = iVar1 / local_8[10];
      if (-1 < iVar1 + -1) {
        iVar4 = 0;
        do {
          if (local_20 == 0) break;
          FUN_0040ea8c(local_8[10] * iVar4,local_8[9] * iVar5,local_8[10],local_44,local_8[9]);
          piVar6 = local_44;
          piVar2 = (int *)FUN_0041c784(local_c);
          piVar3 = (int *)FUN_0041c784(local_10);
          FUN_00417d34(piVar3,local_34,piVar2,piVar6);
          FUN_0040ea8c(local_8[10] * iVar4,local_8[9] * iVar5,local_8[10],local_44,local_8[9]);
          piVar6 = local_44;
          piVar2 = (int *)FUN_0041c784(local_14);
          piVar3 = (int *)FUN_0041c784(local_18);
          FUN_00417d34(piVar3,local_34,piVar2,piVar6);
          FUN_00436b24(local_8,local_10,local_18);
          local_20 = local_20 + -1;
          iVar4 = iVar4 + 1;
          iVar1 = iVar1 + -1;
        } while (iVar1 != 0);
      }
      iVar5 = iVar5 + 1;
      local_24 = local_24 + -1;
    } while (local_24 != 0);
  }
  *in_FS_OFFSET = uStack_74;
  FUN_00402f54(local_10);
  FUN_00402f54(local_18);
  FUN_00437ce8(local_8,extraout_EDX,extraout_ECX_03);
  return;
}



void FUN_00437b5c(int *param_1,int param_2)

{
  IStream *pIVar1;
  IStream *pstm;
  HIMAGELIST p_Var2;
  int iVar3;
  int *piVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  
  puStack_14 = (undefined1 *)0x437b73;
  pIVar1 = (IStream *)FUN_00414eac((int *)PTR_PTR_0040e5c0,'\x01',param_2,0);
  puStack_14 = &LAB_00437bd5;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  pstm = pIVar1;
  if (pIVar1 != (IStream *)0x0) {
    pstm = pIVar1 + 5;
  }
  p_Var2 = ImageList_Read(pstm);
  FUN_004369b4(param_1,p_Var2);
  iVar3 = FUN_004369f0(param_1);
  if (iVar3 == 0) {
    piVar4 = FUN_0040aacc((int *)PTR_DAT_0040d918,'\x01',(undefined4 *)PTR_PTR_004757f8);
    FUN_004036ac(piVar4);
  }
  *in_FS_OFFSET = pIVar1;
  FUN_00402f54((int *)pIVar1);
  return;
}



void FUN_00437c68(int *param_1,int param_2)

{
  IStream *pIVar1;
  IStream *pstm;
  HIMAGELIST himl;
  BOOL BVar2;
  int *piVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  
  puStack_14 = (undefined1 *)0x437c7f;
  pIVar1 = (IStream *)FUN_00414eac((int *)PTR_PTR_0040e5c0,'\x01',param_2,0);
  puStack_14 = &LAB_00437cd9;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  pstm = pIVar1;
  if (pIVar1 != (IStream *)0x0) {
    pstm = pIVar1 + 5;
  }
  himl = (HIMAGELIST)FUN_004369f0(param_1);
  BVar2 = ImageList_Write(himl,pstm);
  if (BVar2 == 0) {
    piVar3 = FUN_0040aacc((int *)PTR_DAT_0040d970,'\x01',(undefined4 *)PTR_PTR_004756bc);
    FUN_004036ac(piVar3);
  }
  *in_FS_OFFSET = pIVar1;
  FUN_00402f54((int *)pIVar1);
  return;
}



void FUN_00437ce4(int param_1)

{
  *(int *)(param_1 + 0x50) = *(int *)(param_1 + 0x50) + 1;
  return;
}



void FUN_00437ce8(int *param_1,undefined4 param_2,undefined4 param_3)

{
  if (0 < param_1[0x14]) {
    param_1[0x14] = param_1[0x14] + -1;
  }
  if ((char)param_1[0x13] != '\0') {
    *(undefined1 *)(param_1 + 0x13) = 0;
    FUN_00403130(param_1,param_2,param_3);
  }
  return;
}



HANDLE FUN_00438c1c(POINT *param_1)

{
  HANDLE pvVar1;
  HANDLE pvVar2;
  
  pvVar1 = FUN_004297c4(param_1);
  pvVar2 = (HANDLE)0x0;
  if (pvVar1 != (HANDLE)0x0) {
    pvVar2 = (HANDLE)FUN_0042e708((int)pvVar1,param_1,0,'\0');
    if (pvVar2 == (HANDLE)0x0) {
      pvVar2 = pvVar1;
    }
  }
  return pvVar2;
}



undefined4 FUN_00438c4c(void)

{
  int unaff_EBP;
  
  return *(undefined4 *)(unaff_EBP + 4);
}



void FUN_00438c50(undefined4 *param_1)

{
  int *piVar1;
  
  FUN_00438c4c();
  piVar1 = FUN_0040aacc((int *)PTR_DAT_00437d8c,'\x01',param_1);
  FUN_004036ac(piVar1);
  return;
}



short FUN_00438c70(short param_1,byte param_2)

{
  short sVar1;
  char cStack_5;
  
  sVar1 = 0;
  cStack_5 = (char)((ushort)param_1 >> 8);
  if (cStack_5 == '\0') {
    sVar1 = param_1;
    if ((param_2 & 1) != 0) {
      sVar1 = param_1 + 0x2000;
    }
    if ((param_2 & 4) != 0) {
      sVar1 = sVar1 + 0x4000;
    }
    if ((param_2 & 2) != 0) {
      sVar1 = sVar1 + -0x8000;
    }
  }
  return sVar1;
}



void FUN_00438ca8(undefined2 param_1,int *param_2)

{
  UINT UVar1;
  CHAR local_106 [256];
  undefined2 local_6;
  
  local_6 = param_1;
  FUN_00403bdc(param_2);
  UVar1 = MapVirtualKeyA((uint)(byte)local_6,0);
  if (UVar1 << 0x10 != 0) {
    GetKeyNameTextA(UVar1 << 0x10,local_106,0x100);
    FUN_00403e0c(param_2,local_106,0x100);
  }
  return;
}



void FUN_00438cfc(ushort param_1,int *param_2)

{
  uint uVar1;
  uint uVar2;
  byte bVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  undefined4 *local_10;
  undefined4 *local_c;
  undefined4 uStack_8;
  
  puStack_1c = &stack0xfffffffc;
  local_c = (undefined4 *)0x0;
  local_10 = (undefined4 *)0x0;
  uStack_8 = (uint)param_1 << 0x10;
  uVar2 = uStack_8;
  puStack_20 = &LAB_00438ee5;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  uStack_8._2_1_ = (byte)param_1;
  uVar1 = (uint)uStack_8._2_1_;
  uStack_8 = uVar2;
  if (uStack_8._2_1_ < 0x2d) {
    if (uVar1 - 8 < 2) {
      uVar2 = (uint)uStack_8._2_1_;
      puStack_1c = &stack0xfffffffc;
      FUN_00403c74((int *)&local_c,*(int *)(&DAT_00474810 + uVar2 * 4));
      goto LAB_00438e71;
    }
    if (uVar1 == 0xd) {
      puStack_1c = &stack0xfffffffc;
      FUN_00403c74((int *)&local_c,DAT_0047483c);
      goto LAB_00438e71;
    }
    if (uVar1 == 0x1b) {
      puStack_1c = &stack0xfffffffc;
      FUN_00403c74((int *)&local_c,DAT_00474838);
      goto LAB_00438e71;
    }
    if (uVar1 - 0x20 < 9) {
      bVar3 = uStack_8._2_1_ + 4;
      puStack_1c = &stack0xfffffffc;
      FUN_00403c74((int *)&local_c,*(int *)(&DAT_004747b0 + (uint)bVar3 * 4));
      goto LAB_00438e71;
    }
  }
  else if (uStack_8._2_1_ < 0x41) {
    if (uVar1 - 0x2d < 2) {
      bVar3 = uStack_8._2_1_ + 0xd;
      puStack_1c = &stack0xfffffffc;
      FUN_00403c74((int *)&local_c,(int)(&PTR_s_crHandPoint_0047477c)[bVar3]);
      goto LAB_00438e71;
    }
    if (uVar1 - 0x30 < 10) {
      uVar2 = (uint)uStack_8._2_1_;
      puStack_1c = &stack0xfffffffc;
      FUN_00403d84((int *)&local_c,uVar2);
      goto LAB_00438e71;
    }
  }
  else {
    if (uVar1 - 0x41 < 0x1a) {
      uVar2 = (uint)uStack_8._2_1_;
      FUN_00403d84((int *)&local_c,uVar2);
      goto LAB_00438e71;
    }
    if (uVar1 - 0x60 < 10) {
      uVar2 = (uint)uStack_8._2_1_;
      puStack_1c = &stack0xfffffffc;
      FUN_00403d84((int *)&local_c,uVar2 - 0x30);
      goto LAB_00438e71;
    }
    if (uVar1 - 0x70 < 0x18) {
      uVar2 = (uint)uStack_8._2_1_;
      puStack_1c = &stack0xfffffffc;
      FUN_004084d8(uVar2 - 0x6f,(int *)&local_10);
      FUN_00403ea8((int *)&local_c,(undefined4 *)&DAT_00438efc,local_10);
      goto LAB_00438e71;
    }
  }
  puStack_1c = &stack0xfffffffc;
  FUN_00438ca8(param_1,(int *)&local_c);
LAB_00438e71:
  if (local_c == (undefined4 *)0x0) {
    FUN_00403bdc(param_2);
  }
  else {
    FUN_00403bdc(param_2);
    if ((uStack_8 & 0x20000000) != 0) {
      FUN_00403e64(param_2,DAT_0047486c);
    }
    if ((uStack_8 & 0x40000000) != 0) {
      FUN_00403e64(param_2,DAT_00474870);
    }
    if ((uStack_8 & 0x80000000) != 0) {
      FUN_00403e64(param_2,DAT_00474874);
    }
    FUN_00403e64(param_2,local_c);
  }
  *in_FS_OFFSET = uStack_24;
  puStack_1c = &LAB_00438eec;
  puStack_20 = (undefined1 *)0x438ee4;
  FUN_00403c00((int *)&local_10,2);
  return;
}



undefined4 FUN_00438f00(int *param_1,undefined *param_2)

{
  int iVar1;
  int iVar2;
  PCNZCH pCVar3;
  PCNZCH pCVar4;
  undefined4 uVar5;
  
  uVar5 = 0;
  iVar1 = FUN_00403e5c(*param_1);
  iVar2 = FUN_00403e5c((int)param_2);
  if (iVar2 <= iVar1) {
    iVar1 = FUN_00403e5c((int)param_2);
    pCVar3 = FUN_00404020(param_2);
    pCVar4 = FUN_00404020((undefined *)*param_1);
    iVar1 = FUN_00408454(pCVar4,pCVar3,iVar1);
    if (iVar1 == 0) {
      uVar5 = 1;
      iVar1 = FUN_00403e5c((int)param_2);
      FUN_004040a4(param_1,1,iVar1);
    }
  }
  return uVar5;
}



void FUN_00438f5c(undefined *param_1)

{
  undefined4 uVar1;
  int iVar2;
  ushort uVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  undefined *local_c;
  undefined *local_8;
  
  local_c = (undefined *)0x0;
  puStack_1c = (undefined1 *)0x438f75;
  local_8 = param_1;
  FUN_00404010((int)param_1);
  puStack_20 = &LAB_00439037;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  puStack_1c = &stack0xfffffffc;
  do {
    do {
      uVar1 = FUN_00438f00((int *)&local_8,DAT_0047486c);
    } while ((char)uVar1 != '\0');
    uVar1 = FUN_00438f00((int *)&local_8,&DAT_00439050);
  } while ((((char)uVar1 != '\0') ||
           (uVar1 = FUN_00438f00((int *)&local_8,DAT_00474870), (char)uVar1 != '\0')) ||
          (uVar1 = FUN_00438f00((int *)&local_8,DAT_00474874), (char)uVar1 != '\0'));
  if (local_8 != (undefined *)0x0) {
    uVar3 = 8;
    do {
      FUN_00438cfc(uVar3,(int *)&local_c);
      iVar2 = FUN_004083e0(local_8,local_c);
      if (iVar2 == 0) break;
      uVar3 = uVar3 + 1;
    } while (uVar3 != 0x256);
  }
  *in_FS_OFFSET = uStack_24;
  puStack_1c = &LAB_0043903e;
  puStack_20 = (undefined1 *)0x439036;
  FUN_00403c00((int *)&local_c,2);
  return;
}



uint FUN_00439054(void)

{
  uint uVar1;
  
  uVar1 = FUN_0040fa54(DAT_004767cc);
  FUN_0040fa10(DAT_004767cc,uVar1 & 0xffff,'\x01');
  return uVar1;
}



char FUN_00439074(int *param_1,int param_2,undefined *param_3,int param_4)

{
  int iVar1;
  char local_d;
  
  if (param_2 != 0) {
    local_d = '\0';
    while (local_d == '\0') {
      iVar1 = FUN_0043b408(param_2);
      if (iVar1 <= *param_1) {
        return '\0';
      }
      iVar1 = FUN_0043b418(param_2,*param_1);
      if (*(byte *)(param_4 + -1) < *(byte *)(iVar1 + 0x33)) {
        return '\0';
      }
      local_d = (*(code *)param_3)(iVar1);
      *param_1 = *param_1 + 1;
    }
  }
  return local_d;
}



void FUN_004390d4(undefined *param_1,int param_2,int param_3)

{
  int iVar1;
  int iVar2;
  int iVar3;
  char local_1a;
  byte local_19;
  int local_18;
  int local_14;
  int local_10;
  undefined *local_c;
  byte local_5;
  
  local_14 = 0;
  local_18 = 0;
  iVar2 = 0;
  iVar3 = 0;
  local_10 = param_3;
  local_c = param_1;
  if (param_2 != 0) {
    iVar2 = FUN_0043b408(param_2);
  }
  if (local_10 != 0) {
    iVar3 = FUN_0043b408(local_10);
  }
  local_1a = '\0';
  while ((local_1a == '\0' && ((local_14 < iVar2 || (local_18 < iVar3))))) {
    local_5 = 0xff;
    local_19 = 0xff;
    if (local_14 < iVar2) {
      iVar1 = FUN_0043b418(param_2,local_14);
      local_5 = *(byte *)(iVar1 + 0x33);
    }
    if (local_18 < iVar3) {
      iVar1 = FUN_0043b418(local_10,local_18);
      local_19 = *(byte *)(iVar1 + 0x33);
    }
    if (local_19 < local_5) {
      local_5 = local_19;
      local_1a = FUN_00439074(&local_18,local_10,local_c,(int)&stack0xfffffffc);
    }
    else {
      local_1a = FUN_00439074(&local_14,param_2,local_c,(int)&stack0xfffffffc);
    }
    while ((local_14 < iVar2 &&
           (iVar1 = FUN_0043b418(param_2,local_14), *(byte *)(iVar1 + 0x33) <= local_5))) {
      local_14 = local_14 + 1;
    }
    while ((local_18 < iVar3 &&
           (iVar1 = FUN_0043b418(local_10,local_18), *(byte *)(iVar1 + 0x33) <= local_5))) {
      local_18 = local_18 + 1;
    }
  }
  return;
}



undefined4 FUN_00439260(int param_1)

{
  char cVar1;
  int iVar2;
  
  cVar1 = FUN_00435f14(param_1);
  if (cVar1 != '\0') {
    iVar2 = FUN_004030e4(*(int **)(param_1 + 0x10),(int)PTR_PTR_00435828);
    if (*(char *)(iVar2 + 0x59) == *(char *)(*(int *)(param_1 + 0x18) + 0x2d)) {
      return CONCAT31((int3)((uint)iVar2 >> 8),1);
    }
  }
  return 0;
}



undefined4 FUN_00439290(int param_1)

{
  char cVar1;
  int iVar2;
  
  cVar1 = FUN_00435f28(param_1);
  if (cVar1 != '\0') {
    iVar2 = FUN_004030e4(*(int **)(param_1 + 0x10),(int)PTR_PTR_00435828);
    if (*(int *)(iVar2 + 0x5c) == *(int *)(*(int *)(param_1 + 0x18) + 0x48)) {
      return CONCAT31((int3)((uint)*(int *)(iVar2 + 0x5c) >> 8),1);
    }
  }
  return 0;
}



undefined4 FUN_004392c0(int param_1)

{
  char cVar1;
  int iVar2;
  uint *puVar3;
  undefined1 uVar4;
  
  cVar1 = FUN_00435f3c(param_1);
  uVar4 = cVar1 == '\0';
  if (!(bool)uVar4) {
    iVar2 = FUN_004030e4(*(int **)(param_1 + 0x10),(int)PTR_PTR_00435828);
    puVar3 = FUN_00403f6c(*(uint **)(*(int *)(param_1 + 0x18) + 0x4c),*(uint **)(iVar2 + 0x60));
    if ((bool)uVar4) {
      return CONCAT31((int3)((uint)puVar3 >> 8),1);
    }
  }
  return 0;
}



undefined4 FUN_004392f4(int param_1)

{
  char cVar1;
  int iVar2;
  
  cVar1 = FUN_00435f50(param_1);
  if (cVar1 != '\0') {
    iVar2 = FUN_004030e4(*(int **)(param_1 + 0x10),(int)PTR_PTR_00435828);
    if (*(int *)(iVar2 + 100) == *(int *)(*(int *)(param_1 + 0x18) + 0x34)) {
      return CONCAT31((int3)((uint)*(int *)(iVar2 + 100) >> 8),1);
    }
  }
  return 0;
}



undefined4 FUN_00439324(int param_1)

{
  char cVar1;
  int iVar2;
  
  cVar1 = FUN_00435f64(param_1);
  if (cVar1 != '\0') {
    iVar2 = FUN_004030e4(*(int **)(param_1 + 0x10),(int)PTR_PTR_00435828);
    if (*(short *)(iVar2 + 0x68) == *(short *)(*(int *)(param_1 + 0x18) + 0x54)) {
      return CONCAT31((int3)(CONCAT22((short)((uint)iVar2 >> 0x10),*(short *)(iVar2 + 0x68)) >> 8),1
                     );
    }
  }
  return 0;
}



undefined4 FUN_00439388(int param_1)

{
  int iVar1;
  char cVar2;
  
  cVar2 = FUN_00414d0c();
  if ((cVar2 != '\0') &&
     (iVar1 = *(int *)(*(int *)(param_1 + 0x18) + 0x80),
     iVar1 == *(int *)(*(int *)(param_1 + 0x10) + 0x30))) {
    return CONCAT31((int3)((uint)iVar1 >> 8),1);
  }
  return 0;
}



int * FUN_004394dc(int *param_1,char param_2,int *param_3)

{
  uint uVar1;
  int iVar2;
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00414460(param_1,'\0',param_3);
  *(undefined1 *)((int)param_1 + 0x32) = 1;
  *(undefined1 *)((int)param_1 + 0x2d) = 1;
  *(undefined1 *)((int)param_1 + 0x2f) = 2;
  *(undefined1 *)(param_1 + 0xc) = 2;
  uVar1 = FUN_00439054();
  *(short *)(param_1 + 0x11) = (short)uVar1;
  param_1[0xd] = -1;
  iVar2 = FUN_00402f24((int *)PTR_DAT_00436454,'\x01',extraout_ECX_00);
  param_1[0x1b] = iVar2;
  *(int **)(iVar2 + 0xc) = param_1;
  *(undefined1 **)(iVar2 + 8) = &LAB_0043bcc8;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



void FUN_0043960c(int param_1,HMENU param_2,byte param_3)

{
  undefined1 *puVar1;
  char cVar2;
  ushort uVar3;
  int iVar4;
  int *piVar5;
  DWORD DVar6;
  LPCSTR pCVar7;
  UINT_PTR uIDNewItem;
  uint uVar8;
  int *in_FS_OFFSET;
  byte bVar9;
  int iStack_68;
  int iStack_5c;
  undefined1 *puStack_58;
  undefined1 *puStack_54;
  int local_44;
  MENUITEMINFOA local_3d;
  byte local_d;
  undefined *local_c;
  byte local_5;
  
  puStack_54 = &stack0xfffffffc;
  local_44 = 0;
  local_c = (undefined *)0x0;
  puStack_58 = &LAB_00439867;
  iStack_5c = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)&iStack_5c;
  puVar1 = &stack0xfffffffc;
  local_5 = param_3;
  if (*(char *)(param_1 + 0x32) == '\0') goto LAB_00439849;
  FUN_00403c74((int *)&local_c,*(int *)(param_1 + 0x24));
  iVar4 = FUN_0043b408(param_1);
  if (iVar4 < 1) {
    if (*(short *)(param_1 + 0x54) != 0) {
      iVar4 = *(int *)(param_1 + 0x58);
      if ((iVar4 != 0) && (*(int *)(iVar4 + 0x58) == 0)) {
        piVar5 = FUN_004030cc(*(int **)(iVar4 + 4),(int)PTR_PTR_0043859c);
        if ((char)piVar5 != '\0') goto LAB_004396a8;
      }
      FUN_00438cfc(*(ushort *)(param_1 + 0x54),&local_44);
      iStack_68 = local_44;
      FUN_00403f1c((int *)&local_c,3);
    }
  }
  else {
    local_3d.hSubMenu = (HMENU)FUN_00439ab8(param_1);
  }
LAB_004396a8:
  DVar6 = GetVersion();
  uVar3 = (ushort)DVar6 & 0xff;
  bVar9 = uVar3 == 4;
  if (uVar3 < 4) {
    FUN_00403f6c(*(uint **)(param_1 + 0x24),(uint *)&DAT_0043988c);
    uVar8 = *(uint *)(&DAT_00474894 + (bVar9 & 0x7f) * 4) |
            *(uint *)(&DAT_00474888 + (uint)*(byte *)(param_1 + 0x3c) * 4) |
            *(uint *)(&DAT_00474878 + (uint)*(byte *)(param_1 + 0x2c) * 4) |
            *(uint *)(&DAT_00474880 + (uint)*(byte *)(param_1 + 0x2d) * 4);
    iVar4 = FUN_0043b408(param_1);
    if (iVar4 < 1) {
      pCVar7 = FUN_00404020(local_c);
      InsertMenuA(param_2,0xffffffff,uVar8 | 0x400,(uint)*(ushort *)(param_1 + 0x44),pCVar7);
      puVar1 = puStack_54;
    }
    else {
      pCVar7 = FUN_00404020(*(undefined **)(param_1 + 0x24));
      uIDNewItem = FUN_00439ab8(param_1);
      InsertMenuA(param_2,0xffffffff,uVar8 | 0x410,uIDNewItem,pCVar7);
      puVar1 = puStack_54;
    }
    goto LAB_00439849;
  }
  local_3d.cbSize = 0x2c;
  local_3d.fMask = 0x3f;
  iVar4 = thunk_FUN_0043b978(param_1);
  if (iVar4 == 0) {
LAB_004396e8:
    if (*(int *)(param_1 + 0x40) != 0) {
      cVar2 = (**(code **)(**(int **)(param_1 + 0x40) + 0x1c))();
      bVar9 = cVar2 == '\0';
      if ((bool)bVar9) goto LAB_004396fe;
    }
    local_d = 0;
    bVar9 = true;
  }
  else {
    bVar9 = *(char *)(iVar4 + 0x34) == '\0';
    if ((bool)bVar9) {
      iVar4 = FUN_0043afe0(param_1);
      bVar9 = iVar4 == 0;
      if ((bool)bVar9) goto LAB_004396e8;
    }
LAB_004396fe:
    local_d = 1;
  }
  FUN_00403f6c(*(uint **)(param_1 + 0x24),(uint *)&DAT_0043988c);
  local_3d.fType =
       *(uint *)(&DAT_004748c8 + (bVar9 & 0x7f) * 4) |
       *(uint *)(&DAT_004748c0 + (uint)*(byte *)(param_1 + 0x31) * 4) |
       *(uint *)(&DAT_0047489c + (uint)*(byte *)(param_1 + 0x3c) * 4) |
       *(uint *)(&DAT_004748d0 + (uint)local_5 * 4) | *(uint *)(&DAT_004748d8 + (uint)local_d * 4);
  local_3d.fState =
       *(uint *)(&DAT_004748a8 + (uint)*(byte *)(param_1 + 0x2c) * 4) |
       *(uint *)(&DAT_004748b8 + (uint)*(byte *)(param_1 + 0x2d) * 4) |
       *(uint *)(&DAT_004748b0 + (uint)*(byte *)(param_1 + 0x2e) * 4);
  local_3d.wID = (UINT)*(ushort *)(param_1 + 0x44);
  local_3d.hSubMenu = (HMENU)0x0;
  local_3d.hbmpChecked = (HBITMAP)0x0;
  local_3d.hbmpUnchecked = (HBITMAP)0x0;
  local_3d.dwTypeData = FUN_00404020(local_c);
  iVar4 = FUN_0043b408(param_1);
  if (0 < iVar4) {
    local_3d.hSubMenu = (HMENU)FUN_00439ab8(param_1);
  }
  InsertMenuItemA(param_2,0xffffffff,-1,&local_3d);
  puVar1 = puStack_54;
LAB_00439849:
  puStack_54 = puVar1;
  *in_FS_OFFSET = iStack_68;
  FUN_00403bdc(&local_44);
  FUN_00403bdc((int *)&local_c);
  return;
}



void FUN_004398ac(int param_1)

{
  int *piVar1;
  
  if ((*(int **)(param_1 + 100) != (int *)0x0) &&
     (piVar1 = FUN_004030cc(*(int **)(param_1 + 100),(int)PTR_PTR_0043859c), (char)piVar1 != '\0'))
  {
    FUN_0043bf24(param_1,'\0');
    FUN_0043c3f4(param_1,'\0');
  }
  if (*(int *)(param_1 + 100) != 0) {
    FUN_0043ce6c(*(int *)(param_1 + 100));
  }
  FUN_004390d4(&LAB_00439890,*(int *)(param_1 + 0x5c),param_1);
  return;
}



void FUN_0043991c(int *param_1,int param_2,uint param_3)

{
  short sVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  undefined *local_8;
  
  puStack_14 = &stack0xfffffffc;
  local_8 = (undefined *)0x0;
  puStack_18 = &LAB_00439966;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  FUN_00413d10(param_2,(int *)&local_8,param_3);
  sVar1 = FUN_00438f5c(local_8);
  FUN_0043b43c(param_1,sVar1);
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_0043996d;
  puStack_18 = (undefined1 *)0x439965;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_00439974(int *param_1,int param_2)

{
  int iVar1;
  
  iVar1 = param_1[0x17];
  if (param_2 != iVar1) {
    if (iVar1 != 0) {
      *(undefined4 *)(iVar1 + 0x60) = 0;
    }
    param_1[0x17] = param_2;
    if (param_2 != 0) {
      *(int **)(param_2 + 0x60) = param_1;
    }
    FUN_004399d4(param_1);
  }
  return;
}



void FUN_00439998(int *param_1)

{
  int iVar1;
  undefined4 uVar2;
  undefined4 extraout_ECX;
  
  FUN_004148c0((int)param_1);
  iVar1 = FUN_0043b3f0((int)param_1);
  if (iVar1 != 0) {
    uVar2 = FUN_0043b3f0((int)param_1);
    FUN_00403130(param_1,uVar2,CONCAT31((int3)((uint)extraout_ECX >> 8),1));
  }
  if ((char)param_1[0x1a] != '\0') {
    FUN_004399d4(param_1);
  }
  return;
}



void FUN_004399d4(int *param_1)

{
  HMENU pHVar1;
  int iVar2;
  int *piVar3;
  UINT uPosition;
  UINT uFlags;
  
  if ((*(byte *)(param_1 + 8) & 8) != 0) {
    return;
  }
  if ((*(byte *)(param_1 + 8) & 2) == 0) {
    if ((int *)param_1[0x18] == (int *)0x0) {
      while( true ) {
        pHVar1 = (HMENU)FUN_00439ab8((int)param_1);
        iVar2 = GetMenuItemCount(pHVar1);
        if (iVar2 < 1) break;
        uFlags = 0x400;
        uPosition = 0;
        pHVar1 = (HMENU)FUN_00439ab8((int)param_1);
        RemoveMenu(pHVar1,uPosition,uFlags);
      }
      if ((param_1[0x16] == 0) &&
         (piVar3 = FUN_004030cc((int *)param_1[0x19],(int)PTR_PTR_0043859c), (char)piVar3 != '\0'))
      {
        DestroyMenu((HMENU)param_1[10]);
        param_1[10] = 0;
      }
      else {
        FUN_004398ac((int)param_1);
      }
      (**(code **)(*param_1 + 0x38))(param_1,0);
      return;
    }
    FUN_004399d4((int *)param_1[0x18]);
    return;
  }
  *(undefined1 *)(param_1 + 0x1a) = 1;
  return;
}



void FUN_00439a58(int param_1,int param_2,byte param_3)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  iVar1 = FUN_0043b408(param_1);
  if (-1 < iVar1 + -1) {
    iVar3 = 0;
    do {
      if (iVar3 < param_2) {
        iVar2 = FUN_0043b418(param_1,iVar3);
        if (param_3 < *(byte *)(iVar2 + 0x33)) {
          FUN_00438c50((undefined4 *)PTR_PTR_004755e4);
        }
      }
      else {
        iVar2 = FUN_0043b418(param_1,iVar3);
        if (*(byte *)(iVar2 + 0x33) < param_3) {
          iVar2 = FUN_0043b418(param_1,iVar3);
          *(byte *)(iVar2 + 0x33) = param_3;
        }
      }
      iVar3 = iVar3 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  return;
}



undefined4 FUN_00439ab8(int param_1)

{
  int *piVar1;
  HMENU pHVar2;
  undefined4 uStack00000008;
  
  if (*(int *)(param_1 + 0x28) == 0) {
    piVar1 = FUN_004030cc(*(int **)(param_1 + 4),(int)PTR_PTR_00438874);
    if ((char)piVar1 == '\0') {
      pHVar2 = CreateMenu();
      *(HMENU *)(param_1 + 0x28) = pHVar2;
    }
    else {
      pHVar2 = CreatePopupMenu();
      *(HMENU *)(param_1 + 0x28) = pHVar2;
    }
    if (*(int *)(param_1 + 0x28) == 0) {
      FUN_00438c50((undefined4 *)PTR_PTR_004755c0);
    }
    uStack00000008 = 0x439afc;
    FUN_004398ac(param_1);
  }
  return *(undefined4 *)(param_1 + 0x28);
}



// WARNING: Removing unreachable block (ram,0x00439b94)
// WARNING: Removing unreachable block (ram,0x00439b9e)

void FUN_00439b48(int param_1,int *param_2,int param_3,uint param_4,char param_5,LPRECT param_6)

{
  int *piVar1;
  byte bVar2;
  int iVar3;
  undefined4 uVar4;
  HDC pHVar5;
  LPCSTR pCVar6;
  int iVar7;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  tagRECT *ptVar8;
  undefined4 *in_FS_OFFSET;
  undefined1 uVar9;
  UINT edge;
  LPRECT lprc;
  UINT grfFlags;
  uint format;
  undefined4 uStack_38;
  undefined1 *puStack_34;
  undefined1 *puStack_30;
  tagRECT local_20;
  uint *local_10;
  int local_c;
  int *local_8;
  
  bVar2 = 0;
  puStack_30 = &stack0xfffffffc;
  local_10 = (uint *)0x0;
  puStack_34 = &LAB_00439d2f;
  uStack_38 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_38;
  local_c = param_3;
  local_8 = param_2;
  iVar3 = thunk_FUN_0043b978(param_1);
  if ((iVar3 != 0) && (uVar4 = FUN_0043ce6c(iVar3), (char)uVar4 != '\0')) {
    param_4 = param_4 | 0x20002;
  }
  FUN_00403c74((int *)&local_10,local_c);
  uVar9 = (param_4 & 0x400) == 0;
  if ((!(bool)uVar9) &&
     ((uVar9 = local_10 == (uint *)0x0, (bool)uVar9 ||
      ((uVar9 = (char)*local_10 == '&', (bool)uVar9 &&
       (uVar9 = *(char *)((int)local_10 + 1) == '\0', (bool)uVar9)))))) {
    FUN_00403e64((int *)&local_10,(undefined4 *)&DAT_00439d48);
  }
  FUN_00403f6c(local_10,(uint *)&DAT_00439d54);
  if ((bool)uVar9) {
    if ((param_4 & 0x400) == 0) {
      ptVar8 = &local_20;
      for (iVar3 = 4; iVar3 != 0; iVar3 = iVar3 + -1) {
        ptVar8->left = param_6->left;
        param_6 = (LPRECT)((int)param_6 + (uint)bVar2 * -8 + 4);
        ptVar8 = (tagRECT *)((int)ptVar8 + ((uint)bVar2 * -2 + 1) * 4);
      }
      local_20.top = local_20.top + 4;
      grfFlags = 2;
      edge = 6;
      ptVar8 = &local_20;
      pHVar5 = (HDC)FUN_004183d4(local_8);
      DrawEdge(pHVar5,ptVar8,edge,grfFlags);
    }
    goto LAB_00439d19;
  }
  FUN_00417920((int *)local_8[5],'\x01');
  if (*(char *)(param_1 + 0x2e) != '\0') {
    piVar1 = (int *)local_8[3];
    bVar2 = FUN_004172f4((int)piVar1);
    FUN_00417300(piVar1,bVar2 | DAT_00439d58);
  }
  if (*(char *)(param_1 + 0x2d) == '\0') {
    if (param_5 == '\0') {
      OffsetRect(param_6,1,1);
      FUN_00417034((int *)local_8[3],-0x7fffffec,extraout_ECX);
      lprc = param_6;
      format = param_4;
      iVar3 = FUN_00403e5c((int)local_10);
      pCVar6 = FUN_00404020((undefined *)local_10);
      pHVar5 = (HDC)FUN_004183d4(local_8);
      DrawTextA(pHVar5,pCVar6,iVar3,lprc,format);
      OffsetRect(param_6,-1,-1);
      uVar4 = extraout_ECX_00;
    }
    else {
      iVar3 = FUN_00416b74(0x8000000d);
      iVar7 = FUN_00416b74(0x80000010);
      uVar4 = extraout_ECX_01;
      if (iVar3 == iVar7) {
        FUN_00417034((int *)local_8[3],-0x7fffffec,extraout_ECX_01);
        goto LAB_00439cf4;
      }
    }
    FUN_00417034((int *)local_8[3],-0x7ffffff0,uVar4);
  }
LAB_00439cf4:
  iVar3 = FUN_00403e5c((int)local_10);
  pCVar6 = FUN_00404020((undefined *)local_10);
  pHVar5 = (HDC)FUN_004183d4(local_8);
  DrawTextA(pHVar5,pCVar6,iVar3,param_6,param_4);
LAB_00439d19:
  *in_FS_OFFSET = uStack_38;
  puStack_30 = &LAB_00439d36;
  puStack_34 = (undefined1 *)0x439d2e;
  FUN_00403bdc((int *)&local_10);
  return;
}



void FUN_00439da0(void)

{
  ushort uVar1;
  undefined1 *puVar2;
  char cVar3;
  undefined1 uVar4;
  int iVar5;
  int iVar6;
  undefined4 uVar7;
  int *piVar8;
  HBITMAP pHVar9;
  LPRECT ptVar10;
  HDC pHVar11;
  uint uVar12;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_ECX_03;
  undefined4 extraout_ECX_04;
  undefined4 extraout_ECX_05;
  undefined4 extraout_ECX_06;
  uint uVar13;
  undefined4 *puVar14;
  undefined4 *puVar15;
  uint *in_FS_OFFSET;
  bool bVar16;
  byte bVar17;
  int in_stack_00000004;
  uint in_stack_ffffffbc;
  UINT UVar18;
  UINT UVar19;
  uint uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  int local_8;
  
  bVar17 = 0;
  puStack_18 = &stack0xfffffffc;
  local_8 = 0;
  puStack_1c = &LAB_0043a601;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = (uint)&uStack_20;
  puVar2 = &stack0xfffffffc;
  if (*(char *)(in_stack_00000004 + -0x21) == '\0') {
    FUN_00417eb0(*(int **)(in_stack_00000004 + -0x28),(RECT *)(in_stack_00000004 + -0x20));
    puVar2 = puStack_18;
  }
  puStack_18 = puVar2;
  if (*(int *)(in_stack_00000004 + -0x2c) == 0) {
    piVar8 = FUN_004030cc(*(int **)(in_stack_00000004 + -0x2c),(int)PTR_PTR_00438874);
    if ((char)piVar8 == '\0') {
      *(undefined1 *)(in_stack_00000004 + -0x2d) = 0;
    }
    else {
      *(undefined1 *)(in_stack_00000004 + -0x2d) =
           *(undefined1 *)(*(int *)(in_stack_00000004 + -0x2c) + 0x50);
    }
  }
  else {
    *(undefined1 *)(in_stack_00000004 + -0x2d) = 0;
  }
  *(int *)(in_stack_00000004 + -0x10) = *(int *)(in_stack_00000004 + -0x20) + 1;
  iVar5 = *(int *)(in_stack_00000004 + -0x1c) + 1;
  bVar16 = iVar5 == 0;
  *(int *)(in_stack_00000004 + -0xc) = iVar5;
  FUN_00403f6c(*(uint **)(*(int *)(in_stack_00000004 + -0x34) + 0x24),(uint *)&DAT_0043a618);
  if (bVar16) {
    FUN_00417eb0(*(int **)(in_stack_00000004 + -0x28),(RECT *)(in_stack_00000004 + -0x20));
    *(undefined4 *)(in_stack_00000004 + -0x10) = 0;
    *(undefined4 *)(in_stack_00000004 + -8) = 0xfffffffc;
    *(undefined1 *)(in_stack_00000004 + -0x35) = 0;
    goto LAB_0043a300;
  }
  uVar7 = extraout_ECX;
  if (*(int *)(in_stack_00000004 + -0x3c) == 0) {
LAB_00439ebd:
    uVar4 = 0;
  }
  else {
    iVar5 = *(int *)(*(int *)(in_stack_00000004 + -0x34) + 0x34);
    if (iVar5 < 0) {
LAB_00439e96:
      if (*(char *)(*(int *)(in_stack_00000004 + -0x34) + 0x2c) == '\0') goto LAB_00439ebd;
      piVar8 = *(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40);
      if (piVar8 != (int *)0x0) {
        cVar3 = (**(code **)(*piVar8 + 0x1c))();
        uVar7 = extraout_ECX_01;
        if (cVar3 == '\0') goto LAB_00439ebd;
      }
    }
    else {
      iVar6 = FUN_00436d0c(*(int **)(in_stack_00000004 + -0x3c));
      uVar7 = extraout_ECX_00;
      if (iVar6 <= iVar5) goto LAB_00439e96;
    }
    uVar4 = 1;
  }
  *(undefined1 *)(in_stack_00000004 + -0x3d) = uVar4;
  if (*(char *)(in_stack_00000004 + -0x3d) == '\0') {
    piVar8 = *(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40);
    if (piVar8 != (int *)0x0) {
      cVar3 = (**(code **)(*piVar8 + 0x1c))();
      uVar7 = extraout_ECX_02;
      if (cVar3 == '\0') goto LAB_00439ef5;
    }
    if ((*(int *)(in_stack_00000004 + -0x3c) == 0) || (*(char *)(in_stack_00000004 + 8) != '\0')) {
      *(undefined4 *)(in_stack_00000004 + -8) = *(undefined4 *)(in_stack_00000004 + -0x10);
      *(undefined4 *)(in_stack_00000004 + -4) = *(undefined4 *)(in_stack_00000004 + -0xc);
    }
    else {
      *(int *)(in_stack_00000004 + -8) =
           *(int *)(in_stack_00000004 + -0x10) +
           *(int *)(*(int *)(in_stack_00000004 + -0x3c) + 0x28);
      *(int *)(in_stack_00000004 + -4) =
           *(int *)(in_stack_00000004 + -0xc) + *(int *)(*(int *)(in_stack_00000004 + -0x3c) + 0x24)
      ;
    }
    *(undefined1 *)(in_stack_00000004 + -0x35) = 0;
  }
  else {
LAB_00439ef5:
    *(undefined1 *)(in_stack_00000004 + -0x35) = 1;
    if (*(char *)(in_stack_00000004 + -0x3d) == '\0') {
      *(int *)(in_stack_00000004 + -8) = *(int *)(in_stack_00000004 + -0x10) + 0x10;
      *(int *)(in_stack_00000004 + -4) = *(int *)(in_stack_00000004 + -0xc) + 0x10;
    }
    else {
      *(int *)(in_stack_00000004 + -8) =
           *(int *)(in_stack_00000004 + -0x10) +
           *(int *)(*(int *)(in_stack_00000004 + -0x3c) + 0x28);
      *(int *)(in_stack_00000004 + -4) =
           *(int *)(in_stack_00000004 + -0xc) + *(int *)(*(int *)(in_stack_00000004 + -0x3c) + 0x24)
      ;
    }
    if (*(char *)(*(int *)(in_stack_00000004 + -0x34) + 0x2c) != '\0') {
      *(int *)(in_stack_00000004 + -8) = *(int *)(in_stack_00000004 + -8) + 1;
      *(int *)(in_stack_00000004 + -4) = *(int *)(in_stack_00000004 + -4) + 1;
      uVar7 = FUN_004177fc(*(int *)(*(int *)(in_stack_00000004 + -0x28) + 0x14));
      *(undefined4 *)(in_stack_00000004 + -0x44) = uVar7;
      if ((*(byte *)(in_stack_00000004 + 0xc) & 1) == 0) {
        uVar7 = FUN_004177fc(*(int *)(*(int *)(in_stack_00000004 + -0x28) + 0x14));
        *(undefined4 *)(in_stack_00000004 + -0x44) = uVar7;
        uVar7 = FUN_0041e5bc(0x8000000f,0x80000014);
        FUN_004177d8(*(int **)(*(int *)(in_stack_00000004 + -0x28) + 0x14),uVar7);
        FUN_00417eb0(*(int **)(in_stack_00000004 + -0x28),(RECT *)(in_stack_00000004 + -0x10));
      }
      else {
        FUN_00417804(*(int **)(*(int *)(in_stack_00000004 + -0x28) + 0x14),0x8000000f);
        FUN_00417eb0(*(int **)(in_stack_00000004 + -0x28),(RECT *)(in_stack_00000004 + -0x10));
      }
      FUN_00417804(*(int **)(*(int *)(in_stack_00000004 + -0x28) + 0x14),
                   *(undefined4 *)(in_stack_00000004 + -0x44));
      *(int *)(in_stack_00000004 + -0x10) = *(int *)(in_stack_00000004 + -0x10) + 1;
      *(int *)(in_stack_00000004 + -0xc) = *(int *)(in_stack_00000004 + -0xc) + 1;
      uVar7 = extraout_ECX_03;
    }
    if (*(char *)(in_stack_00000004 + -0x3d) == '\0') {
      puVar14 = (undefined4 *)(in_stack_00000004 + -0x10);
      puVar15 = (undefined4 *)(in_stack_00000004 + -0x58);
      for (iVar5 = 4; iVar5 != 0; iVar5 = iVar5 + -1) {
        *puVar15 = *puVar14;
        puVar14 = puVar14 + (uint)bVar17 * -2 + 1;
        puVar15 = puVar15 + (uint)bVar17 * -2 + 1;
      }
      iVar5 = (**(code **)(**(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40) + 0x2c))();
      if (iVar5 < *(int *)(in_stack_00000004 + -8) - *(int *)(in_stack_00000004 + -0x10)) {
        iVar5 = (**(code **)(**(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40) + 0x2c))();
        uVar12 = (*(int *)(in_stack_00000004 + -8) - *(int *)(in_stack_00000004 + -0x10)) - iVar5;
        iVar5 = (int)uVar12 >> 1;
        if (iVar5 < 0) {
          iVar5 = iVar5 + (uint)((uVar12 & 1) != 0);
        }
        *(int *)(in_stack_00000004 + -0x10) = iVar5 + *(int *)(in_stack_00000004 + -0x10) + 1;
        iVar5 = (**(code **)(**(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40) + 0x2c))();
        *(int *)(in_stack_00000004 + -8) = iVar5 + *(int *)(in_stack_00000004 + -0x10);
      }
      iVar5 = (**(code **)(**(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40) + 0x20))();
      if (iVar5 < *(int *)(in_stack_00000004 + -4) - *(int *)(in_stack_00000004 + -0xc)) {
        iVar5 = (**(code **)(**(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40) + 0x20))();
        uVar12 = (*(int *)(in_stack_00000004 + -4) - *(int *)(in_stack_00000004 + -0xc)) - iVar5;
        iVar5 = (int)uVar12 >> 1;
        if (iVar5 < 0) {
          iVar5 = iVar5 + (uint)((uVar12 & 1) != 0);
        }
        *(int *)(in_stack_00000004 + -0xc) = iVar5 + *(int *)(in_stack_00000004 + -0xc) + 1;
        iVar5 = (**(code **)(**(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40) + 0x20))();
        *(int *)(in_stack_00000004 + -4) = iVar5 + *(int *)(in_stack_00000004 + -0xc);
      }
      FUN_00418058(*(int **)(in_stack_00000004 + -0x28),in_stack_00000004 + -0x10,
                   *(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40));
      puVar14 = (undefined4 *)(in_stack_00000004 + -0x58);
      puVar15 = (undefined4 *)(in_stack_00000004 + -0x10);
      for (iVar5 = 4; iVar5 != 0; iVar5 = iVar5 + -1) {
        *puVar15 = *puVar14;
        puVar14 = puVar14 + (uint)bVar17 * -2 + 1;
        puVar15 = puVar15 + (uint)bVar17 * -2 + 1;
      }
    }
    else {
      iVar5 = *(int *)(*(int *)(in_stack_00000004 + -0x34) + 0x34);
      if (iVar5 < 0) {
LAB_0043a076:
        piVar8 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',uVar7);
        *(int **)(in_stack_00000004 + -0x48) = piVar8;
        uVar12 = *in_FS_OFFSET;
        *in_FS_OFFSET = (uint)&stack0xffffffd4;
        (**(code **)(**(int **)(in_stack_00000004 + -0x48) + 0x3c))
                  (*(int **)(in_stack_00000004 + -0x48),1);
        pHVar9 = LoadBitmapA((HINSTANCE)0x0,&lpBitmapName_00007ff8);
        FUN_0041d3e0(*(int **)(in_stack_00000004 + -0x48),pHVar9);
        *(undefined4 *)(in_stack_00000004 + -0x44) =
             *(undefined4 *)(*(int *)(*(int *)(in_stack_00000004 + -0x28) + 0xc) + 0x18);
        FUN_00417034(*(int **)(*(int *)(in_stack_00000004 + -0x28) + 0xc),-0x7fffffee,
                     extraout_ECX_05);
        piVar8 = *(int **)(in_stack_00000004 + -0x48);
        iVar5 = (**(code **)(**(int **)(in_stack_00000004 + -0x48) + 0x20))();
        uVar13 = (*(int *)(in_stack_00000004 + -4) - *(int *)(in_stack_00000004 + -0xc)) - iVar5;
        iVar5 = (int)uVar13 >> 1;
        if (iVar5 < 0) {
          iVar5 = iVar5 + (uint)((uVar13 & 1) != 0);
        }
        iVar6 = iVar5 + *(int *)(in_stack_00000004 + -0xc) + 1;
        iVar5 = (**(code **)(**(int **)(in_stack_00000004 + -0x48) + 0x2c))();
        uVar13 = (*(int *)(in_stack_00000004 + -8) - *(int *)(in_stack_00000004 + -0x10)) - iVar5;
        iVar5 = (int)uVar13 >> 1;
        if (iVar5 < 0) {
          iVar5 = iVar5 + (uint)((uVar13 & 1) != 0);
        }
        FUN_00417dbc(*(int **)(in_stack_00000004 + -0x28),
                     iVar5 + *(int *)(in_stack_00000004 + -0x10) + 1,iVar6,piVar8);
        FUN_00417034(*(int **)(*(int *)(in_stack_00000004 + -0x28) + 0xc),
                     *(int *)(in_stack_00000004 + -0x44),extraout_ECX_06);
        *in_FS_OFFSET = uVar12;
        FUN_00402f54(*(int **)(in_stack_00000004 + -0x48));
        return;
      }
      iVar6 = FUN_00436d0c(*(int **)(in_stack_00000004 + -0x3c));
      uVar7 = extraout_ECX_04;
      if (iVar6 <= iVar5) goto LAB_0043a076;
      FUN_00437228(*(int **)(in_stack_00000004 + -0x3c),*(undefined4 *)(in_stack_00000004 + -0x28),
                   *(undefined4 *)(in_stack_00000004 + -0x10),
                   *(undefined1 *)(*(int *)(in_stack_00000004 + -0x34) + 0x2d),
                   *(undefined4 *)(*(int *)(in_stack_00000004 + -0x34) + 0x34),
                   *(undefined4 *)(in_stack_00000004 + -0xc));
    }
    if (*(char *)(*(int *)(in_stack_00000004 + -0x34) + 0x2c) != '\0') {
      *(int *)(in_stack_00000004 + -8) = *(int *)(in_stack_00000004 + -8) + -1;
      *(int *)(in_stack_00000004 + -4) = *(int *)(in_stack_00000004 + -4) + -1;
    }
  }
LAB_0043a300:
  *(int *)(in_stack_00000004 + -0x10) = *(int *)(in_stack_00000004 + -0x10) + -1;
  *(int *)(in_stack_00000004 + -0xc) = *(int *)(in_stack_00000004 + -0xc) + -1;
  *(int *)(in_stack_00000004 + -8) = *(int *)(in_stack_00000004 + -8) + 2;
  *(int *)(in_stack_00000004 + -4) = *(int *)(in_stack_00000004 + -4) + 2;
  if ((*(char *)(*(int *)(in_stack_00000004 + -0x34) + 0x2c) != '\0') ||
     ((*(char *)(in_stack_00000004 + -0x21) != '\0' &&
      (*(char *)(in_stack_00000004 + -0x35) != '\0')))) {
    UVar19 = 0xf;
    UVar18 = *(UINT *)(&DAT_004748e8 +
                      (uint)*(byte *)(*(int *)(in_stack_00000004 + -0x34) + 0x2c) * 4);
    ptVar10 = (LPRECT)(in_stack_00000004 + -0x10);
    pHVar11 = (HDC)FUN_004183d4(*(int **)(in_stack_00000004 + -0x28));
    DrawEdge(pHVar11,ptVar10,UVar18,UVar19);
  }
  if (*(char *)(in_stack_00000004 + -0x21) != '\0') {
    if (*(char *)(in_stack_00000004 + -0x35) != '\0') {
      *(int *)(in_stack_00000004 + -0x20) = *(int *)(in_stack_00000004 + -8) + 1;
    }
    if ((*(char *)(in_stack_00000004 + -0x59) == '\0') || (*(char *)(in_stack_00000004 + 8) == '\0')
       ) {
      FUN_00417804(*(int **)(*(int *)(in_stack_00000004 + -0x28) + 0x14),0x8000000d);
    }
    FUN_00417eb0(*(int **)(in_stack_00000004 + -0x28),(RECT *)(in_stack_00000004 + -0x20));
  }
  if ((*(char *)(in_stack_00000004 + 8) != '\0') && (*(char *)(in_stack_00000004 + -0x59) != '\0'))
  {
    if (*(char *)(in_stack_00000004 + -0x21) == '\0') {
      if ((*(byte *)(in_stack_00000004 + 0xc) & 0x40) != 0) {
        UVar19 = 0xf;
        UVar18 = 4;
        ptVar10 = (LPRECT)(in_stack_00000004 + -0x20);
        pHVar11 = (HDC)FUN_004183d4(*(int **)(in_stack_00000004 + -0x28));
        DrawEdge(pHVar11,ptVar10,UVar18,UVar19);
      }
    }
    else {
      UVar19 = 0xf;
      UVar18 = 2;
      ptVar10 = (LPRECT)(in_stack_00000004 + -0x20);
      pHVar11 = (HDC)FUN_004183d4(*(int **)(in_stack_00000004 + -0x28));
      DrawEdge(pHVar11,ptVar10,UVar18,UVar19);
    }
    if (*(char *)(in_stack_00000004 + -0x21) == '\0') {
      OffsetRect((LPRECT)(in_stack_00000004 + -0x20),0,-1);
    }
  }
  if ((*(char *)(in_stack_00000004 + -0x21) == '\0') ||
     (*(char *)(in_stack_00000004 + -0x35) == '\0')) {
    *(int *)(in_stack_00000004 + -0x20) = *(int *)(in_stack_00000004 + -8) + 1;
  }
  *(int *)(in_stack_00000004 + -0x20) = *(int *)(in_stack_00000004 + -0x20) + 2;
  *(int *)(in_stack_00000004 + -0x18) = *(int *)(in_stack_00000004 + -0x18) + -1;
  *(uint *)(in_stack_00000004 + -0x60) =
       (uint)(*(ushort *)(&DAT_004748e0 + (uint)*(byte *)(in_stack_00000004 + -0x2d) * 2) | 0x60);
  if ((*(char *)(in_stack_00000004 + -0x61) != '\0') &&
     ((*(byte *)(in_stack_00000004 + 0xd) & 1) != 0)) {
    *(uint *)(in_stack_00000004 + -0x60) = *(uint *)(in_stack_00000004 + -0x60) | 0x100000;
  }
  puVar14 = (undefined4 *)(in_stack_00000004 + -0x20);
  puVar15 = (undefined4 *)(in_stack_00000004 + -0x58);
  for (iVar5 = 4; iVar5 != 0; iVar5 = iVar5 + -1) {
    *puVar15 = *puVar14;
    puVar14 = puVar14 + (uint)bVar17 * -2 + 1;
    puVar15 = puVar15 + (uint)bVar17 * -2 + 1;
  }
  if ((*(byte *)(in_stack_00000004 + 0xc) & 0x20) != 0) {
    FUN_00417300(*(int **)(*(int *)(in_stack_00000004 + -0x28) + 0xc),DAT_0043a61c);
  }
  FUN_00439b48(*(int *)(in_stack_00000004 + -0x34),*(int **)(in_stack_00000004 + -0x28),
               *(int *)(*(int *)(in_stack_00000004 + -0x34) + 0x24),
               *(uint *)(in_stack_00000004 + -0x60) | 0x500,*(char *)(in_stack_00000004 + -0x21),
               (LPRECT)(in_stack_00000004 + -0x20));
  uVar12 = (*(int *)(in_stack_00000004 + -0x4c) - *(int *)(in_stack_00000004 + -0x54)) -
           (*(int *)(in_stack_00000004 + -0x14) - *(int *)(in_stack_00000004 + -0x1c));
  iVar5 = (int)uVar12 >> 1;
  if (iVar5 < 0) {
    iVar5 = iVar5 + (uint)((uVar12 & 1) != 0);
  }
  OffsetRect((LPRECT)(in_stack_00000004 + -0x20),0,iVar5);
  if (((*(char *)(in_stack_00000004 + 8) != '\0') && (*(char *)(in_stack_00000004 + -0x21) != '\0'))
     && (*(char *)(in_stack_00000004 + -0x59) != '\0')) {
    OffsetRect((LPRECT)(in_stack_00000004 + -0x20),1,0);
  }
  FUN_00439b48(*(int *)(in_stack_00000004 + -0x34),*(int **)(in_stack_00000004 + -0x28),
               *(int *)(*(int *)(in_stack_00000004 + -0x34) + 0x24),
               *(uint *)(in_stack_00000004 + -0x60),*(char *)(in_stack_00000004 + -0x21),
               (LPRECT)(in_stack_00000004 + -0x20));
  uVar1 = *(ushort *)(*(int *)(in_stack_00000004 + -0x34) + 0x54);
  if ((uVar1 != 0) && (*(char *)(in_stack_00000004 + 8) == '\0')) {
    *(undefined4 *)(in_stack_00000004 + -0x20) = *(undefined4 *)(in_stack_00000004 + -0x18);
    *(int *)(in_stack_00000004 + -0x18) = *(int *)(in_stack_00000004 + -0x50) + -10;
    ptVar10 = (LPRECT)(in_stack_00000004 + -0x20);
    cVar3 = *(char *)(in_stack_00000004 + -0x21);
    in_stack_ffffffbc = 2;
    FUN_00438cfc(uVar1,&local_8);
    FUN_00439b48(*(int *)(in_stack_00000004 + -0x34),*(int **)(in_stack_00000004 + -0x28),local_8,
                 in_stack_ffffffbc,cVar3,ptVar10);
  }
  *in_FS_OFFSET = in_stack_ffffffbc;
  FUN_00403bdc(&local_8);
  return;
}



void FUN_0043a620(void)

{
  ushort uVar1;
  undefined1 *puVar2;
  char cVar3;
  undefined1 uVar4;
  int iVar5;
  int iVar6;
  undefined4 uVar7;
  int *piVar8;
  HBITMAP pHVar9;
  LPRECT ptVar10;
  HDC pHVar11;
  uint uVar12;
  LONG LVar13;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_ECX_03;
  undefined4 extraout_ECX_04;
  undefined4 extraout_ECX_05;
  undefined4 extraout_ECX_06;
  undefined4 *puVar14;
  undefined4 *puVar15;
  undefined4 *in_FS_OFFSET;
  bool bVar16;
  byte bVar17;
  int in_stack_00000004;
  undefined4 in_stack_ffffffbc;
  UINT UVar18;
  UINT UVar19;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  undefined *local_8;
  
  bVar17 = 0;
  puStack_18 = &stack0xfffffffc;
  local_8 = (undefined *)0x0;
  puStack_1c = &LAB_0043aeab;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  puVar2 = &stack0xfffffffc;
  if (*(char *)(in_stack_00000004 + -0x21) == '\0') {
    FUN_00417eb0(*(int **)(in_stack_00000004 + -0x28),(RECT *)(in_stack_00000004 + -0x20));
    puVar2 = puStack_18;
  }
  puStack_18 = puVar2;
  if (*(int *)(in_stack_00000004 + -0x2c) == 0) {
    piVar8 = FUN_004030cc(*(int **)(in_stack_00000004 + -0x2c),(int)PTR_PTR_00438874);
    if ((char)piVar8 == '\0') {
      *(undefined1 *)(in_stack_00000004 + -0x2d) = 0;
    }
    else {
      *(undefined1 *)(in_stack_00000004 + -0x2d) =
           *(undefined1 *)(*(int *)(in_stack_00000004 + -0x2c) + 0x50);
    }
  }
  else {
    *(undefined1 *)(in_stack_00000004 + -0x2d) = 0;
  }
  *(int *)(in_stack_00000004 + -8) = *(int *)(in_stack_00000004 + -0x18) + -1;
  iVar5 = *(int *)(in_stack_00000004 + -0x1c) + 1;
  bVar16 = iVar5 == 0;
  *(int *)(in_stack_00000004 + -0xc) = iVar5;
  FUN_00403f6c(*(uint **)(*(int *)(in_stack_00000004 + -0x34) + 0x24),(uint *)&DAT_0043aec0);
  if (bVar16) {
    FUN_00417eb0(*(int **)(in_stack_00000004 + -0x28),(RECT *)(in_stack_00000004 + -0x20));
    *(int *)(in_stack_00000004 + -0x10) = *(int *)(in_stack_00000004 + -8) + 2;
    *(undefined4 *)(in_stack_00000004 + -8) = 0;
    *(undefined1 *)(in_stack_00000004 + -0x35) = 0;
    goto LAB_0043ab89;
  }
  uVar7 = extraout_ECX;
  if (*(int *)(in_stack_00000004 + -0x3c) == 0) {
LAB_0043a742:
    uVar4 = 0;
  }
  else {
    iVar5 = *(int *)(*(int *)(in_stack_00000004 + -0x34) + 0x34);
    if (iVar5 < 0) {
LAB_0043a71b:
      if (*(char *)(*(int *)(in_stack_00000004 + -0x34) + 0x2c) == '\0') goto LAB_0043a742;
      piVar8 = *(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40);
      if (piVar8 != (int *)0x0) {
        cVar3 = (**(code **)(*piVar8 + 0x1c))();
        uVar7 = extraout_ECX_01;
        if (cVar3 == '\0') goto LAB_0043a742;
      }
    }
    else {
      iVar6 = FUN_00436d0c(*(int **)(in_stack_00000004 + -0x3c));
      uVar7 = extraout_ECX_00;
      if (iVar6 <= iVar5) goto LAB_0043a71b;
    }
    uVar4 = 1;
  }
  *(undefined1 *)(in_stack_00000004 + -0x3d) = uVar4;
  if (*(char *)(in_stack_00000004 + -0x3d) == '\0') {
    piVar8 = *(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40);
    if (piVar8 != (int *)0x0) {
      cVar3 = (**(code **)(*piVar8 + 0x1c))();
      uVar7 = extraout_ECX_02;
      if (cVar3 == '\0') goto LAB_0043a77a;
    }
    if ((*(int *)(in_stack_00000004 + -0x3c) == 0) || (*(char *)(in_stack_00000004 + 8) != '\0')) {
      *(undefined4 *)(in_stack_00000004 + -0x10) = *(undefined4 *)(in_stack_00000004 + -8);
      *(undefined4 *)(in_stack_00000004 + -4) = *(undefined4 *)(in_stack_00000004 + -0xc);
    }
    else {
      *(int *)(in_stack_00000004 + -0x10) =
           *(int *)(in_stack_00000004 + -8) - *(int *)(*(int *)(in_stack_00000004 + -0x3c) + 0x28);
      *(int *)(in_stack_00000004 + -4) =
           *(int *)(in_stack_00000004 + -0xc) + *(int *)(*(int *)(in_stack_00000004 + -0x3c) + 0x24)
      ;
    }
    *(undefined1 *)(in_stack_00000004 + -0x35) = 0;
  }
  else {
LAB_0043a77a:
    *(undefined1 *)(in_stack_00000004 + -0x35) = 1;
    if (*(char *)(in_stack_00000004 + -0x3d) == '\0') {
      *(int *)(in_stack_00000004 + -0x10) = *(int *)(in_stack_00000004 + -8) + -0x10;
      *(int *)(in_stack_00000004 + -4) = *(int *)(in_stack_00000004 + -0xc) + 0x10;
    }
    else {
      *(int *)(in_stack_00000004 + -0x10) =
           *(int *)(in_stack_00000004 + -8) - *(int *)(*(int *)(in_stack_00000004 + -0x3c) + 0x28);
      *(int *)(in_stack_00000004 + -4) =
           *(int *)(in_stack_00000004 + -0xc) + *(int *)(*(int *)(in_stack_00000004 + -0x3c) + 0x24)
      ;
    }
    if (*(char *)(*(int *)(in_stack_00000004 + -0x34) + 0x2c) != '\0') {
      *(int *)(in_stack_00000004 + -0x10) = *(int *)(in_stack_00000004 + -0x10) + -1;
      *(int *)(in_stack_00000004 + -4) = *(int *)(in_stack_00000004 + -4) + 1;
      uVar7 = FUN_004177fc(*(int *)(*(int *)(in_stack_00000004 + -0x28) + 0x14));
      *(undefined4 *)(in_stack_00000004 + -0x44) = uVar7;
      if (*(char *)(in_stack_00000004 + -0x21) == '\0') {
        uVar7 = FUN_004177fc(*(int *)(*(int *)(in_stack_00000004 + -0x28) + 0x14));
        *(undefined4 *)(in_stack_00000004 + -0x44) = uVar7;
        uVar7 = FUN_0041e5bc(0x8000000f,0x80000014);
        FUN_004177d8(*(int **)(*(int *)(in_stack_00000004 + -0x28) + 0x14),uVar7);
        FUN_00417eb0(*(int **)(in_stack_00000004 + -0x28),(RECT *)(in_stack_00000004 + -0x10));
      }
      else {
        FUN_00417804(*(int **)(*(int *)(in_stack_00000004 + -0x28) + 0x14),0x8000000f);
        FUN_00417eb0(*(int **)(in_stack_00000004 + -0x28),(RECT *)(in_stack_00000004 + -0x10));
      }
      FUN_00417804(*(int **)(*(int *)(in_stack_00000004 + -0x28) + 0x14),
                   *(undefined4 *)(in_stack_00000004 + -0x44));
      *(int *)(in_stack_00000004 + -8) = *(int *)(in_stack_00000004 + -8) + -1;
      *(int *)(in_stack_00000004 + -0xc) = *(int *)(in_stack_00000004 + -0xc) + 1;
      uVar7 = extraout_ECX_03;
    }
    if (*(char *)(in_stack_00000004 + -0x3d) == '\0') {
      puVar14 = (undefined4 *)(in_stack_00000004 + -0x10);
      puVar15 = (undefined4 *)(in_stack_00000004 + -0x58);
      for (iVar5 = 4; iVar5 != 0; iVar5 = iVar5 + -1) {
        *puVar15 = *puVar14;
        puVar14 = puVar14 + (uint)bVar17 * -2 + 1;
        puVar15 = puVar15 + (uint)bVar17 * -2 + 1;
      }
      iVar5 = (**(code **)(**(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40) + 0x2c))();
      if (iVar5 < *(int *)(in_stack_00000004 + -8) - *(int *)(in_stack_00000004 + -0x10)) {
        iVar5 = (**(code **)(**(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40) + 0x2c))();
        uVar12 = (*(int *)(in_stack_00000004 + -8) - *(int *)(in_stack_00000004 + -0x10)) - iVar5;
        iVar5 = (int)uVar12 >> 1;
        if (iVar5 < 0) {
          iVar5 = iVar5 + (uint)((uVar12 & 1) != 0);
        }
        *(int *)(in_stack_00000004 + -8) = (*(int *)(in_stack_00000004 + -8) - iVar5) + 1;
        iVar5 = (**(code **)(**(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40) + 0x2c))();
        *(int *)(in_stack_00000004 + -0x10) = *(int *)(in_stack_00000004 + -8) - iVar5;
      }
      iVar5 = (**(code **)(**(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40) + 0x20))();
      if (iVar5 < *(int *)(in_stack_00000004 + -4) - *(int *)(in_stack_00000004 + -0xc)) {
        iVar5 = (**(code **)(**(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40) + 0x20))();
        uVar12 = (*(int *)(in_stack_00000004 + -4) - *(int *)(in_stack_00000004 + -0xc)) - iVar5;
        iVar5 = (int)uVar12 >> 1;
        if (iVar5 < 0) {
          iVar5 = iVar5 + (uint)((uVar12 & 1) != 0);
        }
        *(int *)(in_stack_00000004 + -0xc) = iVar5 + *(int *)(in_stack_00000004 + -0xc) + 1;
        iVar5 = (**(code **)(**(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40) + 0x20))();
        *(int *)(in_stack_00000004 + -4) = iVar5 + *(int *)(in_stack_00000004 + -0xc);
      }
      FUN_00418058(*(int **)(in_stack_00000004 + -0x28),in_stack_00000004 + -0x10,
                   *(int **)(*(int *)(in_stack_00000004 + -0x34) + 0x40));
      puVar14 = (undefined4 *)(in_stack_00000004 + -0x58);
      puVar15 = (undefined4 *)(in_stack_00000004 + -0x10);
      for (iVar5 = 4; iVar5 != 0; iVar5 = iVar5 + -1) {
        *puVar15 = *puVar14;
        puVar14 = puVar14 + (uint)bVar17 * -2 + 1;
        puVar15 = puVar15 + (uint)bVar17 * -2 + 1;
      }
    }
    else {
      iVar5 = *(int *)(*(int *)(in_stack_00000004 + -0x34) + 0x34);
      if (iVar5 < 0) {
LAB_0043a8fb:
        piVar8 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',uVar7);
        *(int **)(in_stack_00000004 + -0x48) = piVar8;
        uVar7 = *in_FS_OFFSET;
        *in_FS_OFFSET = &stack0xffffffd4;
        (**(code **)(**(int **)(in_stack_00000004 + -0x48) + 0x3c))
                  (*(int **)(in_stack_00000004 + -0x48),1);
        pHVar9 = LoadBitmapA((HINSTANCE)0x0,&lpBitmapName_00007ff8);
        FUN_0041d3e0(*(int **)(in_stack_00000004 + -0x48),pHVar9);
        *(undefined4 *)(in_stack_00000004 + -0x44) =
             *(undefined4 *)(*(int *)(*(int *)(in_stack_00000004 + -0x28) + 0xc) + 0x18);
        FUN_00417034(*(int **)(*(int *)(in_stack_00000004 + -0x28) + 0xc),-0x7fffffee,
                     extraout_ECX_05);
        piVar8 = *(int **)(in_stack_00000004 + -0x48);
        iVar5 = (**(code **)(**(int **)(in_stack_00000004 + -0x48) + 0x20))();
        uVar12 = (*(int *)(in_stack_00000004 + -4) - *(int *)(in_stack_00000004 + -0xc)) - iVar5;
        iVar5 = (int)uVar12 >> 1;
        if (iVar5 < 0) {
          iVar5 = iVar5 + (uint)((uVar12 & 1) != 0);
        }
        iVar6 = iVar5 + *(int *)(in_stack_00000004 + -0xc) + 1;
        iVar5 = (**(code **)(**(int **)(in_stack_00000004 + -0x48) + 0x2c))();
        uVar12 = (*(int *)(in_stack_00000004 + -8) - *(int *)(in_stack_00000004 + -0x10)) - iVar5;
        iVar5 = (int)uVar12 >> 1;
        if (iVar5 < 0) {
          iVar5 = iVar5 + (uint)((uVar12 & 1) != 0);
        }
        FUN_00417dbc(*(int **)(in_stack_00000004 + -0x28),
                     iVar5 + *(int *)(in_stack_00000004 + -0x10) + 1,iVar6,piVar8);
        FUN_00417034(*(int **)(*(int *)(in_stack_00000004 + -0x28) + 0xc),
                     *(int *)(in_stack_00000004 + -0x44),extraout_ECX_06);
        *in_FS_OFFSET = uVar7;
        FUN_00402f54(*(int **)(in_stack_00000004 + -0x48));
        return;
      }
      iVar6 = FUN_00436d0c(*(int **)(in_stack_00000004 + -0x3c));
      uVar7 = extraout_ECX_04;
      if (iVar6 <= iVar5) goto LAB_0043a8fb;
      FUN_00437228(*(int **)(in_stack_00000004 + -0x3c),*(undefined4 *)(in_stack_00000004 + -0x28),
                   *(undefined4 *)(in_stack_00000004 + -0x10),
                   *(undefined1 *)(*(int *)(in_stack_00000004 + -0x34) + 0x2d),
                   *(undefined4 *)(*(int *)(in_stack_00000004 + -0x34) + 0x34),
                   *(undefined4 *)(in_stack_00000004 + -0xc));
    }
    if (*(char *)(*(int *)(in_stack_00000004 + -0x34) + 0x2c) != '\0') {
      *(int *)(in_stack_00000004 + -8) = *(int *)(in_stack_00000004 + -8) + -1;
      *(int *)(in_stack_00000004 + -4) = *(int *)(in_stack_00000004 + -4) + -1;
    }
  }
LAB_0043ab89:
  *(int *)(in_stack_00000004 + -0x10) = *(int *)(in_stack_00000004 + -0x10) + -1;
  *(int *)(in_stack_00000004 + -0xc) = *(int *)(in_stack_00000004 + -0xc) + -1;
  *(int *)(in_stack_00000004 + -8) = *(int *)(in_stack_00000004 + -8) + 2;
  *(int *)(in_stack_00000004 + -4) = *(int *)(in_stack_00000004 + -4) + 2;
  if ((*(char *)(*(int *)(in_stack_00000004 + -0x34) + 0x2c) != '\0') ||
     ((*(char *)(in_stack_00000004 + -0x21) != '\0' &&
      (*(char *)(in_stack_00000004 + -0x35) != '\0')))) {
    UVar19 = 0xf;
    UVar18 = *(UINT *)(&DAT_004748e8 +
                      (uint)*(byte *)(*(int *)(in_stack_00000004 + -0x34) + 0x2c) * 4);
    ptVar10 = (LPRECT)(in_stack_00000004 + -0x10);
    pHVar11 = (HDC)FUN_004183d4(*(int **)(in_stack_00000004 + -0x28));
    DrawEdge(pHVar11,ptVar10,UVar18,UVar19);
  }
  if (*(char *)(in_stack_00000004 + -0x21) != '\0') {
    if (*(char *)(in_stack_00000004 + -0x35) != '\0') {
      *(int *)(in_stack_00000004 + -0x18) = *(int *)(in_stack_00000004 + -0x10) + -1;
    }
    if ((*(char *)(in_stack_00000004 + -0x59) == '\0') || (*(char *)(in_stack_00000004 + 8) == '\0')
       ) {
      FUN_00417804(*(int **)(*(int *)(in_stack_00000004 + -0x28) + 0x14),0x8000000d);
    }
    FUN_00417eb0(*(int **)(in_stack_00000004 + -0x28),(RECT *)(in_stack_00000004 + -0x20));
  }
  if ((*(char *)(in_stack_00000004 + 8) != '\0') && (*(char *)(in_stack_00000004 + -0x59) != '\0'))
  {
    if (*(char *)(in_stack_00000004 + -0x21) == '\0') {
      if ((*(byte *)(in_stack_00000004 + 0xc) & 0x40) != 0) {
        UVar19 = 0xf;
        UVar18 = 4;
        ptVar10 = (LPRECT)(in_stack_00000004 + -0x20);
        pHVar11 = (HDC)FUN_004183d4(*(int **)(in_stack_00000004 + -0x28));
        DrawEdge(pHVar11,ptVar10,UVar18,UVar19);
      }
    }
    else {
      UVar19 = 0xf;
      UVar18 = 2;
      ptVar10 = (LPRECT)(in_stack_00000004 + -0x20);
      pHVar11 = (HDC)FUN_004183d4(*(int **)(in_stack_00000004 + -0x28));
      DrawEdge(pHVar11,ptVar10,UVar18,UVar19);
    }
    if (*(char *)(in_stack_00000004 + -0x21) == '\0') {
      OffsetRect((LPRECT)(in_stack_00000004 + -0x20),0,-1);
    }
  }
  if ((*(char *)(in_stack_00000004 + -0x21) == '\0') ||
     (*(char *)(in_stack_00000004 + -0x35) == '\0')) {
    *(int *)(in_stack_00000004 + -0x18) = *(int *)(in_stack_00000004 + -0x10) + -1;
  }
  *(int *)(in_stack_00000004 + -0x20) = *(int *)(in_stack_00000004 + -0x20) + 2;
  *(int *)(in_stack_00000004 + -0x18) = *(int *)(in_stack_00000004 + -0x18) + -1;
  *(uint *)(in_stack_00000004 + -0x60) =
       (uint)(*(ushort *)(&DAT_004748e0 + (uint)*(byte *)(in_stack_00000004 + -0x2d) * 2) | 0x60);
  if ((*(char *)(in_stack_00000004 + -0x61) != '\0') &&
     ((*(byte *)(in_stack_00000004 + 0xd) & 1) != 0)) {
    *(uint *)(in_stack_00000004 + -0x60) = *(uint *)(in_stack_00000004 + -0x60) | 0x100000;
  }
  puVar14 = (undefined4 *)(in_stack_00000004 + -0x20);
  puVar15 = (undefined4 *)(in_stack_00000004 + -0x58);
  for (iVar5 = 4; iVar5 != 0; iVar5 = iVar5 + -1) {
    *puVar15 = *puVar14;
    puVar14 = puVar14 + (uint)bVar17 * -2 + 1;
    puVar15 = puVar15 + (uint)bVar17 * -2 + 1;
  }
  if ((*(byte *)(in_stack_00000004 + 0xc) & 0x20) != 0) {
    FUN_00417300(*(int **)(*(int *)(in_stack_00000004 + -0x28) + 0xc),DAT_0043aec4);
  }
  FUN_00439b48(*(int *)(in_stack_00000004 + -0x34),*(int **)(in_stack_00000004 + -0x28),
               *(int *)(*(int *)(in_stack_00000004 + -0x34) + 0x24),
               *(uint *)(in_stack_00000004 + -0x60) | 0x500,*(char *)(in_stack_00000004 + -0x21),
               (LPRECT)(in_stack_00000004 + -0x20));
  *(undefined4 *)(in_stack_00000004 + -0x20) = *(undefined4 *)(in_stack_00000004 + -0x58);
  *(undefined4 *)(in_stack_00000004 + -0x18) = *(undefined4 *)(in_stack_00000004 + -0x50);
  uVar12 = (*(int *)(in_stack_00000004 + -0x4c) - *(int *)(in_stack_00000004 + -0x54)) -
           (*(int *)(in_stack_00000004 + -0x14) - *(int *)(in_stack_00000004 + -0x1c));
  iVar5 = (int)uVar12 >> 1;
  if (iVar5 < 0) {
    iVar5 = iVar5 + (uint)((uVar12 & 1) != 0);
  }
  OffsetRect((LPRECT)(in_stack_00000004 + -0x20),0,iVar5);
  if (((*(char *)(in_stack_00000004 + 8) != '\0') && (*(char *)(in_stack_00000004 + -0x21) != '\0'))
     && (*(char *)(in_stack_00000004 + -0x59) != '\0')) {
    OffsetRect((LPRECT)(in_stack_00000004 + -0x20),1,0);
  }
  FUN_00439b48(*(int *)(in_stack_00000004 + -0x34),*(int **)(in_stack_00000004 + -0x28),
               *(int *)(*(int *)(in_stack_00000004 + -0x34) + 0x24),
               *(uint *)(in_stack_00000004 + -0x60),*(char *)(in_stack_00000004 + -0x21),
               (LPRECT)(in_stack_00000004 + -0x20));
  uVar1 = *(ushort *)(*(int *)(in_stack_00000004 + -0x34) + 0x54);
  if ((uVar1 != 0) && (*(char *)(in_stack_00000004 + 8) == '\0')) {
    FUN_00438cfc(uVar1,(int *)&local_8);
    *(undefined4 *)(in_stack_00000004 + -0x20) = 10;
    LVar13 = FUN_00418234(*(int **)(in_stack_00000004 + -0x28),local_8);
    *(LONG *)(in_stack_00000004 + -0x18) = LVar13 + *(int *)(in_stack_00000004 + -0x20);
    in_stack_ffffffbc = 2;
    FUN_00439b48(*(int *)(in_stack_00000004 + -0x34),*(int **)(in_stack_00000004 + -0x28),
                 (int)local_8,2,*(char *)(in_stack_00000004 + -0x21),
                 (LPRECT)(in_stack_00000004 + -0x20));
  }
  *in_FS_OFFSET = in_stack_ffffffbc;
  FUN_00403bdc((int *)&local_8);
  return;
}



undefined4 FUN_0043afe0(int param_1)

{
  int iVar1;
  undefined4 uVar2;
  
  uVar2 = 0;
  for (iVar1 = *(int *)(param_1 + 0x58); (iVar1 != 0 && (*(int *)(iVar1 + 0x70) == 0));
      iVar1 = *(int *)(iVar1 + 0x58)) {
  }
  if (iVar1 == 0) {
    iVar1 = thunk_FUN_0043b978(param_1);
    if (iVar1 != 0) {
      uVar2 = *(undefined4 *)(iVar1 + 0x3c);
    }
  }
  else {
    uVar2 = *(undefined4 *)(iVar1 + 0x70);
  }
  return uVar2;
}



void FUN_0043b010(void)

{
  BOOL BVar1;
  int in_stack_00000004;
  undefined4 local_158 [38];
  undefined4 local_c0;
  undefined4 local_bc;
  
  local_158[0] = 0x154;
  BVar1 = SystemParametersInfoA(0x29,0,local_158,0);
  if (BVar1 != 0) {
    **(undefined4 **)(in_stack_00000004 + -4) = local_c0;
    **(undefined4 **)(in_stack_00000004 + 8) = local_bc;
  }
  return;
}



void FUN_0043b05c(int *param_1,int *param_2,int *param_3,int *param_4)

{
  bool bVar1;
  char cVar2;
  int *piVar3;
  int iVar4;
  uint uVar5;
  byte bVar6;
  uint *in_FS_OFFSET;
  bool bVar7;
  undefined1 uVar8;
  uint uStack_40;
  undefined1 *puStack_3c;
  undefined1 *puStack_38;
  undefined4 *local_28;
  tagRECT local_24;
  int local_14;
  int local_10;
  int *local_c;
  int *local_8;
  
  puStack_38 = &stack0xfffffffc;
  local_28 = (undefined4 *)0x0;
  local_14 = 0;
  puStack_3c = &LAB_0043b23e;
  uStack_40 = *in_FS_OFFSET;
  *in_FS_OFFSET = (uint)&uStack_40;
  local_c = param_2;
  local_8 = param_3;
  piVar3 = (int *)FUN_00403130(param_1,param_2,param_3);
  piVar3 = FUN_004030cc(piVar3,(int)PTR_PTR_0043859c);
  bVar7 = (char)piVar3 == '\0';
  if (bVar7) {
    uVar8 = 1;
  }
  else {
    uVar8 = bVar7;
    FUN_0043b010();
  }
  bVar7 = !bVar7;
  iVar4 = thunk_FUN_0043b978((int)param_1);
  local_10 = FUN_0043afe0((int)param_1);
  FUN_00403f6c((uint *)param_1[9],(uint *)&LAB_0043b258);
  if ((bool)uVar8) {
    *param_4 = 5;
    *local_8 = -2;
    bVar1 = false;
  }
  else if ((local_10 == 0) || ((0x7fffffff < (uint)param_1[0xd] && (bVar7)))) {
    if ((param_1[0x10] == 0) ||
       (cVar2 = (**(code **)(*(int *)param_1[0x10] + 0x1c))(), cVar2 != '\0')) {
      *local_8 = -7;
      bVar1 = false;
    }
    else {
      *local_8 = 0x10;
      if (!bVar7) {
        *param_4 = 0x10;
      }
      bVar1 = true;
    }
  }
  else {
    *local_8 = *(int *)(local_10 + 0x28);
    if (!bVar7) {
      *param_4 = *(int *)(local_10 + 0x24);
    }
    bVar1 = true;
  }
  if ((bVar1) && (!bVar7)) {
    *local_8 = *local_8 + 0xf;
  }
  if (!bVar7) {
    *param_4 = *param_4 + 3;
  }
  FUN_00402c14(&local_24.left,0x10,0);
  if (iVar4 == 0) {
    piVar3 = FUN_004030cc((int *)0x0,(int)PTR_PTR_00438874);
    bVar6 = bRam00000050;
    if ((char)piVar3 == '\0') {
      bVar6 = 0;
    }
  }
  else {
    bVar6 = 0;
  }
  if (*(ushort *)(param_1 + 0x15) == 0) {
    FUN_00403c74(&local_14,param_1[9]);
  }
  else {
    FUN_00438cfc(*(ushort *)(param_1 + 0x15),(int *)&local_28);
    FUN_00403ea8(&local_14,(undefined4 *)param_1[9],local_28);
  }
  uVar5 = (uint)(*(ushort *)(&DAT_004748f0 + (uint)bVar6 * 2) | 0x560);
  FUN_00439b48((int)param_1,local_c,local_14,uVar5,'\0',&local_24);
  *local_8 = *local_8 + (local_24.right - local_24.left) + 7;
  if (*(short *)((int)param_1 + 0x9a) != 0) {
    (*(code *)param_1[0x26])(param_1[0x27],param_1,local_c,param_4,local_8);
  }
  *in_FS_OFFSET = uVar5;
  FUN_00403bdc((int *)&local_28);
  FUN_00403bdc(&local_14);
  return;
}



void FUN_0043b270(int *param_1,uint *param_2)

{
  undefined1 in_ZF;
  
  FUN_00403f6c((uint *)param_1[9],param_2);
  if (!(bool)in_ZF) {
    FUN_00403c30(param_1 + 9,param_2);
    (**(code **)(*param_1 + 0x38))(param_1,1);
  }
  return;
}



void FUN_0043b298(int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  if (*(int *)(param_1 + 0x58) != 0) {
    iVar1 = FUN_0043b408(*(int *)(param_1 + 0x58));
    if (-1 < iVar1 + -1) {
      iVar3 = 0;
      do {
        iVar2 = FUN_0043b418(*(int *)(param_1 + 0x58),iVar3);
        if (((param_1 != iVar2) && (*(char *)(iVar2 + 0x31) != '\0')) &&
           (*(char *)(iVar2 + 0x33) == *(char *)(param_1 + 0x33))) {
          FUN_0043b2e0(iVar2,0);
        }
        iVar3 = iVar3 + 1;
        iVar1 = iVar1 + -1;
      } while (iVar1 != 0);
    }
  }
  return;
}



void FUN_0043b2e0(int param_1,byte param_2)

{
  uint uIDCheckItem;
  HMENU hMenu;
  UINT uCheck;
  
  if (param_2 != *(byte *)(param_1 + 0x2c)) {
    *(byte *)(param_1 + 0x2c) = param_2;
    if ((*(int *)(param_1 + 0x58) != 0) && ((*(byte *)(param_1 + 0x20) & 2) == 0)) {
      uCheck = *(UINT *)(&DAT_00474878 + (uint)param_2 * 4);
      uIDCheckItem = (uint)*(ushort *)(param_1 + 0x44);
      hMenu = (HMENU)FUN_00439ab8(*(int *)(param_1 + 0x58));
      CheckMenuItem(hMenu,uIDCheckItem,uCheck);
    }
    if ((param_2 != 0) && (*(char *)(param_1 + 0x31) != '\0')) {
      FUN_0043b298(param_1);
    }
  }
  return;
}



void FUN_0043b334(int *param_1,byte param_2)

{
  int iVar1;
  uint uIDEnableItem;
  HMENU hMenu;
  UINT uEnable;
  
  if (param_2 == *(byte *)((int)param_1 + 0x2d)) {
    return;
  }
  *(byte *)((int)param_1 + 0x2d) = param_2;
  if (((*(int *)PTR_DAT_004758f8 != 2) || (iVar1 = FUN_0043b408((int)param_1), iVar1 == 0)) &&
     ((param_1[0x16] == 0 || (*(int *)(param_1[0x16] + 0x60) == 0)))) {
    if ((param_1[0x16] != 0) && ((*(byte *)(param_1 + 8) & 2) == 0)) {
      uEnable = *(UINT *)(&DAT_00474880 + (uint)param_2 * 4);
      uIDEnableItem = (uint)*(ushort *)(param_1 + 0x11);
      hMenu = (HMENU)FUN_00439ab8(param_1[0x16]);
      EnableMenuItem(hMenu,uIDEnableItem,uEnable);
    }
    (**(code **)(*param_1 + 0x38))(param_1,0);
    return;
  }
  (**(code **)(*param_1 + 0x38))(param_1,1);
  return;
}



void FUN_0043b3ac(int param_1,byte param_2)

{
  int iVar1;
  int iVar2;
  
  if (param_2 != *(byte *)(param_1 + 0x33)) {
    iVar1 = *(int *)(param_1 + 0x58);
    if (iVar1 != 0) {
      iVar2 = FUN_0043b724(iVar1,param_1);
      FUN_00439a58(iVar1,iVar2,param_2);
    }
    *(byte *)(param_1 + 0x33) = param_2;
    if ((*(char *)(param_1 + 0x2c) != '\0') && (*(char *)(param_1 + 0x31) != '\0')) {
      FUN_0043b298(param_1);
    }
  }
  return;
}



undefined4 FUN_0043b3f0(int param_1)

{
  if (*(int *)(param_1 + 0x38) != 0) {
    return *(undefined4 *)(*(int *)(param_1 + 0x38) + 0x10);
  }
  return 0;
}



undefined4 FUN_0043b408(int param_1)

{
  if (*(int *)(param_1 + 0x50) == 0) {
    return 0;
  }
  return *(undefined4 *)(*(int *)(param_1 + 0x50) + 8);
}



void FUN_0043b418(int param_1,int param_2)

{
  undefined4 uStack00000004;
  
  if (*(int *)(param_1 + 0x50) == 0) {
    FUN_00438c50((undefined4 *)PTR_PTR_004756d4);
  }
  uStack00000004 = 0x43b438;
  FUN_0040f4e8(*(undefined4 **)(param_1 + 0x50),param_2);
  return;
}



void FUN_0043b43c(int *param_1,short param_2)

{
  if (param_2 != (short)param_1[0x15]) {
    *(short *)(param_1 + 0x15) = param_2;
    (**(code **)(*param_1 + 0x38))(param_1,1);
  }
  return;
}



void FUN_0043b450(int *param_1,char param_2)

{
  if (param_2 != *(char *)((int)param_1 + 0x32)) {
    *(char *)((int)param_1 + 0x32) = param_2;
    (**(code **)(*param_1 + 0x38))(param_1,1);
  }
  return;
}



void FUN_0043b460(int *param_1,int param_2)

{
  if (param_2 != param_1[0xd]) {
    param_1[0xd] = param_2;
    (**(code **)(*param_1 + 0x38))(param_1,1);
  }
  return;
}



int FUN_0043b470(int param_1)

{
  int iVar1;
  
  iVar1 = -1;
  if (*(int *)(param_1 + 0x58) != 0) {
    iVar1 = FUN_0043b724(*(int *)(param_1 + 0x58),param_1);
  }
  return iVar1;
}



void FUN_0043b488(int param_1,int param_2)

{
  int *piVar1;
  int iVar2;
  
  if (*(int *)(param_1 + 0x58) != 0) {
    iVar2 = FUN_0043b408(*(int *)(param_1 + 0x58));
    if (param_2 < 0) {
      param_2 = 0;
    }
    if (iVar2 <= param_2) {
      param_2 = iVar2 + -1;
    }
    iVar2 = FUN_0043b470(param_1);
    if (param_2 != iVar2) {
      piVar1 = *(int **)(param_1 + 0x58);
      FUN_0043b758(piVar1,param_1);
      FUN_0043b594(piVar1,param_2,param_1);
    }
  }
  return;
}



void FUN_0043b594(int *param_1,int param_2,int param_3)

{
  int iVar1;
  int iVar2;
  int extraout_ECX;
  
  iVar1 = param_3;
  if (*(int *)(param_3 + 0x58) != 0) {
    FUN_00438c50((undefined4 *)PTR_PTR_004758f0);
    iVar1 = extraout_ECX;
  }
  if (param_1[0x14] == 0) {
    iVar1 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',iVar1);
    param_1[0x14] = iVar1;
  }
  iVar1 = param_2 + -1;
  if ((-1 < iVar1) && (iVar1 < *(int *)(param_1[0x14] + 8))) {
    iVar2 = FUN_0040f4e8((undefined4 *)param_1[0x14],iVar1);
    if (*(byte *)(param_3 + 0x33) < *(byte *)(iVar2 + 0x33)) {
      iVar1 = FUN_0040f4e8((undefined4 *)param_1[0x14],iVar1);
      FUN_0043b3ac(param_3,*(byte *)(iVar1 + 0x33));
    }
  }
  FUN_00439a58((int)param_1,param_2,*(byte *)(param_3 + 0x33));
  FUN_0040f564((int *)param_1[0x14],param_2,param_3);
  *(int **)(param_3 + 0x58) = param_1;
  *(int **)(param_3 + 0x7c) = param_1;
  *(code **)(param_3 + 0x78) = FUN_0043b7bc;
  if (param_1[10] != 0) {
    FUN_004399d4(param_1);
  }
  iVar1 = FUN_0043b408((int)param_1);
  (**(code **)(*param_1 + 0x38))(param_1,iVar1 == 1);
  return;
}



void FUN_0043b644(int *param_1,int param_2)

{
  int iVar1;
  
  if ((-1 < param_2) && (param_1[0x14] != 0)) {
    iVar1 = FUN_0043b408((int)param_1);
    if (param_2 < iVar1) goto LAB_0043b66a;
  }
  FUN_00438c50((undefined4 *)PTR_PTR_004756d4);
LAB_0043b66a:
  iVar1 = FUN_0040f4e8((undefined4 *)param_1[0x14],param_2);
  FUN_0040f3d8((int *)param_1[0x14],param_2);
  *(undefined4 *)(iVar1 + 0x58) = 0;
  *(undefined4 *)(iVar1 + 0x78) = 0;
  *(undefined4 *)(iVar1 + 0x7c) = 0;
  if (param_1[10] != 0) {
    FUN_004399d4(param_1);
  }
  iVar1 = FUN_0043b408((int)param_1);
  (**(code **)(*param_1 + 0x38))(param_1,iVar1 == 0);
  return;
}



int FUN_0043b724(int param_1,int param_2)

{
  int iVar1;
  
  iVar1 = -1;
  if (*(int *)(param_1 + 0x50) != 0) {
    iVar1 = FUN_0040f544(*(int *)(param_1 + 0x50),param_2);
  }
  return iVar1;
}



void FUN_0043b73c(int *param_1,int param_2)

{
  int iVar1;
  
  iVar1 = FUN_0043b408((int)param_1);
  FUN_0043b594(param_1,iVar1,param_2);
  return;
}



void FUN_0043b758(int *param_1,int param_2)

{
  int iVar1;
  undefined4 uStack00000004;
  
  iVar1 = FUN_0043b724((int)param_1,param_2);
  if (iVar1 == -1) {
    FUN_00438c50((undefined4 *)PTR_PTR_0047585c);
  }
  uStack00000004 = 0x43b77d;
  FUN_0043b644(param_1,iVar1);
  return;
}



void FUN_0043b7bc(int *param_1,undefined4 param_2,undefined4 param_3,char param_4)

{
  int *piVar1;
  int *piVar2;
  
  if ((param_4 != '\0') && ((param_1[10] != 0 || (param_1[0x18] != 0)))) {
    FUN_004399d4(param_1);
  }
  if ((int *)param_1[0x16] == (int *)0x0) {
    piVar1 = (int *)param_1[1];
    piVar2 = FUN_004030cc(piVar1,(int)PTR_PTR_0043859c);
    if ((char)piVar2 != '\0') {
      FUN_0043d350(piVar1);
    }
  }
  else {
    FUN_0043b7bc((int *)param_1[0x16],param_1,param_3,'\0');
  }
  return;
}



undefined4 FUN_0043b814(int param_1,undefined4 param_2,undefined4 param_3)

{
  int *piVar1;
  
  if (*(int *)(param_1 + 0x40) == 0) {
    piVar1 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',param_3);
    *(int **)(param_1 + 0x40) = piVar1;
  }
  (**(code **)(**(int **)(param_1 + 0x40) + 0x3c))(*(int **)(param_1 + 0x40),1);
  return *(undefined4 *)(param_1 + 0x40);
}



void FUN_0043b83c(int *param_1,int param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  
  if (param_2 == 0) {
    FUN_00402f54((int *)param_1[0xe]);
    param_1[0xe] = 0;
  }
  else {
    if (param_1[0xe] == 0) {
      iVar1 = FUN_00403130(param_1,param_2,param_3);
      iVar1 = (**(code **)(iVar1 + 0x14))(iVar1,1,param_1);
      param_1[0xe] = iVar1;
    }
    (**(code **)(*(int *)param_1[0xe] + 0xc))((int *)param_1[0xe],param_2);
    iVar1 = param_1[0xe];
    *(int **)(iVar1 + 0xc) = param_1;
    *(undefined1 **)(iVar1 + 8) = &LAB_0043ba98;
    FUN_00403130(param_1,param_2,
                 CONCAT31((int3)((uint)extraout_ECX >> 8),(*(byte *)(param_2 + 0x20) & 1) != 0));
    FUN_00414540(param_2,(int)param_1,extraout_ECX_00);
  }
  return;
}



void FUN_0043b8e0(int param_1)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  
  iVar1 = FUN_0043b408(param_1);
  if (-1 < iVar1 + -1) {
    iVar3 = 0;
    do {
      piVar2 = (int *)FUN_0043b418(param_1,iVar3);
      (**(code **)(*piVar2 + 0x3c))();
      iVar3 = iVar3 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  return;
}



undefined4 thunk_FUN_0043b978(int param_1)

{
  int iVar1;
  
  do {
    iVar1 = param_1;
    param_1 = *(int *)(iVar1 + 0x58);
  } while (param_1 != 0);
  return *(undefined4 *)(iVar1 + 100);
}



undefined4 FUN_0043b978(int param_1)

{
  int iVar1;
  
  do {
    iVar1 = param_1;
    param_1 = *(int *)(iVar1 + 0x58);
  } while (param_1 != 0);
  return *(undefined4 *)(iVar1 + 100);
}



void FUN_0043b984(int *param_1,char param_2)

{
  if (param_2 != *(char *)((int)param_1 + 0x31)) {
    *(char *)((int)param_1 + 0x31) = param_2;
    if (((char)param_1[0xb] != '\0') && (*(char *)((int)param_1 + 0x31) != '\0')) {
      FUN_0043b298((int)param_1);
    }
    (**(code **)(*param_1 + 0x38))(param_1,1);
  }
  return;
}



undefined4 FUN_0043bae0(int param_1)

{
  if (*(int **)(param_1 + 0x38) != (int *)0x0) {
    param_1 = (**(code **)(**(int **)(param_1 + 0x38) + 0x24))();
    if ((char)param_1 != '\0') {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



undefined4 FUN_0043bb00(int param_1)

{
  if (*(int **)(param_1 + 0x38) != (int *)0x0) {
    param_1 = (**(code **)(**(int **)(param_1 + 0x38) + 0x28))();
    if ((char)param_1 != '\0') {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



undefined4 FUN_0043bb20(int param_1)

{
  if (*(int **)(param_1 + 0x38) != (int *)0x0) {
    param_1 = (**(code **)(**(int **)(param_1 + 0x38) + 0x30))();
    if ((char)param_1 != '\0') {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



undefined4 FUN_0043bb40(int param_1)

{
  if (*(int **)(param_1 + 0x38) != (int *)0x0) {
    param_1 = (**(code **)(**(int **)(param_1 + 0x38) + 0x2c))();
    if ((char)param_1 != '\0') {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



undefined4 FUN_0043bb60(int param_1)

{
  if (*(int **)(param_1 + 0x38) != (int *)0x0) {
    param_1 = (**(code **)(**(int **)(param_1 + 0x38) + 0x34))();
    if ((char)param_1 != '\0') {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



undefined4 FUN_0043bb80(int param_1)

{
  if (*(int **)(param_1 + 0x38) != (int *)0x0) {
    param_1 = (**(code **)(**(int **)(param_1 + 0x38) + 0x38))();
    if ((char)param_1 != '\0') {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



undefined4 FUN_0043bba0(int param_1)

{
  if (*(int **)(param_1 + 0x38) != (int *)0x0) {
    param_1 = (**(code **)(**(int **)(param_1 + 0x38) + 0x3c))();
    if ((char)param_1 != '\0') {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



undefined4 FUN_0043bbc0(int param_1)

{
  if (*(int **)(param_1 + 0x38) != (int *)0x0) {
    param_1 = (**(code **)(**(int **)(param_1 + 0x38) + 8))();
    if ((char)param_1 != '\0') {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



void FUN_0043bbe0(int *param_1,int *param_2)

{
  int *piVar1;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  
  piVar1 = FUN_004030cc(param_2,(int)PTR_PTR_00435828);
  if ((char)piVar1 == '\0') {
    FUN_0040fbdc(param_1,param_2);
  }
  else {
    FUN_00436168(param_2,CONCAT31((int3)((uint)extraout_EDX >> 8),
                                  *(undefined1 *)((int)param_1 + 0x2d)));
    FUN_004361c0(param_2,param_1[0x12]);
    FUN_00436218(param_2,(uint *)param_1[0x13]);
    FUN_00436280(param_2,param_1[0xd]);
    FUN_004360a8(param_2,(uint *)param_1[9]);
    FUN_00436334(param_2,CONCAT31((int3)((uint)extraout_EDX_00 >> 8),
                                  *(undefined1 *)((int)param_1 + 0x32)));
    (**(code **)(*param_2 + 0x34))();
  }
  return;
}



void FUN_0043bc58(int *param_1,int param_2,char param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  
  FUN_0041478c((int)param_1,param_2,param_3);
  if (param_3 == '\x01') {
    iVar1 = FUN_0043b3f0((int)param_1);
    if (param_2 == iVar1) {
      FUN_0043b83c(param_1,0,extraout_ECX);
    }
  }
  return;
}



undefined4 FUN_0043bcd4(int *param_1)

{
  FUN_004390d4(FUN_0043bcd4,param_1[0x17],(int)param_1);
  FUN_0043b7bc(param_1,param_1,param_1,'\x01');
  return 0;
}



void FUN_0043bcfc(int param_1)

{
  FUN_004390d4(FUN_0043bcd4,*(int *)(param_1 + 0x5c),param_1);
  return;
}



bool FUN_0043bd10(undefined *param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  PCNZCH pCVar1;
  
  pCVar1 = FUN_0040b538(param_1,*(undefined **)(param_4 + -4));
  if (pCVar1 != (PCNZCH)0x0) {
    FUN_004040a4((int *)(param_4 + -4),(int)pCVar1,1);
  }
  return pCVar1 != (PCNZCH)0x0;
}



void FUN_0043bd40(void)

{
  undefined4 uVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int in_stack_00000004;
  
  (**(code **)(**(int **)(in_stack_00000004 + -8) + 8))
            (*(int **)(in_stack_00000004 + -8),*(undefined4 *)(in_stack_00000004 + -0xc));
  uVar1 = (**(code **)(**(int **)(in_stack_00000004 + -0xc) + 0x14))();
  *(undefined4 *)(in_stack_00000004 + -0x10) = uVar1;
  iVar2 = (**(code **)(**(int **)(in_stack_00000004 + -0x14) + 0x14))();
  if (-1 < iVar2 + -1) {
    iVar4 = 0;
    do {
      uVar1 = (**(code **)(**(int **)(in_stack_00000004 + -0x14) + 0x18))
                        (*(int **)(in_stack_00000004 + -0x14),iVar4);
      iVar3 = (**(code **)(**(int **)(in_stack_00000004 + -0x14) + 0x18))
                        (*(int **)(in_stack_00000004 + -0x14),iVar4);
      (**(code **)(**(int **)(in_stack_00000004 + -8) + 0x38))
                (*(int **)(in_stack_00000004 + -8),*(undefined4 *)(iVar3 + 0x24),uVar1);
      iVar4 = iVar4 + 1;
      iVar2 = iVar2 + -1;
    } while (iVar2 != 0);
  }
  FUN_00403c74((int *)(in_stack_00000004 + -0x18),*(int *)(in_stack_00000004 + -4));
  return;
}



void FUN_0043bdc4(int *param_1,undefined4 param_2,int param_3)

{
  bool bVar1;
  int iVar2;
  uint uVar3;
  int iVar4;
  undefined4 *in_FS_OFFSET;
  undefined1 uVar5;
  undefined *puStackY_40;
  uint **ppuVar6;
  int *piVar7;
  undefined4 uStack_2c;
  undefined1 *puStack_28;
  undefined1 *puStack_24;
  int local_14;
  uint *local_10;
  int local_c;
  undefined4 local_8;
  
  puStack_24 = &stack0xfffffffc;
  local_14 = 0;
  local_10 = (uint *)0x0;
  puStack_28 = &LAB_0043bee6;
  uStack_2c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_2c;
  bVar1 = false;
  local_c = param_3;
  local_8 = param_2;
  iVar2 = FUN_00403e5c(*param_1);
  if (0 < iVar2) {
    iVar4 = 1;
    do {
      uVar3 = (uint)*(byte *)(*param_1 + -1 + iVar4);
      if (((byte)PTR_DAT_004758ec[(int)uVar3 >> 3] >> (uVar3 & 7) & 1) != 0) {
        bVar1 = true;
        break;
      }
      iVar4 = iVar4 + 1;
      iVar2 = iVar2 + -1;
    } while (iVar2 != 0);
  }
  if (bVar1) {
    ppuVar6 = &local_10;
    iVar2 = FUN_00403e5c(*param_1);
    uVar5 = iVar2 + -2 == 0;
    FUN_00404064(*param_1,iVar2 + -2,3,(int *)ppuVar6);
    FUN_00403f6c(local_10,(uint *)&DAT_0043befc);
    if ((bool)uVar5) {
      piVar7 = &local_14;
      iVar2 = FUN_00403e5c(*param_1);
      FUN_00404064(*param_1,1,iVar2 - 3,piVar7);
      puStackY_40 = &DAT_0043bf20;
      FUN_00403f1c(param_1,6);
    }
    else {
      puStackY_40 = &DAT_0043bf20;
      FUN_00403f1c(param_1,5);
    }
  }
  else if (local_c != 0) {
    FUN_004040ec((undefined4 *)&DAT_0043bf14,param_1,local_c);
  }
  *in_FS_OFFSET = puStackY_40;
  FUN_00403c00(&local_14,2);
  return;
}



void FUN_0043bf24(int param_1,char param_2)

{
  char cVar1;
  bool bVar2;
  int *piVar3;
  int *piVar4;
  int *piVar5;
  int iVar6;
  int *piVar7;
  uint uVar8;
  undefined4 uVar9;
  int iVar10;
  int iVar11;
  int iVar12;
  PCNZCH pCVar13;
  int iVar14;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_ECX_03;
  undefined4 extraout_ECX_04;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  int *in_FS_OFFSET;
  undefined1 uVar15;
  int local_44;
  byte *local_40;
  undefined4 *local_3c;
  byte *local_38;
  undefined1 *puVar16;
  int local_30;
  undefined4 *local_2c;
  undefined1 *local_28;
  int *local_24;
  undefined4 uStack_20;
  undefined1 *local_1c;
  int local_8;
  
  local_1c = &stack0xfffffffc;
  iVar14 = 8;
  do {
    local_8 = 0;
    iVar14 = iVar14 + -1;
  } while (iVar14 != 0);
  local_24 = (int *)*in_FS_OFFSET;
  *in_FS_OFFSET = (int)&local_24;
  uStack_20 = &LAB_0043c396;
  puVar16 = &stack0xfffffffc;
  if (param_2 == '\0') {
    if ((*(byte *)(param_1 + 0x20) & 0x10) == 0) {
      local_28 = (undefined1 *)0x43bf61;
      cVar1 = FUN_0043c540(param_1);
      puVar16 = local_1c;
      if (cVar1 != '\0') goto LAB_0043bf69;
    }
    *in_FS_OFFSET = (int)local_24;
    local_1c = &LAB_0043c39d;
    uStack_20 = (undefined1 *)0x43c378;
    FUN_00403c00(&local_44,4);
    uStack_20 = (undefined1 *)0x43c385;
    FUN_00403c00(&local_30,3);
    uStack_20 = (undefined1 *)0x43c38d;
    FUN_00403bdc((int *)&local_1c);
    uStack_20 = (undefined1 *)0x43c395;
    FUN_00403bdc(&local_8);
    return;
  }
LAB_0043bf69:
  local_1c = puVar16;
  local_28 = (undefined1 *)0x43bf77;
  FUN_00403c74(&local_8,(int)PTR_s_1234567890ABCDEFGHIJKLMNOPQRSTUV_0047481c);
  local_28 = (undefined1 *)0x43bf83;
  piVar3 = (int *)FUN_00402f24((int *)PTR_PTR_0040e124,'\x01',extraout_ECX);
  local_28 = (undefined1 *)0x43bf92;
  piVar4 = (int *)FUN_00402f24((int *)PTR_PTR_0040e124,'\x01',extraout_ECX_00);
  local_28 = (undefined1 *)0x43bfa1;
  local_24 = (int *)FUN_00402f24((int *)PTR_PTR_0040e124,'\x01',extraout_ECX_01);
  local_28 = (undefined1 *)0x43bfb0;
  piVar5 = (int *)FUN_00402f24((int *)PTR_PTR_0040e124,'\x01',extraout_ECX_02);
  local_2c = (undefined4 *)&LAB_0043c357;
  local_30 = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)&local_30;
  local_28 = &stack0xfffffffc;
  iVar14 = FUN_0043b408(param_1);
  if (-1 < iVar14 + -1) {
    iVar14 = 0;
    do {
      puVar16 = (undefined1 *)0x43bfe5;
      iVar6 = FUN_0043b418(param_1,iVar14);
      uVar15 = *(char *)(iVar6 + 0x32) == '\0';
      if (!(bool)uVar15) {
        iVar6 = FUN_0043b418(param_1,iVar14);
        puVar16 = (undefined1 *)0x43c005;
        FUN_00403f6c(*(uint **)(iVar6 + 0x24),(uint *)&DAT_0043c3b0);
        if (!(bool)uVar15) {
          puVar16 = (undefined1 *)0x43c014;
          iVar6 = FUN_0043b418(param_1,iVar14);
          if (*(int *)(iVar6 + 0x24) != 0) {
            iVar6 = FUN_0043b418(param_1,iVar14);
            FUN_0043dd34(*(int *)(iVar6 + 0x24),(int *)&local_38);
            FUN_0040826c(local_38,(int *)&local_28);
            if (local_28 == (undefined *)0x0) {
              puVar16 = (undefined1 *)FUN_0043b418(param_1,iVar14);
              local_38 = (byte *)0x43c056;
              iVar6 = FUN_0043b418(param_1,iVar14);
              local_38 = (byte *)0x43c063;
              FUN_00410a7c(local_24,0,*(undefined4 *)(iVar6 + 0x24),puVar16);
            }
            else {
              puVar16 = (undefined1 *)0x43c073;
              pCVar13 = FUN_0040b538(local_28,PTR_s_1234567890ABCDEFGHIJKLMNOPQRSTUV_0047481c);
              if (pCVar13 != (PCNZCH)0x0) {
                local_38 = (byte *)0x43c080;
                puVar16 = &stack0xfffffffc;
                bVar2 = FUN_0043bd10(local_28,extraout_EDX,extraout_ECX_03,(int)&stack0xfffffffc);
                if (!bVar2) {
                  iVar6 = FUN_0043b418(param_1,iVar14);
                  piVar7 = (int *)(iVar6 + 0x24);
                  local_38 = (byte *)0x43c09b;
                  iVar6 = FUN_0043b418(param_1,iVar14);
                  local_38 = (byte *)0x43c0a6;
                  FUN_0043dc9c(*(undefined4 **)(iVar6 + 0x24),(int *)&local_3c);
                  FUN_00403c30(piVar7,local_3c);
                  puVar16 = (undefined1 *)FUN_0043b418(param_1,iVar14);
                  local_38 = (byte *)0x43c0c2;
                  iVar6 = FUN_0043b418(param_1,iVar14);
                  local_38 = (byte *)0x43c0cf;
                  FUN_00410a7c(local_24,0,*(undefined4 *)(iVar6 + 0x24),puVar16);
                }
              }
            }
          }
        }
      }
      iVar14 = iVar14 + 1;
    } while (puVar16 != (undefined1 *)0x1);
  }
  FUN_00403c74(&local_30,local_8);
  iVar14 = (**(code **)(*local_24 + 0x14))();
  if (-1 < iVar14 + -1) {
    do {
      FUN_00403c74(&local_8,local_30);
      (**(code **)(*piVar4 + 8))(piVar4,local_24);
      (**(code **)(*piVar3 + 0x40))();
      iVar14 = (**(code **)(*piVar4 + 0x14))();
      iVar14 = iVar14 + -1;
      if (-1 < iVar14) {
        do {
          (**(code **)(*piVar4 + 0xc))(piVar4,iVar14,&local_2c);
          for (iVar6 = 1; iVar10 = FUN_00403e5c((int)local_2c), iVar6 <= iVar10; iVar6 = iVar6 + 1)
          {
            uVar8 = (uint)*(byte *)((int)local_2c + iVar6 + -1);
            if (((byte)PTR_DAT_004758ec[(int)uVar8 >> 3] >> (uVar8 & 7) & 1) == 0) {
              local_38 = (byte *)0x43c16f;
              FUN_00404064((int)local_2c,iVar6,1,(int *)&local_40);
              FUN_0040826c(local_40,(int *)&local_28);
              local_38 = (byte *)0x43c183;
              bVar2 = FUN_0043bd10(local_28,extraout_EDX_00,extraout_ECX_04,(int)&stack0xfffffffc);
              if (bVar2) {
                if (PTR_DAT_004758fc[8] == '\0') {
                  FUN_004040ec((undefined4 *)&LAB_0043c3bc,(int *)&local_2c,iVar6);
                }
                else {
                  FUN_0043bdc4((int *)&local_2c,local_28,iVar6);
                }
                uVar9 = (**(code **)(*piVar4 + 0x18))(piVar4,iVar14);
                (**(code **)(*piVar3 + 0x38))(piVar3,local_2c,uVar9);
                (**(code **)(*piVar4 + 0x44))(piVar4,iVar14);
                break;
              }
            }
            else {
              iVar6 = iVar6 + 1;
            }
          }
          iVar14 = iVar14 + -1;
        } while (iVar14 != -1);
      }
      iVar14 = (**(code **)(*piVar3 + 0x14))();
      if (0 < iVar14) {
        local_38 = (byte *)0x43c202;
        FUN_0043bd40();
      }
      iVar14 = (**(code **)(*piVar4 + 0x14))();
      if (iVar14 < 1) break;
      iVar6 = 0x43c217;
      iVar14 = (**(code **)(*piVar4 + 0x14))();
      if (-1 < iVar14 + -1) {
        iVar10 = 0;
        do {
          iVar6 = (**(code **)(*piVar4 + 0x18))(piVar4,iVar10);
          iVar11 = FUN_00410a48(local_24,iVar6);
          iVar12 = (**(code **)(*local_24 + 0x14))();
          iVar6 = 0x43c24c;
          (**(code **)(*local_24 + 0x60))(local_24,iVar11,iVar12 + -1);
          iVar10 = iVar10 + 1;
          iVar14 = iVar14 + -1;
        } while (iVar14 != 0);
      }
    } while (iVar6 != 1);
  }
  local_38 = (byte *)0x43c265;
  FUN_0043bd40();
  iVar14 = (**(code **)(*piVar5 + 0x14))();
  uStack_20 = (undefined1 *)CONCAT13(0 < iVar14,(undefined3)uStack_20);
  iVar14 = (**(code **)(*piVar5 + 0x14))();
  if (-1 < iVar14 + -1) {
    iVar14 = 0;
    do {
      (**(code **)(*piVar5 + 0xc))(piVar5,iVar14,&local_2c);
      if ((((PTR_DAT_004758fc[8] != '\0') &&
           (pCVar13 = FUN_0040b538(&LAB_0043c3bc,(undefined *)local_2c), pCVar13 == (PCNZCH)0x0)) &&
          (local_1c != (undefined1 *)0x0)) &&
         (pCVar13 = FUN_0040b538(&LAB_0043c3bc,(undefined *)local_2c), pCVar13 == (PCNZCH)0x0)) {
        piVar7 = &local_44;
        local_38 = (byte *)0x43c2d7;
        iVar6 = FUN_00403e5c((int)local_1c);
        local_38 = (byte *)0x43c2e6;
        FUN_00404064((int)local_1c,iVar6,1,piVar7);
        FUN_0043bdc4((int *)&local_2c,local_44,0);
        iVar6 = FUN_00403e5c((int)local_1c);
        FUN_004040a4((int *)&local_1c,iVar6,1);
      }
      iVar6 = (**(code **)(*piVar5 + 0x18))(piVar5,iVar14);
      iVar10 = 0x43c31f;
      FUN_00403c30((int *)(iVar6 + 0x24),local_2c);
      iVar14 = iVar14 + 1;
    } while (iVar10 != 1);
  }
  *in_FS_OFFSET = local_30;
  local_28 = (undefined1 *)0x43c35e;
  local_2c = (undefined4 *)0x43c33e;
  FUN_00402f54(piVar5);
  local_2c = (undefined4 *)0x43c346;
  FUN_00402f54(local_24);
  local_2c = (undefined4 *)0x43c34e;
  FUN_00402f54(piVar4);
  local_2c = (undefined4 *)0x43c356;
  FUN_00402f54(piVar3);
  return;
}



undefined1 FUN_0043c3d0(int param_1)

{
  undefined1 in_ZF;
  
  FUN_00403f6c(*(uint **)(param_1 + 0x24),(uint *)&DAT_0043c3f0);
  return in_ZF;
}



undefined1 FUN_0043c3f4(int param_1,char param_2)

{
  char cVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  undefined1 local_18;
  int local_14;
  
  local_18 = 0;
  if ((param_2 != '\0') ||
     (((*(byte *)(param_1 + 0x20) & 0x10) == 0 && (cVar1 = FUN_0043c56c(param_1), cVar1 != '\0'))))
  {
    local_14 = 0;
    iVar5 = 0;
    iVar4 = 0;
    iVar2 = FUN_0043b408(param_1);
    iVar3 = local_14;
    if (-1 < iVar2 + -1) {
      do {
        iVar3 = FUN_0043b418(param_1,iVar4);
        if (*(char *)(iVar3 + 0x32) != '\0') {
          iVar3 = FUN_0043b418(param_1,iVar4);
          cVar1 = FUN_0043c3d0(iVar3);
          iVar3 = iVar4;
          if (cVar1 == '\0') break;
          iVar3 = FUN_0043b418(param_1,iVar4);
          *(undefined1 *)(iVar3 + 0x32) = 0;
          local_18 = 1;
        }
        iVar4 = iVar4 + 1;
        iVar2 = iVar2 + -1;
        iVar3 = local_14;
      } while (iVar2 != 0);
    }
    local_14 = iVar3;
    iVar4 = FUN_0043b408(param_1);
    if (local_14 <= iVar4 + -1) {
      iVar3 = ((iVar4 + -1) - local_14) + 1;
      iVar4 = local_14;
      do {
        iVar2 = FUN_0043b418(param_1,iVar4);
        cVar1 = FUN_0043c3d0(iVar2);
        if (cVar1 == '\0') {
          iVar2 = FUN_0043b418(param_1,iVar4);
          if (*(char *)(iVar2 + 0x32) != '\0') {
            if (iVar5 != 0) {
              *(undefined1 *)(iVar5 + 0x32) = 1;
              local_18 = 1;
            }
            iVar5 = 0;
            local_14 = iVar4;
          }
        }
        else {
          if (iVar5 != 0) {
            *(undefined1 *)(iVar5 + 0x32) = 0;
            local_18 = 1;
          }
          iVar5 = FUN_0043b418(param_1,iVar4);
        }
        iVar4 = iVar4 + 1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
    iVar4 = FUN_0043b408(param_1);
    iVar4 = iVar4 + -1;
    if (local_14 - iVar4 == 0 || local_14 < iVar4) {
      iVar3 = (local_14 - iVar4) + -1;
      do {
        iVar2 = FUN_0043b418(param_1,iVar4);
        if (*(char *)(iVar2 + 0x32) != '\0') {
          iVar2 = FUN_0043b418(param_1,iVar4);
          cVar1 = FUN_0043c3d0(iVar2);
          if (cVar1 == '\0') {
            return local_18;
          }
          iVar2 = FUN_0043b418(param_1,iVar4);
          *(undefined1 *)(iVar2 + 0x32) = 0;
          local_18 = 1;
        }
        iVar4 = iVar4 + -1;
        iVar3 = iVar3 + 1;
      } while (iVar3 != 0);
    }
  }
  return local_18;
}



undefined1 FUN_0043c540(int param_1)

{
  byte bVar1;
  uint uVar2;
  
  uVar2 = (uint)*(byte *)(param_1 + 0x2f);
  if ((*(byte *)(param_1 + 0x2f) == 2) && (*(int *)(param_1 + 0x58) != 0)) {
    bVar1 = FUN_0043c540(*(int *)(param_1 + 0x58));
    uVar2 = (uint)(byte)(&DAT_00474828)[bVar1 & 0x7f];
  }
  return (&DAT_0047482c)[uVar2 & 0x7f];
}



undefined1 FUN_0043c56c(int param_1)

{
  byte bVar1;
  uint uVar2;
  
  uVar2 = (uint)*(byte *)(param_1 + 0x30);
  if ((*(byte *)(param_1 + 0x30) == 2) && (*(int *)(param_1 + 0x58) != 0)) {
    bVar1 = FUN_0043c56c(*(int *)(param_1 + 0x58));
    uVar2 = (uint)(byte)(&DAT_00474828)[bVar1 & 0x7f];
  }
  return (&DAT_0047482c)[uVar2 & 0x7f];
}



int * FUN_0043c598(int *param_1,char param_2,int *param_3)

{
  int *piVar1;
  int iVar2;
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffdc;
  undefined4 in_stack_ffffffe0;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffdc,in_stack_ffffffe0);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  piVar1 = FUN_004394dc((int *)PTR_PTR_004380ac,'\x01',param_1);
  param_1[10] = (int)piVar1;
  piVar1[0x1f] = (int)param_1;
  piVar1[0x1e] = *(int *)(*param_1 + 0x38);
  piVar1[0x19] = (int)param_1;
  iVar2 = FUN_00402f24((int *)PTR_DAT_00436454,'\x01',extraout_ECX_00);
  param_1[0xe] = iVar2;
  *(int **)(iVar2 + 0xc) = param_1;
  *(undefined1 **)(iVar2 + 8) = &LAB_0043cdf8;
  *(undefined1 *)((int)param_1 + 0x35) = 1;
  FUN_00414460(param_1,'\0',param_3);
  iVar2 = param_1[10];
  *(undefined1 *)(iVar2 + 0x2f) = 0;
  *(undefined1 *)(iVar2 + 0x30) = 0;
  FUN_0043d20c(param_1);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffdc;
  }
  return param_1;
}



void FUN_0043c630(int *param_1,char param_2)

{
  int *piVar1;
  byte extraout_DL;
  
  piVar1 = FUN_004032b4(param_1,param_2);
  FUN_00402f54((int *)piVar1[10]);
  FUN_00402f54((int *)piVar1[0xe]);
  FUN_004144ac(piVar1,extraout_DL & 0xfc);
  if ('\0' < (char)extraout_DL) {
    FUN_004032a4(piVar1);
  }
  return;
}



void FUN_0043c684(int param_1)

{
  FUN_00439ab8(*(int *)(param_1 + 0x28));
  return;
}



undefined4 FUN_0043c6a4(int *param_1)

{
  FUN_004390d4(FUN_0043c6a4,param_1[0x17],(int)param_1);
  FUN_0043b7bc(param_1,param_1,param_1,'\x01');
  return 0;
}



void FUN_0043c6cc(int param_1)

{
  FUN_004390d4(FUN_0043c6a4,*(int *)(*(int *)(param_1 + 0x28) + 0x5c),*(int *)(param_1 + 0x28));
  return;
}



undefined1 FUN_0043c6e4(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  char cVar1;
  int iVar2;
  int iVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  int iVar4;
  int iVar5;
  undefined1 local_5;
  
  local_5 = 0;
  if ((((*(char *)(param_4 + -1) == '\0') &&
       (*(uint *)(param_4 + -8) == (uint)*(ushort *)(param_1 + 0x44))) ||
      ((*(char *)(param_4 + -1) == '\x01' && (*(int *)(param_4 + -8) == *(int *)(param_1 + 0x28)))))
     || ((*(char *)(param_4 + -1) == '\x02' &&
         (*(uint *)(param_4 + -8) == (uint)*(ushort *)(param_1 + 0x54))))) {
    *(int *)(param_4 + -0xc) = param_1;
    local_5 = 1;
  }
  else {
    iVar2 = FUN_0043b408(param_1);
    if (-1 < iVar2 + -1) {
      iVar4 = 0;
      do {
        iVar5 = param_4;
        iVar3 = FUN_0043b418(param_1,iVar4);
        cVar1 = FUN_0043c6e4(iVar3,extraout_EDX,extraout_ECX,iVar5);
        if (cVar1 != '\0') {
          return 1;
        }
        iVar4 = iVar4 + 1;
        iVar2 = iVar2 + -1;
      } while (iVar2 != 0);
    }
  }
  return local_5;
}



undefined4 FUN_0043c77c(int param_1)

{
  FUN_004390d4(FUN_0043c6e4,*(int *)(*(int *)(param_1 + 0x28) + 0x5c),*(int *)(param_1 + 0x28));
  return 0;
}



undefined4 FUN_0043c7ac(int *param_1,int param_2,char param_3)

{
  int *piVar1;
  int iVar2;
  undefined4 uVar3;
  
  uVar3 = 0;
  if (((param_3 == '\0') &&
      (piVar1 = FUN_004030cc(param_1,(int)PTR_PTR_00438874), (char)piVar1 != '\0')) &&
     (iVar2 = (**(code **)(*param_1 + 0x34))(), param_2 == iVar2)) {
    uVar3 = FUN_0043da14((int)param_1);
  }
  else {
    for (iVar2 = FUN_0043c77c((int)param_1); (iVar2 != 0 && (*(int *)(iVar2 + 0x48) == 0));
        iVar2 = *(int *)(iVar2 + 0x58)) {
    }
    if (iVar2 != 0) {
      uVar3 = *(undefined4 *)(iVar2 + 0x48);
    }
  }
  return uVar3;
}



bool FUN_0043c81c(int param_1)

{
  int *piVar1;
  
  piVar1 = (int *)FUN_0043c77c(param_1);
  if (piVar1 != (int *)0x0) {
    (**(code **)(*piVar1 + 0x40))();
  }
  return piVar1 != (int *)0x0;
}



undefined4 FUN_0043c838(int *param_1)

{
  char cVar1;
  int *piVar2;
  
  piVar2 = (int *)FUN_0043c77c((int)param_1);
  if (piVar2 != (int *)0x0) {
    if ((*(byte *)(piVar2 + 8) & 0x10) == 0) {
      FUN_0043b8e0((int)piVar2);
    }
    (**(code **)(*piVar2 + 0x40))();
    cVar1 = FUN_0043bf24((int)piVar2,'\0');
    if ((cVar1 != '\0') || (cVar1 = FUN_0043c3f4((int)piVar2,'\0'), cVar1 != '\0')) {
      FUN_004399d4(piVar2);
    }
    return 1;
  }
  if ((*(byte *)(param_1 + 8) & 0x10) != 0) {
    return 0;
  }
  piVar2 = FUN_004030cc(param_1,(int)PTR_PTR_00438874);
  if ((char)piVar2 == '\0') {
    return 0;
  }
  FUN_0043b8e0(param_1[10]);
  return 0;
}



undefined4 FUN_0043c8ac(int param_1)

{
  if ((*(char *)(param_1 + 0x34) == '\0') && (*(int *)(param_1 + 0x3c) == 0)) {
    return 0;
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



void thunk_FUN_0043c8c6(int param_1,int param_2)

{
  for (; (0 < param_2 && (param_1 != 0)); param_1 = *(int *)(param_1 + 0x58)) {
    param_2 = param_2 + -1;
  }
  return;
}



void FUN_0043c8c6(int param_1,int param_2)

{
  for (; (0 < param_2 && (param_1 != 0)); param_1 = *(int *)(param_1 + 0x58)) {
    param_2 = param_2 + -1;
  }
  return;
}



char FUN_0043c8d0(int *param_1,int param_2,undefined4 param_3,int param_4)

{
  undefined4 uVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY_24;
  undefined1 *puStackY_20;
  int local_c;
  char local_5;
  
  local_5 = '\x01';
  local_c = *(int *)(*param_1 + 0x58);
  if (local_c != 0) {
    puStackY_20 = (undefined1 *)0x43c8fe;
    local_5 = FUN_0043c8d0(&local_c,param_2 + 1,param_3,param_4);
  }
  if ((local_5 != '\0') && (local_5 != '\x03')) {
    if (local_5 == '\x02') {
      if ((*(int *)(param_4 + -4) == 0) ||
         (*(short *)(*(int *)(param_4 + -4) + 0x54) != *(short *)(param_4 + -6))) {
        uVar1 = FUN_0043c77c(*(int *)(param_4 + -0xc));
        *(undefined4 *)(param_4 + -4) = uVar1;
        if (*(int *)(param_4 + -4) == 0) {
          return '\x03';
        }
      }
      iVar2 = thunk_FUN_0043c8c6(*(int *)(param_4 + -4),param_2);
      *param_1 = iVar2;
      if (*param_1 == 0) {
        return local_5;
      }
      if (*(int *)(*param_1 + 0x58) != local_c) {
        return local_5;
      }
      if (param_2 == 0) {
        local_5 = '\x01';
      }
    }
    if (*(char *)(*param_1 + 0x2d) == '\0') {
      local_5 = '\0';
    }
    else {
      puStackY_20 = &LAB_0043c9f5;
      uStackY_24 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStackY_24;
      if ((*(byte *)(*(int *)(param_4 + -0xc) + 0x20) & 0x10) == 0) {
        FUN_0043b8e0(*param_1);
      }
      (**(code **)(*(int *)*param_1 + 0x40))();
      if ((*(int *)(param_4 + -4) == 0) ||
         ((*param_1 != *(int *)(param_4 + -4) &&
          (*(short *)(*(int *)(param_4 + -4) + 0x54) != *(short *)(param_4 + -6))))) {
        local_5 = '\x02';
      }
      *in_FS_OFFSET = uStackY_24;
    }
  }
  return local_5;
}



void FUN_0043cae8(int *param_1)

{
  HMENU hmenu;
  BOOL BVar1;
  undefined4 uVar2;
  uint uVar3;
  tagMENUITEMINFOA tStack_88;
  CHAR aCStack_58 [80];
  
  if ((PTR_DAT_004758fc[9] != '\0') && (param_1[0xb] != 0)) {
    hmenu = (HMENU)(**(code **)(*param_1 + 0x34))();
    tStack_88.cbSize = 0x2c;
    tStack_88.fMask = 0x10;
    tStack_88.dwTypeData = aCStack_58;
    tStack_88.cch = 0x50;
    BVar1 = GetMenuItemInfoA(hmenu,0,-1,&tStack_88);
    if (BVar1 != 0) {
      uVar2 = FUN_0043ce6c((int)param_1);
      if ((bool)(char)uVar2 != ((tStack_88.fType & 0x6000) != 0)) {
        uVar3 = FUN_0043ce6c((int)param_1);
        tStack_88.fType = (uVar3 & 0x7f) * 0x6000 | tStack_88.fType & 0xffff9fff;
        tStack_88.fMask = 0x10;
        BVar1 = SetMenuItemInfoA(hmenu,0,-1,&tStack_88);
        if (BVar1 != 0) {
          DrawMenuBar((HWND)param_1[0xb]);
        }
      }
    }
  }
  return;
}



void FUN_0043cba4(HMENU param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int iVar1;
  char *pcVar2;
  UINT UVar3;
  UINT uId;
  
  iVar1 = GetMenuItemCount(param_1);
  pcVar2 = (char *)(param_4 + -0x200);
  uId = 0;
  while (((int)uId < iVar1 && (pcVar2 < (char *)(param_4 - 5U)))) {
    FUN_0043d140(*(int *)(param_4 + -0x204),param_1,uId,0x400,(int)(param_4 - 5U) - (int)pcVar2,
                 pcVar2);
    pcVar2 = FUN_00408b0c(pcVar2);
    UVar3 = GetMenuState(param_1,uId,0x400);
    if ((UVar3 & 2) != 0) {
      *pcVar2 = '$';
      pcVar2 = pcVar2 + 1;
      *pcVar2 = '\0';
    }
    if ((UVar3 & 0x40) != 0) {
      *pcVar2 = '@';
      pcVar2 = pcVar2 + 1;
      *pcVar2 = '\0';
    }
    if ((UVar3 & 1) != 0) {
      *pcVar2 = '#';
      pcVar2 = pcVar2 + 1;
      *pcVar2 = '\0';
    }
    *pcVar2 = ';';
    pcVar2 = pcVar2 + 1;
    *pcVar2 = '\0';
    uId = uId + 1;
  }
  return;
}



undefined4 FUN_0043cc44(int *param_1)

{
  HMENU pHVar1;
  char *pcVar2;
  int iVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined1 *puVar4;
  char local_204 [512];
  
  puVar4 = &stack0xfffffffc;
  local_204[0] = '\0';
  if (param_1[0xb] != 0) {
    pHVar1 = (HMENU)(**(code **)(*param_1 + 0x34))();
    FUN_0043cba4(pHVar1,extraout_EDX,extraout_ECX,(int)puVar4);
  }
  if (param_1[0xc] != 0) {
    pcVar2 = FUN_00404020((undefined *)param_1[0xc]);
    iVar3 = FUN_00408bfc(pcVar2,local_204);
    if (iVar3 == 0) {
      return 0;
    }
  }
  FUN_00403e0c(param_1 + 0xc,local_204,0x200);
  return 1;
}



void FUN_0043ccd8(int *param_1)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  undefined1 local_a;
  char local_9;
  int *local_8;
  
  puStack_10 = &stack0xfffffffc;
  if (PTR_DAT_004758fc[9] != '\0') {
    local_9 = (char)param_1[9];
    local_a = *(undefined1 *)((int)param_1 + 0x35);
    puStack_14 = &LAB_0043cd48;
    uStack_18 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_18;
    local_8 = param_1;
    if (local_9 == '\0') {
      puStack_10 = &stack0xfffffffc;
      FUN_0043d1e8(param_1,'\x01');
    }
    else {
      FUN_0043d1e8(param_1,'\0');
    }
    *in_FS_OFFSET = uStack_18;
    puStack_10 = (undefined1 *)0x43cd4f;
    puStack_14 = (undefined1 *)0x43cd3e;
    FUN_0043d1e8(local_8,local_9);
    *(undefined1 *)((int)local_8 + 0x35) = local_a;
    return;
  }
  return;
}



void FUN_0043cd54(int *param_1,int param_2)

{
  param_1[0xb] = param_2;
  FUN_0043cc44(param_1);
  if ((PTR_DAT_004758fc[9] != '\0') && (param_2 != 0)) {
    if (*(char *)((int)param_1 + 0x35) == '\0') {
      FUN_0043ccd8(param_1);
    }
    else {
      FUN_0043d20c(param_1);
    }
  }
  return;
}



void FUN_0043cda4(int *param_1)

{
  FUN_004148c0((int)param_1);
  (**(code **)(*param_1 + 0x30))(param_1,0,0);
  return;
}



void FUN_0043cdbc(int *param_1,undefined4 param_2,undefined4 param_3,undefined1 param_4)

{
  if (DAT_0043cdf4 == (DAT_0043cdf0 & *(ushort *)(param_1 + 8))) {
    (**(code **)(*param_1 + 0x30))(param_1,param_3,param_4);
  }
  return;
}



void FUN_0043ce04(int param_1,int param_2)

{
  undefined4 extraout_ECX;
  
  if (*(int *)(param_1 + 0x3c) != 0) {
    FUN_00437690(*(int *)(param_1 + 0x3c),*(int *)(param_1 + 0x38));
  }
  *(int *)(param_1 + 0x3c) = param_2;
  if (param_2 != 0) {
    FUN_004376d4(param_2,*(int *)(param_1 + 0x38));
    FUN_00414540(*(int *)(param_1 + 0x3c),param_1,extraout_ECX);
  }
  FUN_0043c6cc(param_1);
  return;
}



undefined4 FUN_0043ce6c(int param_1)

{
  if ((PTR_DAT_004758fc[9] != '\0') && (*(char *)(param_1 + 0x24) != '\0')) {
    return CONCAT31((int3)((uint)param_1 >> 8),1);
  }
  return 0;
}



undefined4 FUN_0043ce84(HMENU param_1,uint param_2,int param_3,byte param_4,int param_5)

{
  UINT UVar1;
  undefined4 uVar2;
  int iVar3;
  
  iVar3 = 0;
  if ((param_2 & 0x10) == 0) {
    UVar1 = GetMenuItemID(param_1,param_3);
    if (UVar1 != 0xffffffff) {
      iVar3 = FUN_0043c77c(*(int *)(param_5 + -4));
    }
  }
  else {
    GetSubMenu(param_1,param_3);
    iVar3 = FUN_0043c77c(*(int *)(param_5 + -4));
  }
  if (iVar3 == 0) {
    uVar2 = 0;
  }
  else {
    uVar2 = FUN_00440914((uint)param_4,*(int *)(iVar3 + 0x24));
  }
  return uVar2;
}



void FUN_0043cee0(HMENU param_1,ushort param_2,int param_3,undefined1 param_4,int param_5)

{
  int iVar1;
  int iVar2;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 uVar3;
  undefined4 *in_FS_OFFSET;
  undefined *puVar4;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  int local_14;
  undefined *local_10;
  undefined *local_c;
  int iStack_8;
  
  puStack_20 = &stack0xfffffffc;
  local_c = (undefined *)0x0;
  local_10 = (undefined *)0x0;
  local_14 = 0;
  iStack_8 = (uint)param_2 << 0x10;
  puStack_24 = &LAB_0043cfb5;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  if ((param_2 & 0x10) == 0) {
    iVar1 = FUN_0043c77c(*(int *)(param_5 + -4));
    uVar3 = extraout_EDX_00;
    if ((iVar1 != 0) && (iVar2 = FUN_0043b408(iVar1), uVar3 = extraout_EDX_01, param_3 < iVar2)) {
      iVar1 = FUN_0043b418(iVar1,param_3);
      uVar3 = extraout_EDX_02;
    }
  }
  else {
    puStack_20 = &stack0xfffffffc;
    GetSubMenu(param_1,param_3);
    iVar1 = FUN_0043c77c(*(int *)(param_5 + -4));
    uVar3 = extraout_EDX;
  }
  if ((iVar1 != 0) && (*(int *)(iVar1 + 0x24) != 0)) {
    FUN_00403d84((int *)&local_c,CONCAT31((int3)((uint)uVar3 >> 8),param_4));
    puVar4 = local_c;
    FUN_00403d84((int *)&local_10,
                 CONCAT31((int3)((uint)*(undefined1 **)(iVar1 + 0x24) >> 8),
                          **(undefined1 **)(iVar1 + 0x24)));
    iVar2 = FUN_004083e0(local_10,puVar4);
    if (iVar2 == 0) {
      FUN_0043dd34(*(int *)(iVar1 + 0x24),&local_14);
    }
  }
  *in_FS_OFFSET = uStack_28;
  puStack_20 = &LAB_0043cfbc;
  puStack_24 = (undefined1 *)0x43cfb4;
  FUN_00403c00(&local_14,3);
  return;
}



void FUN_0043cfc8(undefined4 param_1,int param_2)

{
  UINT UVar1;
  char cVar2;
  int iVar3;
  UINT UVar4;
  undefined4 uVar5;
  UINT UVar6;
  int local_1c;
  UINT local_18;
  UINT local_14;
  UINT local_10;
  
  *(undefined4 *)(param_2 + 0xc) = 0;
  local_10 = 0xffffffff;
  local_14 = 0xffffffff;
  local_18 = 0xffffffff;
  iVar3 = GetMenuItemCount(*(HMENU *)(param_2 + 8));
  if (-1 < iVar3 + -1) {
    UVar6 = 0;
    local_1c = iVar3;
    do {
      UVar4 = GetMenuState(*(HMENU *)(param_2 + 8),UVar6,0x400);
      uVar5 = FUN_0043ce84(*(HMENU *)(param_2 + 8),UVar4,UVar6,*(byte *)(param_2 + 4),
                           (int)&stack0xfffffffc);
      UVar1 = local_14;
      if ((char)uVar5 != '\0') {
        if ((UVar4 & 2) == 0) {
          if ((int)local_10 < 0) {
            *(undefined4 *)(param_2 + 0xc) = 2;
            local_10 = UVar6;
          }
          else {
            *(undefined4 *)(param_2 + 0xc) = 3;
          }
          UVar1 = UVar6;
          if (((UVar4 & 0x80) == 0) && (UVar1 = local_14, -1 < (int)local_14)) {
            local_18 = UVar6;
          }
        }
        else if ((int)local_10 < 0) {
          local_10 = 0xfffffffe;
        }
      }
      local_14 = UVar1;
      UVar6 = UVar6 + 1;
      local_1c = local_1c + -1;
    } while (local_1c != 0);
  }
  if ((int)local_10 < -1) {
    *(undefined4 *)(param_2 + 0xc) = 0x10000;
  }
  else {
    if (((int)local_10 < 0) && (-1 < iVar3 + -1)) {
      UVar6 = 0;
      local_1c = iVar3;
      do {
        UVar4 = GetMenuState(*(HMENU *)(param_2 + 8),UVar6,0x400);
        cVar2 = FUN_0043cee0(*(HMENU *)(param_2 + 8),(ushort)UVar4,UVar6,
                             *(undefined1 *)(param_2 + 4),(int)&stack0xfffffffc);
        UVar1 = local_14;
        if (cVar2 != '\0') {
          if ((UVar4 & 2) != 0) {
            *(undefined4 *)(param_2 + 0xc) = 0x10000;
            return;
          }
          if ((int)local_10 < 0) {
            *(undefined4 *)(param_2 + 0xc) = 2;
            local_10 = UVar6;
          }
          else {
            *(undefined4 *)(param_2 + 0xc) = 3;
          }
          UVar1 = UVar6;
          if (((UVar4 & 0x80) == 0) && (UVar1 = local_14, -1 < (int)local_14)) {
            local_18 = UVar6;
          }
        }
        local_14 = UVar1;
        UVar6 = UVar6 + 1;
        local_1c = local_1c + -1;
      } while (local_1c != 0);
    }
    if (*(int *)(param_2 + 0xc) == 2) {
      *(UINT *)(param_2 + 0xc) = local_10 | 0x20000;
    }
    else if (*(int *)(param_2 + 0xc) == 3) {
      if ((int)local_18 < 0) {
        local_18 = local_10;
      }
      *(UINT *)(param_2 + 0xc) = local_18 | 0x30000;
    }
  }
  return;
}



int FUN_0043d140(int param_1,HMENU param_2,UINT param_3,UINT param_4,int param_5,char *param_6)

{
  undefined4 uVar1;
  UINT UVar2;
  int iVar3;
  undefined4 local_8;
  
  uVar1 = FUN_0043c8ac(param_1);
  if ((char)uVar1 == '\0') {
    iVar3 = GetMenuStringA(param_2,param_3,param_6,param_5,param_4);
  }
  else {
    local_8 = 0;
    UVar2 = GetMenuState(param_2,param_3,param_4);
    if ((UVar2 & 0x10) == 0) {
      UVar2 = GetMenuItemID(param_2,param_3);
      if (UVar2 != 0xffffffff) {
        local_8 = FUN_0043c77c(param_1);
      }
    }
    else {
      GetSubMenu(param_2,param_3);
      local_8 = FUN_0043c77c(param_1);
    }
    if (local_8 == 0) {
      iVar3 = 0;
    }
    else {
      *param_6 = '\0';
      FUN_00408bdc(param_6,*(undefined **)(local_8 + 0x24),param_5);
      iVar3 = FUN_00408af4(param_6);
    }
  }
  return iVar3;
}



void FUN_0043d1e8(int *param_1,char param_2)

{
  if (param_2 != (char)param_1[9]) {
    *(char *)(param_1 + 9) = param_2;
    *(undefined1 *)((int)param_1 + 0x35) = 0;
    FUN_0043cae8(param_1);
  }
  return;
}



void FUN_0043d20c(int *param_1)

{
  HANDLE pvVar1;
  
  if (*(char *)((int)param_1 + 0x35) != '\0') {
    pvVar1 = FUN_00427fac((HWND)param_1[0xb]);
    if (pvVar1 != (HANDLE)0x0) {
      FUN_0043d1e8(param_1,*(char *)((int)pvVar1 + 0x4f));
      *(undefined1 *)((int)param_1 + 0x35) = 1;
    }
  }
  return;
}



void FUN_0043d234(int *param_1,int *param_2)

{
  int iVar1;
  
  if (*(char *)((int)param_1 + 0x35) != '\0') {
    iVar1 = FUN_004030e4(param_2,(int)PTR_PTR_00426ca8);
    FUN_0043d1e8(param_1,*(char *)(iVar1 + 0x4f));
    *(undefined1 *)((int)param_1 + 0x35) = 1;
  }
  return;
}



void FUN_0043d2c0(int *param_1,undefined4 param_2,int param_3,undefined1 param_4)

{
  undefined4 uVar1;
  
  if (param_1[0xb] != 0) {
    uVar1 = FUN_0043cc44(param_1);
    if (param_3 == 0) {
      SendMessageA((HWND)param_1[0xb],0xb015,0,0);
    }
    if ((char)uVar1 != '\0') {
      DrawMenuBar((HWND)param_1[0xb]);
    }
  }
  FUN_0043cdbc(param_1,param_2,param_3,param_4);
  return;
}



void FUN_0043d318(int param_1,int param_2)

{
  if (param_2 != 0) {
    FUN_00439974(*(int **)(param_1 + 0x28),*(int *)(param_2 + 0x28));
    return;
  }
  FUN_00439974(*(int **)(param_1 + 0x28),0);
  return;
}



void FUN_0043d334(int param_1,int param_2)

{
  if ((param_2 != 0) && (*(int *)(*(int *)(param_1 + 0x28) + 0x5c) == *(int *)(param_2 + 0x28))) {
    FUN_00439974(*(int **)(param_1 + 0x28),0);
  }
  return;
}



void FUN_0043d350(int *param_1)

{
  (**(code **)(*param_1 + 0x38))(param_1,0,0,0);
  if ((HWND)param_1[0xb] != (HWND)0x0) {
    SendMessageA((HWND)param_1[0xb],0xb015,0,0);
  }
  return;
}



void FUN_0043d38c(int *param_1)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  
  puStack_18 = &stack0xfffffffc;
  puStack_1c = &LAB_0043d3b6;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  (**(code **)(*param_1 + 0x10))();
  *in_FS_OFFSET = uStack_20;
  return;
}



void FUN_0043d914(int *param_1,int param_2)

{
  HWND pHVar1;
  
  if (param_1[2] == 0) {
    pHVar1 = FUN_0044075c();
    param_1[4] = (int)pHVar1;
  }
  FUN_0040f38c(param_1,param_2);
  return;
}



void FUN_0043d93c(int *param_1,int param_2)

{
  FUN_0040f680(param_1,param_2);
  if (param_1[2] == 0) {
    FUN_00440810((HWND)param_1[4]);
  }
  return;
}



int * FUN_0043d958(int *param_1,char param_2,int *param_3)

{
  int iVar1;
  int *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0043c598(param_1,'\0',param_3);
  param_1[0x12] = -1;
  param_1[0x13] = -1;
  iVar1 = param_1[10];
  *(int **)(iVar1 + 0x84) = param_1;
  *(undefined4 *)(iVar1 + 0x80) = *(undefined4 *)(*param_1 + 0x3c);
  param_1[0xb] = *(int *)(*(int *)PTR_DAT_004757c0 + 0x24);
  *(undefined1 *)((int)param_1 + 0x51) = 1;
  FUN_0043d914(DAT_004767c0,(int)param_1);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



undefined4 FUN_0043da14(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 0x28) + 0x48);
}



void FUN_0043da1c(int param_1,undefined4 param_2)

{
  *(undefined4 *)(*(int *)(param_1 + 0x28) + 0x48) = param_2;
  return;
}



void FUN_0043da24(int *param_1)

{
  HANDLE pvVar1;
  
  if ((PTR_DAT_004758fc[9] != '\0') && (*(char *)((int)param_1 + 0x35) != '\0')) {
    pvVar1 = FUN_00438c1c((POINT *)(param_1 + 0x12));
    if (pvVar1 == (HANDLE)0x0) {
      FUN_0043d1e8(param_1,*(char *)(*(int *)PTR_DAT_004757c0 + 0x28));
      *(undefined1 *)((int)param_1 + 0x35) = 1;
    }
    else {
      FUN_0043d1e8(param_1,*(char *)((int)pvVar1 + 0x4f));
      *(undefined1 *)((int)param_1 + 0x35) = 1;
    }
  }
  return;
}



uint FUN_0043da6c(int param_1)

{
  int *piVar1;
  undefined4 extraout_ECX;
  uint uVar2;
  undefined4 extraout_EDX;
  
  uVar2 = 0;
  if (PTR_DAT_004758fc[9] != '\0') {
    if (*(char *)(param_1 + 0x35) == '\0') {
      uVar2 = (uint)(*(char *)(param_1 + 0x24) == '\x01');
    }
    else {
      piVar1 = (int *)FUN_00438c1c((POINT *)(param_1 + 0x48));
      if (piVar1 == (int *)0x0) {
        uVar2 = FUN_0044801c(*(int *)PTR_DAT_004757c0);
      }
      else {
        uVar2 = FUN_00403130(piVar1,extraout_EDX,extraout_ECX);
      }
    }
  }
  return uVar2;
}



void FUN_0043db6c(int param_1,int param_2)

{
  int *piVar1;
  undefined4 *puVar2;
  int iVar3;
  int iVar4;
  
  iVar4 = *(int *)(*(int *)(param_1 + 4) + 8);
  if (-1 < iVar4 + -1) {
    iVar3 = 0;
    do {
      piVar1 = (int *)FUN_0040f4e8(*(undefined4 **)(param_1 + 4),iVar3);
      if (param_2 == *piVar1) {
        puVar2 = (undefined4 *)FUN_0040f4e8(*(undefined4 **)(param_1 + 4),iVar3);
        *puVar2 = 0;
      }
      iVar3 = iVar3 + 1;
      iVar4 = iVar4 + -1;
    } while (iVar4 != 0);
  }
  return;
}



void FUN_0043dba8(int *param_1,int param_2,undefined4 *param_3,uint param_4)

{
  int *piVar1;
  int iVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 *puVar3;
  undefined4 local_1c [4];
  char local_a;
  char local_9;
  int *local_8;
  
  puVar3 = local_1c;
  for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {
    *puVar3 = *param_3;
    param_3 = param_3 + 1;
    puVar3 = puVar3 + 1;
  }
  if ((*(int *)PTR_DAT_00475680 < 5) &&
     ((*(int *)PTR_DAT_00475680 != 4 || (*(int *)PTR_DAT_004757f4 < 1)))) {
    local_a = '\0';
  }
  else {
    local_a = '\x01';
  }
  local_8 = param_1;
  piVar1 = (int *)FUN_00403130(param_1,param_2,0);
  piVar1 = FUN_004030cc(piVar1,(int)PTR_PTR_0043859c);
  local_9 = (char)piVar1;
  if (((param_4 & 1) == 0) || ((local_9 != '\0' && ((local_9 == '\0' || (local_a != '\0')))))) {
    if ((local_a == '\0') || ((param_4 & 0x80) == 0)) {
      FUN_00417804(*(int **)(param_2 + 0x14),0x80000004);
      FUN_00417034(*(int **)(param_2 + 0xc),-0x7ffffff9,extraout_ECX_01);
    }
    else {
      FUN_00417804(*(int **)(param_2 + 0x14),0x80000004);
      FUN_00417034(*(int **)(param_2 + 0xc),-0x7fffffef,extraout_ECX_00);
    }
  }
  else {
    FUN_00417804(*(int **)(param_2 + 0x14),0x8000000d);
    FUN_00417034(*(int **)(param_2 + 0xc),-0x7ffffff2,extraout_ECX);
  }
  (**(code **)(*local_8 + 0x30))(local_8,param_2,local_1c,local_9,param_4);
  return;
}



void FUN_0043dc9c(undefined4 *param_1,int *param_2)

{
  byte bVar1;
  int iVar2;
  int iVar3;
  
  FUN_00403c30(param_2,param_1);
  iVar3 = 1;
  do {
    iVar2 = FUN_00403e5c(*param_2);
    if (iVar2 < iVar3) {
      return;
    }
    bVar1 = *(byte *)(*param_2 + -1 + iVar3);
    if (((byte)PTR_DAT_004758ec[(int)(uint)bVar1 >> 3] >> (bVar1 & 7) & 1) == 0) {
      if (bVar1 == 0x26) {
        if ((PTR_DAT_004758fc[8] != '\0') && (1 < iVar3)) {
          iVar2 = FUN_00403e5c(*param_2);
          if ((1 < iVar2 - iVar3) &&
             ((*(char *)(*param_2 + -2 + iVar3) == '(' && (*(char *)(*param_2 + 1 + iVar3) == ')')))
             ) {
            FUN_004040a4(param_2,iVar3 + -1,4);
            goto LAB_0043dd23;
          }
        }
        FUN_004040a4(param_2,iVar3,1);
      }
    }
    else {
      iVar3 = iVar3 + 1;
    }
LAB_0043dd23:
    iVar3 = iVar3 + 1;
  } while( true );
}



void FUN_0043dd34(int param_1,int *param_2)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  
  FUN_00403bdc(param_2);
  iVar3 = 1;
  iVar1 = FUN_00403e5c(param_1);
  if (0 < iVar1) {
    do {
      uVar2 = (uint)*(byte *)(param_1 + -1 + iVar3);
      if (((byte)PTR_DAT_004758ec[(int)uVar2 >> 3] >> (uVar2 & 7) & 1) == 0) {
        if (((*(char *)(param_1 + -1 + iVar3) == '&') && (0 < iVar1 - iVar3)) &&
           (iVar3 = iVar3 + 1, *(char *)(param_1 + -1 + iVar3) != '&')) {
          FUN_00403d84(param_2,(uint)*(byte *)(param_1 + -1 + iVar3));
        }
      }
      else {
        iVar3 = iVar3 + 1;
      }
      iVar3 = iVar3 + 1;
    } while (iVar3 <= iVar1);
  }
  return;
}



void FUN_0043dd98(undefined4 *param_1,undefined4 *param_2)

{
  undefined *puVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  undefined *local_c;
  undefined *local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_8 = (undefined *)0x0;
  local_c = (undefined *)0x0;
  puStack_1c = &LAB_0043ddf1;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  FUN_0043dc9c(param_2,(int *)&local_8);
  puVar1 = local_8;
  FUN_0043dc9c(param_1,(int *)&local_c);
  FUN_00408418(local_c,puVar1);
  *in_FS_OFFSET = uStack_20;
  puStack_18 = &LAB_0043ddf8;
  puStack_1c = (undefined1 *)0x43ddf0;
  FUN_00403c00((int *)&local_c,2);
  return;
}



// rop parameter of StretchBlt
// 

void rop_00440328(HWND param_1,char param_2)

{
  uint uVar1;
  
  if (param_1 != (HWND)0x0) {
    uVar1 = GetWindowLongA(param_1,-0x14);
    if (param_2 == '\0') {
      if ((uVar1 & 0x200) == 0) {
        return;
      }
      uVar1 = uVar1 & 0xfffffdff;
    }
    else {
      if ((uVar1 & 0x200) != 0) {
        return;
      }
      uVar1 = uVar1 | 0x200;
    }
    SetWindowLongA(param_1,-0x14,uVar1);
    SetWindowPos(param_1,(HWND)0x0,0,0,0,0,0x37);
  }
  return;
}



void FUN_00440374(void)

{
  if ((HWND)DAT_004767d0[9] != (HWND)0x0) {
    ShowOwnedPopups((HWND)DAT_004767d0[9],0);
  }
  FUN_00449334((int)DAT_004767d0,'\0');
  FUN_00414710((int)DAT_004767d0);
  FUN_004146b8(DAT_004767d0);
  return;
}



// lpfn parameter of EnumThreadWindows
// 

undefined4 lpfn_004403ac(void)

{
  BOOL BVar1;
  undefined4 *puVar2;
  HWND in_stack_00000004;
  
  if (in_stack_00000004 != DAT_00474914) {
    BVar1 = IsWindowVisible(in_stack_00000004);
    if (BVar1 != 0) {
      BVar1 = IsWindowEnabled(in_stack_00000004);
      if (BVar1 != 0) {
        puVar2 = (undefined4 *)FUN_004026f4(8);
        *puVar2 = DAT_00474920;
        puVar2[1] = in_stack_00000004;
        DAT_00474920 = puVar2;
        EnableWindow(in_stack_00000004,0);
      }
    }
  }
  return 0xffffffff;
}



void FUN_004403fc(undefined4 param_1)

{
  undefined4 uVar1;
  undefined4 uVar2;
  DWORD dwThreadId;
  undefined4 *in_FS_OFFSET;
  code *lpfn;
  LPARAM lParam;
  undefined4 uStack_34;
  undefined1 *puStack_30;
  undefined1 *puStack_2c;
  undefined4 local_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  
  uVar2 = DAT_00474920;
  uVar1 = DAT_00474914;
  puStack_20 = &stack0xfffffffc;
  puStack_2c = &stack0xfffffffc;
  DAT_00474920 = 0;
  puStack_24 = &LAB_0044049f;
  local_28 = *in_FS_OFFSET;
  DAT_00474914 = param_1;
  *in_FS_OFFSET = &local_28;
  puStack_30 = &LAB_00440468;
  uStack_34 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_34;
  lParam = 0;
  lpfn = lpfn_004403ac;
  dwThreadId = GetCurrentThreadId();
  EnumThreadWindows(dwThreadId,lpfn,lParam);
  *in_FS_OFFSET = uStack_34;
  *in_FS_OFFSET = local_28;
  DAT_00474920 = uVar2;
  DAT_00474914 = uVar1;
  return;
}



void FUN_004404b0(int *param_1)

{
  int *piVar1;
  BOOL BVar2;
  
  if (param_1 != (int *)0x0) {
    do {
      BVar2 = IsWindow((HWND)param_1[1]);
      if (BVar2 != 0) {
        EnableWindow((HWND)param_1[1],-1);
      }
      piVar1 = (int *)*param_1;
      FUN_0040270c((int)param_1);
      param_1 = piVar1;
    } while (piVar1 != (int *)0x0);
  }
  return;
}



// lpfn parameter of EnumThreadWindows
// 

undefined4 lpfn_004404e8(void)

{
  BOOL BVar1;
  uint uVar2;
  HWND in_stack_00000004;
  
  if ((in_stack_00000004 != DAT_00474914) && (in_stack_00000004 != *(HWND *)(DAT_004767d0 + 0x24)))
  {
    BVar1 = IsWindowVisible(in_stack_00000004);
    if (BVar1 != 0) {
      BVar1 = IsWindowEnabled(in_stack_00000004);
      if (BVar1 != 0) {
        uVar2 = GetWindowLongA(in_stack_00000004,-0x14);
        if ((uVar2 & 8) == 0) {
          if (DAT_00474918 == (HWND)0x0) {
            DAT_00474918 = in_stack_00000004;
          }
        }
        else if (DAT_0047491c == (HWND)0x0) {
          DAT_0047491c = in_stack_00000004;
        }
      }
    }
  }
  return 0xffffffff;
}



int FUN_0044054c(undefined4 param_1)

{
  DWORD dwThreadId;
  code *lpfn;
  LPARAM lParam;
  
  DAT_00474918 = 0;
  DAT_0047491c = 0;
  lParam = 0;
  lpfn = lpfn_004404e8;
  DAT_00474914 = param_1;
  dwThreadId = GetCurrentThreadId();
  EnumThreadWindows(dwThreadId,lpfn,lParam);
  if (DAT_00474918 != 0) {
    return DAT_00474918;
  }
  return DAT_0047491c;
}



bool FUN_00440588(HWND param_1,uint param_2)

{
  int iVar1;
  
  iVar1 = DAT_00474910;
  SendMessageA(param_1,param_2 & 0xffff,0,0);
  return iVar1 == DAT_00474910;
}



// lpfn parameter of EnumThreadWindows
// 

undefined4 lpfn_004405a8(void)

{
  undefined4 uVar1;
  int in_stack_00000004;
  int *in_stack_00000008;
  
  uVar1 = 0xffffffff;
  if (*in_stack_00000008 == in_stack_00000004) {
    uVar1 = 0;
    *(undefined1 *)(in_stack_00000008 + 1) = 1;
  }
  return uVar1;
}



undefined1 FUN_004405c8(void)

{
  DWORD dwThreadId;
  code *lpfn;
  HWND *lParam;
  HWND local_8;
  undefined1 local_4;
  
  local_8 = GetActiveWindow();
  lParam = &local_8;
  local_4 = 0;
  lpfn = lpfn_004405a8;
  dwThreadId = GetCurrentThreadId();
  EnumThreadWindows(dwThreadId,lpfn,(LPARAM)lParam);
  return local_4;
}



void FUN_00440674(void)

{
  return;
}



int FUN_00440698(int param_1,int param_2)

{
  return param_2 - (param_1 + 5);
}



undefined1 * FUN_004406a0(void)

{
  undefined4 *puVar1;
  int iVar2;
  undefined1 *puVar3;
  undefined1 *puVar4;
  undefined4 in_stack_00000004;
  undefined4 in_stack_00000008;
  
  puVar1 = DAT_004767dc;
  if (DAT_004767e0 == (undefined1 *)0x0) {
    puVar1 = (undefined4 *)VirtualAlloc((LPVOID)0x0,0x1000,0x1000,0x40);
    *puVar1 = DAT_004767dc;
    FUN_00402920((undefined4 *)&DAT_00474924,puVar1 + 1,2);
    iVar2 = FUN_00440698((int)puVar1 + 5,0x440678);
    *(int *)((int)puVar1 + 6) = iVar2;
    puVar3 = (undefined1 *)((int)puVar1 + 10);
    do {
      puVar4 = puVar3;
      *puVar4 = 0xe8;
      iVar2 = FUN_00440698((int)puVar4,(int)(puVar1 + 1));
      *(int *)(puVar4 + 1) = iVar2;
      *(undefined1 **)(puVar4 + 5) = DAT_004767e0;
      puVar3 = puVar4 + 0xd;
      DAT_004767e0 = puVar4;
    } while ((int)(puVar4 + 0xd) - (int)puVar1 < 0xffc);
  }
  DAT_004767dc = puVar1;
  puVar3 = DAT_004767e0;
  puVar1 = (undefined4 *)(DAT_004767e0 + 5);
  DAT_004767e0 = (undefined1 *)*(undefined4 *)(DAT_004767e0 + 5);
  *puVar1 = in_stack_00000004;
  *(undefined4 *)(puVar3 + 9) = in_stack_00000008;
  return puVar3;
}



void FUN_00440738(int param_1)

{
  if (param_1 != 0) {
    *(int *)(param_1 + 5) = DAT_004767e0;
    DAT_004767e0 = param_1;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

HWND FUN_0044075c(void)

{
  BOOL BVar1;
  HWND hWnd;
  undefined1 *dwNewLong;
  undefined4 in_stack_00000004;
  tagWNDCLASSA local_2c;
  
  _DAT_00474938 = DAT_004764d8;
  BVar1 = GetClassInfoA(DAT_004764d8,PTR_s_TPUtilWindow_0047494c,&local_2c);
  if ((BVar1 == 0) || (local_2c.lpfnWndProc != DefWindowProcA)) {
    if (BVar1 != 0) {
      UnregisterClassA(PTR_s_TPUtilWindow_0047494c,DAT_004764d8);
    }
    RegisterClassA((WNDCLASSA *)&lpWndClass_00474928);
  }
  hWnd = CreateWindowExA(0x80,PTR_s_TPUtilWindow_0047494c,(LPCSTR)&lpWindowName_0044080c,0x80000000,
                         0,0,0,0,(HWND)0x0,(HMENU)0x0,DAT_004764d8,(LPVOID)0x0);
  if (in_stack_00000004._2_2_ != 0) {
    dwNewLong = FUN_004406a0();
    SetWindowLongA(hWnd,-4,(LONG)dwNewLong);
  }
  return hWnd;
}



void FUN_00440810(HWND param_1)

{
  code *pcVar1;
  
  pcVar1 = (code *)GetWindowLongA(param_1,-4);
  DestroyWindow(param_1);
  if (pcVar1 != DefWindowProcA) {
    FUN_00440738((int)pcVar1);
  }
  return;
}



byte FUN_00440838(uint param_1)

{
  SHORT SVar1;
  byte bVar2;
  
  bVar2 = DAT_00440888;
  if ((param_1 & 4) != 0) {
    bVar2 = DAT_00440888 | 1;
  }
  if ((param_1 & 8) != 0) {
    bVar2 = bVar2 | 4;
  }
  if ((param_1 & 1) != 0) {
    bVar2 = bVar2 | 8;
  }
  if ((param_1 & 2) != 0) {
    bVar2 = bVar2 | 0x10;
  }
  if ((param_1 & 0x10) != 0) {
    bVar2 = bVar2 | 0x20;
  }
  SVar1 = GetKeyState(0x12);
  if (SVar1 < 0) {
    bVar2 = bVar2 | 2;
  }
  return bVar2;
}



byte FUN_0044088c(uint param_1)

{
  SHORT SVar1;
  byte bVar2;
  
  bVar2 = DAT_004408c4;
  SVar1 = GetKeyState(0x10);
  if (SVar1 < 0) {
    bVar2 = bVar2 | 1;
  }
  SVar1 = GetKeyState(0x11);
  if (SVar1 < 0) {
    bVar2 = bVar2 | 4;
  }
  if ((param_1 & 0x20000000) != 0) {
    bVar2 = bVar2 | 2;
  }
  return bVar2;
}



byte FUN_004408c8(int param_1)

{
  byte bVar1;
  
  bVar1 = DAT_00440910;
  if ((*(byte *)(param_1 + 0x10) & 0x80) != 0) {
    bVar1 = DAT_00440910 | 1;
  }
  if ((*(byte *)(param_1 + 0x11) & 0x80) != 0) {
    bVar1 = bVar1 | 4;
  }
  if ((*(byte *)(param_1 + 0x12) & 0x80) != 0) {
    bVar1 = bVar1 | 2;
  }
  if ((*(byte *)(param_1 + 1) & 0x80) != 0) {
    bVar1 = bVar1 | 8;
  }
  if ((*(byte *)(param_1 + 2) & 0x80) != 0) {
    bVar1 = bVar1 | 0x10;
  }
  if ((*(byte *)(param_1 + 4) & 0x80) != 0) {
    bVar1 = bVar1 | 0x20;
  }
  return bVar1;
}



void FUN_00440914(undefined4 param_1,int param_2)

{
  char *pcVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  char *local_c;
  char *local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_8 = (char *)0x0;
  local_c = (char *)0x0;
  puStack_1c = &LAB_00440972;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  FUN_0043dd34(param_2,(int *)&local_8);
  pcVar1 = local_8;
  FUN_00403d84((int *)&local_c,param_1);
  FUN_004082c8(local_c,pcVar1);
  *in_FS_OFFSET = uStack_20;
  puStack_18 = &LAB_00440979;
  puStack_1c = (undefined1 *)0x440971;
  FUN_00403c00((int *)&local_c,2);
  return;
}



int * FUN_00440984(int *param_1)

{
  int *piVar1;
  int *piVar2;
  
  do {
    piVar2 = param_1;
    param_1 = (int *)piVar2[9];
  } while ((int *)piVar2[9] != (int *)0x0);
  piVar1 = FUN_004030cc(piVar2,(int)PTR_PTR_0043efd8);
  if ((char)piVar1 == '\0') {
    return (int *)0x0;
  }
  return piVar2;
}



void FUN_004409ac(int *param_1)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar2;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  byte *local_10;
  int local_c;
  undefined1 local_8;
  
  puStack_1c = &stack0xfffffffc;
  local_10 = (byte *)0x0;
  puStack_20 = &LAB_00440a1d;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  piVar1 = FUN_00440984(param_1);
  if (piVar1 == (int *)0x0) {
    local_c = param_1[2];
    local_8 = 0xb;
    piVar1 = &local_c;
    uVar2 = 0;
    FUN_004054e4((undefined4 *)PTR_PTR_004757e8,(int *)&local_10);
    uVar2 = FUN_0040aa4c((int)PTR_DAT_0040dc48,'\x01',local_10,uVar2,piVar1);
    FUN_004036ac(uVar2);
  }
  *in_FS_OFFSET = puStack_1c;
  FUN_00403bdc((int *)&local_10);
  return;
}



int * FUN_00440a2c(int *param_1,char param_2,int param_3,undefined1 param_4)

{
  int extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00402f24(param_1,'\0',param_3);
  param_1[1] = param_3;
  *(undefined1 *)(param_1 + 6) = param_4;
  *(undefined2 *)((int)param_1 + 10) = 0x50;
  *(undefined2 *)(param_1 + 2) = 8;
  *(undefined1 *)(param_1 + 7) = 1;
  param_1[8] = 10;
  param_1[0x10] = 4;
  param_1[0xf] = 0xc;
  param_1[10] = -0x7fffffec;
  *(undefined1 *)(param_1 + 0xb) = 1;
  *(undefined1 *)(param_1 + 0x11) = 1;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



void FUN_00440b0c(int param_1)

{
  undefined4 uVar1;
  
  if (*(char *)(param_1 + 0x18) == '\0') {
    uVar1 = FUN_00440cc4(param_1);
    if ((char)uVar1 != '\0') {
      uVar1 = FUN_0042b3d0(*(int *)(param_1 + 4));
      if ((char)uVar1 == '\0') {
        FUN_00441214(param_1,0);
      }
      else {
        FUN_00441214(param_1,*(int *)(param_1 + 0x10));
      }
    }
  }
  return;
}



void FUN_00440b44(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  char cVar1;
  int iVar2;
  
  if (*(char *)(param_1 + 0x47) != '\0') {
    cVar1 = *(char *)(param_1 + 0x4b);
    if ((cVar1 == '\0') || (cVar1 == '\x03')) {
      if ((*(char *)(param_1 + 0x4b) == '\x03') ||
         (DAT_00440bac == (DAT_00440ba8 & *(byte *)(param_1 + 0x51)))) {
        iVar2 = FUN_0041f2ec(*(int *)(param_4 + -4),
                             *(int *)(*(int *)(param_4 + -8) + 0xc) + *(int *)(param_1 + 0x30) +
                             *(int *)(param_1 + 0x38));
        *(int *)(param_4 + -4) = iVar2;
      }
    }
    else if (cVar1 == '\x04') {
      *(int *)(param_4 + -0xc) = *(int *)(param_4 + -0xc) + *(int *)(param_1 + 0x38);
    }
  }
  return;
}



void FUN_00440bb0(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int iVar1;
  
  if (*(char *)(param_1 + 0x47) != '\0') {
    if (*(byte *)(param_1 + 0x4b) < 2) {
      if ((*(char *)(param_1 + 0x4b) == '\x01') ||
         (DAT_00440c14 == (DAT_00440c10 & *(byte *)(param_1 + 0x51)))) {
        iVar1 = FUN_0041f2ec(*(int *)(param_4 + -4),
                             *(int *)(*(int *)(param_4 + -8) + 0xc) + *(int *)(param_1 + 0x34) +
                             *(int *)(param_1 + 0x3c));
        *(int *)(param_4 + -4) = iVar1;
      }
    }
    else if (*(byte *)(param_1 + 0x4b) == 2) {
      *(int *)(param_4 + -0xc) = *(int *)(param_4 + -0xc) + *(int *)(param_1 + 0x3c);
    }
  }
  return;
}



void FUN_00440c18(int param_1)

{
  char cVar1;
  int iVar2;
  int iVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  int iVar4;
  undefined1 *puVar5;
  
  if ((char)(*(int **)(param_1 + 4))[0x7e] != '\0') {
    cVar1 = (**(code **)(**(int **)(param_1 + 4) + 0xb4))();
    if (cVar1 == '\0') {
      FUN_0044134c(param_1,0);
    }
    else {
      iVar2 = FUN_0042de00(*(int *)(param_1 + 4));
      if (-1 < iVar2 + -1) {
        iVar4 = 0;
        do {
          if (*(char *)(param_1 + 0x18) == '\0') {
            puVar5 = &stack0xfffffffc;
            iVar3 = FUN_0042ddc4(*(int *)(param_1 + 4),iVar4);
            FUN_00440b44(iVar3,extraout_EDX,extraout_ECX,(int)puVar5);
          }
          else {
            puVar5 = &stack0xfffffffc;
            iVar3 = FUN_0042ddc4(*(int *)(param_1 + 4),iVar4);
            FUN_00440bb0(iVar3,extraout_EDX_00,extraout_ECX_00,(int)puVar5);
          }
          iVar4 = iVar4 + 1;
          iVar2 = iVar2 + -1;
        } while (iVar2 != 0);
      }
      FUN_0044134c(param_1,(uint)*(ushort *)(param_1 + 0x1a));
    }
  }
  return;
}



undefined4 FUN_00440cc4(int param_1)

{
  HWND hWnd;
  uint uVar1;
  uint uVar2;
  int nIndex;
  
  uVar2 = 0x100000;
  if (*(char *)(param_1 + 0x18) == '\x01') {
    uVar2 = 0x200000;
  }
  if (*(char *)(param_1 + 0x1c) != '\0') {
    nIndex = -0x10;
    hWnd = (HWND)FUN_00430e98(*(int **)(param_1 + 4));
    uVar1 = GetWindowLongA(hWnd,nIndex);
    if ((uVar1 & uVar2) != 0) {
      return CONCAT31((int3)(uVar1 >> 8),1);
    }
  }
  return 0;
}



bool FUN_00440cfc(short param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  HWND hWnd;
  uint uVar1;
  uint uVar2;
  int nIndex;
  
  uVar2 = 0x100000;
  if (param_1 == 1) {
    uVar2 = 0x200000;
  }
  nIndex = -0x10;
  hWnd = (HWND)FUN_00430e98(*(int **)(*(int *)(param_4 + -4) + 4));
  uVar1 = GetWindowLongA(hWnd,nIndex);
  return (uVar1 & uVar2) != 0;
}



int FUN_00440d30(short param_1,undefined4 param_2,int param_3,int param_4)

{
  int iVar1;
  bool bVar2;
  undefined4 extraout_EDX;
  int iVar3;
  
  iVar3 = 0;
  if (*(char *)(param_4 + -5) == '\0') {
    if ((*(char *)(param_4 + -6) != '\0') &&
       (iVar1 = param_4, bVar2 = FUN_00440cfc(param_1,param_2,param_3,param_4), param_3 = iVar1,
       param_2 = extraout_EDX, !bVar2)) {
      iVar3 = (**(code **)PTR_DAT_00475690)();
      return -(iVar3 - *(int *)(param_4 + -0xc));
    }
    if ((*(char *)(param_4 + -6) == '\0') &&
       (bVar2 = FUN_00440cfc(param_1,param_2,param_3,param_4), bVar2)) {
      iVar3 = (**(code **)PTR_DAT_00475690)();
      iVar3 = iVar3 - *(int *)(param_4 + -0xc);
    }
  }
  return iVar3;
}



int FUN_00440dac(int param_1)

{
  HWND hWnd;
  int iVar1;
  int extraout_ECX;
  undefined2 extraout_var;
  int iVar2;
  
  iVar2 = -0x10;
  hWnd = (HWND)FUN_00430e98(*(int **)(param_1 + 4));
  GetWindowLongA(hWnd,iVar2);
  if (*(char *)(param_1 + 0x18) == '\x01') {
    iVar1 = FUN_00440d30(0,CONCAT22(extraout_var,0x15),extraout_ECX,(int)&stack0xfffffffc);
    iVar2 = FUN_0042a868(*(int **)(param_1 + 4));
    iVar1 = iVar1 + iVar2;
  }
  else {
    iVar1 = FUN_00440d30(1,CONCAT22(extraout_var,0x14),extraout_ECX,(int)&stack0xfffffffc);
    iVar2 = FUN_0042a824(*(int **)(param_1 + 4));
    iVar1 = iVar1 + iVar2;
  }
  return iVar1;
}



bool FUN_00440e2c(int param_1)

{
  int iVar1;
  
  iVar1 = FUN_00440dac(param_1);
  return iVar1 < *(int *)(param_1 + 0x10);
}



int FUN_00440e44(void)

{
  short sVar1;
  int iVar2;
  int iVar3;
  int in_stack_00000004;
  int local_8;
  
  sVar1 = *(short *)(*(int *)(in_stack_00000004 + -8) + 6);
  FUN_00430e98(*(int **)(*(int *)(in_stack_00000004 + -4) + 4));
  iVar2 = (**(code **)PTR_DAT_00475598)();
  iVar3 = (int)sVar1;
  if (iVar2 != 0) {
    iVar3 = local_8;
  }
  return iVar3;
}



uint FUN_00440ea4(uint param_1,int param_2)

{
  short sVar1;
  int iVar2;
  uint uVar3;
  int iVar4;
  uint uVar5;
  int iVar6;
  int local_14;
  uint local_10;
  
  if ((*(char *)(param_1 + 0x1f) == '\0') || (3 < *(ushort *)(param_2 + 4))) {
    uVar3 = (int)*(short *)(param_2 + 4);
    switch((int)*(short *)(param_2 + 4)) {
    case 0:
      uVar3 = FUN_00441214(param_1,*(int *)(param_1 + 0xc) - (uint)*(ushort *)(param_1 + 8));
      break;
    case 1:
      uVar3 = FUN_00441214(param_1,*(int *)(param_1 + 0xc) + (uint)*(ushort *)(param_1 + 8));
      break;
    case 2:
      iVar6 = FUN_00440dac(param_1);
      uVar3 = FUN_00441214(param_1,*(int *)(param_1 + 0xc) - iVar6);
      break;
    case 3:
      iVar6 = FUN_00440dac(param_1);
      uVar3 = FUN_00441214(param_1,iVar6 + *(int *)(param_1 + 0xc));
      break;
    case 4:
      if (*(int *)(param_1 + 0x14) < 0x8000) {
        uVar3 = FUN_00441214(param_1,(int)*(short *)(param_2 + 6));
      }
      else {
        iVar6 = FUN_00440e44();
        uVar3 = FUN_00441214(param_1,iVar6);
      }
      break;
    case 5:
      uVar3 = param_1;
      if (*(char *)(param_1 + 0x1d) != '\0') {
        if (*(int *)(param_1 + 0x14) < 0x8000) {
          uVar3 = FUN_00441214(param_1,(int)*(short *)(param_2 + 6));
        }
        else {
          iVar6 = FUN_00440e44();
          uVar3 = FUN_00441214(param_1,iVar6);
        }
      }
      break;
    case 6:
      uVar3 = FUN_00441214(param_1,0);
      break;
    case 7:
      uVar3 = FUN_00441214(param_1,*(int *)(param_1 + 0x14));
    }
  }
  else {
    if (*(ushort *)(param_2 + 4) < 2) {
      uVar5 = (uint)*(ushort *)(param_1 + 8);
      iVar6 = *(int *)(param_1 + 0x40);
      local_10 = (uint)((longlong)(ulonglong)uVar5 / (longlong)iVar6);
      uVar3 = (uint)((longlong)(ulonglong)uVar5 / (longlong)iVar6);
      local_14 = (int)((longlong)(ulonglong)uVar5 % (longlong)iVar6);
    }
    else if ((ushort)(*(ushort *)(param_2 + 4) - 2) < 2) {
      iVar6 = *(int *)(param_1 + 0x3c);
      local_14 = (int)(uint)*(ushort *)(param_1 + 10) % iVar6;
      uVar3 = (int)(uint)*(ushort *)(param_1 + 10) / iVar6;
      local_10 = uVar3;
    }
    else {
      iVar6 = 0;
      local_10 = 0;
      uVar3 = 0;
      local_14 = 0;
    }
    iVar2 = 0;
    for (; 0 < iVar6; iVar6 = iVar6 + -1) {
      iVar4 = FUN_0040712c();
      if (iVar4 - iVar2 < *(int *)(param_1 + 0x20)) {
        Sleep(*(int *)(param_1 + 0x20) - (iVar4 - iVar2));
      }
      sVar1 = *(short *)(param_2 + 4);
      if (sVar1 == 0) {
        FUN_00441214(param_1,*(int *)(param_1 + 0xc) - local_10);
      }
      else if (sVar1 == 1) {
        FUN_00441214(param_1,*(int *)(param_1 + 0xc) + local_10);
      }
      else if (sVar1 == 2) {
        FUN_00441214(param_1,*(int *)(param_1 + 0xc) - local_10);
      }
      else if (sVar1 == 3) {
        FUN_00441214(param_1,*(int *)(param_1 + 0xc) + local_10);
      }
      uVar3 = (**(code **)(**(int **)(param_1 + 4) + 0x80))();
      iVar2 = iVar4;
    }
    if (0 < local_14) {
      sVar1 = *(short *)(param_2 + 4);
      if (sVar1 == 0) {
        uVar3 = FUN_00441214(param_1,*(int *)(param_1 + 0xc) - local_14);
      }
      else if (sVar1 == 1) {
        uVar3 = FUN_00441214(param_1,*(int *)(param_1 + 0xc) + local_14);
      }
      else if (sVar1 == 2) {
        uVar3 = FUN_00441214(param_1,*(int *)(param_1 + 0xc) - local_14);
      }
      else {
        uVar3 = CONCAT22((short)((uint)param_2 >> 0x10),sVar1 + -3);
        if ((short)(sVar1 + -3) == 0) {
          uVar3 = FUN_00441214(param_1,*(int *)(param_1 + 0xc) + local_14);
        }
      }
    }
  }
  return uVar3;
}



void FUN_004411e0(int param_1,int param_2)

{
  if (param_2 != *(int *)(param_1 + 0x28)) {
    *(int *)(param_1 + 0x28) = param_2;
    *(undefined1 *)(param_1 + 0x2c) = 0;
    *(undefined1 *)(param_1 + 0x44) = 1;
    FUN_00441868(*(int *)(param_1 + 4));
  }
  return;
}



void FUN_00441214(int param_1,int param_2)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  
  if ((*(byte *)(*(int *)(param_1 + 4) + 0x20) & 2) == 0) {
    iVar3 = *(int *)(param_1 + 0x14);
    if ((param_2 <= iVar3) && (iVar3 = param_2, param_2 < 0)) {
      iVar3 = 0;
    }
    iVar1 = *(int *)(param_1 + 0xc);
    if (iVar3 != iVar1) {
      *(int *)(param_1 + 0xc) = iVar3;
      if (*(char *)(param_1 + 0x18) == '\0') {
        FUN_00430a90(*(int **)(param_1 + 4),iVar1 - iVar3,0);
      }
      else {
        FUN_00430a90(*(int **)(param_1 + 4),0,iVar1 - iVar3);
      }
      if ((((*(byte *)(*(int **)(param_1 + 4) + 8) & 0x10) != 0) &&
          (piVar2 = FUN_00440984(*(int **)(param_1 + 4)), piVar2 != (int *)0x0)) &&
         (piVar2[0x8e] != 0)) {
        (**(code **)(*(int *)piVar2[0x8e] + 0xc))();
      }
    }
    FUN_00430e98(*(int **)(param_1 + 4));
    iVar3 = (**(code **)PTR_DAT_004756f8)();
    if (iVar3 != *(int *)(param_1 + 0xc)) {
      FUN_00430e98(*(int **)(param_1 + 4));
      (**(code **)PTR_DAT_004758cc)();
    }
  }
  else {
    *(int *)(param_1 + 0xc) = param_2;
  }
  return;
}



void FUN_0044134c(int param_1,int param_2)

{
  *(int *)(param_1 + 0x10) = param_2;
  if (param_2 < 0) {
    *(undefined4 *)(param_1 + 0x10) = 0;
  }
  FUN_00441868(*(int *)(param_1 + 4));
  return;
}



void FUN_00441364(int param_1,int param_2)

{
  *(undefined1 *)(*(int *)(param_1 + 4) + 0x1f8) = 0;
  *(undefined1 *)(param_1 + 0x1e) = 1;
  FUN_0044134c(param_1,param_2);
  return;
}



void FUN_00441384(int param_1,undefined1 param_2)

{
  *(undefined1 *)(param_1 + 0x1c) = param_2;
  FUN_00441868(*(int *)(param_1 + 4));
  return;
}



void FUN_00441390(void)

{
  int *piVar1;
  int in_stack_00000004;
  
  piVar1 = (int *)(in_stack_00000004 + -4);
  FUN_00430e98(*(int **)(*piVar1 + 4));
  FUN_0042025c();
  if (0 < *(int *)(*piVar1 + 0x24)) {
    FUN_00430e98(*(int **)(*piVar1 + 4));
    FUN_0042025c();
  }
  if (0 < *(int *)(*piVar1 + 0x38)) {
    FUN_00430e98(*(int **)(*piVar1 + 4));
    FUN_0042025c();
  }
  if (0 < *(int *)(*piVar1 + 0x30)) {
    FUN_00430e98(*(int **)(*piVar1 + 4));
    FUN_0042025c();
  }
  FUN_00416b74(*(uint *)(*piVar1 + 0x28));
  FUN_00430e98(*(int **)(*piVar1 + 4));
  FUN_0042025c();
  return;
}



void FUN_00441498(int param_1)

{
  int iVar1;
  uint uVar2;
  
  *(undefined4 *)(param_1 + 0x14) = 0;
  if (*(char *)(param_1 + 0x1c) != '\0') {
    iVar1 = FUN_00440dac(param_1);
    iVar1 = *(int *)(param_1 + 0x10) - iVar1;
    *(int *)(param_1 + 0x14) = iVar1;
    if (iVar1 < 0) {
      *(undefined4 *)(param_1 + 0x14) = 0;
    }
  }
  FUN_00440dac(param_1);
  FUN_00441390();
  *(undefined1 *)(param_1 + 0x44) = 0;
  FUN_00430e98(*(int **)(param_1 + 4));
  (**(code **)PTR_DAT_004757b4)();
  FUN_00441214(param_1,*(int *)(param_1 + 0xc));
  iVar1 = FUN_00440dac(param_1);
  uVar2 = (iVar1 * 9) / 10;
  *(short *)(param_1 + 10) = (short)uVar2;
  if (*(char *)(param_1 + 0x1f) != '\0') {
    *(short *)(param_1 + 8) = (short)((ulonglong)(uVar2 & 0xffff) / 10);
  }
  return;
}



int * FUN_004415b0(int *param_1,char param_2,int *param_3)

{
  int *piVar1;
  int *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0042cf04(param_1,'\0',param_3);
  piVar1 = FUN_00440a2c((int *)PTR_PTR_0043dfc0,'\x01',(int)param_1,0);
  param_1[0x7c] = (int)piVar1;
  piVar1 = FUN_00440a2c((int *)PTR_PTR_0043dfc0,'\x01',(int)param_1,1);
  param_1[0x7d] = (int)piVar1;
  *(undefined1 *)(param_1 + 0x7e) = 1;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_00441618(int *param_1,char param_2)

{
  int *piVar1;
  byte extraout_DL;
  
  piVar1 = FUN_004032b4(param_1,param_2);
  FUN_00402f54((int *)piVar1[0x7c]);
  FUN_00402f54((int *)piVar1[0x7d]);
  FUN_0042d020(piVar1,extraout_DL & 0xfc);
  if ('\0' < (char)extraout_DL) {
    FUN_004032a4(piVar1);
  }
  return;
}



void FUN_00441654(int *param_1,int *param_2)

{
  FUN_0042df5c(param_1,param_2);
  param_2[9] = param_2[9] & 0xfffffffc;
  return;
}



void FUN_00441664(int *param_1)

{
  FUN_0042e088(param_1);
  if (PTR_DAT_004758fc[9] == '\0') {
    FUN_00430e98(param_1);
    FUN_00420290();
  }
  FUN_00441868((int)param_1);
  return;
}



void FUN_00441690(int *param_1,undefined4 param_2,undefined4 param_3)

{
  FUN_004417e8((int)param_1);
  FUN_0042d7e8(param_1,param_2,param_3);
  return;
}



void FUN_004417e8(int param_1)

{
  if (*(int *)(param_1 + 0x1fc) < 1) {
    FUN_00440c18(*(int *)(param_1 + 0x1f0));
    FUN_00440c18(*(int *)(param_1 + 500));
  }
  return;
}



void FUN_0044180c(int param_1,char param_2)

{
  if (param_2 != *(char *)(param_1 + 0x1f8)) {
    *(char *)(param_1 + 0x1f8) = param_2;
    if (param_2 == '\0') {
      FUN_00441364(*(int *)(param_1 + 0x1f0),0);
      FUN_00441364(*(int *)(param_1 + 500),0);
    }
    else {
      FUN_004417e8(param_1);
    }
  }
  return;
}



void FUN_00441868(int param_1)

{
  bool bVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_14;
  undefined1 *puStack_10;
  undefined1 *puStack_c;
  int local_8;
  
  if (*(char *)(param_1 + 0x200) == '\0') {
    puStack_c = (undefined1 *)0x441887;
    local_8 = param_1;
    bVar1 = FUN_00431194(param_1);
    if (bVar1) {
      puStack_10 = &LAB_00441953;
      uStack_14 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack_14;
      *(undefined1 *)(local_8 + 0x200) = 1;
      puStack_c = &stack0xfffffffc;
      bVar1 = FUN_00440e2c(*(int *)(local_8 + 500));
      if (bVar1) {
        FUN_00441498(*(int *)(local_8 + 0x1f0));
        FUN_00441498(*(int *)(local_8 + 500));
      }
      else {
        bVar1 = FUN_00440e2c(*(int *)(local_8 + 0x1f0));
        if (bVar1) {
          FUN_00441498(*(int *)(local_8 + 500));
          FUN_00441498(*(int *)(local_8 + 0x1f0));
        }
        else {
          FUN_00441498(*(int *)(local_8 + 500));
          FUN_00441498(*(int *)(local_8 + 0x1f0));
        }
      }
      *in_FS_OFFSET = uStack_14;
      *(undefined1 *)(local_8 + 0x200) = 0;
      return;
    }
  }
  return;
}



void FUN_00441978(int *param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int local_30;
  int local_2c;
  int local_28;
  int local_24;
  int iStack_20;
  int iStack_1c;
  int aiStack_18 [2];
  
  if (param_2 != (int *)0x0) {
    (**(code **)(*param_2 + 0x40))(param_2,&local_30);
    local_30 = local_30 - (uint)*(ushort *)(param_1[0x7c] + 0x1a);
    local_28 = local_28 + (uint)*(ushort *)(param_1[0x7c] + 0x1a);
    local_2c = local_2c - (uint)*(ushort *)(param_1[0x7d] + 0x1a);
    local_24 = local_24 + (uint)*(ushort *)(param_1[0x7d] + 0x1a);
    FUN_0042a938(param_2,&local_30,aiStack_18);
    FUN_0042a964(param_1,aiStack_18,&iStack_20);
    local_30 = iStack_20;
    local_2c = iStack_1c;
    FUN_0042a938(param_2,&local_28,aiStack_18);
    FUN_0042a964(param_1,aiStack_18,&iStack_20);
    iVar1 = local_30;
    local_28 = iStack_20;
    local_24 = iStack_1c;
    if (local_30 < 0) {
      FUN_00441214(param_1[0x7c],*(int *)(param_1[0x7c] + 0xc) + local_30);
    }
    else {
      iVar2 = FUN_0042a824(param_1);
      iVar3 = local_28;
      if (iVar2 < local_28) {
        iVar2 = FUN_0042a824(param_1);
        if (iVar2 < iVar3 - iVar1) {
          local_28 = FUN_0042a824(param_1);
          local_28 = local_28 + local_30;
        }
        iVar1 = param_1[0x7c];
        iVar3 = FUN_0042a824(param_1);
        FUN_00441214(iVar1,(*(int *)(iVar1 + 0xc) + local_28) - iVar3);
      }
    }
    iVar1 = local_2c;
    if (local_2c < 0) {
      FUN_00441214(param_1[0x7d],*(int *)(param_1[0x7d] + 0xc) + local_2c);
    }
    else {
      iVar2 = FUN_0042a868(param_1);
      iVar3 = local_24;
      if (iVar2 < local_24) {
        iVar2 = FUN_0042a868(param_1);
        if (iVar2 < iVar3 - iVar1) {
          local_24 = FUN_0042a868(param_1);
          local_24 = local_24 + local_2c;
        }
        iVar1 = param_1[0x7d];
        iVar3 = FUN_0042a868(param_1);
        FUN_00441214(iVar1,(*(int *)(iVar1 + 0xc) + local_24) - iVar3);
      }
    }
  }
  return;
}



void FUN_00441acc(int param_1,int param_2,int param_3)

{
  int iVar1;
  int iVar2;
  
  if (param_3 != param_2) {
    if ((*(byte *)(param_1 + 0x20) & 1) == 0) {
      *(undefined1 *)(*(int *)(param_1 + 0x1f0) + 0x1e) = 1;
      *(undefined1 *)(*(int *)(param_1 + 500) + 0x1e) = 1;
    }
    FUN_00441214(*(int *)(param_1 + 0x1f0),0);
    FUN_00441214(*(int *)(param_1 + 500),0);
    if (*(char *)(param_1 + 0x1f8) == '\0') {
      iVar1 = *(int *)(param_1 + 0x1f0);
      if (*(char *)(iVar1 + 0x1e) != '\0') {
        iVar2 = MulDiv(*(int *)(iVar1 + 0x10),param_2,param_3);
        FUN_00441364(iVar1,iVar2);
      }
      iVar1 = *(int *)(param_1 + 500);
      if (*(char *)(iVar1 + 0x1e) != '\0') {
        iVar2 = MulDiv(*(int *)(iVar1 + 0x10),param_2,param_3);
        FUN_00441364(iVar1,iVar2);
      }
    }
  }
  *(undefined1 *)(*(int *)(param_1 + 0x1f0) + 0x1e) = 0;
  *(undefined1 *)(*(int *)(param_1 + 500) + 0x1e) = 0;
  return;
}



void FUN_00441b70(int *param_1,int param_2,int param_3)

{
  FUN_00441acc((int)param_1,param_2,param_3);
  FUN_00430a30(param_1,param_2,param_3);
  return;
}



void FUN_00441b98(int *param_1,int param_2)

{
  int iVar1;
  undefined4 uVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  
  puStack_10 = &stack0xfffffffc;
  param_1[0x7f] = param_1[0x7f] + 1;
  puStack_14 = &LAB_00441c02;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  FUN_0042f2e8(param_1,param_2);
  uVar2 = 0;
  iVar1 = *(int *)(param_2 + 4);
  if (iVar1 == 0) {
    uVar2 = 0;
  }
  else if (iVar1 == 1) {
    uVar2 = 1;
  }
  else if (iVar1 == 2) {
    uVar2 = 2;
  }
  (**(code **)(*param_1 + 0xbc))(param_1,uVar2);
  *in_FS_OFFSET = uStack_18;
  param_1[0x7f] = param_1[0x7f] + -1;
  return;
}



void FUN_00441cbc(int *param_1,undefined4 *param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int *piVar4;
  byte bVar5;
  int local_1c [4];
  
  bVar5 = 0;
  piVar4 = local_1c;
  iVar1 = FUN_0042a868(param_1);
  iVar2 = FUN_0041f2ec(iVar1,*(int *)(param_1[0x7d] + 0x10));
  iVar3 = FUN_0042a824(param_1);
  iVar1 = param_1[0x7c];
  iVar3 = FUN_0041f2ec(*(int *)(iVar1 + 0x10),iVar3);
  FUN_0040ea8c(-*(int *)(iVar1 + 0xc),-*(int *)(param_1[0x7d] + 0xc),iVar3,piVar4,iVar2);
  piVar4 = local_1c;
  for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {
    *param_2 = *piVar4;
    piVar4 = piVar4 + (uint)bVar5 * -2 + 1;
    param_2 = param_2 + (uint)bVar5 * -2 + 1;
  }
  FUN_0042d240();
  return;
}



void FUN_00441d30(int *param_1,int param_2)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  undefined4 local_10;
  int local_c;
  int *local_8;
  
  puStack_14 = &stack0xfffffffc;
  local_10 = *(undefined4 *)(param_2 + 4);
  puStack_18 = &LAB_00441d91;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  local_c = param_2;
  local_8 = param_1;
  piVar1 = FUN_004030cc(param_1,(int)PTR_PTR_0043e49c);
  if ((char)piVar1 == '\0') {
    *(undefined4 *)(local_c + 4) = 1;
  }
  FUN_004302bc(local_8,local_c);
  *in_FS_OFFSET = uStack_1c;
  *(undefined4 *)(local_c + 4) = local_10;
  return;
}



void FUN_00441eb8(int *param_1,char param_2,undefined4 param_3)

{
  char cVar1;
  undefined *puVar2;
  undefined4 extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar3;
  byte **ppbVar4;
  undefined4 uStack_154;
  undefined1 *puStack_150;
  undefined1 *puStack_14c;
  undefined4 uStack_148;
  undefined4 uStack_144;
  undefined1 *puStack_140;
  undefined1 *puStack_13c;
  undefined4 uStack_138;
  undefined1 *puStack_134;
  undefined1 *puStack_130;
  undefined4 in_stack_fffffed4;
  undefined4 in_stack_fffffed8;
  byte *local_118;
  byte local_114 [256];
  byte *local_14;
  undefined1 local_10;
  char local_9;
  int *local_8;
  
  local_118 = (byte *)0x0;
  if (param_2 != '\0') {
    puStack_130 = (undefined1 *)0x441ed6;
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_fffffed4,in_stack_fffffed8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  puStack_134 = &LAB_0044201c;
  uStack_138 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_138;
  puStack_13c = (undefined1 *)0x441ef8;
  puStack_130 = &stack0xfffffffc;
  local_9 = param_2;
  local_8 = param_1;
  FUN_0040be4c(*(int *)PTR_DAT_004758d4);
  puStack_140 = &LAB_00441ffc;
  uStack_144 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_144;
  uStack_148 = 0;
  puStack_14c = (undefined1 *)0x441f17;
  puStack_13c = &stack0xfffffffc;
  (**(code **)(*local_8 + 0xcc))(local_8,0,param_3);
  puStack_14c = (undefined1 *)0x441f1f;
  puVar2 = (undefined *)FUN_00402e9c(local_8);
  if ((puVar2 != PTR_PTR_0043f2bc) && ((*(byte *)(local_8 + 8) & 0x10) == 0)) {
    *(byte *)(local_8 + 0xb3) = *(byte *)(local_8 + 0xb3) | 1;
    puStack_150 = &LAB_00441fc4;
    uStack_154 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_154;
    puStack_14c = &stack0xfffffffc;
    cVar1 = FUN_0040f2a8(local_8,PTR_PTR_0043f2bc);
    if (cVar1 == '\0') {
      FUN_00402ea0(*local_8,local_114);
      local_14 = local_114;
      local_10 = 4;
      ppbVar4 = &local_14;
      uVar3 = 0;
      FUN_004054e4((undefined4 *)PTR_PTR_00475718,(int *)&local_118);
      uVar3 = FUN_0040aa4c((int)PTR_DAT_0040da24,'\x01',local_118,uVar3,ppbVar4);
      FUN_004036ac(uVar3);
    }
    *in_FS_OFFSET = puStack_14c;
    *(byte *)(local_8 + 0xb3) = *(byte *)(local_8 + 0xb3) & 0xfe;
    return;
  }
  *in_FS_OFFSET = uStack_148;
  puStack_140 = &LAB_00442003;
  uStack_144 = 0x441ffb;
  FUN_0040be98(*(int *)PTR_DAT_004758d4);
  return;
}



void FUN_00442044(int *param_1,undefined4 param_2,undefined4 param_3)

{
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  if ((char)param_1[0x87] == '\0') {
    (**(code **)(*param_1 + 0xc0))();
    param_3 = extraout_ECX;
    param_2 = extraout_EDX;
  }
  if ((*(byte *)(param_1 + 0xb3) & 0x20) != 0) {
    FUN_00403130(param_1,param_2,param_3);
    *(byte *)(param_1 + 0xb3) = *(byte *)(param_1 + 0xb3) & 0xdf;
  }
  return;
}



int * FUN_0044207c(int *param_1,char param_2,int *param_3)

{
  int *piVar1;
  undefined4 uVar2;
  int iVar3;
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar4;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_004415b0(param_1,'\0',param_3);
  param_1[0x10] = DAT_004421d4;
  FUN_0042a5b4(param_1,0);
  FUN_0042a5d4(param_1,0);
  FUN_0042a5f8(param_1,0x140);
  FUN_0042a618(param_1,0xf0);
  FUN_00442c80(param_1,0,extraout_ECX_00);
  FUN_0042af70((int)param_1,'\0');
  FUN_0042aee4((int)param_1,'\0');
  FUN_00430fd8((int)param_1,'\x01');
  *(undefined1 *)(param_1 + 0x84) = DAT_004421d8;
  *(undefined1 *)((int)param_1 + 0x211) = 2;
  *(undefined1 *)((int)param_1 + 0x213) = 0;
  *(undefined1 *)((int)param_1 + 0x219) = 3;
  piVar1 = FUN_0041dd58((int *)PTR_PTR_004162b8,'\x01',extraout_ECX_01);
  param_1[0x8a] = (int)piVar1;
  uVar4 = 0x31;
  uVar2 = (**(code **)PTR_DAT_00475690)();
  (**(code **)(*piVar1 + 0x40))(piVar1,uVar2,*piVar1,uVar4);
  uVar2 = (**(code **)PTR_DAT_00475690)();
  (**(code **)(*(int *)param_1[0x8a] + 0x34))((int *)param_1[0x8a],uVar2);
  iVar3 = param_1[0x8a];
  *(int **)(iVar3 + 0xc) = param_1;
  *(code **)(iVar3 + 8) = FUN_0044291c;
  *(undefined1 *)(param_1 + 0x8b) = 0;
  piVar1 = FUN_00417954((int *)PTR_PTR_004262cc,'\x01',extraout_ECX_02);
  param_1[0x88] = (int)piVar1;
  FUN_00429b28(piVar1,(int)param_1);
  param_1[0x91] = *(int *)(DAT_004767d4 + 0x34);
  *(undefined1 *)((int)param_1 + 0x21d) = 1;
  iVar3 = FUN_00402e9c(param_1);
  param_1[0x29] = iVar3;
  FUN_00446d38(DAT_004767d4,param_1);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = 0x32;
  }
  return param_1;
}



void FUN_00442244(int *param_1,char param_2)

{
  bool bVar1;
  byte extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  byte local_9;
  int *local_8;
  
  puStack_10 = (undefined1 *)0x44224f;
  local_8 = FUN_004032b4(param_1,param_2);
  local_9 = extraout_DL;
  if ((*(byte *)(local_8 + 8) & 8) == 0) {
    puStack_10 = (undefined1 *)0x44226a;
    FUN_0040be4c(*(int *)PTR_DAT_004758d4);
  }
  puStack_14 = &LAB_0044230e;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  puStack_10 = &stack0xfffffffc;
  if ((char)local_8[0x87] != '\0') {
    puStack_10 = &stack0xfffffffc;
    (**(code **)(*local_8 + 0xc4))();
  }
  FUN_00444838((int)local_8,'\0');
  bVar1 = FUN_00431194((int)local_8);
  if (bVar1) {
    (**(code **)(*local_8 + 0x9c))();
  }
  FUN_00446d70(DAT_004767d4,(int)local_8);
  FUN_00402f54((int *)local_8[0x88]);
  FUN_00402f54((int *)local_8[0x8a]);
  FUN_0040bebc(local_8 + 0xb2);
  FUN_00441618(local_8,local_9 & 0xfc);
  *in_FS_OFFSET = uStack_18;
  puStack_10 = &LAB_00442315;
  puStack_14 = (undefined1 *)0x44230d;
  FUN_0040be98(*(int *)PTR_DAT_004758d4);
  return;
}



void FUN_00442328(int *param_1,undefined4 param_2,undefined1 *param_3)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  
  puStack_18 = &stack0xfffffffc;
  if (*(short *)((int)param_1 + 0x2ba) != 0) {
    puStack_1c = &LAB_00442369;
    uStack_20 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_20;
    (*(code *)param_1[0xae])(param_1[0xaf],param_1);
    *in_FS_OFFSET = uStack_20;
    param_3 = puStack_18;
    param_2 = uStack_20;
  }
  if ((*(byte *)(param_1 + 0xb3) & 2) != 0) {
    puStack_18 = (undefined1 *)0x442396;
    FUN_00442c80(param_1,CONCAT31((int3)((uint)param_2 >> 8),1),param_3);
  }
  return;
}



void FUN_0044239c(int param_1)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  
  puStack_18 = &stack0xfffffffc;
  if (*(short *)(param_1 + 0x2c2) != 0) {
    puStack_1c = &LAB_004423dd;
    uStack_20 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_20;
    (**(code **)(param_1 + 0x2c0))(*(undefined4 *)(param_1 + 0x2c4),param_1);
    *in_FS_OFFSET = uStack_20;
  }
  return;
}



void FUN_004423fc(int *param_1)

{
  int *piVar1;
  char cVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_EDX;
  
  FUN_0042ca90(param_1);
  piVar1 = (int *)param_1[0x82];
  if (piVar1 != (int *)0x0) {
    param_1[0x82] = 0;
    cVar2 = FUN_00403130(piVar1,extraout_EDX,extraout_ECX);
    if (cVar2 != '\0') {
      FUN_0044437c(param_1,piVar1,extraout_ECX_00);
    }
  }
  return;
}



void FUN_00442438(int *param_1,int *param_2,undefined4 param_3)

{
  int *piVar1;
  int iVar2;
  int *piVar3;
  char cVar4;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_ECX_03;
  undefined4 uVar5;
  undefined4 extraout_ECX;
  
  cVar4 = (char)param_3;
  FUN_0042a368(param_1,(int)param_2,cVar4);
  if (cVar4 == '\0') {
    piVar1 = FUN_004030cc(param_2,(int)PTR_PTR_00435750);
    if ((char)piVar1 == '\0') {
      if (((((*(byte *)(param_1 + 8) & 1) == 0) && (param_1[0x8c] == 0)) &&
          (param_1 == (int *)param_2[1])) &&
         (piVar1 = FUN_004030cc(param_2,(int)PTR_PTR_0043859c), (char)piVar1 != '\0')) {
        FUN_004437d0(param_1,param_2);
      }
    }
    else {
      if (param_1[0xb2] == 0) {
        iVar2 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX_00);
        param_1[0xb2] = iVar2;
      }
      FUN_0040f38c((int *)param_1[0xb2],(int)param_2);
    }
  }
  else if (cVar4 == '\x01') {
    piVar1 = (int *)param_1[0xb2];
    uVar5 = extraout_ECX;
    if ((piVar1 == (int *)0x0) ||
       (piVar3 = FUN_004030cc(param_2,(int)PTR_PTR_00435750), uVar5 = extraout_ECX_01,
       (char)piVar3 == '\0')) {
      if (param_2 == (int *)param_1[0x8c]) {
        FUN_004437d0(param_1,(int *)0x0);
        uVar5 = extraout_ECX_02;
      }
      if (param_2 == (int *)param_1[0x90]) {
        FUN_004437a8(param_1,0,uVar5);
        uVar5 = extraout_ECX_03;
      }
      if (param_2 == (int *)param_1[0x92]) {
        FUN_00443784((int)param_1,(int *)0x0,uVar5);
      }
    }
    else {
      FUN_0040f680(piVar1,(int)param_2);
    }
  }
  if (param_1[0x8e] != 0) {
    (**(code **)(*(int *)param_1[0x8e] + 0x10))((int *)param_1[0x8e],param_2,param_3);
  }
  return;
}



void FUN_00442874(int param_1)

{
  int *piVar1;
  
  piVar1 = (int *)FUN_00443644(param_1);
  FUN_00418250(piVar1,&LAB_00442894);
  return;
}



void FUN_0044291c(int *param_1)

{
  bool bVar1;
  LPARAM lParam;
  HWND pHVar2;
  BOOL BVar3;
  UINT Msg;
  WPARAM wParam;
  
  if (*PTR_DAT_00475700 == '\0') {
    pHVar2 = (HWND)FUN_00430e98(param_1);
    BVar3 = IsIconic(pHVar2);
    if (BVar3 != 0) {
      (**(code **)(*param_1 + 0x74))();
    }
  }
  else {
    bVar1 = FUN_00431194((int)param_1);
    if ((bVar1) && (*(char *)((int)param_1 + 0x211) != '\x03')) {
      lParam = FUN_004449ac((int)param_1);
      wParam = 1;
      Msg = 0x80;
      pHVar2 = (HWND)FUN_00430e98(param_1);
      SendMessageA(pHVar2,Msg,wParam,lParam);
      return;
    }
  }
  return;
}



uint FUN_00442978(int param_1)

{
  uint uVar1;
  
  uVar1 = FUN_00442988(param_1);
  return uVar1 ^ 1;
}



undefined4 FUN_00442988(int param_1)

{
  if (((*(char *)(param_1 + 0x1f8) == '\0') && (*(int *)(*(int *)(param_1 + 0x1f0) + 0x10) == 0)) &&
     (param_1 = *(int *)(param_1 + 500), *(int *)(param_1 + 0x10) == 0)) {
    return 0;
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



undefined4 FUN_004429b0(int param_1)

{
  char cVar1;
  uint uVar2;
  undefined3 uVar3;
  
  uVar2 = FUN_00443658(param_1);
  if ((char)uVar2 != '\0') {
    uVar3 = (undefined3)(uVar2 >> 8);
    if ((*(char *)(param_1 + 0x211) == '\x02') || (*(char *)(param_1 + 0x211) == '\x05')) {
      cVar1 = '\x01';
    }
    else {
      cVar1 = '\0';
      uVar3 = 0;
    }
    if (cVar1 != *(char *)(param_1 + 0x1f8)) {
      return CONCAT31(uVar3,1);
    }
  }
  return 0;
}



undefined4 FUN_00442b38(int *param_1)

{
  int iVar1;
  int iVar2;
  
  if (param_1[0x24] == 0) {
    iVar1 = (**(code **)(*param_1 + 0x54))();
    iVar2 = FUN_00402e9c(param_1);
    if (iVar1 == iVar2) {
      return CONCAT31((int3)((uint)iVar2 >> 8),1);
    }
  }
  return 0;
}



void FUN_00442b64(int param_1,int *param_2,int param_3)

{
  char cVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  int iVar5;
  int local_14;
  
  piVar2 = FUN_004030cc(param_2,(int)PTR_PTR_00426ca8);
  if ((char)piVar2 == '\0') {
    iVar3 = FUN_0042de00(param_1);
    local_14 = -1;
    iVar4 = FUN_00414a90(param_1);
    if (-1 < iVar4 + -1) {
      iVar5 = 0;
      do {
        piVar2 = (int *)FUN_00414a64(param_1,iVar5);
        cVar1 = FUN_00403130(piVar2,extraout_EDX,extraout_ECX);
        if ((cVar1 == '\0') && (local_14 = local_14 + 1, local_14 == param_3 - iVar3)) {
          FUN_00414aa0((int)param_2,iVar5);
          return;
        }
        iVar5 = iVar5 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
    }
  }
  else {
    FUN_00431430(param_1,param_2,param_3);
  }
  return;
}



void FUN_00442c20(int *param_1,int param_2)

{
  if ((*(byte *)(param_1 + 0x11) & 8) != 0) {
    param_1[0x94] = param_2;
    *(byte *)(param_1 + 0x22) = DAT_00442c4c | *(byte *)(param_1 + 0x22);
    return;
  }
  FUN_0042a83c(param_1,param_2);
  return;
}



void FUN_00442c50(int *param_1,int param_2)

{
  if ((*(byte *)(param_1 + 0x11) & 8) != 0) {
    param_1[0x95] = param_2;
    *(byte *)(param_1 + 0x22) = DAT_00442c7c | *(byte *)(param_1 + 0x22);
    return;
  }
  FUN_0042a880(param_1,param_2);
  return;
}



void FUN_00442c80(int *param_1,uint param_2,undefined4 param_3)

{
  undefined4 extraout_ECX;
  char cVar1;
  
  cVar1 = (char)param_2;
  if ((*(byte *)(param_1 + 0xb3) & 1) == 0) {
    if ((cVar1 != '\0') && (cVar1 != *(char *)((int)param_1 + 0x47))) {
      FUN_00443b34(param_1);
      param_3 = extraout_ECX;
    }
    FUN_0042acd8(param_1,param_2,param_3);
  }
  else {
    if (cVar1 == '\0') {
      *(byte *)(param_1 + 0xb3) = *(byte *)(param_1 + 0xb3) & 0xfd;
      return;
    }
    *(byte *)(param_1 + 0xb3) = *(byte *)(param_1 + 0xb3) | 2;
  }
  return;
}



void FUN_00443164(void)

{
  LRESULT LVar1;
  int in_stack_00000004;
  
  LVar1 = CallWindowProcA(*(WNDPROC *)(*(int *)(in_stack_00000004 + -4) + 0x25c),
                          *(HWND *)(*(int *)(in_stack_00000004 + -4) + 0x23c),
                          **(UINT **)(in_stack_00000004 + -8),
                          *(WPARAM *)(*(int *)(in_stack_00000004 + -8) + 4),
                          *(LPARAM *)(*(int *)(in_stack_00000004 + -8) + 8));
  *(LRESULT *)(*(int *)(in_stack_00000004 + -8) + 0xc) = LVar1;
  return;
}



undefined4 FUN_004431b0(void)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int in_stack_00000004;
  
  iVar1 = FUN_00443548(*(int *)(in_stack_00000004 + -4));
  if (-1 < iVar1 + -1) {
    iVar3 = 0;
    do {
      iVar2 = FUN_00443594(*(int *)(in_stack_00000004 + -4),iVar3);
      if (*(char *)(iVar2 + 0x213) == '\x02') {
        return CONCAT31((int3)((uint)iVar2 >> 8),1);
      }
      iVar3 = iVar3 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  return 0;
}



void FUN_004432f4(int *param_1,int param_2,uint param_3)

{
  bool bVar1;
  HWND pHVar2;
  int *piVar3;
  int iVar4;
  int iVar5;
  uint dwNewLong;
  uint local_10;
  
  local_10 = param_3;
  FUN_00441d30(param_1,param_2);
  bVar1 = FUN_00431194((int)param_1);
  if (bVar1) {
    iVar5 = -0x14;
    pHVar2 = (HWND)FUN_00430e98(param_1);
    local_10 = GetWindowLongA(pHVar2,iVar5);
    local_10 = local_10 & 0xffff8fff;
    FUN_0042def4(param_1,&local_10);
    iVar5 = -0x14;
    dwNewLong = local_10;
    pHVar2 = (HWND)FUN_00430e98(param_1);
    SetWindowLongA(pHVar2,iVar5,dwNewLong);
  }
  iVar5 = FUN_00414a90((int)param_1);
  if (-1 < iVar5 + -1) {
    iVar4 = 0;
    do {
      piVar3 = (int *)FUN_00414a64((int)param_1,iVar4);
      piVar3 = FUN_004030cc(piVar3,(int)PTR_PTR_004384a8);
      if ((char)piVar3 != '\0') {
        piVar3 = (int *)FUN_00414a64((int)param_1,iVar4);
        FUN_0043d20c(piVar3);
      }
      iVar4 = iVar4 + 1;
      iVar5 = iVar5 + -1;
    } while (iVar5 != 0);
  }
  return;
}



void FUN_00443440(int param_1,char param_2)

{
  char cVar1;
  
  if (param_2 != *(char *)(param_1 + 0x211)) {
    *(char *)(param_1 + 0x211) = param_2;
    if ((param_2 == '\x02') || (param_2 == '\x05')) {
      cVar1 = '\x01';
    }
    else {
      cVar1 = '\0';
    }
    FUN_0044180c(param_1,cVar1);
    if ((*(byte *)(param_1 + 0x20) & 0x10) == 0) {
      FUN_0042e448(param_1);
    }
  }
  return;
}



void FUN_00443478(int *param_1,int *param_2,undefined4 *param_3)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  undefined4 local_1c [4];
  
  puVar3 = local_1c;
  for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {
    *puVar3 = *param_3;
    param_3 = param_3 + 1;
    puVar3 = puVar3 + 1;
  }
  iVar2 = param_1[9];
  iVar1 = param_1[0x24];
  FUN_0042a638(param_1,param_2,local_1c);
  if (((param_1[9] != 0) && (iVar2 == param_1[9])) && (iVar1 != param_1[0x24])) {
    FUN_0042e448((int)param_1);
  }
  return;
}



void FUN_004434c0(int *param_1,int param_2,int *param_3)

{
  char cVar1;
  
  if (param_2 != param_1[0x24]) {
    if (param_2 != 0) {
      cVar1 = (**(code **)(*param_1 + 0x50))();
      if (cVar1 == '\0') goto LAB_00443505;
    }
    if (param_2 == 0) {
      *(char *)((int)param_1 + 0x211) = (char)param_1[0x9a];
    }
    else {
      *(undefined1 *)(param_1 + 0x9a) = *(undefined1 *)((int)param_1 + 0x211);
      *(undefined1 *)((int)param_1 + 0x211) = 0;
    }
  }
LAB_00443505:
  FUN_0042a744(param_1,param_2,param_3);
  return;
}



HANDLE FUN_00443514(int param_1)

{
  HANDLE pvVar1;
  HWND pHVar2;
  
  pvVar1 = (HANDLE)0x0;
  if ((*(char *)(param_1 + 0x217) == '\x02') && (*(int *)(param_1 + 0x23c) != 0)) {
    pHVar2 = (HWND)SendMessageA(*(HWND *)(param_1 + 0x23c),0x229,0,0);
    pvVar1 = FUN_00427fac(pHVar2);
  }
  return pvVar1;
}



int FUN_00443548(int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  
  iVar4 = 0;
  if ((*(char *)(param_1 + 0x217) == '\x02') && (*(int *)(param_1 + 0x23c) != 0)) {
    iVar1 = FUN_00446cc8(DAT_004767d4);
    if (-1 < iVar1 + -1) {
      iVar3 = 0;
      do {
        iVar2 = FUN_00446cb4(DAT_004767d4,iVar3);
        if (*(char *)(iVar2 + 0x217) == '\x01') {
          iVar4 = iVar4 + 1;
        }
        iVar3 = iVar3 + 1;
        iVar1 = iVar1 + -1;
      } while (iVar1 != 0);
    }
  }
  return iVar4;
}



int FUN_00443594(int param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  if (((*(char *)(param_1 + 0x217) == '\x02') && (*(int *)(param_1 + 0x23c) != 0)) &&
     (iVar1 = FUN_00446cc8(DAT_004767d4), -1 < iVar1 + -1)) {
    iVar3 = 0;
    do {
      iVar2 = FUN_00446cb4(DAT_004767d4,iVar3);
      if ((*(char *)(iVar2 + 0x217) == '\x01') && (param_2 = param_2 + -1, param_2 < 0)) {
        return iVar2;
      }
      iVar3 = iVar3 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  return 0;
}



undefined4 FUN_004435e4(int *param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  undefined4 uVar4;
  int iVar5;
  
  FUN_00430e98(param_1);
  iVar1 = (**(code **)PTR_DAT_00475714)();
  iVar2 = FUN_00446c98(DAT_004767d4);
  if (-1 < iVar2 + -1) {
    iVar5 = 0;
    do {
      iVar3 = FUN_00446c84(DAT_004767d4,iVar5);
      if (iVar1 == *(int *)(iVar3 + 4)) {
        uVar4 = FUN_00446c84(DAT_004767d4,iVar5);
        return uVar4;
      }
      iVar5 = iVar5 + 1;
      iVar2 = iVar2 + -1;
    } while (iVar2 != 0);
  }
  return 0;
}



undefined4 FUN_00443644(int param_1)

{
  return *(undefined4 *)(param_1 + 0x220);
}



uint FUN_00443658(int param_1)

{
  return CONCAT31((int3)((uint)param_1 >> 8),*(undefined1 *)(param_1 + 0x4e)) ^ 1;
}



void FUN_00443688(int *param_1,undefined4 param_2,undefined4 param_3)

{
  char cVar1;
  int iVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  char cVar3;
  
  cVar3 = (char)param_2;
  if (cVar3 != *(char *)((int)param_1 + 0x217)) {
    if ((cVar3 == '\x01') && ((char)param_1[0x86] == '\0')) {
      FUN_004439dc((int)param_1,'\x01');
      param_3 = extraout_ECX;
      param_2 = extraout_EDX;
    }
    if ((*(byte *)(param_1 + 8) & 0x10) == 0) {
      FUN_0042e400(param_1);
      param_3 = extraout_ECX_00;
      param_2 = extraout_EDX_00;
    }
    cVar1 = *(char *)((int)param_1 + 0x217);
    *(char *)((int)param_1 + 0x217) = cVar3;
    if (((cVar3 == '\x02') || (cVar1 == '\x02')) && ((char)param_1[0x4e] == '\0')) {
      iVar2 = FUN_00443a58((int)param_1);
      FUN_0042af4c((int)param_1,iVar2);
      param_3 = extraout_ECX_01;
      param_2 = extraout_EDX_01;
    }
    if ((*(byte *)(param_1 + 8) & 0x10) == 0) {
      FUN_0042e598(param_1);
      param_3 = extraout_ECX_02;
      param_2 = extraout_EDX_02;
    }
    if (cVar3 == '\x01') {
      FUN_00442c80(param_1,CONCAT31((int3)((uint)param_2 >> 8),1),param_3);
    }
  }
  return;
}



void FUN_00443708(int *param_1)

{
  HWND pHVar1;
  HMENU pHVar2;
  HMENU wParam;
  LPARAM lParam;
  
  if ((*(char *)((int)param_1 + 0x217) == '\x02') && (param_1[0x8f] != 0)) {
    wParam = (HMENU)0x0;
    if ((int *)param_1[0x8c] != (int *)0x0) {
      wParam = (HMENU)(**(code **)(*(int *)param_1[0x8c] + 0x34))();
    }
    lParam = 0;
    if (param_1[0x90] != 0) {
      lParam = FUN_00439ab8(param_1[0x90]);
    }
    pHVar1 = (HWND)FUN_00430e98(param_1);
    pHVar2 = GetMenu(pHVar1);
    SendMessageA((HWND)param_1[0x8f],0x230,(WPARAM)wParam,lParam);
    if (wParam != pHVar2) {
      pHVar1 = (HWND)FUN_00430e98(param_1);
      DrawMenuBar(pHVar1);
    }
  }
  return;
}



void FUN_00443784(int param_1,int *param_2,undefined4 param_3)

{
  *(int **)(param_1 + 0x248) = param_2;
  if (param_2 != (int *)0x0) {
    FUN_00414540((int)param_2,param_1,param_3);
    FUN_0043b334(param_2,0);
  }
  return;
}



void FUN_004437a8(int *param_1,int param_2,undefined4 param_3)

{
  if (param_2 != param_1[0x90]) {
    param_1[0x90] = param_2;
    if (param_2 != 0) {
      FUN_00414540(param_2,(int)param_1,param_3);
    }
    FUN_00443708(param_1);
  }
  return;
}



void FUN_004437d0(int *param_1,int *param_2)

{
  undefined1 *puVar1;
  bool bVar2;
  int iVar3;
  int *piVar4;
  HMENU pHVar5;
  HWND pHVar6;
  HMENU pHVar7;
  undefined4 uVar8;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_ECX_03;
  int iVar9;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_2c;
  undefined1 *puStack_28;
  undefined1 *puStack_24;
  byte *local_14;
  int local_10;
  undefined1 local_c;
  int local_8;
  
  puStack_24 = &stack0xfffffffc;
  uVar8 = 0;
  local_14 = (byte *)0x0;
  puStack_28 = &LAB_00443984;
  uStack_2c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_2c;
  puVar1 = &stack0xfffffffc;
  if ((param_2 != (int *)0x0) &&
     (iVar3 = FUN_00446cc8(DAT_004767d4), uVar8 = extraout_ECX, puVar1 = puStack_24, -1 < iVar3 + -1
     )) {
    iVar9 = 0;
    local_8 = iVar3;
    do {
      iVar3 = FUN_00446cb4(DAT_004767d4,iVar9);
      uVar8 = extraout_ECX_00;
      if ((param_2 == *(int **)(iVar3 + 0x230)) &&
         (piVar4 = (int *)FUN_00446cb4(DAT_004767d4,iVar9), uVar8 = extraout_ECX_01,
         param_1 != piVar4)) {
        local_10 = param_2[2];
        local_c = 0xb;
        piVar4 = &local_10;
        uVar8 = 0;
        FUN_004054e4((undefined4 *)PTR_PTR_00475628,(int *)&local_14);
        uVar8 = FUN_0040aa4c((int)PTR_DAT_0040dc48,'\x01',local_14,uVar8,piVar4);
        FUN_004036ac(uVar8);
        uVar8 = extraout_ECX_02;
      }
      iVar9 = iVar9 + 1;
      local_8 = local_8 + -1;
      puVar1 = puStack_24;
    } while (local_8 != 0);
  }
  puStack_24 = puVar1;
  if ((int *)param_1[0x8c] != (int *)0x0) {
    FUN_0043cd54((int *)param_1[0x8c],0);
    uVar8 = extraout_ECX_03;
  }
  param_1[0x8c] = (int)param_2;
  if ((param_2 == (int *)0x0) ||
     ((FUN_00414540((int)param_2,(int)param_1,uVar8), (*(byte *)(param_1 + 8) & 0x10) == 0 &&
      (*(char *)((int)param_1 + 0x211) == '\x03')))) {
    bVar2 = FUN_00431194((int)param_1);
    if (bVar2) {
      pHVar5 = (HMENU)0x0;
      pHVar6 = (HWND)FUN_00430e98(param_1);
      SetMenu(pHVar6,pHVar5);
    }
  }
  else if (((*(char *)(param_1[0x8c] + 0x4c) == '\0') && (*(char *)((int)param_1 + 0x217) != '\x01')
           ) || ((*(byte *)(param_1 + 8) & 0x10) != 0)) {
    bVar2 = FUN_00431194((int)param_1);
    if (bVar2) {
      pHVar5 = (HMENU)(**(code **)(*(int *)param_1[0x8c] + 0x34))();
      pHVar6 = (HWND)FUN_00430e98(param_1);
      pHVar7 = GetMenu(pHVar6);
      if (pHVar5 != pHVar7) {
        pHVar5 = (HMENU)(**(code **)(*(int *)param_1[0x8c] + 0x34))();
        pHVar6 = (HWND)FUN_00430e98(param_1);
        SetMenu(pHVar6,pHVar5);
      }
      iVar3 = FUN_00430e98(param_1);
      FUN_0043cd54(param_2,iVar3);
    }
  }
  else if ((*(char *)((int)param_1 + 0x217) != '\x01') &&
          (bVar2 = FUN_00431194((int)param_1), bVar2)) {
    pHVar5 = (HMENU)0x0;
    pHVar6 = (HWND)FUN_00430e98(param_1);
    SetMenu(pHVar6,pHVar5);
  }
  if (*(char *)((int)param_1 + 0x216) != '\0') {
    FUN_00444838((int)param_1,'\x01');
  }
  FUN_00443708(param_1);
  *in_FS_OFFSET = uStack_2c;
  puStack_24 = &LAB_0044398b;
  puStack_28 = (undefined1 *)0x443983;
  FUN_00403bdc((int *)&local_14);
  return;
}



int FUN_00443994(int param_1)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x244);
  if (iVar1 == 0) {
    iVar1 = *(int *)(DAT_004767d4 + 0x34);
  }
  return iVar1;
}



void FUN_004439dc(int param_1,char param_2)

{
  if ((param_2 != *(char *)(param_1 + 0x218)) &&
     (*(char *)(param_1 + 0x218) = param_2, (*(byte *)(param_1 + 0x20) & 0x10) == 0)) {
    FUN_0042e448(param_1);
  }
  return;
}



bool FUN_004439f8(int param_1)

{
  return *(int *)(param_1 + 0x244) != 0;
}



undefined4 FUN_00443a58(int param_1)

{
  undefined4 uVar1;
  
  uVar1 = 0x80000005;
  if (*(char *)(param_1 + 0x217) == '\x02') {
    uVar1 = 0x8000000c;
  }
  return uVar1;
}



void FUN_00443ab8(int *param_1)

{
  FUN_00430498(param_1);
  if (param_1[0x88] != 0) {
    FUN_004182f4(param_1[0x88]);
  }
  return;
}



void FUN_00443af4(int *param_1,byte param_2)

{
  HWND hWnd;
  int nCmdShow;
  
  if (((param_2 != *(byte *)((int)param_1 + 0x213)) &&
      (*(byte *)((int)param_1 + 0x213) = param_2, (*(byte *)(param_1 + 8) & 0x10) == 0)) &&
     ((char)param_1[0x5a] != '\0')) {
    nCmdShow = *(int *)(&DAT_0047499c + (uint)param_2 * 4);
    hWnd = (HWND)FUN_00430e98(param_1);
    ShowWindow(hWnd,nCmdShow);
  }
  return;
}



void FUN_00443b34(int *param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  undefined1 *puVar7;
  undefined1 *puVar8;
  int iVar9;
  int local_24;
  int local_1c;
  int local_18;
  int local_14;
  
  if ((*(char *)((int)param_1 + 0x219) != '\0') && (*(int *)(DAT_004767d0 + 0x38) != 0)) {
    local_24 = 0;
    if (*(char *)((int)param_1 + 0x219) == '\x02') {
      iVar1 = FUN_004435e4(*(int **)(DAT_004767d0 + 0x38));
      local_24 = *(int *)(iVar1 + 4);
    }
    else if ((*(char *)((int)param_1 + 0x219) == '\x03') && (*(int *)(DAT_004767d4 + 0x5c) != 0)) {
      iVar1 = FUN_004435e4(*(int **)(DAT_004767d4 + 0x5c));
      local_24 = *(int *)(iVar1 + 4);
    }
    else if (*(char *)((int)param_1 + 0x219) == '\x01') {
      iVar1 = FUN_00446c84(DAT_004767d4,0);
      local_24 = *(int *)(iVar1 + 4);
    }
    iVar1 = FUN_004435e4(param_1);
    iVar1 = *(int *)(iVar1 + 4);
    local_14 = FUN_00446c98(DAT_004767d4);
    if (-1 < local_14 + -1) {
      iVar9 = 0;
      do {
        iVar2 = FUN_00446c84(DAT_004767d4,iVar9);
        if ((*(int *)(iVar2 + 4) == local_24) && (local_24 != iVar1)) {
          iVar2 = FUN_00446c98(DAT_004767d4);
          if (-1 < iVar2 + -1) {
            local_1c = 0;
            do {
              iVar3 = FUN_00446c84(DAT_004767d4,local_1c);
              if (*(int *)(iVar3 + 4) == iVar1) {
                if ((char)param_1[0x86] == '\x04') {
                  iVar3 = param_1[0xf];
                  FUN_00446c84(DAT_004767d4,iVar9);
                  iVar4 = FUN_004469f8();
                  FUN_00446c84(DAT_004767d4,iVar9);
                  iVar5 = FUN_004469d4();
                  iVar6 = iVar5 - iVar3 >> 1;
                  if (iVar6 < 0) {
                    iVar6 = iVar6 + (uint)((iVar5 - iVar3 & 1U) != 0);
                  }
                  FUN_00446c84(DAT_004767d4,iVar9);
                  puVar7 = FUN_004469b4();
                  FUN_00446c84(DAT_004767d4,iVar9);
                  iVar3 = FUN_00446a18();
                  iVar5 = iVar3 - param_1[0xe] >> 1;
                  if (iVar5 < 0) {
                    iVar5 = iVar5 + (uint)((iVar3 - param_1[0xe] & 1U) != 0);
                  }
                  (**(code **)(*param_1 + 0x7c))(param_1,puVar7 + iVar5,iVar4 + iVar6);
                }
                else if ((char)param_1[0x86] == '\x06') {
                  iVar3 = param_1[0xf];
                  FUN_00446c84(DAT_004767d4,iVar9);
                  iVar4 = FUN_004469f8();
                  FUN_00446c84(DAT_004767d4,iVar9);
                  iVar5 = FUN_004469d4();
                  iVar6 = iVar5 - iVar3 >> 1;
                  if (iVar6 < 0) {
                    iVar6 = iVar6 + (uint)((iVar5 - iVar3 & 1U) != 0);
                  }
                  FUN_00446c84(DAT_004767d4,iVar9);
                  puVar7 = FUN_004469b4();
                  FUN_00446c84(DAT_004767d4,iVar9);
                  iVar3 = FUN_00446a18();
                  iVar5 = iVar3 - param_1[0xe] >> 1;
                  if (iVar5 < 0) {
                    iVar5 = iVar5 + (uint)((iVar3 - param_1[0xe] & 1U) != 0);
                  }
                  (**(code **)(*param_1 + 0x7c))(param_1,puVar7 + iVar5,iVar4 + iVar6);
                }
                else {
                  FUN_00446c84(DAT_004767d4,iVar9);
                  puVar7 = FUN_004469b4();
                  iVar3 = param_1[0xc];
                  FUN_00446c84(DAT_004767d4,local_1c);
                  puVar8 = FUN_004469b4();
                  puVar7 = puVar7 + (iVar3 - (int)puVar8);
                  FUN_00446c84(DAT_004767d4,iVar9);
                  puVar8 = FUN_004469b4();
                  FUN_00446c84(DAT_004767d4,iVar9);
                  iVar3 = FUN_00446a18();
                  if ((int)(puVar8 + iVar3) < (int)(puVar7 + param_1[0xe])) {
                    FUN_00446c84(DAT_004767d4,iVar9);
                    puVar7 = FUN_004469b4();
                    FUN_00446c84(DAT_004767d4,iVar9);
                    iVar3 = FUN_00446a18();
                    puVar7 = puVar7 + (iVar3 - param_1[0xe]);
                  }
                  FUN_00446c84(DAT_004767d4,iVar9);
                  local_18 = FUN_004469f8();
                  local_18 = local_18 + param_1[0xd];
                  FUN_00446c84(DAT_004767d4,local_1c);
                  iVar3 = FUN_004469f8();
                  local_18 = local_18 - iVar3;
                  FUN_00446c84(DAT_004767d4,iVar9);
                  iVar3 = FUN_004469f8();
                  FUN_00446c84(DAT_004767d4,iVar9);
                  iVar4 = FUN_004469d4();
                  if (iVar3 + iVar4 < local_18 + param_1[0xf]) {
                    FUN_00446c84(DAT_004767d4,iVar9);
                    iVar3 = FUN_004469f8();
                    FUN_00446c84(DAT_004767d4,iVar9);
                    iVar4 = FUN_004469d4();
                    local_18 = (iVar3 + iVar4) - param_1[0xf];
                  }
                  (**(code **)(*param_1 + 0x7c))(param_1,puVar7,local_18,param_1[0xf],param_1[0xe]);
                }
              }
              local_1c = local_1c + 1;
              iVar2 = iVar2 + -1;
            } while (iVar2 != 0);
          }
        }
        iVar9 = iVar9 + 1;
        local_14 = local_14 + -1;
      } while (local_14 != 0);
    }
  }
  return;
}



undefined * FUN_00443e80(int *param_1,int *param_2)

{
  byte bVar1;
  byte bVar2;
  char cVar3;
  code *pcVar4;
  uint uVar5;
  undefined *puVar6;
  undefined4 uVar7;
  undefined3 uVar8;
  uint uVar9;
  
  pcVar4 = (code *)FUN_00441654(param_1,param_2);
  if ((param_1[9] == 0) && (param_1[0x59] == 0)) {
    pcVar4 = *(code **)(DAT_004767d0 + 0x24);
    param_2[7] = (int)pcVar4;
    param_2[1] = param_2[1] & 0xbffcffff;
  }
  param_2[9] = 8;
  if (((*(byte *)(param_1 + 8) & 0x10) == 0) || (param_1[9] != 0)) {
    if ((byte)((char)param_1[0x86] - 1U) < 2) {
      param_2[3] = -0x80000000;
      param_2[4] = -0x80000000;
    }
    bVar1 = *(byte *)(param_1 + 0x84);
    uVar9 = (uint)bVar1;
    bVar2 = *(byte *)((int)param_1 + 0x211);
    if ((*(char *)((int)param_1 + 0x217) == '\x01') && ((bVar2 == 0 || (bVar2 == 3)))) {
      bVar2 = 2;
    }
    uVar5 = (uint)bVar2;
    switch(uVar5) {
    case 0:
      if ((param_1[9] == 0) && (param_1[0x59] == 0)) {
        param_2[1] = param_2[1] | 0x80000000;
      }
      uVar9 = (uint)DAT_00444088;
      break;
    case 1:
    case 4:
      param_2[1] = param_2[1] | 0xc00000;
      break;
    case 2:
    case 5:
      param_2[1] = param_2[1] | 0xc40000;
      if (((char)param_1[0x86] == '\x01') || (uVar5 = 0, (char)param_1[0x86] == '\x03')) {
        uVar5 = 0;
        param_2[5] = -0x80000000;
        param_2[6] = -0x80000000;
      }
      break;
    case 3:
      param_2[1] = param_2[1] | 0x80c00000;
      param_2[2] = 0x101;
      FUN_0042def4(param_1,(uint *)(param_2 + 2));
      puVar6 = PTR_DAT_00475700;
      if (*PTR_DAT_00475700 == '\0') {
        puVar6 = (undefined *)(param_2[1] | 0x400080);
        param_2[1] = (int)puVar6;
      }
      uVar5 = CONCAT31((int3)((uint)puVar6 >> 8),DAT_0044408c & bVar1);
      param_2[9] = 0x2808;
      uVar9 = uVar5;
    }
    uVar5 = uVar5 & 0xffffff00;
    if ((byte)(bVar2 - 4) < 2) {
      param_2[2] = 0x80;
      uVar7 = FUN_0042def4(param_1,(uint *)(param_2 + 2));
      uVar5 = CONCAT31((int3)((uint)uVar7 >> 8),DAT_00444090 & (byte)uVar9);
      uVar9 = uVar5;
    }
    uVar8 = (undefined3)(uVar5 >> 8);
    pcVar4 = (code *)CONCAT31(uVar8,bVar2 - 3);
    if (bVar2 < 3) {
      if ((*(char *)((int)param_1 + 0x217) != '\x01') || ((uVar9 & 1) != 0)) {
        if ((uVar9 & 2) != 0) {
          param_2[1] = param_2[1] | 0x20000;
        }
        if ((uVar9 & 4) != 0) {
          param_2[1] = param_2[1] | 0x10000;
        }
      }
      cVar3 = *(char *)((int)param_1 + 0x213);
      pcVar4 = (code *)CONCAT31(uVar8,cVar3);
      if (cVar3 == '\x01') {
        param_2[1] = param_2[1] | 0x20000000;
      }
      else if (cVar3 == '\x02') {
        param_2[1] = param_2[1] | 0x1000000;
      }
    }
    else {
      *(undefined1 *)((int)param_1 + 0x213) = 0;
    }
    if ((uVar9 & 1) != 0) {
      param_2[1] = param_2[1] | 0x80000;
    }
    if ((uVar9 & 8) != 0) {
      param_2[2] = param_2[2] | 0x400;
    }
    if ((*(byte *)((int)param_1 + 0x21) & 2) != 0) {
      param_2[1] = param_2[1] & 0xff3fffff;
    }
    if (*(char *)((int)param_1 + 0x217) == '\x01') {
      pcVar4 = DefMDIChildProcA;
      param_2[10] = (int)DefMDIChildProcA;
    }
  }
  else {
    param_2[1] = param_2[1] | 0xcf0000;
  }
  return pcVar4;
}



void FUN_0044437c(int *param_1,int *param_2,undefined4 param_3)

{
  undefined1 *puVar1;
  char cVar2;
  int *piVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  int *extraout_EDX;
  int *extraout_EDX_00;
  int *extraout_EDX_01;
  int *extraout_EDX_02;
  undefined4 unaff_ESI;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  undefined4 *local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  puStack_1c = &LAB_00444424;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  puVar1 = &stack0xfffffffc;
  if (param_2 == (int *)param_1[0x82]) goto LAB_0044440e;
  piVar3 = param_2;
  puVar1 = &stack0xfffffffc;
  if (param_2 == (int *)0x0) goto LAB_004443e7;
  puVar1 = &stack0xfffffffc;
  if (param_1 == param_2) {
LAB_004443c6:
    puStack_18 = puVar1;
    FUN_004054e4((undefined4 *)PTR_PTR_00475858,(int *)&local_8);
    piVar3 = FUN_0040aa10((int *)PTR_DAT_0040dc48,'\x01',local_8);
    FUN_004036ac(piVar3);
    param_3 = extraout_ECX_01;
    piVar3 = extraout_EDX_01;
    puVar1 = puStack_18;
  }
  else {
    piVar3 = FUN_00440984(param_2);
    puVar1 = puStack_18;
    if (param_1 != piVar3) goto LAB_004443c6;
    param_3 = extraout_ECX;
    piVar3 = extraout_EDX;
    if ((*(byte *)(param_1 + 8) & 1) == 0) {
      cVar2 = FUN_00403130(param_2,extraout_EDX,extraout_ECX);
      param_3 = extraout_ECX_00;
      piVar3 = extraout_EDX_00;
      puVar1 = puStack_18;
      if (cVar2 == '\0') goto LAB_004443c6;
    }
  }
LAB_004443e7:
  puStack_18 = puVar1;
  param_1[0x82] = (int)param_2;
  puVar1 = puStack_18;
  if ((*(byte *)(param_1 + 8) & 1) == 0) {
    if (*(char *)((int)param_1 + 0x216) != '\0') {
      FUN_00444734(param_1);
      param_3 = extraout_ECX_02;
      piVar3 = extraout_EDX_02;
    }
    FUN_00403130(param_1,piVar3,param_3);
    puVar1 = puStack_18;
  }
LAB_0044440e:
  puStack_18 = puVar1;
  *in_FS_OFFSET = unaff_ESI;
  local_8 = (undefined4 *)&LAB_0044442b;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_00444434(int *param_1,int param_2,char param_3)

{
  bool bVar1;
  undefined4 extraout_ECX;
  
  if (param_3 != '\0') {
    bVar1 = thunk_FUN_0042dbb1(param_2,param_1[0x83]);
    if (bVar1) {
      param_1[0x83] = *(int *)(param_2 + 0x24);
    }
  }
  bVar1 = thunk_FUN_0042dbb1(param_2,param_1[0x82]);
  if (bVar1) {
    FUN_0044437c(param_1,(int *)0x0,extraout_ECX);
  }
  return;
}



void FUN_0044447c(int *param_1,int *param_2,undefined4 param_3)

{
  char cVar1;
  
  cVar1 = *(char *)((int)param_1 + 0x216);
  FUN_0044437c(param_1,param_2,param_3);
  if (cVar1 == '\0') {
    (**(code **)(*param_1 + 0xb0))();
  }
  return;
}



void FUN_00444734(int *param_1)

{
  HWND pHVar1;
  HWND pHVar2;
  
  if (((int *)param_1[0x82] != (int *)0x0) && (param_1[0x8e] == 0)) {
    param_1 = (int *)param_1[0x82];
  }
  pHVar1 = (HWND)FUN_00430e98(param_1);
  SetFocus(pHVar1);
  pHVar1 = (HWND)FUN_00430e98(param_1);
  pHVar2 = GetFocus();
  if (pHVar1 == pHVar2) {
    FUN_0042bd64((int)param_1,0xb029,0,0);
  }
  return;
}



void FUN_00444784(int *param_1,byte param_2,undefined4 param_3)

{
  int *piVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  
  *(byte *)((int)param_1 + 0x216) = param_2;
  if (param_1[0x99] != 0) {
    FUN_0042bd64(param_1[0x99],0xb02b,(uint)param_2,0);
    param_3 = extraout_ECX;
  }
  if (param_2 != 0) {
    if ((param_1[0x82] == 0) && ((*(byte *)(param_1 + 8) & 0x10) == 0)) {
      piVar1 = (int *)FUN_004312b0(param_1,0,CONCAT31((int3)((uint)param_3 >> 8),1),'\0','\x01');
      FUN_0044437c(param_1,piVar1,extraout_ECX_00);
    }
    FUN_00444838((int)param_1,'\x01');
    FUN_00444734(param_1);
  }
  return;
}



void FUN_004447e8(int param_1,undefined4 param_2)

{
  HANDLE pvVar1;
  
  if ((*(char *)(param_1 + 0x216) != '\0') && (*(int *)(param_1 + 0x208) != 0)) {
    FUN_0042bd64(*(int *)(param_1 + 0x208),0xb004,0,param_2);
  }
  if (*(char *)(param_1 + 0x217) == '\x02') {
    pvVar1 = FUN_00443514(param_1);
    if (pvVar1 != (HANDLE)0x0) {
      pvVar1 = FUN_00443514(param_1);
      FUN_004447e8((int)pvVar1,param_2);
    }
  }
  return;
}



void FUN_00444838(int param_1,char param_2)

{
  int iVar1;
  int iVar2;
  
  if ((((((*(byte *)(param_1 + 0x2cc) & 8) == 0) && (*(int *)(DAT_004767d0 + 0x38) != 0)) &&
       (*(int *)(*(int *)(DAT_004767d0 + 0x38) + 0x230) != 0)) &&
      (param_1 != *(int *)(DAT_004767d0 + 0x38))) &&
     ((*(char *)(param_1 + 0x217) == '\x01' ||
      (*(char *)(*(int *)(DAT_004767d0 + 0x38) + 0x217) != '\x02')))) {
    iVar2 = 0;
    if ((((*(byte *)(param_1 + 0x20) & 0x10) == 0) && (*(int *)(param_1 + 0x230) != 0)) &&
       ((*(char *)(*(int *)(param_1 + 0x230) + 0x4c) != '\0' ||
        (*(char *)(param_1 + 0x217) == '\x01')))) {
      iVar2 = *(int *)(param_1 + 0x230);
    }
    iVar1 = *(int *)(*(int *)(DAT_004767d0 + 0x38) + 0x230);
    if (param_2 == '\0') {
      FUN_0043d334(iVar1,iVar2);
    }
    else {
      FUN_0043d318(iVar1,iVar2);
    }
  }
  return;
}



void FUN_004448e0(UINT param_1,int *param_2,int *param_3)

{
  int *piVar1;
  HWND hWnd;
  int *piVar2;
  WPARAM wParam;
  LPARAM lParam;
  
  if (param_2 != (int *)0x0) {
    do {
      piVar2 = param_2;
      param_2 = (int *)piVar2[9];
      if (param_2 == (int *)0x0) break;
      piVar1 = FUN_004030cc(piVar2,(int)PTR_PTR_0043efd8);
    } while ((char)piVar1 == '\0');
    if ((piVar2 != (int *)0x0) && (param_3 != piVar2)) {
      lParam = 0;
      wParam = 0;
      hWnd = (HWND)FUN_00430e98(piVar2);
      SendMessageA(hWnd,param_1,wParam,lParam);
    }
  }
  return;
}



void FUN_0044495c(int *param_1)

{
  FUN_004448e0(0xb001,(int *)param_1[0x82],param_1);
  if (*(short *)((int)param_1 + 0x28a) != 0) {
    (*(code *)param_1[0xa2])(param_1[0xa3],param_1);
  }
  return;
}



void FUN_004449ac(int param_1)

{
  int iVar1;
  
  iVar1 = FUN_0041de94(*(int *)(param_1 + 0x228));
  if (iVar1 == 0) {
    FUN_004487a8(DAT_004767d0);
  }
  return;
}



void FUN_00444c58(void)

{
  HWND hWnd;
  HMENU hMenu;
  int in_stack_00000004;
  BOOL bRevert;
  
  if (((*(char *)(*(int *)(in_stack_00000004 + -4) + 0x211) != '\0') &&
      ((*(byte *)(*(int *)(in_stack_00000004 + -4) + 0x210) & 1) != 0)) &&
     (*(char *)(*(int *)(in_stack_00000004 + -4) + 0x217) != '\x01')) {
    bRevert = 0;
    hWnd = (HWND)FUN_00430e98(*(int **)(in_stack_00000004 + -4));
    hMenu = GetSystemMenu(hWnd,bRevert);
    if (*(char *)(*(int *)(in_stack_00000004 + -4) + 0x211) == '\x03') {
      DeleteMenu(hMenu,0xf130,0);
      DeleteMenu(hMenu,7,0x400);
      DeleteMenu(hMenu,5,0x400);
      DeleteMenu(hMenu,0xf030,0);
      DeleteMenu(hMenu,0xf020,0);
      DeleteMenu(hMenu,0xf000,0);
      DeleteMenu(hMenu,0xf120,0);
    }
    else {
      if ((*(byte *)(*(int *)(in_stack_00000004 + -4) + 0x210) & 2) == 0) {
        EnableMenuItem(hMenu,0xf020,1);
      }
      if ((*(byte *)(*(int *)(in_stack_00000004 + -4) + 0x210) & 4) == 0) {
        EnableMenuItem(hMenu,0xf030,1);
      }
    }
  }
  return;
}



void FUN_00444d54(int *param_1)

{
  (**(code **)(*param_1 + -0x10))();
  FUN_004437d0(param_1,(int *)param_1[0x8c]);
  if ((*(byte *)(param_1 + 8) & 0x10) == 0) {
    FUN_00444c58();
  }
  return;
}



void FUN_00444d88(int *param_1,int param_2)

{
  byte bVar1;
  HWND pHVar2;
  BOOL BVar3;
  HWND hWndInsertAfter;
  int X;
  int Y;
  int cx;
  int cy;
  WPARAM wParam;
  UINT UVar4;
  LPARAM lParam;
  
  if (((*(int *)(param_2 + 4) == 2) && (*(char *)((int)param_1 + 0x8b) == '\x01')) &&
     ((*(byte *)(param_1 + 8) & 0x10) == 0)) {
    pHVar2 = (HWND)FUN_00430e98(param_1);
    BVar3 = IsIconic(pHVar2);
    if (BVar3 == 0) {
      UVar4 = 7;
      cy = 0;
      cx = 0;
      Y = 0;
      X = 0;
      hWndInsertAfter = (HWND)0x0;
      pHVar2 = (HWND)FUN_00430e98(param_1);
      SetWindowPos(pHVar2,hWndInsertAfter,X,Y,cx,cy,UVar4);
      lParam = *(LPARAM *)(param_2 + 8);
      wParam = *(WPARAM *)(param_2 + 4);
      UVar4 = 0xa2;
      pHVar2 = (HWND)FUN_00430e98(param_1);
      PostMessageA(pHVar2,UVar4,wParam,lParam);
      if (*(char *)((int)param_1 + 0x216) == '\0') {
        return;
      }
      bVar1 = (**(code **)(*param_1 + 0x50))();
      FUN_0042b404(param_1,bVar1 ^ 1,-1);
      return;
    }
  }
  FUN_0042c1c4(param_1,param_2);
  return;
}



void FUN_00445088(int *param_1,int *param_2,undefined4 param_3)

{
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  int *extraout_EDX;
  int *extraout_EDX_00;
  int *piVar1;
  
  if (((param_2[1] & 0xfff0U) == 0xf020) && (param_1 == *(int **)(DAT_004767d0 + 0x38))) {
    FUN_0044810c(DAT_004767d0,param_2);
    param_3 = extraout_ECX;
    piVar1 = extraout_EDX;
  }
  else if (((param_2[1] & 0xfff0U) != 0xf010) ||
          ((((*(byte *)(param_1 + 8) & 0x10) != 0 || (*(char *)((int)param_1 + 0x4b) == '\0')) ||
           (piVar1 = param_2, *(char *)((int)param_1 + 0x213) == '\x01')))) {
    FUN_0043006c(param_1,(int)param_2,param_3);
    param_3 = extraout_ECX_00;
    piVar1 = extraout_EDX_00;
  }
  if ((((param_2[1] & 0xfff0U) == 0xf020) || ((param_2[1] & 0xfff0U) == 0xf120)) &&
     (((*(byte *)(param_1 + 8) & 0x10) == 0 && (*(char *)((int)param_1 + 0x4b) != '\0')))) {
    FUN_00403130(param_1,piVar1,param_3);
  }
  return;
}



int FUN_0044524c(int *param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int iVar1;
  
  iVar1 = 0;
  if (param_1 != (int *)0x0) {
    iVar1 = FUN_0043c7ac(param_1,*(int *)(*(int *)(*(int *)(param_4 + -4) + 8) + 8),'\x01');
    if (iVar1 == 0) {
      iVar1 = FUN_0043c7ac(param_1,*(int *)(*(int *)(*(int *)(param_4 + -4) + 8) + 0xc),'\0');
    }
  }
  return iVar1;
}



void FUN_004454bc(int *param_1,undefined4 param_2,undefined4 param_3)

{
  if ((*(byte *)(param_1 + 8) & 2) == 0) {
    FUN_00403130(param_1,param_2,param_3);
    return;
  }
  *(byte *)(param_1 + 0xb3) = *(byte *)(param_1 + 0xb3) & 0xdf;
  return;
}



void FUN_00445af4(int *param_1)

{
  int iVar1;
  
  iVar1 = FUN_0041de94(param_1[0x8a]);
  if (iVar1 == 0) {
    FUN_0044291c(param_1);
  }
  return;
}



void FUN_00445be0(int *param_1,undefined4 param_2,int param_3)

{
  char cVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_EDX;
  int iStack_c;
  
  if ((*(byte *)(param_1 + 0xb3) & 8) == 0) {
    iStack_c = param_3;
    cVar1 = (**(code **)(*param_1 + 0xd0))();
    if (cVar1 != '\0') {
      if (*(char *)((int)param_1 + 0x217) == '\x01') {
        if ((*(byte *)(param_1 + 0x84) & 2) == 0) {
          iStack_c = (uint)iStack_c._1_3_ << 8;
        }
        else {
          iStack_c = CONCAT31(iStack_c._1_3_,3);
        }
      }
      else {
        iStack_c = CONCAT31(iStack_c._1_3_,1);
      }
      FUN_00403130(param_1,&iStack_c,extraout_ECX);
      if ((char)iStack_c != '\0') {
        if (param_1 == *(int **)(DAT_004767d0 + 0x38)) {
          FUN_00448f20();
        }
        else if ((char)iStack_c == '\x01') {
          FUN_00445d90(param_1,extraout_EDX,extraout_ECX_00);
        }
        else if ((char)iStack_c == '\x03') {
          FUN_00443af4(param_1,1);
        }
        else {
          FUN_00445e2c(param_1);
        }
      }
    }
  }
  else {
    param_1[0x8d] = 2;
  }
  return;
}



void FUN_00445ce8(int *param_1)

{
  char cVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  char local_9;
  int *local_8;
  
  puStack_1c = &stack0xfffffffc;
  puStack_20 = &LAB_00445d67;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  local_9 = '\0';
  local_8 = param_1;
  cVar1 = (**(code **)(*param_1 + 0xd0))();
  if ((cVar1 != '\0') && (local_9 = '\x01', *(short *)((int)local_8 + 0x27a) != 0)) {
    (*(code *)local_8[0x9e])(local_8[0x9f],local_8,&local_9);
  }
  if (local_9 == '\0') {
    local_8[0x8d] = 0;
  }
  else if (local_9 == '\x02') {
    FUN_00445e2c(local_8);
  }
  *in_FS_OFFSET = uStack_24;
  return;
}



void FUN_00445d90(int *param_1,undefined4 param_2,undefined4 param_3)

{
  FUN_00442c80(param_1,0,param_3);
  return;
}



void FUN_00445d98(int *param_1,undefined4 param_2,undefined4 param_3)

{
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  FUN_00442c80(param_1,CONCAT31((int3)((uint)param_2 >> 8),1),param_3);
  FUN_0042b004(param_1,extraout_EDX,extraout_ECX);
  return;
}



void FUN_00445e2c(int *param_1)

{
  HWND hWnd;
  UINT Msg;
  WPARAM wParam;
  LPARAM lParam;
  
  lParam = 0;
  wParam = 0;
  Msg = 0xb021;
  hWnd = (HWND)FUN_00430e98(param_1);
  PostMessageA(hWnd,Msg,wParam,lParam);
  return;
}



void FUN_00445e48(int *param_1)

{
  char cVar1;
  int *piVar2;
  HWND pHVar3;
  HWND pHVar4;
  undefined4 extraout_ECX;
  uint extraout_ECX_00;
  uint extraout_ECX_01;
  uint extraout_ECX_02;
  uint uVar5;
  undefined4 uVar6;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_40;
  undefined1 *puStack_3c;
  undefined1 *puVar7;
  UINT UVar8;
  WPARAM WVar9;
  LPARAM LVar10;
  undefined4 *local_24;
  HWND local_20;
  undefined4 local_1c;
  undefined2 local_16;
  undefined4 local_14;
  undefined4 local_10;
  int local_c;
  int *local_8;
  
  puVar7 = &stack0xfffffffc;
  local_24 = (undefined4 *)0x0;
  *in_FS_OFFSET = &stack0xffffffc8;
  puStack_3c = (undefined1 *)0x445e70;
  local_8 = param_1;
  FUN_004297ac();
  if (*(char *)((int)local_8 + 0x47) == '\0') {
    puStack_3c = (undefined1 *)0x445e81;
    cVar1 = (**(code **)(*local_8 + 0x4c))();
    if (((cVar1 != '\0') && ((*(byte *)(local_8 + 0xb3) & 8) == 0)) &&
       (*(char *)((int)local_8 + 0x217) != '\x01')) goto LAB_00445ebe;
  }
  puStack_3c = (undefined1 *)0x445eaa;
  FUN_004054e4((undefined4 *)PTR_PTR_00475720,(int *)&local_24);
  puStack_3c = (undefined1 *)0x445eb9;
  piVar2 = FUN_0040aa10((int *)PTR_DAT_0040dc48,'\x01',local_24);
  puStack_3c = (undefined1 *)0x445ebe;
  FUN_004036ac(piVar2);
LAB_00445ebe:
  pHVar3 = GetCapture();
  if (pHVar3 != (HWND)0x0) {
    LVar10 = 0;
    WVar9 = 0;
    UVar8 = 0x1f;
    pHVar3 = GetCapture();
    puStack_3c = (undefined1 *)0x445ed8;
    SendMessageA(pHVar3,UVar8,WVar9,LVar10);
  }
  ReleaseCapture();
  *(byte *)(local_8 + 0xb3) = *(byte *)(local_8 + 0xb3) | 8;
  local_20 = GetActiveWindow();
  local_14 = DAT_00474910;
  FUN_0040f564(*(int **)(DAT_004767d4 + 0x70),0,*(int *)(DAT_004767d4 + 0x6c));
  *(int **)(DAT_004767d4 + 0x6c) = local_8;
  local_16 = *(undefined2 *)(DAT_004767d4 + 0x38);
  FUN_00447108(DAT_004767d4,0);
  local_1c = *(undefined4 *)(DAT_004767d4 + 0x3c);
  local_10 = FUN_004403fc(0);
  *in_FS_OFFSET = &stack0xffffffcc;
  FUN_00445d98(local_8,0,extraout_ECX);
  puStack_3c = &LAB_00446017;
  uStack_40 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_40;
  LVar10 = 0;
  WVar9 = 0;
  UVar8 = 0xb000;
  pHVar3 = (HWND)FUN_00430e98(local_8);
  SendMessageA(pHVar3,UVar8,WVar9,LVar10);
  uVar6 = 0;
  local_8[0x8d] = 0;
  uVar5 = extraout_ECX_00;
  do {
    FUN_00448cd8(DAT_004767d0,uVar6,uVar5);
    uVar5 = extraout_ECX_01;
    uVar6 = extraout_EDX;
    if (*(char *)(DAT_004767d0 + 0x8c) == '\0') {
      if (local_8[0x8d] != 0) {
        FUN_00445ce8(local_8);
        uVar5 = extraout_ECX_02;
        uVar6 = extraout_EDX_00;
      }
    }
    else {
      local_8[0x8d] = 2;
    }
    local_c = local_8[0x8d];
  } while (local_c == 0);
  LVar10 = 0;
  WVar9 = 0;
  UVar8 = 0xb001;
  pHVar3 = (HWND)FUN_00430e98(local_8);
  SendMessageA(pHVar3,UVar8,WVar9,LVar10);
  pHVar3 = (HWND)FUN_00430e98(local_8);
  pHVar4 = GetActiveWindow();
  if (pHVar3 != pHVar4) {
    local_20 = (HWND)0x0;
  }
  *in_FS_OFFSET = uStack_40;
  puStack_3c = (undefined1 *)0x446016;
  FUN_00445d90(local_8,uStack_40,puVar7);
  return;
}



void FUN_004460e8(int param_1)

{
  int iVar1;
  int *piVar2;
  int *piVar3;
  int iVar4;
  
  if (*(char *)(param_1 + 0x168) != '\0') {
    iVar1 = FUN_0042de00(param_1);
    if (-1 < iVar1 + -1) {
      iVar4 = 0;
      do {
        piVar2 = (int *)FUN_0042ddc4(param_1,iVar4);
        if (((*(byte *)((int)piVar2 + 0x41) & 0x80) != 0) && (*(char *)((int)piVar2 + 0x47) != '\0')
           ) {
          (**(code **)(*piVar2 + 0x70))();
        }
        piVar3 = FUN_004030cc(piVar2,(int)PTR_PTR_00427220);
        if ((char)piVar3 != '\0') {
          FUN_004460e8((int)piVar2);
        }
        iVar4 = iVar4 + 1;
        iVar1 = iVar1 + -1;
      } while (iVar1 != 0);
    }
  }
  return;
}



undefined4 FUN_00446200(int *param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  undefined4 uVar1;
  
  if ((param_1 != (int *)0x0) &&
     (uVar1 = FUN_00403130(param_1,*(undefined4 *)(*(int *)(param_4 + -4) + 8),param_3),
     (char)uVar1 != '\0')) {
    return CONCAT31((int3)((uint)uVar1 >> 8),1);
  }
  return 0;
}



undefined4 FUN_00446230(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int iVar1;
  int *piVar2;
  undefined4 uVar3;
  int *piVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  int iVar5;
  
  if ((*(char *)(param_1 + 0x168) != '\0') && (iVar1 = FUN_0042de00(param_1), -1 < iVar1 + -1)) {
    iVar5 = 0;
    do {
      piVar2 = (int *)FUN_0042ddc4(param_1,iVar5);
      if (((*(char *)((int)piVar2 + 0x47) != '\0') &&
          (uVar3 = FUN_00446200(piVar2,extraout_EDX,extraout_ECX,param_4), (char)uVar3 != '\0')) ||
         ((piVar4 = FUN_004030cc(piVar2,(int)PTR_PTR_00427220), (char)piVar4 != '\0' &&
          (uVar3 = FUN_00446230((int)piVar2,extraout_EDX_00,extraout_ECX_00,param_4),
          (char)uVar3 != '\0')))) {
        return CONCAT31((int3)((uint)uVar3 >> 8),1);
      }
      iVar5 = iVar5 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  return 0;
}



void FUN_004462ac(int *param_1,int param_2,undefined4 param_3)

{
  undefined4 uVar1;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined1 *puVar2;
  undefined1 *puVar3;
  
  puVar2 = &stack0xfffffffc;
  puVar3 = &stack0xfffffffc;
  if (((*(byte *)(param_1 + 8) & 0x10) == 0) && ((char)param_1[0x5a] != '\0')) {
    uVar1 = FUN_00446200((int *)param_1[0x82],param_2,param_3,(int)&stack0xfffffffc);
    if (((char)uVar1 == '\0') &&
       ((uVar1 = FUN_00446200(param_1,extraout_EDX,puVar2,(int)&stack0xfffffffc),
        (char)uVar1 == '\0' &&
        (uVar1 = FUN_00446230((int)param_1,extraout_EDX_00,puVar3,(int)&stack0xfffffffc),
        (char)uVar1 == '\0')))) {
      return;
    }
    *(undefined4 *)(param_2 + 0xc) = 1;
  }
  return;
}



undefined4 FUN_00446300(int *param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  undefined4 uVar1;
  
  if ((param_1 != (int *)0x0) &&
     (uVar1 = FUN_00403130(param_1,*(undefined4 *)(*(int *)(param_4 + -4) + 8),param_3),
     (char)uVar1 != '\0')) {
    return CONCAT31((int3)((uint)uVar1 >> 8),1);
  }
  return 0;
}



undefined4 FUN_00446330(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int iVar1;
  int *piVar2;
  undefined4 uVar3;
  int *piVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  int iVar5;
  
  if ((*(char *)(param_1 + 0x168) != '\0') && (iVar1 = FUN_0042de00(param_1), -1 < iVar1 + -1)) {
    iVar5 = 0;
    do {
      piVar2 = (int *)FUN_0042ddc4(param_1,iVar5);
      if (((*(char *)((int)piVar2 + 0x47) != '\0') &&
          (uVar3 = FUN_00446300(piVar2,extraout_EDX,extraout_ECX,param_4), (char)uVar3 != '\0')) ||
         ((piVar4 = FUN_004030cc(piVar2,(int)PTR_PTR_00427220), (char)piVar4 != '\0' &&
          (uVar3 = FUN_00446330((int)piVar2,extraout_EDX_00,extraout_ECX_00,param_4),
          (char)uVar3 != '\0')))) {
        return CONCAT31((int3)((uint)uVar3 >> 8),1);
      }
      iVar5 = iVar5 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  return 0;
}



void FUN_004463ac(int *param_1,int param_2,undefined4 param_3)

{
  undefined4 uVar1;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined1 *puVar2;
  undefined1 *puVar3;
  
  puVar2 = &stack0xfffffffc;
  puVar3 = &stack0xfffffffc;
  if (((*(byte *)(param_1 + 8) & 0x10) == 0) && ((char)param_1[0x5a] != '\0')) {
    uVar1 = FUN_00446300((int *)param_1[0x82],param_2,param_3,(int)&stack0xfffffffc);
    if (((char)uVar1 == '\0') &&
       ((uVar1 = FUN_00446300(param_1,extraout_EDX,puVar2,(int)&stack0xfffffffc),
        (char)uVar1 == '\0' &&
        (uVar1 = FUN_00446330((int)param_1,extraout_EDX_00,puVar3,(int)&stack0xfffffffc),
        (char)uVar1 == '\0')))) {
      return;
    }
    *(undefined4 *)(param_2 + 0xc) = 1;
  }
  return;
}



undefined4 FUN_00446400(void)

{
  int iVar1;
  undefined4 uVar2;
  int iVar3;
  int iVar4;
  int in_stack_00000004;
  
  iVar3 = *(int *)(*(int *)(in_stack_00000004 + -4) + 0x2c8);
  if ((iVar3 != 0) && (iVar3 = *(int *)(iVar3 + 8), -1 < iVar3 + -1)) {
    iVar4 = 0;
    do {
      iVar1 = FUN_0040f4e8(*(undefined4 **)(*(int *)(in_stack_00000004 + -4) + 0x2c8),iVar4);
      uVar2 = FUN_00435e4c(iVar1,*(int *)(in_stack_00000004 + -8));
      if ((char)uVar2 != '\0') {
        return CONCAT31((int3)((uint)uVar2 >> 8),1);
      }
      iVar4 = iVar4 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  return 0;
}



undefined4 FUN_00446454(int param_1,undefined4 param_2,undefined4 param_3)

{
  int *piVar1;
  undefined1 uVar2;
  undefined3 uVar3;
  undefined4 extraout_ECX;
  char local_d;
  undefined4 local_c;
  int local_8;
  
  local_d = '\0';
  local_c = param_2;
  local_8 = param_1;
  if (*(short *)(param_1 + 0x2aa) != 0) {
    param_1 = (**(code **)(param_1 + 0x2a8))(*(undefined4 *)(param_1 + 0x2ac),param_2,&local_d);
    param_3 = extraout_ECX;
  }
  if (local_d == '\0') {
    piVar1 = *(int **)(local_8 + 0x230);
    if ((piVar1 != (int *)0x0) && (piVar1[0xb] != 0)) {
      param_1 = FUN_00403130(piVar1,local_c,param_3);
      if ((char)param_1 != '\0') goto LAB_004464c2;
    }
    param_1 = FUN_00446400();
    if ((char)param_1 == '\0') {
      uVar2 = 0;
      uVar3 = 0;
      goto LAB_004464c4;
    }
  }
LAB_004464c2:
  uVar3 = (undefined3)((uint)param_1 >> 8);
  uVar2 = 1;
LAB_004464c4:
  return CONCAT31(uVar3,uVar2);
}



undefined4 FUN_004464d0(void)

{
  char cVar1;
  undefined4 uVar2;
  int in_stack_00000004;
  int *in_stack_0000000c;
  
  cVar1 = func_0x0040cca8();
  if ((cVar1 == '\0') && (cVar1 = func_0x0040cca8(), cVar1 == '\0')) {
    uVar2 = FUN_00414bfc();
    return uVar2;
  }
  FUN_00405554(in_stack_0000000c,*(int **)(in_stack_00000004 + 0x238));
  return 0;
}



int * FUN_0044657c(int *param_1,char param_2,undefined4 param_3)

{
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_2 = extraout_DL;
  }
  (**(code **)(*param_1 + 0xcc))(param_1,0);
  FUN_0044180c((int)param_1,'\0');
  FUN_00443440((int)param_1,'\x05');
  FUN_0042f8cc(param_1,'\x01',extraout_ECX);
  FUN_00443688(param_1,CONCAT31((int3)((uint)extraout_EDX >> 8),3),extraout_ECX_00);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = 0;
  }
  return param_1;
}



void FUN_004465e4(int *param_1,int *param_2,undefined4 param_3)

{
  char cVar1;
  int iVar2;
  undefined *puVar3;
  int iVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  uint *local_10;
  undefined4 local_c;
  int *local_8;
  
  puStack_1c = &stack0xfffffffc;
  local_10 = (uint *)0x0;
  puStack_20 = &LAB_004466bd;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  local_c = param_3;
  local_8 = param_2;
  iVar2 = FUN_0042f790((int)param_1);
  if (iVar2 == 1) {
    iVar2 = FUN_0042ad34((int)local_8);
    FUN_00403cc4((int *)&local_10,(undefined4 *)0x0,iVar2 + 1);
    iVar2 = FUN_00403e5c((int)local_10);
    puVar3 = FUN_00404020((undefined *)local_10);
    FUN_0042ad44((int)local_8,puVar3,iVar2);
    iVar2 = FUN_00403e5c((int)local_10);
    if (0 < iVar2) {
      iVar4 = 1;
      do {
        cVar1 = *(char *)((int)local_10 + iVar4 + -1);
        if ((cVar1 == '\n') || (cVar1 == '\r')) {
          FUN_00404190((int *)&local_10,iVar4 - 1);
          break;
        }
        iVar4 = iVar4 + 1;
        iVar2 = iVar2 + -1;
      } while (iVar2 != 0);
    }
    FUN_0042adf0((int)param_1,local_10);
  }
  FUN_0042f604(param_1,local_8);
  FUN_0042a3ac(local_8,CONCAT31((int3)((uint)extraout_EDX >> 8),5),extraout_ECX);
  if ((*(byte *)(param_1 + 8) & 1) == 0) {
    FUN_00442c80(param_1,CONCAT31((int3)((uint)extraout_EDX_00 >> 8),1),extraout_ECX_00);
  }
  *in_FS_OFFSET = uStack_24;
  puStack_1c = &LAB_004466c4;
  puStack_20 = (undefined1 *)0x4466bc;
  FUN_00403bdc((int *)&local_10);
  return;
}



void FUN_00446738(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  int iVar1;
  
  iVar1 = FUN_0042f790(param_1);
  *(bool *)param_4 = iVar1 == 0;
  return;
}



void FUN_00446764(int *param_1,int param_2)

{
  FUN_004301d8(param_1,param_2);
  if (((*(byte *)(param_1 + 8) & 0x10) == 0) && (*(int *)(param_2 + 0xc) == 1)) {
    *(undefined4 *)(param_2 + 0xc) = 2;
  }
  return;
}



undefined1 * FUN_004469b4(void)

{
  undefined4 local_28 [10];
  
  local_28[0] = 0x28;
  (**(code **)PTR_DAT_00475668)();
  return (undefined1 *)local_28;
}



int FUN_004469d4(void)

{
  undefined4 uStack_20;
  
  (**(code **)PTR_DAT_00475668)();
  return uStack_20 + -0x28;
}



undefined4 FUN_004469f8(void)

{
  (**(code **)PTR_DAT_00475668)();
  return 0x28;
}



int FUN_00446a18(void)

{
  undefined4 local_28;
  int iStack_24;
  
  local_28 = 0x28;
  (**(code **)PTR_DAT_00475668)();
  return iStack_24 - (int)&local_28;
}



undefined4
FUN_00446a3c(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
            undefined4 param_5,undefined4 param_6,int *param_7)

{
  int iVar1;
  
  iVar1 = FUN_00402f24((int *)PTR_DAT_00440118,'\x01',param_3);
  *(undefined4 *)(iVar1 + 4) = param_4;
  *(int *)(iVar1 + 8) = param_7[2];
  iVar1 = FUN_0040f38c(param_7,iVar1);
  return CONCAT31((int3)((uint)iVar1 >> 8),1);
}



int * FUN_00446a6c(int *param_1,char param_2,int *param_3)

{
  HKL pHVar1;
  int iVar2;
  HDC hdc;
  int *piVar3;
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_ECX_03;
  undefined4 extraout_ECX_04;
  undefined4 extraout_ECX_05;
  undefined4 extraout_ECX_06;
  undefined4 extraout_ECX_07;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00414460(param_1,'\0',param_3);
  FUN_00446db8((int)param_1);
  pHVar1 = GetKeyboardLayout(0);
  param_1[0xc] = (int)pHVar1;
  iVar2 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX_00);
  param_1[0x10] = iVar2;
  iVar2 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX_01);
  param_1[0x11] = iVar2;
  iVar2 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX_02);
  param_1[0x12] = iVar2;
  iVar2 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX_03);
  param_1[0x13] = iVar2;
  iVar2 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX_04);
  param_1[0x1c] = iVar2;
  hdc = GetDC((HWND)0x0);
  iVar2 = GetDeviceCaps(hdc,0x5a);
  param_1[0xd] = iVar2;
  ReleaseDC((HWND)0x0,hdc);
  (**(code **)PTR_DAT_00475754)();
  piVar3 = FUN_00416e60((int *)PTR_PTR_00415928,'\x01',extraout_ECX_05);
  param_1[0x1e] = (int)piVar3;
  piVar3 = FUN_00416e60((int *)PTR_PTR_00415928,'\x01',extraout_ECX_06);
  param_1[0x1f] = (int)piVar3;
  piVar3 = FUN_00416e60((int *)PTR_PTR_00415928,'\x01',extraout_ECX_07);
  param_1[0x1d] = (int)piVar3;
  FUN_00447198((int)param_1);
  iVar2 = param_1[0x1e];
  *(int **)(iVar2 + 0xc) = param_1;
  *(undefined1 **)(iVar2 + 8) = &LAB_004470b4;
  iVar2 = param_1[0x1f];
  *(int **)(iVar2 + 0xc) = param_1;
  *(undefined1 **)(iVar2 + 8) = &LAB_004470b4;
  iVar2 = param_1[0x1d];
  *(int **)(iVar2 + 0xc) = param_1;
  *(undefined1 **)(iVar2 + 8) = &LAB_004470b4;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = 0;
  }
  return param_1;
}



void FUN_00446b94(int *param_1,char param_2)

{
  int *piVar1;
  int *piVar2;
  byte extraout_DL;
  int iVar3;
  int iVar4;
  
  piVar1 = FUN_004032b4(param_1,param_2);
  FUN_00402f54((int *)piVar1[0x1d]);
  FUN_00402f54((int *)piVar1[0x1f]);
  FUN_00402f54((int *)piVar1[0x1e]);
  FUN_00402f54((int *)piVar1[0x12]);
  FUN_00402f54((int *)piVar1[0x11]);
  FUN_00402f54((int *)piVar1[0x10]);
  FUN_00402f54((int *)piVar1[9]);
  FUN_00402f54((int *)piVar1[10]);
  FUN_00402f54((int *)piVar1[0x1c]);
  if ((piVar1[0x13] != 0) && (iVar3 = *(int *)(piVar1[0x13] + 8), -1 < iVar3 + -1)) {
    iVar4 = 0;
    do {
      piVar2 = (int *)FUN_0040f4e8((undefined4 *)piVar1[0x13],iVar4);
      FUN_00402f54(piVar2);
      iVar4 = iVar4 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  FUN_00402f54((int *)piVar1[0x13]);
  FUN_00446e14((int)piVar1);
  FUN_004144ac(piVar1,extraout_DL & 0xfc);
  if ('\0' < (char)extraout_DL) {
    FUN_004032a4(piVar1);
  }
  return;
}



void FUN_00446c3c(void)

{
  (**(code **)PTR_DAT_00475690)();
  return;
}



void FUN_00446c48(void)

{
  (**(code **)PTR_DAT_00475690)();
  return;
}



void FUN_00446c54(void)

{
  (**(code **)PTR_DAT_00475690)();
  return;
}



void FUN_00446c60(void)

{
  (**(code **)PTR_DAT_00475690)();
  return;
}



void FUN_00446c6c(void)

{
  (**(code **)PTR_DAT_00475690)();
  return;
}



void FUN_00446c78(void)

{
  (**(code **)PTR_DAT_00475690)();
  return;
}



void FUN_00446c84(int param_1,int param_2)

{
  FUN_0040f4e8(*(undefined4 **)(param_1 + 0x4c),param_2);
  return;
}



int FUN_00446c98(int param_1)

{
  int iVar1;
  
  iVar1 = *(int *)(*(int *)(param_1 + 0x4c) + 8);
  if (iVar1 == 0) {
    iVar1 = (**(code **)PTR_DAT_00475690)();
    return iVar1;
  }
  return iVar1;
}



void FUN_00446cb4(int param_1,int param_2)

{
  FUN_0040f4e8(*(undefined4 **)(param_1 + 0x40),param_2);
  return;
}



undefined4 FUN_00446cc8(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 0x40) + 8);
}



void FUN_00446cd0(int param_1,int param_2)

{
  FUN_0040f4e8(*(undefined4 **)(param_1 + 0x44),param_2);
  return;
}



undefined4 FUN_00446ce4(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 0x44) + 8);
}



void FUN_00446cec(int param_1)

{
  if ((*(int *)(param_1 + 0x5c) != *(int *)(param_1 + 0x68)) &&
     (*(int *)(param_1 + 0x68) = *(int *)(param_1 + 0x5c), *(short *)(param_1 + 0x92) != 0)) {
    (**(code **)(param_1 + 0x90))(*(undefined4 *)(param_1 + 0x94),param_1);
  }
  if ((*(int *)(param_1 + 0x58) != *(int *)(param_1 + 100)) &&
     (*(int *)(param_1 + 100) = *(int *)(param_1 + 0x58), *(short *)(param_1 + 0x8a) != 0)) {
    (**(code **)(param_1 + 0x88))(*(undefined4 *)(param_1 + 0x8c),param_1);
  }
  return;
}



void FUN_00446d38(int param_1,int *param_2)

{
  int *piVar1;
  
  FUN_0040f38c(*(int **)(param_1 + 0x44),(int)param_2);
  piVar1 = FUN_004030cc(param_2,(int)PTR_PTR_0043f2bc);
  if ((char)piVar1 != '\0') {
    FUN_0040f38c(*(int **)(param_1 + 0x40),(int)param_2);
    FUN_004496f8(DAT_004767d0);
  }
  return;
}



void FUN_00446d70(int param_1,int param_2)

{
  FUN_0040f680(*(int **)(param_1 + 0x44),param_2);
  FUN_0040f680(*(int **)(param_1 + 0x40),param_2);
  FUN_004496f8(DAT_004767d0);
  if ((*(int *)(*(int *)(param_1 + 0x44) + 8) == 0) && (*(int *)(DAT_004767d0 + 0x74) != 0)) {
    FUN_00432264(*(int **)(DAT_004767d0 + 0x74));
  }
  return;
}



void FUN_00446db8(int param_1)

{
  HCURSOR pHVar1;
  int iVar2;
  undefined4 *puVar3;
  HINSTANCE pHVar4;
  
  pHVar1 = LoadCursorA((HINSTANCE)0x0,&lpCursorName_00007f00);
  *(HCURSOR *)(param_1 + 0x54) = pHVar1;
  iVar2 = -0x16;
  puVar3 = &DAT_004749c0;
  do {
    pHVar4 = DAT_004764d8;
    if (((iVar2 < -0x11) || (-0xc < iVar2)) && (iVar2 != -0x15)) {
      pHVar4 = (HINSTANCE)0x0;
    }
    pHVar1 = LoadCursorA(pHVar4,(LPCSTR)*puVar3);
    FUN_00446e70(param_1,iVar2,pHVar1);
    iVar2 = iVar2 + 1;
    puVar3 = puVar3 + 1;
  } while (iVar2 != -1);
  return;
}



void FUN_00446e14(int param_1)

{
  int iVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  HCURSOR pHVar4;
  
  puVar3 = *(undefined4 **)(param_1 + 0x50);
  while (puVar3 != (undefined4 *)0x0) {
    iVar1 = puVar3[1];
    if ((((-0x12 < iVar1) && (iVar1 < -0xb)) || (iVar1 == -0x15)) || (0 < iVar1)) {
      DestroyCursor((HCURSOR)puVar3[2]);
    }
    puVar2 = (undefined4 *)*puVar3;
    FUN_0040270c((int)puVar3);
    puVar3 = puVar2;
  }
  pHVar4 = LoadCursorA((HINSTANCE)0x0,&lpCursorName_00007f00);
  if (pHVar4 != *(HCURSOR *)(param_1 + 0x54)) {
    DestroyCursor(*(HCURSOR *)(param_1 + 0x54));
  }
  return;
}



void FUN_00446e70(int param_1,undefined4 param_2,undefined4 param_3)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)FUN_004026f4(0xc);
  *puVar1 = *(undefined4 *)(param_1 + 0x50);
  puVar1[1] = param_2;
  puVar1[2] = param_3;
  *(undefined4 **)(param_1 + 0x50) = puVar1;
  return;
}



void FUN_00446e98(int param_1,undefined4 param_2,undefined4 param_3)

{
  int *piVar1;
  undefined4 uVar2;
  int iVar3;
  byte *lpSubKey;
  LSTATUS LVar4;
  undefined4 *in_FS_OFFSET;
  DWORD ulOptions;
  REGSAM samDesired;
  HKEY *phkResult;
  undefined4 uStack_274;
  undefined1 *puStack_270;
  undefined1 *puStack_26c;
  int local_264;
  HKL local_260;
  undefined1 local_25c;
  byte local_258 [64];
  BYTE local_218 [256];
  HKL local_118 [64];
  HKL *local_18;
  int local_14;
  HKEY local_10;
  DWORD local_c;
  int local_8;
  
  puStack_26c = &stack0xfffffffc;
  local_264 = 0;
  puStack_270 = &LAB_00447043;
  uStack_274 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_274;
  local_8 = param_1;
  if (*(int *)(param_1 + 0x28) == 0) {
    uVar2 = FUN_00402f24((int *)PTR_PTR_0040e124,'\x01',param_3);
    *(undefined4 *)(local_8 + 0x28) = uVar2;
    FUN_00403bdc((int *)(local_8 + 0x2c));
    iVar3 = GetKeyboardLayoutList(0x40,local_118);
    if (-1 < iVar3 + -1) {
      local_18 = local_118;
      local_14 = iVar3;
      do {
        uVar2 = FUN_00435420();
        if ((char)uVar2 != '\0') {
          phkResult = &local_10;
          samDesired = 0x20019;
          ulOptions = 0;
          local_260 = *local_18;
          local_25c = 0;
          lpSubKey = FUN_004091bc(local_258,(byte *)s_System_CurrentControlSet_Control_00447054,
                                  &local_260,0);
          LVar4 = RegOpenKeyExA((HKEY)&hKey_80000002,(LPCSTR)lpSubKey,ulOptions,samDesired,phkResult
                               );
          if (LVar4 == 0) {
            uVar2 = *in_FS_OFFSET;
            *in_FS_OFFSET = &stack0xfffffd80;
            local_c = 0x100;
            LVar4 = RegQueryValueExA(local_10,s_layout_text_0044708c,(LPDWORD)0x0,(LPDWORD)0x0,
                                     local_218,&local_c);
            if (LVar4 == 0) {
              FUN_00403e0c(&local_264,(char *)local_218,0x100);
              (**(code **)(**(int **)(local_8 + 0x28) + 0x38))
                        (*(int **)(local_8 + 0x28),local_264,*local_18);
              if (*local_18 == *(HKL *)(local_8 + 0x30)) {
                FUN_00403e0c((int *)(local_8 + 0x2c),(char *)local_218,0x100);
              }
            }
            *in_FS_OFFSET = uVar2;
            RegCloseKey(local_10);
            return;
          }
        }
        local_18 = local_18 + 1;
        local_14 = local_14 + -1;
      } while (local_14 != 0);
    }
    piVar1 = *(int **)(local_8 + 0x28);
    *(undefined1 *)((int)piVar1 + 0x19) = 0;
    FUN_004114f4(piVar1,'\x01');
  }
  *in_FS_OFFSET = uStack_274;
  puStack_26c = &LAB_0044704a;
  puStack_270 = (undefined1 *)0x447042;
  FUN_00403bdc(&local_264);
  return;
}



void FUN_00447098(int param_1,int *param_2,undefined4 param_3)

{
  FUN_00446e98(param_1,param_2,param_3);
  FUN_00403c30(param_2,*(undefined4 **)(param_1 + 0x2c));
  return;
}



void FUN_004470c4(int param_1,int param_2)

{
  FUN_0040f4e8(*(undefined4 **)(param_1 + 0x48),param_2);
  return;
}



undefined4 FUN_004470d8(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 0x48) + 8);
}



undefined4 FUN_004470e0(int param_1,int param_2)

{
  undefined4 uVar1;
  undefined4 *puVar2;
  
  uVar1 = 0;
  if (param_2 != -1) {
    for (puVar2 = *(undefined4 **)(param_1 + 0x50);
        (puVar2 != (undefined4 *)0x0 && (param_2 != puVar2[1])); puVar2 = (undefined4 *)*puVar2) {
    }
    if (puVar2 == (undefined4 *)0x0) {
      uVar1 = *(undefined4 *)(param_1 + 0x54);
    }
    else {
      uVar1 = puVar2[2];
    }
  }
  return uVar1;
}



void FUN_00447108(int param_1,short param_2)

{
  POINT Point;
  HWND hWnd;
  DWORD DVar1;
  DWORD DVar2;
  LPARAM lParam;
  uint uVar3;
  HCURSOR hCursor;
  undefined2 extraout_var;
  tagPOINT local_18;
  
  if (param_2 != *(short *)(param_1 + 0x38)) {
    *(short *)(param_1 + 0x38) = param_2;
    if (param_2 == 0) {
      GetCursorPos(&local_18);
      Point.y = local_18.y;
      Point.x = local_18.x;
      hWnd = WindowFromPoint(Point);
      if (hWnd != (HWND)0x0) {
        DVar1 = GetWindowThreadProcessId(hWnd,(LPDWORD)0x0);
        DVar2 = GetCurrentThreadId();
        if (DVar1 == DVar2) {
          lParam = FUN_00407198((undefined2 *)&local_18);
          uVar3 = SendMessageA(hWnd,0x84,0,lParam);
          uVar3 = FUN_0040711c(uVar3,CONCAT22(extraout_var,0x200));
          SendMessageA(hWnd,0x20,(WPARAM)hWnd,uVar3);
          return;
        }
      }
    }
    hCursor = (HCURSOR)FUN_004470e0(param_1,(int)param_2);
    SetCursor(hCursor);
  }
  *(int *)(param_1 + 0x3c) = *(int *)(param_1 + 0x3c) + 1;
  return;
}



void FUN_00447198(int param_1)

{
  BOOL BVar1;
  HFONT pHVar2;
  HGDIOBJ pvVar3;
  LOGFONTA local_194;
  undefined4 local_158 [40];
  LOGFONTA local_b8;
  LOGFONTA local_7c [2];
  
  BVar1 = SystemParametersInfoA(0x1f,0x3c,&local_194,0);
  if (BVar1 == 0) {
    pvVar3 = GetStockObject(0xd);
    FUN_004171f0(*(int **)(param_1 + 0x78),pvVar3);
  }
  else {
    pHVar2 = CreateFontIndirectA(&local_194);
    FUN_004171f0(*(int **)(param_1 + 0x78),pHVar2);
  }
  local_158[0] = 0x154;
  BVar1 = SystemParametersInfoA(0x29,0,local_158,0);
  if (BVar1 == 0) {
    FUN_004172d4(*(int **)(param_1 + 0x74),8);
    pvVar3 = GetStockObject(0xd);
    FUN_004171f0(*(int **)(param_1 + 0x7c),pvVar3);
  }
  else {
    pHVar2 = CreateFontIndirectA(local_7c);
    FUN_004171f0(*(int **)(param_1 + 0x74),pHVar2);
    pHVar2 = CreateFontIndirectA(&local_b8);
    FUN_004171f0(*(int **)(param_1 + 0x7c),pHVar2);
  }
  return;
}



void FUN_0044724c(int param_1)

{
  *(short *)(param_1 + 0x80) = *(short *)(param_1 + 0x80) + 1;
  return;
}



void FUN_00447254(int param_1)

{
  *(short *)(param_1 + 0x80) = *(short *)(param_1 + 0x80) + -1;
  if ((*(short *)(param_1 + 0x80) == 0) && ((*(byte *)(param_1 + 0x82) & 0x10) != 0)) {
    FUN_00447274(param_1);
  }
  return;
}



void FUN_00447274(int param_1)

{
  FUN_004476b8(param_1,0);
  return;
}



uint FUN_0044727c(int param_1,int param_2,char param_3)

{
  uint uVar1;
  int iVar2;
  
  uVar1 = 0;
  if (param_3 == '\x01') {
    uVar1 = (uint)(*(int *)(param_1 + 0x34) < *(int *)(param_2 + 0x34));
  }
  else if (param_3 == '\x02') {
    iVar2 = *(int *)(param_2 + 0x34) + *(int *)(param_2 + 0x3c);
    uVar1 = CONCAT31((int3)((uint)iVar2 >> 8),
                     iVar2 < *(int *)(param_1 + 0x34) + *(int *)(param_1 + 0x3c));
  }
  else if (param_3 == '\x03') {
    uVar1 = (uint)(*(int *)(param_1 + 0x30) < *(int *)(param_2 + 0x30));
  }
  else if (param_3 == '\x04') {
    iVar2 = *(int *)(param_2 + 0x30) + *(int *)(param_2 + 0x38);
    uVar1 = CONCAT31((int3)((uint)iVar2 >> 8),
                     iVar2 < *(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x38));
  }
  return uVar1;
}



void FUN_004472dc(int *param_1,char param_2,undefined4 param_3,int param_4)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  int local_14;
  int local_10;
  int local_c;
  
  iVar3 = *(int *)(*(int *)(param_4 + -4) + 8) - **(int **)(param_4 + -4);
  if ((iVar3 < 0) || ((byte)(param_2 - 3U) < 2)) {
    iVar3 = param_1[0xe];
  }
  local_14 = *(int *)(*(int *)(param_4 + -4) + 0xc) - *(int *)(*(int *)(param_4 + -4) + 4);
  if ((local_14 < 0) || ((byte)(param_2 - 1U) < 2)) {
    local_14 = param_1[0xf];
  }
  if ((param_2 == '\x01') && (*(char *)((int)param_1 + 0x213) == '\x02')) {
    local_c = param_1[0xc];
    local_10 = param_1[0xd];
    iVar3 = (**(code **)PTR_DAT_00475690)();
  }
  else {
    local_c = **(int **)(param_4 + -4);
    local_10 = *(int *)(*(int *)(param_4 + -4) + 4);
  }
  if (param_2 == '\x01') {
    piVar1 = (int *)(*(int *)(param_4 + -4) + 4);
    *piVar1 = *piVar1 + local_14;
  }
  else if (param_2 == '\x02') {
    piVar1 = (int *)(*(int *)(param_4 + -4) + 0xc);
    *piVar1 = *piVar1 - local_14;
    local_10 = *(int *)(*(int *)(param_4 + -4) + 0xc);
  }
  else if (param_2 == '\x03') {
    **(int **)(param_4 + -4) = **(int **)(param_4 + -4) + iVar3;
  }
  else if (param_2 == '\x04') {
    piVar1 = (int *)(*(int *)(param_4 + -4) + 8);
    *piVar1 = *piVar1 - iVar3;
    local_c = *(int *)(*(int *)(param_4 + -4) + 8);
  }
  (**(code **)(*param_1 + 0x7c))(param_1,local_c,local_10,local_14,iVar3);
  if (*(char *)((int)param_1 + 0x213) == '\x02') {
    iVar3 = iVar3 - local_c;
    local_14 = local_14 - local_10;
  }
  iVar2 = param_1[0xe];
  if ((iVar3 != iVar2) || (param_1[0xf] != local_14)) {
    switch(param_2) {
    case '\x01':
      piVar1 = (int *)(*(int *)(param_4 + -4) + 4);
      *piVar1 = *piVar1 - (local_14 - param_1[0xf]);
      break;
    case '\x02':
      piVar1 = (int *)(*(int *)(param_4 + -4) + 0xc);
      *piVar1 = *piVar1 + (local_14 - param_1[0xf]);
      break;
    case '\x03':
      **(int **)(param_4 + -4) = **(int **)(param_4 + -4) - (iVar3 - iVar2);
      break;
    case '\x04':
      piVar1 = (int *)(*(int *)(param_4 + -4) + 8);
      *piVar1 = *piVar1 + (iVar3 - iVar2);
      break;
    case '\x05':
      piVar1 = (int *)(*(int *)(param_4 + -4) + 8);
      *piVar1 = *piVar1 + (iVar3 - iVar2);
      piVar1 = (int *)(*(int *)(param_4 + -4) + 0xc);
      *piVar1 = *piVar1 + (local_14 - param_1[0xf]);
    }
  }
  return;
}



void FUN_0044748c(char param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int iVar1;
  int iVar2;
  int iVar3;
  uint uVar4;
  int *piVar5;
  undefined4 extraout_ECX;
  int iVar6;
  undefined4 local_c;
  
  (**(code **)(**(int **)(param_4 + -8) + 8))();
  if ((((*(int *)(param_4 + -0xc) != 0) && (*(int *)(*(int *)(param_4 + -0xc) + 0x24) == 0)) &&
      ((*(byte *)(*(int *)(param_4 + -0xc) + 0x20) & 0x10) == 0)) &&
     (((*(char *)(*(int *)(param_4 + -0xc) + 0x47) != '\0' &&
       (*(char *)(*(int *)(param_4 + -0xc) + 0x4b) == param_1)) &&
      (*(char *)(*(int *)(param_4 + -0xc) + 0x213) != '\x01')))) {
    FUN_0040f38c(*(int **)(param_4 + -8),*(int *)(param_4 + -0xc));
  }
  iVar1 = FUN_00446ce4(*(int *)(param_4 + -0x10));
  if (-1 < iVar1 + -1) {
    local_c = 0;
    do {
      iVar2 = FUN_00446cd0(*(int *)(param_4 + -0x10),local_c);
      if (((*(int *)(iVar2 + 0x24) == 0) && (*(char *)(iVar2 + 0x4b) == param_1)) &&
         (((*(byte *)(iVar2 + 0x20) & 0x10) == 0 &&
          (((*(char *)(iVar2 + 0x47) != '\0' && (*(char *)(iVar2 + 0x213) != '\x01')) &&
           (iVar2 != *(int *)(param_4 + -0xc))))))) {
        for (iVar6 = 0; iVar6 < *(int *)(*(int *)(param_4 + -8) + 8); iVar6 = iVar6 + 1) {
          iVar3 = FUN_0040f4e8(*(undefined4 **)(param_4 + -8),iVar6);
          uVar4 = FUN_0044727c(iVar2,iVar3,param_1);
          if ((char)uVar4 != '\0') break;
        }
        FUN_0040f564(*(int **)(param_4 + -8),iVar6,iVar2);
      }
      local_c = local_c + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  iVar1 = *(int *)(*(int *)(param_4 + -8) + 8);
  if (-1 < iVar1 + -1) {
    local_c = 0;
    do {
      iVar2 = param_4;
      piVar5 = (int *)FUN_0040f4e8(*(undefined4 **)(param_4 + -8),local_c);
      FUN_004472dc(piVar5,param_1,extraout_ECX,iVar2);
      local_c = local_c + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  return;
}



undefined4 FUN_004475d8(void)

{
  int iVar1;
  int iVar2;
  undefined4 unaff_EBX;
  int in_stack_00000004;
  
  iVar1 = FUN_00446ce4(*(int *)(in_stack_00000004 + -0x10));
  iVar1 = iVar1 + -1;
  if (-1 < iVar1) {
    do {
      iVar2 = FUN_00446cd0(*(int *)(in_stack_00000004 + -0x10),iVar1);
      if ((((*(int *)(iVar2 + 0x24) == 0) && ((*(byte *)(iVar2 + 0x20) & 0x10) == 0)) &&
          (*(char *)(iVar2 + 0x4b) != '\0')) &&
         ((*(char *)(iVar2 + 0x47) != '\0' && (*(char *)(iVar2 + 0x213) != '\x01')))) {
        return CONCAT31((int3)((uint)unaff_EBX >> 8),1);
      }
      iVar1 = iVar1 + -1;
    } while (iVar1 != -1);
  }
  return 0;
}



void FUN_00447630(undefined4 param_1,undefined4 param_2,undefined4 param_3)

{
  undefined1 *puVar1;
  undefined4 uVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 extraout_EDX_03;
  undefined4 *in_FS_OFFSET;
  undefined1 *puVar3;
  undefined1 *puVar4;
  undefined1 *puVar5;
  undefined1 *puVar6;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  undefined4 local_14;
  undefined4 local_10;
  int *local_c;
  undefined4 local_8;
  
  puStack_18 = &stack0xfffffffc;
  puVar3 = &stack0xfffffffc;
  puVar4 = &stack0xfffffffc;
  puVar5 = &stack0xfffffffc;
  puVar6 = &stack0xfffffffc;
  puStack_1c = (undefined1 *)0x447645;
  local_14 = param_1;
  local_10 = param_2;
  local_8 = param_3;
  uVar2 = FUN_004475d8();
  puVar1 = puStack_18;
  if ((char)uVar2 != '\0') {
    puStack_18 = (undefined1 *)0x447656;
    local_c = (int *)FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',puVar1);
    puStack_1c = &LAB_004476aa;
    uStack_20 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_20;
    puStack_18 = &stack0xfffffffc;
    FUN_0044748c('\x01',extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
    FUN_0044748c('\x02',extraout_EDX_00,puVar3,(int)&stack0xfffffffc);
    FUN_0044748c('\x03',extraout_EDX_01,puVar4,(int)&stack0xfffffffc);
    FUN_0044748c('\x04',extraout_EDX_02,puVar5,(int)&stack0xfffffffc);
    FUN_0044748c('\x05',extraout_EDX_03,puVar6,(int)&stack0xfffffffc);
    *in_FS_OFFSET = uStack_20;
    puStack_18 = (undefined1 *)0x4476b1;
    puStack_1c = (undefined1 *)0x4476a9;
    FUN_00402f54(local_c);
    return;
  }
  return;
}



void FUN_004476b8(int param_1,undefined4 param_2)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  undefined1 local_18 [16];
  int local_8;
  
  if (*(short *)(param_1 + 0x80) != 0) {
    *(ushort *)(param_1 + 0x82) = *(ushort *)(param_1 + 0x82) | 0x10;
    return;
  }
  puStack_20 = (undefined1 *)0x4476e6;
  local_8 = param_1;
  FUN_0044724c(param_1);
  puStack_24 = &LAB_00447731;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  puStack_20 = &stack0xfffffffc;
  SystemParametersInfoA(0x30,0,local_18,0);
  FUN_00447630(local_8,param_2,local_18);
  *in_FS_OFFSET = uStack_28;
  puStack_20 = (undefined1 *)0x447738;
  *(ushort *)(local_8 + 0x82) = *(ushort *)(local_8 + 0x82) & 0xffef;
  puStack_24 = (undefined1 *)0x447730;
  FUN_00447254(local_8);
  return;
}



void FUN_00447740(int param_1)

{
  FUN_0040bebc((undefined4 *)(param_1 + 0x24));
  return;
}



void FUN_0044774c(int param_1,int *param_2)

{
  if (param_1 != 0) {
    do {
      if (*(int *)(param_1 + 0x70) != 0) {
        FUN_00403c30(param_2,*(undefined4 **)(param_1 + 0x70));
        return;
      }
      param_1 = *(int *)(param_1 + 0x24);
    } while (param_1 != 0);
  }
  FUN_00403bdc(param_2);
  return;
}



int thunk_FUN_00447781(int param_1)

{
  for (; (param_1 != 0 && (*(char *)(param_1 + 0x89) == '\0')); param_1 = *(int *)(param_1 + 0x24))
  {
  }
  if ((param_1 != 0) && ((*(byte *)(param_1 + 0x20) & 0x10) != 0)) {
    param_1 = 0;
  }
  return param_1;
}



int FUN_00447781(int param_1)

{
  for (; (param_1 != 0 && (*(char *)(param_1 + 0x89) == '\0')); param_1 = *(int *)(param_1 + 0x24))
  {
  }
  if ((param_1 != 0) && ((*(byte *)(param_1 + 0x20) & 0x10) != 0)) {
    param_1 = 0;
  }
  return param_1;
}



// lpTimerFunc parameter of SetTimer
// 

void lpTimerFunc_0044779c(void)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  puStack_14 = &stack0xfffffffc;
  if (DAT_004767d0 != 0) {
    puStack_18 = &LAB_004477cd;
    uStack_1c = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_1c;
    FUN_004498e4(DAT_004767d0);
    *in_FS_OFFSET = uStack_1c;
  }
  return;
}



// lpStartAddress parameter of CreateThread
// 

void lpStartAddress_004477f0(void)

{
  HANDLE pvVar1;
  DWORD DVar2;
  tagPOINT local_c;
  
  DAT_004767e4 = GetCurrentThreadId();
  while( true ) {
    DVar2 = WaitForSingleObject(DAT_004767e8,100);
    if (DVar2 != 0x102) break;
    if ((DAT_004767d0 != 0) && (*(int *)(DAT_004767d0 + 0x50) != 0)) {
      GetCursorPos(&local_c);
      pvVar1 = FUN_004297c4(&local_c);
      if (pvVar1 == (HANDLE)0x0) {
        FUN_00449954(DAT_004767d0);
      }
    }
  }
  return;
}



LRESULT FUN_0044784c(void)

{
  LRESULT LVar1;
  int in_stack_00000004;
  WPARAM in_stack_00000008;
  LPARAM in_stack_0000000c;
  
  LVar1 = CallNextHookEx(DAT_004767ec,in_stack_00000004,in_stack_00000008,in_stack_0000000c);
  if ((-1 < in_stack_00000004) && (DAT_004767d0 != 0)) {
    FUN_00448b8c(DAT_004767d0,in_stack_0000000c);
  }
  return LVar1;
}



void FUN_00447890(undefined4 param_1,undefined4 param_2,DWORD param_3)

{
  DWORD dwThreadId;
  DWORD DStack_4;
  
  if (*(char *)(DAT_004767d0 + 0x95) == '\0') {
    DStack_4 = param_3;
    if (DAT_004767ec == (HHOOK)0x0) {
      dwThreadId = GetCurrentThreadId();
      DAT_004767ec = SetWindowsHookExA(3,FUN_0044784c,(HINSTANCE)0x0,dwThreadId);
    }
    if (DAT_004767e8 == (HANDLE)0x0) {
      DAT_004767e8 = CreateEventA((LPSECURITY_ATTRIBUTES)0x0,0,0,(LPCSTR)0x0);
    }
    if (DAT_004767f0 == (HANDLE)0x0) {
      DAT_004767f0 = CreateThread((LPSECURITY_ATTRIBUTES)0x0,1000,lpStartAddress_004477f0,
                                  (LPVOID)0x0,0,&DStack_4);
    }
  }
  return;
}



void FUN_00447904(void)

{
  DWORD DVar1;
  
  if (DAT_004767ec != (HHOOK)0x0) {
    UnhookWindowsHookEx(DAT_004767ec);
  }
  DAT_004767ec = (HHOOK)0x0;
  if (DAT_004767f0 != (HANDLE)0x0) {
    SetEvent(DAT_004767e8);
    DVar1 = GetCurrentThreadId();
    if (DVar1 != DAT_004767e4) {
      WaitForSingleObject(DAT_004767f0,0xffffffff);
    }
    CloseHandle(DAT_004767f0);
    DAT_004767f0 = (HANDLE)0x0;
  }
  return;
}



bool FUN_00447960(void)

{
  BOOL BVar1;
  undefined4 local_8;
  int local_4;
  
  local_8 = 8;
  BVar1 = SystemParametersInfoA(0x48,8,&local_8,0);
  if (BVar1 != 0) {
    return local_4 != 0;
  }
  return false;
}



void FUN_00447990(char param_1)

{
  undefined4 local_8;
  int local_4;
  
  local_8 = 8;
  local_4 = -(uint)(param_1 != '\0');
  SystemParametersInfoA(0x49,8,&local_8,0);
  return;
}



void FUN_004479b8(HWND param_1,int param_2)

{
  bool bVar1;
  
  bVar1 = FUN_00447960();
  if (bVar1) {
    FUN_00447990('\0');
  }
  ShowWindow(param_1,param_2);
  if (bVar1) {
    FUN_00447990('\x01');
  }
  return;
}



int * FUN_004479f8(int *param_1,char param_2,int *param_3)

{
  int iVar1;
  int *piVar2;
  HICON pHVar3;
  char *pcVar4;
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_fffffee0;
  undefined4 in_stack_fffffee4;
  byte local_105;
  CHAR aCStack_104 [255];
  char local_5;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_fffffee0,in_stack_fffffee4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  local_5 = param_2;
  FUN_00414460(param_1,'\0',param_3);
  *(undefined1 *)(param_1 + 10) = 0;
  iVar1 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX_00);
  param_1[0x20] = iVar1;
  iVar1 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX_01);
  param_1[0x26] = iVar1;
  param_1[0x14] = 0;
  param_1[0x1d] = 0;
  param_1[0x13] = -0x7fffffe8;
  param_1[0x1a] = 500;
  *(undefined1 *)(param_1 + 0x1b) = 1;
  param_1[0x1c] = 0;
  param_1[0x19] = 0x9c4;
  *(undefined1 *)(param_1 + 0x1e) = 0;
  *(undefined1 *)((int)param_1 + 0x8d) = 1;
  piVar2 = FUN_0041dd58((int *)PTR_PTR_004162b8,'\x01',extraout_ECX_02);
  param_1[0x22] = (int)piVar2;
  pHVar3 = LoadIconA(*(HINSTANCE *)PTR_DAT_00475674,s_MAINICON_00447b84);
  FUN_0041e128(piVar2,pHVar3);
  iVar1 = param_1[0x22];
  *(int **)(iVar1 + 0xc) = param_1;
  *(undefined1 **)(iVar1 + 8) = &LAB_004495a4;
  GetModuleFileNameA(*(HMODULE *)PTR_DAT_00475674,(LPSTR)&local_105,0x100);
  OemToCharA((LPCSTR)&local_105,(LPSTR)&local_105);
  pcVar4 = FUN_0040b790(&local_105,'\\');
  if (pcVar4 != (char *)0x0) {
    FUN_00408b5c((char *)&local_105,pcVar4 + 1);
  }
  pcVar4 = FUN_0040b7b8(&local_105,'.');
  if (pcVar4 != (char *)0x0) {
    *pcVar4 = '\0';
  }
  CharLowerA(aCStack_104);
  FUN_00403e0c(param_1 + 0x1f,(char *)&local_105,0x100);
  if (*PTR_DAT_0047555c == '\0') {
    FUN_00447c70((int)param_1);
  }
  *(undefined1 *)((int)param_1 + 0x49) = 1;
  *(undefined1 *)((int)param_1 + 0x4a) = 1;
  *(undefined1 *)((int)param_1 + 0x4b) = 1;
  *(undefined1 *)((int)param_1 + 0x8e) = 1;
  param_1[0x24] = 0;
  if (local_5 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_fffffee0;
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00447c70(int param_1)

{
  ATOM AVar1;
  undefined1 *puVar2;
  BOOL BVar3;
  int *piVar4;
  uint uVar5;
  int iVar6;
  LPCSTR pCVar7;
  undefined4 uVar8;
  LPARAM lParam;
  LONG dwNewLong;
  undefined4 *in_FS_OFFSET;
  LPVOID pvVar9;
  HINSTANCE pHVar10;
  HMENU pHVar11;
  HWND pHVar12;
  int iVar13;
  int iVar14;
  WNDCLASSA **lpWndClass;
  undefined4 uStack_40;
  undefined1 *puStack_3c;
  undefined1 *puStack_38;
  undefined4 *local_30;
  tagWNDCLASSA local_2c;
  
  puStack_38 = &stack0xfffffffc;
  local_30 = (undefined4 *)0x0;
  puStack_3c = &LAB_00447e01;
  uStack_40 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_40;
  if ((*(char *)(param_1 + 0x94) == '\0') && (*PTR_DAT_0047580c == '\0')) {
    puVar2 = FUN_004406a0();
    *(undefined1 **)(param_1 + 0x34) = puVar2;
    lpWndClass = (WNDCLASSA **)&local_2c;
    BVar3 = GetClassInfoA(DAT_004764d8,PTR_s_TApplication_00474a38,(LPWNDCLASSA)lpWndClass);
    if (BVar3 == 0) {
      _DAT_00474a24 = DAT_004764d8;
      lpWndClass = &lpWndClass_00474a14;
      AVar1 = RegisterClassA((WNDCLASSA *)&lpWndClass_00474a14);
      if (AVar1 == 0) {
        FUN_004054e4((undefined4 *)PTR_PTR_004755d8,(int *)&local_30);
        piVar4 = FUN_0040aa10((int *)PTR_DAT_0040dbec,'\x01',local_30);
        lpWndClass = (WNDCLASSA **)0x447d08;
        FUN_004036ac(piVar4);
      }
    }
    puStack_38 = (undefined1 *)0x447d13;
    uVar5 = (**(code **)PTR_DAT_00475690)();
    puStack_38 = (undefined1 *)((int)uVar5 >> 1);
    if ((int)puStack_38 < 0) {
      puStack_38 = (undefined1 *)((int)puStack_38 + (uint)((uVar5 & 1) != 0));
    }
    puStack_3c = (undefined1 *)0x1;
    uStack_40 = 0x447d26;
    uVar5 = (**(code **)PTR_DAT_00475690)();
    iVar6 = (int)uVar5 >> 1;
    if (iVar6 < 0) {
      iVar6 = iVar6 + (uint)((uVar5 & 1) != 0);
    }
    iVar14 = 0;
    iVar13 = 0;
    pHVar12 = (HWND)0x0;
    pHVar11 = (HMENU)0x0;
    pvVar9 = (LPVOID)0x0;
    pHVar10 = DAT_004764d8;
    pCVar7 = FUN_00404020(*(undefined **)(param_1 + 0x7c));
    uVar8 = FUN_004071b8(PTR_s_TApplication_00474a38,pCVar7,0x84ca0000,pvVar9,pHVar10,pHVar11,
                         pHVar12,iVar13,iVar14,iVar6,(int)lpWndClass);
    *(undefined4 *)(param_1 + 0x24) = uVar8;
    FUN_00403bdc((int *)(param_1 + 0x7c));
    *(undefined1 *)(param_1 + 0x94) = 1;
    SetWindowLongA(*(HWND *)(param_1 + 0x24),-4,*(LONG *)(param_1 + 0x34));
    if (*PTR_DAT_00475700 != '\0') {
      lParam = FUN_004487a8(param_1);
      SendMessageA(*(HWND *)(param_1 + 0x24),0x80,1,lParam);
      dwNewLong = FUN_004487a8(param_1);
      SetClassLongA(*(HWND *)(param_1 + 0x24),-0xe,dwNewLong);
    }
    pHVar11 = GetSystemMenu(*(HWND *)(param_1 + 0x24),0);
    DeleteMenu(pHVar11,0xf030,0);
    DeleteMenu(pHVar11,0xf000,0);
    if (*PTR_DAT_00475700 != '\0') {
      DeleteMenu(pHVar11,0xf010,0);
    }
  }
  *in_FS_OFFSET = uStack_40;
  puStack_38 = &LAB_00447e08;
  puStack_3c = (undefined1 *)0x447e00;
  FUN_00403bdc((int *)&local_30);
  return;
}



void FUN_00447e10(int param_1,int param_2)

{
  if (param_2 == *(int *)(param_1 + 0x38)) {
    *(undefined4 *)(param_1 + 0x38) = 0;
  }
  if (param_2 == *(int *)(param_1 + 0x3c)) {
    *(undefined4 *)(param_1 + 0x3c) = 0;
  }
  if (param_2 == *(int *)(DAT_004767d4 + 0x58)) {
    *(undefined4 *)(DAT_004767d4 + 0x58) = 0;
  }
  if (param_2 == *(int *)(DAT_004767d4 + 0x5c)) {
    *(undefined4 *)(DAT_004767d4 + 0x5c) = 0;
    *(undefined4 *)(DAT_004767d4 + 0x60) = 0;
  }
  if (param_2 == *(int *)(DAT_004767d4 + 0x6c)) {
    *(undefined4 *)(DAT_004767d4 + 0x6c) = 0;
  }
  if (param_2 == *(int *)(param_1 + 0x50)) {
    *(undefined4 *)(param_1 + 0x50) = 0;
  }
  FUN_00446cec(DAT_004767d4);
  return;
}



// lpEnumFunc parameter of EnumWindows
// 

undefined4 lpEnumFunc_00447e70(void)

{
  HWND pHVar1;
  uint uVar2;
  undefined4 uVar3;
  HWND in_stack_00000004;
  undefined4 *in_stack_00000008;
  
  uVar3 = 0xffffffff;
  pHVar1 = GetWindow(in_stack_00000004,4);
  if (pHVar1 == *(HWND *)(DAT_004767d0 + 0x24)) {
    uVar2 = GetWindowLongA(in_stack_00000004,-0x14);
    if (((uVar2 & 8) == 0) ||
       (((*(int **)(DAT_004767d0 + 0x38) != (int *)0x0 && (*(char *)(in_stack_00000008 + 1) == '\0')
         ) && (pHVar1 = (HWND)FUN_00430e98(*(int **)(DAT_004767d0 + 0x38)),
              in_stack_00000004 == pHVar1)))) {
      *in_stack_00000008 = in_stack_00000004;
      uVar3 = 0;
    }
    else {
      FUN_0040f38c(*(int **)(DAT_004767d0 + 0x80),(int)in_stack_00000004);
    }
    return uVar3;
  }
  return 0xffffffff;
}



void FUN_00447ee0(int param_1,undefined1 param_2)

{
  uint uVar1;
  HWND hWnd;
  int iVar2;
  HWND hWndInsertAfter;
  int X;
  int Y;
  int cx;
  int cy;
  UINT uFlags;
  HWND local_10;
  undefined1 local_c;
  
  if (*(int *)(DAT_004767d0 + 0x24) != 0) {
    if (*(int *)(param_1 + 0x84) == 0) {
      local_10 = *(HWND *)(param_1 + 0x24);
      local_c = param_2;
      EnumWindows(lpEnumFunc_00447e70,(LPARAM)&local_10);
      if (*(int *)(*(int *)(param_1 + 0x80) + 8) != 0) {
        local_10 = GetWindow(local_10,3);
        uVar1 = GetWindowLongA(local_10,-0x14);
        if ((uVar1 & 8) != 0) {
          local_10 = (HWND)0xfffffffe;
        }
        iVar2 = *(int *)(*(int *)(param_1 + 0x80) + 8) + -1;
        if (-1 < iVar2) {
          do {
            uFlags = 0x13;
            cy = 0;
            cx = 0;
            Y = 0;
            X = 0;
            hWndInsertAfter = local_10;
            hWnd = (HWND)FUN_0040f4e8(*(undefined4 **)(param_1 + 0x80),iVar2);
            SetWindowPos(hWnd,hWndInsertAfter,X,Y,cx,cy,uFlags);
            iVar2 = iVar2 + -1;
          } while (iVar2 != -1);
        }
      }
    }
    *(int *)(param_1 + 0x84) = *(int *)(param_1 + 0x84) + 1;
  }
  return;
}



void FUN_00447f88(int param_1)

{
  FUN_00447ee0(param_1,0);
  return;
}



void FUN_00447f90(int param_1)

{
  FUN_00447ee0(param_1,1);
  return;
}



void FUN_00447f98(int param_1)

{
  HWND hWnd;
  int iVar1;
  HWND hWndInsertAfter;
  int X;
  int Y;
  int cx;
  int cy;
  UINT uFlags;
  
  if (((*(int *)(DAT_004767d0 + 0x24) != 0) && (0 < *(int *)(param_1 + 0x84))) &&
     (*(int *)(param_1 + 0x84) = *(int *)(param_1 + 0x84) + -1, *(int *)(param_1 + 0x84) == 0)) {
    iVar1 = *(int *)(*(int *)(param_1 + 0x80) + 8) + -1;
    if (-1 < iVar1) {
      do {
        uFlags = 0x13;
        cy = 0;
        cx = 0;
        Y = 0;
        X = 0;
        hWndInsertAfter = (HWND)0xffffffff;
        hWnd = (HWND)FUN_0040f4e8(*(undefined4 **)(param_1 + 0x80),iVar1);
        SetWindowPos(hWnd,hWndInsertAfter,X,Y,cx,cy,uFlags);
        iVar1 = iVar1 + -1;
      } while (iVar1 != -1);
    }
    (**(code **)(**(int **)(param_1 + 0x80) + 8))();
  }
  return;
}



undefined4 FUN_00448004(int param_1)

{
  if ((PTR_DAT_004758fc[9] != '\0') && (*(char *)(param_1 + 0x28) != '\0')) {
    return CONCAT31((int3)((uint)param_1 >> 8),1);
  }
  return 0;
}



undefined4 FUN_0044801c(int param_1)

{
  if ((PTR_DAT_004758fc[9] != '\0') && (*(char *)(param_1 + 0x28) == '\x01')) {
    return CONCAT31((int3)((uint)param_1 >> 8),1);
  }
  return 0;
}



undefined4 FUN_00448034(int param_1,int *param_2)

{
  if (*param_2 == 0x1a) {
    if (*(char *)(param_1 + 0x49) != '\0') {
      SetThreadLocale(0x400);
      FUN_0040b8b0();
    }
    if (*(char *)(param_1 + 0x4a) != '\0') {
      FUN_00447198(DAT_004767d4);
      if (*(char *)(param_1 + 0x78) != '\0') {
        FUN_00449334(param_1,'\0');
        FUN_00449334(param_1,'\x01');
      }
    }
  }
  return 0;
}



void FUN_00448084(void)

{
  LRESULT LVar1;
  int in_stack_00000004;
  
  LVar1 = DefWindowProcA(*(HWND *)(*(int *)(in_stack_00000004 + -4) + 0x24),
                         **(UINT **)(in_stack_00000004 + -8),
                         *(WPARAM *)(*(int *)(in_stack_00000004 + -8) + 4),
                         *(LPARAM *)(*(int *)(in_stack_00000004 + -8) + 8));
  *(LRESULT *)(*(int *)(in_stack_00000004 + -8) + 0xc) = LVar1;
  return;
}



void FUN_004480c0(void)

{
  HDC hDC;
  HICON hIcon;
  int in_stack_00000004;
  tagPAINTSTRUCT local_44;
  
  hDC = BeginPaint(*(HWND *)(*(int *)(in_stack_00000004 + -4) + 0x24),&local_44);
  hIcon = (HICON)FUN_004487a8(*(int *)(in_stack_00000004 + -4));
  DrawIcon(hDC,0,0,hIcon);
  EndPaint(*(HWND *)(*(int *)(in_stack_00000004 + -4) + 0x24),&local_44);
  return;
}



// WARNING: Heritage AFTER dead removal. Example location: EAX : 0x0044850f
// WARNING: Restarted to delay deadcode elimination for space: register
// WARNING: Exceeded maximum restarts with more pending

void FUN_0044810c(int param_1,int *param_2)

{
  int *piVar1;
  byte bVar2;
  undefined4 *puVar3;
  LRESULT LVar4;
  FARPROC pFVar5;
  DWORD DVar6;
  undefined4 uVar7;
  HWND pHVar8;
  BOOL BVar9;
  HWND hWnd;
  uint extraout_ECX;
  undefined4 extraout_EDX;
  int iVar10;
  int iVar11;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  
  puStack_1c = &stack0xfffffffc;
  puStack_20 = &LAB_00448760;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  param_2[3] = 0;
  iVar10 = *(int *)(*(int *)(param_1 + 0x98) + 8);
  if (-1 < iVar10 + -1) {
    iVar11 = 0;
    puStack_1c = &stack0xfffffffc;
    do {
      puVar3 = (undefined4 *)FUN_0040f4e8(*(undefined4 **)(param_1 + 0x98),iVar11);
      (*(code *)*puVar3)(puVar3[1],param_2);
      if ((char)puVar3 != '\0') {
        *in_FS_OFFSET = uStack_24;
        return;
      }
      iVar11 = iVar11 + 1;
      iVar10 = iVar10 + -1;
    } while (iVar10 != 0);
  }
  FUN_00448034(param_1,param_2);
  iVar10 = *param_2;
  if (iVar10 < 0x113) {
    if (iVar10 == 0x112) {
      if ((param_2[1] & 0xfff0U) == 0xf020) {
        FUN_004487c4(param_1);
      }
      else if ((param_2[1] & 0xfff0U) == 0xf120) {
        FUN_00448864(param_1);
      }
      else {
        FUN_00448084();
      }
      goto LAB_00448756;
    }
    if (iVar10 < 0x17) {
      if (iVar10 == 0x16) {
        if (param_2[1] != 0) {
          *(undefined1 *)(param_1 + 0x8c) = 1;
        }
        goto LAB_00448756;
      }
      switch(iVar10) {
      case 7:
        PostMessageA(*(HWND *)(param_1 + 0x24),0xb01a,0,0);
        FUN_00448084();
        break;
      default:
        goto switchD_004481ae_caseD_1;
      case 10:
        if (param_2[1] == 0) {
          FUN_00448084();
          if (*(int *)(param_1 + 0x9c) == 0) {
            uVar7 = FUN_004403fc(*(undefined4 *)(param_1 + 0x24));
            *(undefined4 *)(param_1 + 0x9c) = uVar7;
          }
          FUN_00447f90(param_1);
        }
        else {
          FUN_00447f98(param_1);
          if (*(int **)(param_1 + 0x9c) != (int *)0x0) {
            FUN_004404b0(*(int **)(param_1 + 0x9c));
            *(undefined4 *)(param_1 + 0x9c) = 0;
          }
          FUN_00448084();
        }
        break;
      case 0xf:
        BVar9 = IsIconic(*(HWND *)(param_1 + 0x24));
        if (BVar9 == 0) {
          FUN_00448084();
        }
        else {
          FUN_004480c0();
        }
        break;
      case 0x10:
        if (*(int **)(param_1 + 0x38) != (int *)0x0) {
          FUN_00445be0(*(int **)(param_1 + 0x38),extraout_EDX,extraout_ECX);
        }
        break;
      case 0x14:
        *param_2 = 0x27;
        FUN_00448084();
      }
      goto LAB_00448756;
    }
    if (iVar10 < 0x1e) {
      if (iVar10 == 0x1d) {
        FUN_00447740(DAT_004767d4);
        FUN_00448084();
        goto LAB_00448756;
      }
      if (iVar10 == 0x1a) {
        FUN_0043505c(*(int *)PTR_DAT_004758b8,param_2[1]);
        FUN_00448084();
        goto LAB_00448756;
      }
      if (iVar10 == 0x1c) {
        FUN_00448084();
        *(bool *)(param_1 + 0x8d) = param_2[1] != 0;
        if (param_2[1] == 0) {
          FUN_00447f88(param_1);
          PostMessageA(*(HWND *)(param_1 + 0x24),0xb001,0,0);
        }
        else {
          FUN_00447f98(param_1);
          PostMessageA(*(HWND *)(param_1 + 0x24),0xb000,0,0);
        }
        goto LAB_00448756;
      }
    }
    else {
      if (iVar10 == 0x37) {
        iVar10 = FUN_004487a8(param_1);
        param_2[3] = iVar10;
        goto LAB_00448756;
      }
      if (iVar10 == 0x4a) {
        if ((*(int *)param_2[2] == -0x21acbbac) && (*(char *)(param_1 + 0x8e) != '\0')) {
          if (*(int *)(param_1 + 0x90) == 0) {
            iVar10 = FUN_0040becc(s_vcltest3_dll_00448784,0x8000);
            *(int *)(param_1 + 0x90) = iVar10;
            if (iVar10 == 0) {
              DVar6 = GetLastError();
              param_2[3] = DVar6;
              *(undefined4 *)(param_1 + 0x90) = 0;
            }
            else {
              param_2[3] = 0;
              pFVar5 = GetProcAddress(*(HMODULE *)(param_1 + 0x90),s_RegisterAutomation_00448794);
              if (pFVar5 != (FARPROC)0x0) {
                (*pFVar5)(pFVar5,param_2);
              }
            }
          }
          else {
            param_2[3] = 0;
          }
        }
        goto LAB_00448756;
      }
    }
  }
  else if (iVar10 < 0xb01b) {
    if (iVar10 == 0xb01a) {
      BVar9 = IsIconic(*(HWND *)(param_1 + 0x24));
      if (((BVar9 == 0) && (pHVar8 = GetFocus(), pHVar8 == *(HWND *)(param_1 + 0x24))) &&
         (pHVar8 = (HWND)FUN_0044054c(0), pHVar8 != (HWND)0x0)) {
        SetFocus(pHVar8);
      }
      goto LAB_00448756;
    }
    if (iVar10 < 0xb002) {
      if (iVar10 == 0xb001) {
        if (*(short *)(param_1 + 0xe2) != 0) {
          (**(code **)(param_1 + 0xe0))(*(undefined4 *)(param_1 + 0xe4),param_1);
        }
        goto LAB_00448756;
      }
      if (iVar10 - 0x132U < 7) {
        LVar4 = SendMessageA((HWND)param_2[2],iVar10 + 0xbc00,param_2[1],(LPARAM)param_2[2]);
        param_2[3] = LVar4;
        goto LAB_00448756;
      }
      if (iVar10 - 0x132U == 0xaece) {
        if (*(short *)(param_1 + 0xea) != 0) {
          (**(code **)(param_1 + 0xe8))(*(undefined4 *)(param_1 + 0xec),param_1);
        }
        goto LAB_00448756;
      }
    }
    else {
      if (iVar10 == 0xb016) {
        uVar7 = FUN_00448bbc(param_1,param_2,extraout_ECX);
        if ((char)uVar7 != '\0') {
          param_2[3] = 1;
        }
        goto LAB_00448756;
      }
      if (iVar10 == 0xb017) {
        piVar1 = *(int **)(param_1 + 0x38);
        if ((piVar1 != (int *)0x0) && (iVar10 = FUN_00430e98(piVar1), iVar10 != 0)) {
          pHVar8 = (HWND)FUN_00430e98(piVar1);
          BVar9 = IsWindowEnabled(pHVar8);
          if (BVar9 != 0) {
            pHVar8 = (HWND)FUN_00430e98(piVar1);
            BVar9 = IsWindowVisible(pHVar8);
            if (BVar9 != 0) {
              DAT_0047490c = 0;
              pHVar8 = GetFocus();
              hWnd = (HWND)FUN_00430e98(piVar1);
              SetFocus(hWnd);
              FUN_0042bd64((int)piVar1,0x112,param_2[1],param_2[2]);
              SetFocus(pHVar8);
              DAT_0047490c = 1;
              param_2[3] = 1;
            }
          }
        }
        goto LAB_00448756;
      }
    }
  }
  else {
    if (iVar10 == 0xb01f) {
      FUN_004491f4(param_1,*(ushort *)(param_2 + 1),param_2[2]);
      goto LAB_00448756;
    }
    if (iVar10 == 0xb020) {
      if (param_2[1] == 0) {
        FUN_00448cfc(param_1,extraout_EDX,extraout_ECX,*(undefined4 *)param_2[2],
                     ((undefined4 *)param_2[2])[1]);
      }
      else {
        FUN_00448d58(param_1,extraout_EDX,extraout_ECX,*(int *)param_2[2],((int *)param_2[2])[1]);
      }
      goto LAB_00448756;
    }
    if (iVar10 == 0xb031) {
      if (param_2[1] == 1) {
        param_2[3] = *(int *)(param_1 + 0xa0);
      }
      else {
        *(int *)(param_1 + 0xa0) = param_2[2];
      }
      goto LAB_00448756;
    }
    if (iVar10 - 0xb03fU < 2) {
      bVar2 = FUN_00449edc(param_1,iVar10,(int *)param_2[2]);
      param_2[3] = bVar2 & 0x7f;
      goto LAB_00448756;
    }
  }
switchD_004481ae_caseD_1:
  FUN_00448084();
LAB_00448756:
  *in_FS_OFFSET = uStack_24;
  return;
}



void FUN_004487a8(int param_1)

{
  int iVar1;
  
  iVar1 = FUN_0041de94(*(int *)(param_1 + 0x88));
  if (iVar1 == 0) {
    LoadIconA((HINSTANCE)0x0,&lpCursorName_00007f00);
  }
  return;
}



void FUN_004487c4(int param_1)

{
  BOOL BVar1;
  HWND hWndInsertAfter;
  int iVar2;
  int Y;
  int cx;
  int cy;
  UINT uFlags;
  
  BVar1 = IsIconic(*(HWND *)(param_1 + 0x24));
  if (BVar1 == 0) {
    FUN_00447f88(param_1);
    SetActiveWindow(*(HWND *)(param_1 + 0x24));
    if ((*(int *)(param_1 + 0x38) == 0) ||
       ((*(char *)(param_1 + 0x4b) == '\0' && (*(char *)(*(int *)(param_1 + 0x38) + 0x47) == '\0')))
       ) {
      FUN_004479b8(*(HWND *)(param_1 + 0x24),6);
    }
    else {
      uFlags = 0x40;
      cy = 0;
      iVar2 = *(int *)(param_1 + 0x38);
      cx = *(int *)(iVar2 + 0x38);
      Y = *(int *)(iVar2 + 0x34);
      iVar2 = *(int *)(iVar2 + 0x30);
      hWndInsertAfter = (HWND)FUN_00430e98(*(int **)(param_1 + 0x38));
      SetWindowPos(*(HWND *)(param_1 + 0x24),hWndInsertAfter,iVar2,Y,cx,cy,uFlags);
      DefWindowProcA(*(HWND *)(param_1 + 0x24),0x112,0xf020,0);
    }
    if (*(short *)(param_1 + 0xf2) != 0) {
      (**(code **)(param_1 + 0xf0))(*(undefined4 *)(param_1 + 0xf4),param_1);
    }
  }
  return;
}



void FUN_00448864(int param_1)

{
  int *piVar1;
  BOOL BVar2;
  uint uVar3;
  int cx;
  int X;
  HWND hWnd;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  int Y;
  int cy;
  UINT uFlags;
  
  BVar2 = IsIconic(*(HWND *)(param_1 + 0x24));
  if (BVar2 != 0) {
    SetActiveWindow(*(HWND *)(param_1 + 0x24));
    if ((*(int *)(param_1 + 0x38) == 0) ||
       ((*(char *)(param_1 + 0x4b) == '\0' && (*(char *)(*(int *)(param_1 + 0x38) + 0x47) == '\0')))
       ) {
      FUN_004479b8(*(HWND *)(param_1 + 0x24),9);
    }
    else {
      DefWindowProcA(*(HWND *)(param_1 + 0x24),0x112,0xf120,0);
    }
    uFlags = 0;
    cy = 1;
    uVar3 = (**(code **)PTR_DAT_00475690)();
    cx = (int)uVar3 >> 1;
    if (cx < 0) {
      cx = cx + (uint)((uVar3 & 1) != 0);
    }
    Y = 0;
    uVar3 = (**(code **)PTR_DAT_00475690)();
    X = (int)uVar3 >> 1;
    if (X < 0) {
      X = X + (uint)((uVar3 & 1) != 0);
    }
    SetWindowPos(*(HWND *)(param_1 + 0x24),(HWND)0x0,X,Y,cx,cy,uFlags);
    piVar1 = *(int **)(param_1 + 0x38);
    if (((piVar1 != (int *)0x0) && (*(char *)((int)piVar1 + 0x213) == '\x01')) &&
       (*(char *)((int)piVar1 + 0x47) == '\0')) {
      FUN_00443af4(piVar1,0);
      FUN_00445d98(*(int **)(param_1 + 0x38),extraout_EDX,extraout_ECX);
    }
    FUN_00447f98(param_1);
    if (*(int **)(DAT_004767d4 + 0x58) != (int *)0x0) {
      hWnd = (HWND)FUN_00430e98(*(int **)(DAT_004767d4 + 0x58));
      SetFocus(hWnd);
    }
    if (*(short *)(param_1 + 0xfa) != 0) {
      (**(code **)(param_1 + 0xf8))(*(undefined4 *)(param_1 + 0xfc),param_1);
    }
  }
  return;
}



void FUN_00448954(int param_1)

{
  HWND hWnd;
  BOOL BVar1;
  
  if (*(HWND *)(param_1 + 0x24) != (HWND)0x0) {
    hWnd = GetLastActivePopup(*(HWND *)(param_1 + 0x24));
    if ((hWnd != (HWND)0x0) && (hWnd != *(HWND *)(param_1 + 0x24))) {
      BVar1 = IsWindowVisible(hWnd);
      if (BVar1 != 0) {
        BVar1 = IsWindowEnabled(hWnd);
        if (BVar1 != 0) {
          SetForegroundWindow(hWnd);
        }
      }
    }
  }
  return;
}



void FUN_00448990(int param_1,int *param_2)

{
  uint uVar1;
  CHAR local_108 [256];
  
  if (*(char *)(param_1 + 0x94) == '\0') {
    FUN_00403c30(param_2,*(undefined4 **)(param_1 + 0x7c));
  }
  else {
    uVar1 = GetWindowTextA(*(HWND *)(param_1 + 0x24),local_108,0x100);
    FUN_00403cc4(param_2,(undefined4 *)local_108,uVar1);
  }
  return;
}



void FUN_004489d8(int param_1,uint *param_2)

{
  LPCSTR lpString;
  undefined4 *in_FS_OFFSET;
  undefined1 uVar1;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  uint *local_8;
  
  puStack_14 = &stack0xfffffffc;
  local_8 = (uint *)0x0;
  puStack_18 = &LAB_00448a51;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  uVar1 = *(char *)(param_1 + 0x94) == '\0';
  if ((bool)uVar1) {
    FUN_00403c30((int *)(param_1 + 0x7c),param_2);
  }
  else {
    puStack_14 = &stack0xfffffffc;
    FUN_00448990(param_1,(int *)&local_8);
    FUN_00403f6c(local_8,param_2);
    if ((!(bool)uVar1) || (*(int *)(param_1 + 0x7c) != 0)) {
      lpString = FUN_00404020((undefined *)param_2);
      SetWindowTextA(*(HWND *)(param_1 + 0x24),lpString);
      FUN_00403bdc((int *)(param_1 + 0x7c));
    }
  }
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_00448a58;
  puStack_18 = (undefined1 *)0x448a50;
  FUN_00403bdc((int *)&local_8);
  return;
}



bool FUN_00448a60(int param_1,LPMSG param_2)

{
  BOOL BVar1;
  bool bVar2;
  
  bVar2 = false;
  if (*(HWND *)(param_1 + 0xa0) != (HWND)0x0) {
    BVar1 = IsDialogMessageA(*(HWND *)(param_1 + 0xa0),param_2);
    bVar2 = BVar1 != 0;
  }
  return bVar2;
}



bool FUN_00448a84(int param_1,LPMSG param_2)

{
  int iVar1;
  BOOL BVar2;
  bool bVar3;
  
  bVar3 = false;
  iVar1 = *(int *)(param_1 + 0x38);
  if ((((iVar1 != 0) && (*(char *)(iVar1 + 0x217) == '\x02')) &&
      (*(int *)(DAT_004767d4 + 0x60) != 0)) &&
     (*(char *)(*(int *)(DAT_004767d4 + 0x60) + 0x217) == '\x01')) {
    BVar2 = TranslateMDISysAccel(*(HWND *)(iVar1 + 0x23c),param_2);
    bVar3 = BVar2 != 0;
  }
  return bVar3;
}



undefined4 FUN_00448ad4(int param_1,int *param_2)

{
  int *piVar1;
  HWND pHVar2;
  HANDLE pvVar3;
  LRESULT LVar4;
  LONG LVar5;
  undefined4 uVar6;
  
  uVar6 = 0;
  if ((0xff < (uint)param_2[1]) && ((uint)param_2[1] < 0x109)) {
    pHVar2 = GetCapture();
    if (pHVar2 == (HWND)0x0) {
      pHVar2 = (HWND)*param_2;
      piVar1 = *(int **)(param_1 + 0x38);
      if ((piVar1 == (int *)0x0) || (pHVar2 != (HWND)piVar1[0x8f])) {
        while( true ) {
          pvVar3 = FUN_00427fac(pHVar2);
          if ((pvVar3 != (HANDLE)0x0) || (pHVar2 == (HWND)0x0)) break;
          pHVar2 = GetParent(pHVar2);
        }
        if (pHVar2 == (HWND)0x0) {
          pHVar2 = (HWND)*param_2;
        }
      }
      else {
        pHVar2 = (HWND)FUN_00430e98(piVar1);
      }
      LVar4 = SendMessageA(pHVar2,param_2[1] + 0xbc00,param_2[2],param_2[3]);
      if (LVar4 != 0) {
        uVar6 = 1;
      }
    }
    else {
      LVar5 = GetWindowLongA(pHVar2,-6);
      if (LVar5 == DAT_004764d8) {
        LVar4 = SendMessageA(pHVar2,param_2[1] + 0xbc00,param_2[2],param_2[3]);
        if (LVar4 != 0) {
          uVar6 = 1;
        }
      }
    }
  }
  return uVar6;
}



undefined4 FUN_00448b8c(int param_1,undefined4 param_2)

{
  int *piVar1;
  char cVar2;
  
  piVar1 = *(int **)(param_1 + 0x74);
  if (piVar1 != (int *)0x0) {
    cVar2 = (**(code **)(*piVar1 + 0xc4))(piVar1,param_2);
    if (cVar2 != '\0') {
      FUN_00449954(param_1);
    }
  }
  return 0;
}



undefined4 FUN_00448bbc(int param_1,undefined4 param_2,uint param_3)

{
  undefined1 uVar1;
  int iVar2;
  HWND hWnd;
  BOOL BVar3;
  undefined3 uVar4;
  undefined4 extraout_ECX;
  uint local_14;
  
  local_14 = param_3 & 0xffffff00;
  iVar2 = param_1;
  if (*(short *)(param_1 + 0x102) != 0) {
    iVar2 = (**(code **)(param_1 + 0x100))(*(undefined4 *)(param_1 + 0x104),param_2,&local_14);
  }
  if ((char)local_14 == '\0') {
    if (*(int **)(param_1 + 0x38) != (int *)0x0) {
      hWnd = (HWND)FUN_00430e98(*(int **)(param_1 + 0x38));
      BVar3 = IsWindowEnabled(hWnd);
      if (BVar3 != 0) {
        iVar2 = FUN_00403130(*(int **)(param_1 + 0x38),param_2,extraout_ECX);
        if ((char)iVar2 != '\0') goto LAB_00448c17;
      }
    }
    uVar1 = 0;
    uVar4 = 0;
  }
  else {
LAB_00448c17:
    uVar4 = (undefined3)((uint)iVar2 >> 8);
    uVar1 = 1;
  }
  return CONCAT31(uVar4,uVar1);
}



undefined4 FUN_00448c28(int param_1,LPMSG param_2,uint param_3)

{
  bool bVar1;
  BOOL BVar2;
  undefined4 uVar3;
  undefined4 uVar4;
  uint local_10;
  
  uVar4 = 0;
  local_10 = param_3;
  BVar2 = PeekMessageA(param_2,(HWND)0x0,0,0,1);
  if (BVar2 != 0) {
    uVar4 = 1;
    if (param_2->message == 0x12) {
      *(undefined1 *)(param_1 + 0x8c) = 1;
    }
    else {
      local_10 = local_10 & 0xffffff00;
      if (*(short *)(param_1 + 0xc2) != 0) {
        (**(code **)(param_1 + 0xc0))(*(undefined4 *)(param_1 + 0xc4),param_2,&local_10);
      }
      uVar3 = FUN_00448b8c(param_1,param_2);
      if (((char)uVar3 == '\0') && ((char)local_10 == '\0')) {
        bVar1 = FUN_00448a84(param_1,param_2);
        if (!bVar1) {
          uVar3 = FUN_00448ad4(param_1,(int *)param_2);
          if ((char)uVar3 == '\0') {
            bVar1 = FUN_00448a60(param_1,param_2);
            if (!bVar1) {
              TranslateMessage(param_2);
              DispatchMessageA(param_2);
            }
          }
        }
      }
    }
  }
  return uVar4;
}



void FUN_00448cc0(int param_1,undefined4 param_2,uint param_3)

{
  undefined4 uVar1;
  uint extraout_ECX;
  tagMSG tStack_20;
  
  do {
    uVar1 = FUN_00448c28(param_1,&tStack_20,param_3);
    param_3 = extraout_ECX;
  } while ((char)uVar1 != '\0');
  return;
}



void FUN_00448cd8(int param_1,undefined4 param_2,uint param_3)

{
  undefined4 uVar1;
  tagMSG tStack_20;
  
  uVar1 = FUN_00448c28(param_1,&tStack_20,param_3);
  if ((char)uVar1 == '\0') {
    FUN_0044945c(param_1);
  }
  return;
}



void FUN_00448cfc(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
                 undefined4 param_5)

{
  undefined4 *puVar1;
  
  if (*(char *)(param_1 + 0x94) == '\0') {
    if (*(HWND *)(param_1 + 0x24) != (HWND)0x0) {
      SendMessageA(*(HWND *)(param_1 + 0x24),0xb020,0,(LPARAM)&param_4);
    }
  }
  else {
    FUN_0040f4c8(*(undefined4 **)(param_1 + 0x98));
    puVar1 = (undefined4 *)FUN_004026f4(8);
    *puVar1 = param_4;
    puVar1[1] = param_5;
    FUN_0040f38c(*(int **)(param_1 + 0x98),(int)puVar1);
  }
  return;
}



void FUN_00448d58(int param_1,undefined4 param_2,undefined4 param_3,int param_4,int param_5)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  if (*(char *)(param_1 + 0x94) == '\0') {
    if (*(HWND *)(param_1 + 0x24) != (HWND)0x0) {
      SendMessageA(*(HWND *)(param_1 + 0x24),0xb020,1,(LPARAM)&param_4);
    }
  }
  else {
    iVar3 = *(int *)(*(int *)(param_1 + 0x98) + 8);
    if (-1 < iVar3 + -1) {
      iVar2 = 0;
      do {
        piVar1 = (int *)FUN_0040f4e8(*(undefined4 **)(param_1 + 0x98),iVar2);
        if ((*piVar1 == param_4) && (param_5 == piVar1[1])) {
          FUN_0040270c((int)piVar1);
          FUN_0040f3d8(*(int **)(param_1 + 0x98),iVar2);
          return;
        }
        iVar2 = iVar2 + 1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
  }
  return;
}



void FUN_00448dd4(void)

{
  if (*(int *)PTR_DAT_00475734 != 0) {
    (**(code **)PTR_DAT_00475734)();
  }
  return;
}



void FUN_00448dec(int param_1,int param_2,undefined4 *param_3)

{
  int *piVar1;
  int *piVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  
  puStack_18 = (undefined1 *)0x448dff;
  piVar1 = (int *)(**(code **)(param_2 + -0xc))();
  *param_3 = piVar1;
  puStack_1c = &LAB_00448e2a;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  puStack_18 = &stack0xfffffffc;
  (**(code **)(*piVar1 + 0x2c))(piVar1,0xffffffff,param_1);
  *in_FS_OFFSET = uStack_20;
  if (*(int *)(param_1 + 0x38) == 0) {
    puStack_18 = (undefined1 *)0x448e53;
    piVar2 = FUN_004030cc(piVar1,(int)PTR_PTR_0043f2bc);
    if ((char)piVar2 != '\0') {
      puStack_18 = (undefined1 *)0x448e60;
      FUN_00430e74(piVar1);
      *(int **)(param_1 + 0x38) = piVar1;
    }
  }
  return;
}



void FUN_00448e6c(int param_1)

{
  int *piVar1;
  uint extraout_ECX;
  uint extraout_ECX_00;
  uint extraout_ECX_01;
  uint extraout_ECX_02;
  uint uVar2;
  uint extraout_ECX_03;
  int iVar3;
  int extraout_EDX;
  int extraout_EDX_00;
  int extraout_EDX_01;
  int extraout_EDX_02;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_14;
  undefined1 *puStack_10;
  undefined1 *puStack_c;
  int local_8;
  
  puStack_c = &stack0xfffffffc;
  *(undefined1 *)(param_1 + 0x95) = 1;
  puStack_10 = &LAB_00448f16;
  uStack_14 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_14;
  local_8 = param_1;
  FUN_00408234(FUN_00440374);
  piVar1 = *(int **)(local_8 + 0x38);
  if (piVar1 != (int *)0x0) {
    if (*(int *)PTR_DAT_00475784 == 3) {
      FUN_00443af4(piVar1,2);
      uVar2 = extraout_ECX_00;
      iVar3 = extraout_EDX;
    }
    else {
      iVar3 = *(int *)PTR_DAT_00475784 + -7;
      uVar2 = extraout_ECX;
      if (iVar3 == 0) {
        *(undefined1 *)((int)piVar1 + 0x213) = 1;
      }
    }
    if (*(char *)(local_8 + 0x4b) != '\0') {
      if (*(char *)((int)*(int **)(local_8 + 0x38) + 0x213) == '\x01') {
        FUN_004487c4(local_8);
        uVar2 = extraout_ECX_01;
        iVar3 = extraout_EDX_00;
      }
      else {
        FUN_00442c80(*(int **)(local_8 + 0x38),CONCAT31((int3)((uint)iVar3 >> 8),1),uVar2);
        uVar2 = extraout_ECX_02;
        iVar3 = extraout_EDX_01;
      }
    }
    do {
      FUN_00448cd8(local_8,iVar3,uVar2);
      uVar2 = extraout_ECX_03;
      iVar3 = extraout_EDX_02;
    } while (*(char *)(local_8 + 0x8c) == '\0');
  }
  *in_FS_OFFSET = uStack_14;
  *(undefined1 *)(local_8 + 0x95) = 0;
  return;
}



void FUN_00448f20(void)

{
  char cVar1;
  
  cVar1 = FUN_0040bcd0();
  if (cVar1 != '\0') {
    PostQuitMessage(0);
  }
  return;
}



void FUN_00448f34(int param_1,undefined4 param_2)

{
  HWND pHVar1;
  int *piVar2;
  undefined4 uVar3;
  int iVar4;
  LPCVOID pvVar5;
  UINT Msg;
  WPARAM wParam;
  LPARAM lParam;
  
  pHVar1 = GetCapture();
  if (pHVar1 != (HWND)0x0) {
    lParam = 0;
    wParam = 0;
    Msg = 0x1f;
    pHVar1 = GetCapture();
    SendMessageA(pHVar1,Msg,wParam,lParam);
  }
  piVar2 = (int *)FUN_0040a7d4();
  piVar2 = FUN_004030cc(piVar2,(int)PTR_DAT_00407654);
  if ((char)piVar2 == '\0') {
    pvVar5 = (LPCVOID)FUN_0040a7ec();
    piVar2 = (int *)FUN_0040a7d4();
    FUN_0040a998(piVar2,pvVar5);
  }
  else {
    piVar2 = (int *)FUN_0040a7d4();
    piVar2 = FUN_004030cc(piVar2,(int)PTR_DAT_004076bc);
    if ((char)piVar2 == '\0') {
      if (*(short *)(param_1 + 0xba) == 0) {
        iVar4 = FUN_0040a7d4();
        FUN_0044911c(param_1,iVar4);
        return;
      }
      uVar3 = FUN_0040a7d4();
      (**(code **)(param_1 + 0xb8))(*(undefined4 *)(param_1 + 0xbc),param_2,uVar3);
    }
  }
  return;
}



void FUN_00448fc4(int param_1,LPCSTR param_2,LPCSTR param_3,UINT param_4)

{
  undefined4 uVar1;
  int iVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  tagRECT local_54;
  undefined4 local_44;
  int local_40;
  int local_3c;
  int local_38;
  int local_34;
  int local_1c;
  int local_18;
  int *local_14;
  HWND local_10;
  int local_c;
  int local_8;
  
  local_8 = param_1;
  local_10 = GetActiveWindow();
  local_18 = (**(code **)PTR_DAT_00475714)();
  local_1c = (**(code **)PTR_DAT_00475714)();
  if (local_18 != local_1c) {
    local_44 = 0x28;
    (**(code **)PTR_DAT_00475668)();
    GetWindowRect(*(HWND *)(local_8 + 0x24),&local_54);
    iVar2 = local_34 - local_3c >> 1;
    if (iVar2 < 0) {
      iVar2 = iVar2 + (uint)((local_34 - local_3c & 1U) != 0);
    }
    iVar3 = local_38 - local_40 >> 1;
    if (iVar3 < 0) {
      iVar3 = iVar3 + (uint)((local_38 - local_40 & 1U) != 0);
    }
    SetWindowPos(*(HWND *)(local_8 + 0x24),(HWND)0x0,iVar3 + local_40,iVar2 + local_3c,0,0,0x1d);
  }
  local_14 = (int *)FUN_004403fc(0);
  uVar1 = FUN_00448004(local_8);
  if ((char)uVar1 != '\0') {
    param_4 = param_4 | 0x100000;
  }
  uVar1 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffff84;
  local_c = MessageBoxA(*(HWND *)(local_8 + 0x24),param_2,param_3,param_4);
  *in_FS_OFFSET = uVar1;
  if (local_18 != local_1c) {
    iVar2 = local_54.bottom - local_54.top >> 1;
    if (iVar2 < 0) {
      iVar2 = iVar2 + (uint)((local_54.bottom - local_54.top & 1U) != 0);
    }
    iVar3 = local_54.right - local_54.left >> 1;
    if (iVar3 < 0) {
      iVar3 = iVar3 + (uint)((local_54.right - local_54.left & 1U) != 0);
    }
    SetWindowPos(*(HWND *)(local_8 + 0x24),(HWND)0x0,iVar3 + local_54.left,iVar2 + local_54.top,0,0,
                 0x1d);
  }
  FUN_004404b0(local_14);
  SetActiveWindow(local_10);
  return;
}



void FUN_0044911c(int param_1,int param_2)

{
  char *pcVar1;
  LPCSTR pCVar2;
  LPCSTR pCVar3;
  UINT *in_FS_OFFSET;
  undefined1 uVar4;
  undefined1 uVar5;
  UINT UVar6;
  UINT UStack_120;
  undefined1 *puStack_11c;
  undefined1 *puStack_118;
  undefined *local_10c;
  byte local_108 [256];
  undefined *local_8;
  
  puStack_118 = &stack0xfffffffc;
  local_10c = (undefined *)0x0;
  local_8 = (undefined *)0x0;
  puStack_11c = &LAB_004491d7;
  UStack_120 = *in_FS_OFFSET;
  *in_FS_OFFSET = (UINT)&UStack_120;
  FUN_00403c74((int *)&local_8,*(int *)(param_2 + 4));
  uVar4 = 0;
  uVar5 = local_8 == (undefined *)0x0;
  if (!(bool)uVar5) {
    pcVar1 = FUN_00408824(local_8);
    FUN_00402d00((char *)local_108,pcVar1);
    FUN_00402b20(local_108,&DAT_004491e4);
    if (!(bool)uVar4 && !(bool)uVar5) {
      FUN_00403e64((int *)&local_8,(undefined4 *)&DAT_004491f0);
    }
  }
  UVar6 = 0x10;
  FUN_00448990(param_1,(int *)&local_10c);
  pCVar2 = FUN_00404020(local_10c);
  pCVar3 = FUN_00404020(local_8);
  FUN_00448fc4(param_1,pCVar3,pCVar2,UVar6);
  *in_FS_OFFSET = UVar6;
  puStack_11c = &LAB_004491de;
  UStack_120 = 0x4491ce;
  FUN_00403bdc((int *)&local_10c);
  UStack_120 = 0x4491d6;
  FUN_00403bdc((int *)&local_8);
  return;
}



uint FUN_004491f4(int param_1,ushort param_2,ULONG_PTR param_3)

{
  int *piVar1;
  bool bVar2;
  HWND pHVar3;
  LPCSTR pCVar4;
  BOOL BVar5;
  uint uVar6;
  char local_10 [4];
  
  uVar6 = 0;
  local_10[0] = '\x01';
  piVar1 = *(int **)(DAT_004767d4 + 0x5c);
  if ((piVar1 == (int *)0x0) || (*(short *)((int)piVar1 + 0x292) == 0)) {
    if (*(short *)(param_1 + 0xca) != 0) {
      uVar6 = (**(code **)(param_1 + 200))(*(undefined4 *)(param_1 + 0xcc),param_2,param_3,local_10)
      ;
    }
  }
  else {
    uVar6 = (*(code *)piVar1[0xa4])(piVar1[0xa5],param_2,param_3,local_10);
  }
  if (local_10[0] != '\0') {
    if (((piVar1 != (int *)0x0) && (bVar2 = FUN_00431194((int)piVar1), bVar2)) &&
       (piVar1[0x89] != 0)) {
      pHVar3 = (HWND)FUN_00430e98(piVar1);
      uVar6 = (uint)param_2;
      pCVar4 = FUN_00404020((undefined *)piVar1[0x89]);
      BVar5 = WinHelpA(pHVar3,pCVar4,uVar6,param_3);
      return (uint)(BVar5 != 0);
    }
    if (*(int *)(param_1 + 0x40) == 0) {
      if (*(char *)(param_1 + 0x94) == '\0') {
        PostMessageA(*(HWND *)(param_1 + 0x24),0xb01f,(uint)param_2,param_3);
      }
    }
    else {
      pHVar3 = *(HWND *)(param_1 + 0x24);
      if (*(int **)(param_1 + 0x38) != (int *)0x0) {
        pHVar3 = (HWND)FUN_00430e98(*(int **)(param_1 + 0x38));
      }
      uVar6 = (uint)param_2;
      pCVar4 = FUN_00404020(*(undefined **)(param_1 + 0x40));
      BVar5 = WinHelpA(pHVar3,pCVar4,uVar6,param_3);
      uVar6 = (uint)(BVar5 != 0);
    }
  }
  return uVar6;
}



void FUN_00449320(int param_1,ULONG_PTR param_2)

{
  FUN_004491f4(param_1,1,param_2);
  return;
}



void FUN_0044932c(int param_1,ushort param_2,ULONG_PTR param_3)

{
  FUN_004491f4(param_1,param_2,param_3);
  return;
}



void FUN_00449334(int param_1,char param_2)

{
  int iVar1;
  undefined3 in_register_00000009;
  
  if (param_2 != *(char *)(param_1 + 0x78)) {
    *(char *)(param_1 + 0x78) = param_2;
    if (param_2 == '\0') {
      FUN_00402f54(*(int **)(param_1 + 0x74));
      *(undefined4 *)(param_1 + 0x74) = 0;
    }
    else {
      iVar1 = (**(code **)(PTR_PTR_00474908 + 0x2c))
                        (PTR_PTR_00474908,CONCAT31(in_register_00000009,1),param_1);
      *(int *)(param_1 + 0x74) = iVar1;
      FUN_0042af4c(iVar1,*(int *)(param_1 + 0x4c));
    }
  }
  return;
}



void FUN_00449374(void)

{
  bool bVar1;
  int iVar2;
  int *piVar3;
  HWND pHVar4;
  BOOL BVar5;
  int iVar6;
  
  iVar2 = FUN_00446ce4(DAT_004767d4);
  if (-1 < iVar2 + -1) {
    iVar6 = 0;
    do {
      piVar3 = (int *)FUN_00446cd0(DAT_004767d4,iVar6);
      bVar1 = FUN_00431194((int)piVar3);
      if (bVar1) {
        pHVar4 = (HWND)FUN_00430e98(piVar3);
        BVar5 = IsWindowVisible(pHVar4);
        if (BVar5 != 0) {
          pHVar4 = (HWND)FUN_00430e98(piVar3);
          BVar5 = IsWindowEnabled(pHVar4);
          if (BVar5 != 0) {
            (**(code **)(*piVar3 + 200))();
          }
        }
      }
      iVar6 = iVar6 + 1;
      iVar2 = iVar2 + -1;
    } while (iVar2 != 0);
  }
  return;
}



int * FUN_004493d8(int param_1)

{
  int *piVar1;
  HANDLE pvVar2;
  undefined4 extraout_EDX;
  tagPOINT tStack_14;
  
  GetCursorPos(&tStack_14);
  piVar1 = FUN_004297f8(&tStack_14,CONCAT31((int3)((uint)extraout_EDX >> 8),1));
  if ((piVar1 != (int *)0x0) && ((*(byte *)(piVar1 + 8) & 0x10) != 0)) {
    piVar1 = (int *)0x0;
  }
  pvVar2 = FUN_00428234();
  if (piVar1 != *(int **)(param_1 + 0x3c)) {
    if (((*(int *)(param_1 + 0x3c) != 0) && (pvVar2 == (HANDLE)0x0)) ||
       ((pvVar2 != (HANDLE)0x0 && (pvVar2 == *(HANDLE *)(param_1 + 0x3c))))) {
      FUN_0042bd64(*(int *)(param_1 + 0x3c),0xb014,0,0);
    }
    *(int **)(param_1 + 0x3c) = piVar1;
    if (((*(int *)(param_1 + 0x3c) != 0) && (pvVar2 == (HANDLE)0x0)) ||
       ((pvVar2 != (HANDLE)0x0 && (pvVar2 == *(HANDLE *)(param_1 + 0x3c))))) {
      FUN_0042bd64(*(int *)(param_1 + 0x3c),0xb013,0,0);
    }
  }
  return piVar1;
}



void FUN_0044945c(int param_1)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_38;
  undefined1 *puStack_34;
  undefined1 *puStack_30;
  undefined4 uStack_2c;
  undefined1 *puStack_28;
  undefined1 *puStack_24;
  undefined4 *local_14;
  uint *local_10;
  char local_9;
  int local_8;
  
  puStack_24 = &stack0xfffffffc;
  local_10 = (uint *)0x0;
  local_14 = (undefined4 *)0x0;
  puStack_28 = &LAB_00449557;
  uStack_2c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_2c;
  puStack_30 = (undefined1 *)0x449486;
  local_8 = param_1;
  piVar1 = FUN_004493d8(param_1);
  if ((*(char *)(local_8 + 0x78) != '\0') && (*(int *)(local_8 + 0x3c) == 0)) {
    puStack_30 = (undefined1 *)0x4494a2;
    FUN_00449954(local_8);
  }
  puStack_30 = (undefined1 *)0x4494ac;
  FUN_0044774c((int)piVar1,(int *)&local_14);
  puStack_30 = (undefined1 *)0x4494b7;
  FUN_004281f0(local_14,(int *)&local_10);
  puStack_30 = (undefined1 *)0x4494c4;
  FUN_00449608(DAT_004767d0,local_10);
  local_9 = '\x01';
  puStack_34 = &LAB_00449510;
  uStack_38 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_38;
  puStack_30 = &stack0xfffffffc;
  if (*(short *)(local_8 + 0xda) != 0) {
    puStack_30 = &stack0xfffffffc;
    (**(code **)(local_8 + 0xd8))(*(undefined4 *)(local_8 + 0xdc),local_8,&local_9);
  }
  if (local_9 != '\0') {
    FUN_00449374();
  }
  *in_FS_OFFSET = uStack_38;
  if (local_9 != '\0') {
    puStack_30 = (undefined1 *)0x44953c;
    WaitMessage();
  }
  *in_FS_OFFSET = uStack_2c;
  puStack_24 = &LAB_0044955e;
  puStack_28 = (undefined1 *)0x449556;
  FUN_00403c00((int *)&local_14,2);
  return;
}



void FUN_00449568(undefined4 param_1,uint param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  undefined4 uVar4;
  
  iVar1 = FUN_00446cc8(DAT_004767d4);
  if (-1 < iVar1 + -1) {
    iVar3 = 0;
    do {
      uVar4 = 0;
      iVar2 = FUN_00446cb4(DAT_004767d4,iVar3);
      FUN_0042bd64(iVar2,param_2 & 0xffff,0,uVar4);
      iVar3 = iVar3 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  return;
}



void FUN_00449608(int *param_1,uint *param_2)

{
  int *piVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined1 in_ZF;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  puStack_14 = (undefined1 *)0x44961c;
  FUN_00403f6c((uint *)param_1[0x11],param_2);
  if (!(bool)in_ZF) {
    puStack_14 = (undefined1 *)0x449628;
    FUN_00403c30(param_1 + 0x11,param_2);
    if (*(short *)((int)param_1 + 0xd2) == 0) {
      puStack_14 = (undefined1 *)0x449650;
      piVar1 = FUN_00425fd8((int *)PTR_PTR_00425ef0,'\x01',param_1);
      puStack_14 = (undefined1 *)0x44965d;
      FUN_00436218(piVar1,param_2);
      puStack_18 = &LAB_0044968d;
      uStack_1c = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack_1c;
      puStack_14 = &stack0xfffffffc;
      FUN_00403130(piVar1,extraout_EDX,extraout_ECX);
      *in_FS_OFFSET = uStack_1c;
      puStack_14 = (undefined1 *)0x449694;
      puStack_18 = (undefined1 *)0x44968c;
      FUN_00402f54(piVar1);
      return;
    }
    puStack_14 = (undefined1 *)0x449640;
    (*(code *)param_1[0x34])(param_1[0x35],param_1);
  }
  return;
}



void FUN_0044969c(byte param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  BOOL BVar1;
  
  BVar1 = IsWindowVisible(*(HWND *)(*(int *)(param_4 + -4) + 0x24));
  if (((BVar1 != 0) == (bool)DAT_00474a3c) && (param_1 != DAT_00474a3c)) {
    SetWindowPos(*(HWND *)(*(int *)(param_4 + -4) + 0x24),(HWND)0x0,0,0,0,0,
                 (uint)*(ushort *)(&DAT_00474a40 + (uint)param_1 * 2));
    DAT_00474a3c = param_1;
  }
  return;
}



void FUN_004496f8(int param_1)

{
  bool bVar1;
  int iVar2;
  int *piVar3;
  HWND hWndParent;
  BOOL BVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 uVar5;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 uVar6;
  int iVar7;
  HWND hWnd;
  
  if (*(int *)(param_1 + 0x24) != 0) {
    iVar2 = FUN_00446cc8(DAT_004767d4);
    uVar5 = extraout_ECX;
    uVar6 = extraout_EDX;
    if (-1 < iVar2 + -1) {
      iVar7 = 0;
      do {
        piVar3 = (int *)FUN_00446cb4(DAT_004767d4,iVar7);
        uVar5 = extraout_ECX_00;
        uVar6 = extraout_EDX_00;
        if (*(char *)((int)piVar3 + 0x47) != '\0') {
          if ((piVar3[0x59] == 0) ||
             (bVar1 = FUN_00431194((int)piVar3), uVar5 = extraout_ECX_01, uVar6 = extraout_EDX_01,
             bVar1)) {
LAB_0044975f:
            FUN_0044969c(1,uVar6,uVar5,(int)&stack0xfffffffc);
            return;
          }
          hWnd = (HWND)piVar3[0x59];
          hWndParent = (HWND)FUN_00430e98(piVar3);
          BVar4 = IsChild(hWndParent,hWnd);
          uVar5 = extraout_ECX_02;
          uVar6 = extraout_EDX_02;
          if (BVar4 == 0) goto LAB_0044975f;
        }
        iVar7 = iVar7 + 1;
        iVar2 = iVar2 + -1;
      } while (iVar2 != 0);
    }
    FUN_0044969c(0,uVar6,uVar5,(int)&stack0xfffffffc);
  }
  return;
}



void FUN_00449780(int param_1,UINT param_2,undefined1 param_3)

{
  UINT_PTR UVar1;
  
  FUN_004497b8(param_1);
  UVar1 = SetTimer((HWND)0x0,0,param_2,lpTimerFunc_0044779c);
  *(short *)(param_1 + 0x7a) = (short)UVar1;
  *(undefined1 *)(param_1 + 0x79) = param_3;
  if (*(short *)(param_1 + 0x7a) == 0) {
    FUN_00449954(param_1);
  }
  return;
}



void FUN_004497b8(int param_1)

{
  if (*(ushort *)(param_1 + 0x7a) != 0) {
    KillTimer((HWND)0x0,(uint)*(ushort *)(param_1 + 0x7a));
    *(undefined2 *)(param_1 + 0x7a) = 0;
  }
  return;
}



void FUN_004497d8(int param_1,int *param_2,int param_3)

{
  POINT pt;
  int *piVar1;
  int iVar2;
  BOOL BVar3;
  undefined4 extraout_EDX;
  UINT local_30;
  byte local_2c;
  tagPOINT local_28;
  POINT local_20;
  int local_18 [2];
  
  FUN_00407184(*(undefined4 *)(param_3 + 8),local_18);
  FUN_0042a938(param_2,local_18,&local_20.x);
  piVar1 = FUN_004297f8(&local_20,CONCAT31((int3)((uint)extraout_EDX >> 8),1));
  iVar2 = thunk_FUN_00447781((int)piVar1);
  if ((iVar2 == 0) || (*(char *)(iVar2 + 0x89) == '\0')) {
    FUN_00449954(param_1);
  }
  else {
    if (iVar2 == *(int *)(param_1 + 0x50)) {
      FUN_00407184(*(undefined4 *)(param_3 + 8),local_18);
      FUN_0042a938(param_2,local_18,&local_20.x);
      pt.y = local_20.y;
      pt.x = local_20.x;
      BVar3 = PtInRect((RECT *)(param_1 + 0x54),pt);
      if (BVar3 != 0) {
        return;
      }
    }
    local_2c = *(byte *)(param_1 + 0x48);
    if (local_2c == 0) {
      local_30 = *(UINT *)(param_1 + 0x68);
    }
    else {
      local_30 = *(UINT *)(param_1 + 0x70);
    }
    FUN_0042bd64(iVar2,0xb041,(uint)local_2c,&local_30);
    if ((local_2c == 0) || (local_30 != 0)) {
      FUN_00449954(param_1);
      *(byte *)(param_1 + 0x48) = local_2c;
      *(int *)(param_1 + 0x50) = iVar2;
      FUN_00449780(param_1,local_30,0);
    }
    else {
      *(byte *)(param_1 + 0x48) = local_2c;
      *(int *)(param_1 + 0x50) = iVar2;
      GetCursorPos(&local_28);
      FUN_00449b34(param_1,&local_28.x);
    }
  }
  return;
}



void FUN_004498e4(int param_1)

{
  tagPOINT tStack_c;
  
  FUN_004497b8(param_1);
  if (*(char *)(param_1 + 0x79) == '\0') {
    GetCursorPos(&tStack_c);
    FUN_00449b34(param_1,&tStack_c.x);
  }
  else if (*(char *)(param_1 + 0x79) == '\x01') {
    FUN_00449918(param_1);
  }
  return;
}



void FUN_00449918(int param_1)

{
  bool bVar1;
  HWND pHVar2;
  BOOL BVar3;
  int nCmdShow;
  
  if (*(int *)(param_1 + 0x74) != 0) {
    bVar1 = FUN_00431194(*(int *)(param_1 + 0x74));
    if (bVar1) {
      pHVar2 = (HWND)FUN_00430e98(*(int **)(param_1 + 0x74));
      BVar3 = IsWindowVisible(pHVar2);
      if (BVar3 != 0) {
        nCmdShow = 0;
        pHVar2 = (HWND)FUN_00430e98(*(int **)(param_1 + 0x74));
        ShowWindow(pHVar2,nCmdShow);
      }
    }
  }
  return;
}



void FUN_00449954(int param_1)

{
  if (*(int *)(param_1 + 0x50) != 0) {
    FUN_00449918(param_1);
    *(undefined4 *)(param_1 + 0x50) = 0;
    *(undefined1 *)(param_1 + 0x48) = 0;
    FUN_00447904();
    FUN_004497b8(param_1);
  }
  return;
}



int FUN_0044997c(char *param_1,int param_2,char param_3)

{
  char cVar1;
  
  do {
    if (param_2 == 0) {
      return 0;
    }
    param_2 = param_2 + -1;
    cVar1 = *param_1;
    param_1 = param_1 + 1;
  } while (param_3 == cVar1);
  return param_2;
}



int FUN_0044998c(void)

{
  char cVar1;
  HCURSOR hIcon;
  BOOL BVar2;
  LPBITMAPINFO ptVar3;
  uint uVar4;
  LPVOID pvVar5;
  char *pcVar6;
  int iVar7;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_54;
  undefined1 *puStack_50;
  undefined1 *puStack_4c;
  undefined4 uStack_48;
  ICONINFO *piconinfo;
  ICONINFO local_2c;
  int local_18;
  LPBITMAPINFO local_14;
  int local_10;
  int local_c;
  int local_8;
  
  local_8 = (**(code **)PTR_DAT_00475690)();
  piconinfo = &local_2c;
  hIcon = GetCursor();
  uStack_48 = 0x4499b2;
  BVar2 = GetIconInfo(hIcon,piconinfo);
  if (BVar2 != 0) {
    uStack_48 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_48;
    puStack_4c = (undefined1 *)0x4499d6;
    FUN_00419674(local_2c.hbmMask,&local_c,&local_10);
    puStack_4c = (undefined1 *)0x4499e1;
    ptVar3 = (LPBITMAPINFO)FUN_004081e8(local_c + local_10);
    puStack_50 = &LAB_00449a9f;
    uStack_54 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_54;
    pvVar5 = (LPVOID)((int)&(((tagBITMAPINFO *)(ptVar3->bmiColors + -10))->bmiHeader).biSize +
                     local_c);
    puStack_4c = &stack0xfffffffc;
    local_14 = ptVar3;
    cVar1 = FUN_0041972c(local_2c.hbmMask,(HPALETTE)0x0,ptVar3,pvVar5);
    if ((cVar1 != '\0') && ((local_14->bmiHeader).biBitCount == 1)) {
      iVar7 = (ptVar3->bmiHeader).biWidth;
      uVar4 = iVar7 * (uint)(ptVar3->bmiHeader).biBitCount + 0x1f & 0xffffffe0;
      if ((int)uVar4 < 0) {
        uVar4 = uVar4 + 7;
      }
      local_18 = (int)uVar4 >> 3;
      iVar7 = iVar7 * local_18;
      pcVar6 = (char *)((int)pvVar5 + (local_10 - iVar7));
      local_8 = FUN_0044997c(pcVar6,iVar7,-1);
      if ((local_8 == 0) && ((ptVar3->bmiHeader).biWidth * 2 <= (ptVar3->bmiHeader).biHeight)) {
        local_8 = FUN_0044997c(pcVar6 + -iVar7,iVar7,'\0');
      }
      local_8 = local_8 / local_18 - local_2c.yHotspot;
    }
    *in_FS_OFFSET = uStack_54;
    puStack_4c = &LAB_00449aa6;
    puStack_50 = (undefined1 *)0x449a9e;
    iVar7 = FUN_0040270c((int)local_14);
    return iVar7;
  }
  return local_8;
}



void FUN_00449ae0(undefined *param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  undefined4 *puVar1;
  undefined *puVar2;
  undefined4 uVar3;
  
  if (param_1 == (undefined *)0x0) {
    param_1 = PTR_PTR_00474908;
  }
  puVar1 = *(undefined4 **)(*(int *)(param_4 + -4) + 0x74);
  if ((puVar1 != (undefined4 *)0x0) &&
     (puVar2 = (undefined *)FUN_00402e9c(puVar1), param_1 == puVar2)) {
    return;
  }
  FUN_00402f54(*(int **)(*(int *)(param_4 + -4) + 0x74));
  uVar3 = (**(code **)(param_1 + 0x2c))(param_1,1,*(undefined4 *)(param_4 + -4));
  *(undefined4 *)(*(int *)(param_4 + -4) + 0x74) = uVar3;
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void FUN_00449b34(int param_1,int *param_2)

{
  char cVar1;
  undefined1 uVar2;
  int *piVar3;
  int iVar4;
  int *piVar5;
  LONG LVar6;
  undefined4 uVar7;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  DWORD extraout_ECX_02;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  LONG *pLVar8;
  tagRECT *ptVar9;
  undefined4 *in_FS_OFFSET;
  byte bVar10;
  undefined4 uStack_ac;
  undefined1 *puStack_a8;
  undefined1 *puStack_a4;
  undefined4 *local_94;
  int local_90;
  int local_8c;
  undefined4 local_88;
  LONG local_84 [4];
  tagRECT local_74;
  undefined4 local_64;
  undefined *local_60;
  int local_5c;
  int local_58;
  undefined4 local_54;
  int local_50;
  tagRECT local_4c;
  int local_3c;
  undefined4 local_38;
  UINT local_34;
  UINT local_30;
  undefined *local_2c;
  undefined4 local_28;
  bool local_21;
  tagPOINT local_20;
  int local_18;
  int local_14;
  POINT local_10;
  int local_8;
  
  bVar10 = 0;
  local_90 = 0;
  local_94 = (undefined4 *)0x0;
  local_10.x = *param_2;
  local_10.y = param_2[1];
  puStack_a4 = (undefined1 *)0x449b66;
  local_8 = param_1;
  FUN_004043b4((int)&local_64,(int)PTR_DAT_00440228);
  puStack_a8 = &LAB_00449ecc;
  uStack_ac = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_ac;
  *(undefined1 *)(local_8 + 0x48) = 0;
  puStack_a4 = &stack0xfffffffc;
  if ((*(char *)(local_8 + 0x78) != '\0') &&
     (puStack_a4 = &stack0xfffffffc, *(int *)(local_8 + 0x50) != 0)) {
    puStack_a4 = &stack0xfffffffc;
    cVar1 = FUN_004405c8();
    if (cVar1 != '\0') {
      piVar3 = FUN_004297f8(&local_10,CONCAT31((int3)((uint)extraout_EDX >> 8),1));
      iVar4 = thunk_FUN_00447781((int)piVar3);
      if (iVar4 == *(int *)(local_8 + 0x50)) {
        local_64 = *(undefined4 *)(local_8 + 0x50);
        local_5c = local_10.x;
        local_58 = local_10.y;
        iVar4 = FUN_0044998c();
        local_58 = local_58 + iVar4;
        local_54 = FUN_00446c48();
        local_50 = *(int *)(local_8 + 0x4c);
        FUN_0042a7c8(*(int *)(local_8 + 0x50),local_84);
        pLVar8 = local_84;
        ptVar9 = &local_4c;
        for (iVar4 = 4; iVar4 != 0; iVar4 = iVar4 + -1) {
          ptVar9->left = *pLVar8;
          pLVar8 = pLVar8 + (uint)bVar10 * -2 + 1;
          ptVar9 = (tagRECT *)((int)ptVar9 + ((uint)bVar10 * -2 + 1) * 4);
        }
        (**(code **)(**(int **)(local_8 + 0x50) + 0x3c))(*(int **)(local_8 + 0x50),&local_18);
        local_20.x = 0;
        local_20.y = 0;
        piVar3 = *(int **)(*(int *)(local_8 + 0x50) + 0x24);
        if (piVar3 == (int *)0x0) {
          piVar3 = *(int **)(local_8 + 0x50);
          piVar5 = FUN_004030cc(piVar3,(int)PTR_PTR_00427220);
          if (((char)piVar5 != '\0') && (piVar3[0x59] != 0)) {
            ClientToScreen((HWND)piVar3[0x59],&local_20);
          }
        }
        else {
          (**(code **)(*piVar3 + 0x3c))(piVar3,&local_20);
        }
        OffsetRect(&local_4c,local_20.x - local_18,local_20.y - local_14);
        FUN_0042a964(*(int **)(local_8 + 0x50),&local_10.x,&local_8c);
        local_3c = local_8c;
        local_38 = local_88;
        FUN_0044774c(*(int *)(local_8 + 0x50),(int *)&local_94);
        FUN_004281ac(local_94,&local_90);
        FUN_00403c74((int *)&local_2c,local_90);
        local_34 = 0;
        local_30 = *(UINT *)(local_8 + 100);
        local_60 = PTR_PTR_00474908;
        local_28 = 0;
        iVar4 = FUN_0042bd64(*(int *)(local_8 + 0x50),0xb030,0,&local_64);
        local_21 = iVar4 == 0;
        uVar7 = extraout_ECX;
        if ((iVar4 == 0) && (*(short *)(local_8 + 0x10a) != 0)) {
          (**(code **)(local_8 + 0x108))
                    (*(undefined4 *)(local_8 + 0x10c),&local_2c,&local_21,&local_64);
          uVar7 = extraout_ECX_00;
        }
        if ((local_21 == false) || (*(int *)(local_8 + 0x50) == 0)) {
          uVar2 = 0;
        }
        else {
          uVar2 = 1;
        }
        *(undefined1 *)(local_8 + 0x48) = uVar2;
        if ((*(char *)(local_8 + 0x48) != '\0') && (local_2c != (undefined *)0x0)) {
          FUN_00449ae0(local_60,local_8,uVar7,(int)&stack0xfffffffc);
          (**(code **)(**(int **)(local_8 + 0x74) + 0x68))
                    (*(int **)(local_8 + 0x74),*(undefined1 *)(*(int *)(local_8 + 0x50) + 0x4f));
          (**(code **)(**(int **)(local_8 + 0x74) + 0xc0))
                    (*(int **)(local_8 + 0x74),local_54,local_2c,&local_74,local_28);
          OffsetRect(&local_74,local_5c,local_58);
          cVar1 = FUN_00403130(*(int **)(local_8 + 0x74),extraout_EDX_00,extraout_ECX_01);
          if (cVar1 != '\0') {
            LVar6 = FUN_00418234(*(int **)(*(int *)(local_8 + 0x74) + 0x1f0),local_2c);
            local_74.left = local_74.left - (LVar6 + 5);
            LVar6 = FUN_00418234(*(int **)(*(int *)(local_8 + 0x74) + 0x1f0),local_2c);
            local_74.right = local_74.right - (LVar6 + 5);
          }
          FUN_0042a938(*(int **)(local_8 + 0x50),&local_4c.left,&local_8c);
          *(int *)(local_8 + 0x54) = local_8c;
          *(undefined4 *)(local_8 + 0x58) = local_88;
          FUN_0042a938(*(int **)(local_8 + 0x50),&local_4c.right,&local_8c);
          *(int *)(local_8 + 0x5c) = local_8c;
          *(undefined4 *)(local_8 + 0x60) = local_88;
          FUN_0042af4c(*(int *)(local_8 + 0x74),local_50);
          uVar7 = (**(code **)(**(int **)(local_8 + 0x74) + 0xbc))
                            (*(int **)(local_8 + 0x74),&local_74,local_2c,local_28);
          FUN_00447890(uVar7,extraout_EDX_01,extraout_ECX_02);
          if ((int)local_34 < 1) {
            FUN_00449780(local_8,local_30,1);
          }
          else {
            FUN_00449780(local_8,local_34,0);
          }
          goto LAB_00449ea0;
        }
      }
    }
  }
  if ((int)local_34 < 1) {
    FUN_00449954(local_8);
  }
  else {
    FUN_00449780(local_8,local_34,0);
  }
LAB_00449ea0:
  *in_FS_OFFSET = uStack_ac;
  puStack_a4 = &LAB_00449ed3;
  puStack_a8 = (undefined1 *)0x449ebd;
  FUN_00403c00((int *)&local_94,2);
  puStack_a8 = (undefined1 *)0x449ecb;
  FUN_00404480((int)&local_64,(int)PTR_DAT_00440228);
  return;
}



char FUN_00449edc(int param_1,undefined4 param_2,int *param_3)

{
  char cVar1;
  int iVar2;
  int iVar3;
  int *piVar4;
  undefined4 extraout_EDX;
  
  iVar3 = *(int *)(DAT_004767d4 + 0x60);
  if (iVar3 == 0) {
LAB_00449f07:
    iVar2 = *(int *)(param_1 + 0x38);
    if ((iVar3 != iVar2) && (iVar2 != 0)) {
      iVar3 = FUN_0042bd64(iVar2,param_2,0,param_3);
      if (iVar3 == 1) goto LAB_00449f27;
    }
    cVar1 = '\0';
  }
  else {
    iVar2 = FUN_0042bd64(iVar3,param_2,0,param_3);
    if (iVar2 != 1) goto LAB_00449f07;
LAB_00449f27:
    cVar1 = '\x01';
  }
  if (cVar1 == '\0') {
    piVar4 = FUN_004030cc(param_3,(int)PTR_PTR_00435828);
    if ((((char)piVar4 != '\0') && (*(char *)((int)param_3 + 0x59) != '\0')) &&
       ((char)param_3[0x14] != '\0')) {
      FUN_00436168(param_3,CONCAT31((int3)((uint)extraout_EDX >> 8),
                                    *(short *)((int)param_3 + 0x32) != 0));
    }
  }
  return cVar1;
}



uint FUN_00449f6c(int param_1,undefined4 param_2,uint param_3)

{
  uint local_8;
  
  local_8 = param_3 & 0xffffff00;
  if (*(short *)(param_1 + 0xaa) != 0) {
    param_1 = (**(code **)(param_1 + 0xa8))(*(undefined4 *)(param_1 + 0xac),param_2,&local_8);
  }
  return CONCAT31((int3)((uint)param_1 >> 8),(undefined1)local_8);
}



uint FUN_00449f94(int param_1,undefined4 param_2,uint param_3)

{
  uint local_8;
  
  local_8 = param_3 & 0xffffff00;
  if (*(short *)(param_1 + 0xb2) != 0) {
    param_1 = (**(code **)(param_1 + 0xb0))(*(undefined4 *)(param_1 + 0xb4),param_2,&local_8);
  }
  return CONCAT31((int3)((uint)param_1 >> 8),(undefined1)local_8);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0044a040(void)

{
  undefined4 uVar1;
  undefined4 *in_FS_OFFSET;
  undefined1 auStack_10 [12];
  
  uVar1 = *in_FS_OFFSET;
  *in_FS_OFFSET = auStack_10;
  _DAT_004767f4 = _DAT_004767f4 + 1;
  *in_FS_OFFSET = uVar1;
  return;
}



void FUN_0044b870(void)

{
  int *piVar1;
  int in_stack_00000004;
  POINT local_2c;
  int local_24;
  int local_20;
  int local_1c;
  int local_18;
  int local_14;
  int local_10;
  int local_c;
  int local_8;
  
  piVar1 = *(int **)(in_stack_00000004 + -4);
  local_c = piVar1[2];
  local_8 = piVar1[1];
  local_14 = *piVar1;
  local_10 = piVar1[3];
  FUN_00417520(*(int **)(*(int *)(in_stack_00000004 + -8) + 0x10),
               *(undefined4 *)(in_stack_00000004 + -0xc));
  local_2c.x = local_14;
  local_2c.y = local_10;
  local_24 = *piVar1;
  local_20 = piVar1[1];
  local_1c = local_c;
  local_18 = local_8;
  FUN_00417fd0(*(int **)(in_stack_00000004 + -8),&local_2c,2);
  FUN_00417520(*(int **)(*(int *)(in_stack_00000004 + -8) + 0x10),
               *(undefined4 *)(in_stack_00000004 + 0xc));
  local_1c = local_14 + -1;
  local_2c.x = local_c;
  local_2c.y = local_8;
  local_24 = piVar1[2];
  local_20 = piVar1[3];
  local_18 = local_10;
  local_14 = local_1c;
  FUN_00417fd0(*(int **)(in_stack_00000004 + -8),&local_2c,2);
  return;
}



void FUN_0044b934(int param_1,LPRECT param_2,undefined4 param_3,int param_4)

{
  FUN_0041762c(*(int **)(param_1 + 0x10),1);
  param_2->bottom = param_2->bottom + -1;
  param_2->right = param_2->right + -1;
  if (0 < param_4) {
    do {
      param_4 = param_4 + -1;
      FUN_0044b870();
      InflateRect(param_2,-1,-1);
    } while (0 < param_4);
  }
  param_2->bottom = param_2->bottom + 1;
  param_2->right = param_2->right + 1;
  return;
}



int * FUN_0044b994(int *param_1,char param_2,int *param_3)

{
  int *piVar1;
  int iVar2;
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined2 extraout_var;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00431ef0(param_1,'\0',param_3);
  param_1[0x10] = DAT_0044ba24 | param_1[0x10];
  piVar1 = FUN_0041a214((int *)PTR_PTR_00415ed4,'\x01',extraout_ECX_00);
  param_1[0x4a] = (int)piVar1;
  piVar1[3] = (int)param_1;
  piVar1[2] = (int)FUN_0044bd30;
  piVar1[7] = (int)param_1;
  iVar2 = FUN_00403148(param_1,CONCAT22(extraout_var,0xffcd));
  piVar1[6] = iVar2;
  FUN_0042a618(param_1,0x69);
  FUN_0042a5f8(param_1,0x69);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



void FUN_0044ba74(int *param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  undefined4 uVar4;
  int iVar5;
  int iVar6;
  
  if ((char)param_1[0x4e] != '\0') {
    (**(code **)(*param_1 + 0x40))(param_1,param_2);
    return;
  }
  if (*(char *)((int)param_1 + 0x139) == '\0') {
    uVar3 = FUN_0041a734(param_1[0x4a]);
    uVar4 = FUN_0041a71c(param_1[0x4a]);
    FUN_0040ea70(0,0,uVar4,param_2,uVar3);
  }
  else {
    iVar1 = FUN_0041a734(param_1[0x4a]);
    iVar2 = FUN_0041a734(param_1[0x4a]);
    iVar5 = param_1[0xf] - iVar2 >> 1;
    if (iVar5 < 0) {
      iVar5 = iVar5 + (uint)((param_1[0xf] - iVar2 & 1U) != 0);
    }
    iVar2 = FUN_0041a71c(param_1[0x4a]);
    iVar6 = param_1[0xe] - iVar2 >> 1;
    if (iVar6 < 0) {
      iVar6 = iVar6 + (uint)((param_1[0xe] - iVar2 & 1U) != 0);
    }
    iVar2 = FUN_0041a71c(param_1[0x4a]);
    FUN_0040ea8c(iVar6,iVar5,iVar2,param_2,iVar1);
  }
  return;
}



undefined4 FUN_0044bbd4(int *param_1)

{
  int *piVar1;
  bool bVar2;
  int iVar3;
  int *piVar4;
  HWND hWnd;
  undefined4 uVar5;
  UINT Msg;
  WPARAM wParam;
  LPARAM lParam;
  
  uVar5 = 0;
  piVar1 = *(int **)(param_1[0x4a] + 4);
  if ((((*(char *)((int)param_1 + 0x47) != '\0') && ((*(byte *)(param_1 + 8) & 1) == 0)) &&
      (piVar1 != (int *)0x0)) && (*(char *)((int)piVar1 + 0x1a) != '\0')) {
    iVar3 = (**(code **)(*piVar1 + 0x24))();
    if (iVar3 == 0) {
      *(undefined1 *)((int)piVar1 + 0x1a) = 0;
    }
    else {
      piVar4 = FUN_00440984(param_1);
      if ((piVar4 != (int *)0x0) && (*(char *)((int)piVar4 + 0x216) != '\0')) {
        bVar2 = FUN_00431194((int)piVar4);
        if (bVar2) {
          if ((char)param_1[0x4f] == '\0') {
            lParam = 0;
            wParam = 0;
            Msg = 0x30f;
            hWnd = (HWND)FUN_00430e98(piVar4);
            PostMessageA(hWnd,Msg,wParam,lParam);
          }
          else {
            FUN_0042bd64((int)piVar4,0x30f,0,0);
          }
          uVar5 = 1;
          *(undefined1 *)((int)piVar1 + 0x1a) = 0;
        }
      }
    }
  }
  return uVar5;
}



void FUN_0044bc6c(int *param_1,undefined4 param_2,undefined1 param_3,undefined4 param_4,
                 undefined4 param_5,undefined4 param_6,undefined1 param_7)

{
  undefined4 uVar1;
  undefined3 in_register_00000005;
  undefined3 extraout_var;
  undefined3 extraout_var_00;
  
  if ((*(byte *)((int)param_1 + 0x13a) & (byte)param_6) != 0) {
    uVar1 = FUN_0044bbd4(param_1);
    if ((char)uVar1 == '\0') {
      (**(code **)(*param_1 + 0x84))();
      in_register_00000005 = extraout_var_00;
    }
    else {
      (**(code **)(*param_1 + 0x80))();
      in_register_00000005 = extraout_var;
    }
  }
  if (*(short *)((int)param_1 + 0x132) != 0) {
    (*(code *)param_1[0x4c])
              (param_1[0x4d],param_2,CONCAT31(in_register_00000005,param_3),param_4,param_5,param_6,
               param_7);
  }
  return;
}



void FUN_0044bd30(int *param_1)

{
  int *piVar1;
  char cVar2;
  int iVar3;
  undefined4 uVar4;
  undefined4 uVar5;
  int *piVar6;
  
  if ((char)param_1[0x13] != '\0') {
    iVar3 = FUN_0041a71c(param_1[0x4a]);
    if (0 < iVar3) {
      iVar3 = FUN_0041a734(param_1[0x4a]);
      if (0 < iVar3) {
        uVar4 = FUN_0041a71c(param_1[0x4a]);
        uVar5 = FUN_0041a734(param_1[0x4a]);
        (**(code **)(*param_1 + 0x7c))(param_1,param_1[0xc],param_1[0xd],uVar5,uVar4);
      }
    }
  }
  piVar1 = *(int **)(param_1[0x4a] + 4);
  if (piVar1 == (int *)0x0) {
    param_1[0x10] = ~DAT_0044be44 & param_1[0x10];
    goto LAB_0044be30;
  }
  piVar6 = FUN_004030cc(piVar1,(int)PTR_PTR_0041603c);
  if ((char)piVar6 == '\0') {
    piVar6 = FUN_004030cc(piVar1,(int)PTR_PTR_004162b8);
    if ((char)piVar6 == '\0') {
      (**(code **)(*piVar1 + 0x3c))(piVar1,*(undefined1 *)((int)param_1 + 0x13b));
    }
  }
  cVar2 = (**(code **)(*piVar1 + 0x28))();
  if (cVar2 == '\0') {
    if ((char)param_1[0x4e] == '\0') {
      iVar3 = (**(code **)(*piVar1 + 0x2c))();
      if (param_1[0xe] <= iVar3) {
        iVar3 = (**(code **)(*piVar1 + 0x20))();
        if (param_1[0xf] <= iVar3) goto LAB_0044bde9;
      }
      goto LAB_0044bdf6;
    }
LAB_0044bde9:
    param_1[0x10] = DAT_0044be44 | param_1[0x10];
  }
  else {
LAB_0044bdf6:
    param_1[0x10] = ~DAT_0044be44 & param_1[0x10];
  }
  uVar4 = FUN_0044bbd4(param_1);
  if (((char)uVar4 != '\0') && ((char)param_1[0x4f] != '\0')) {
    (**(code **)(*param_1 + 0x80))();
  }
LAB_0044be30:
  if ((char)param_1[0x4f] == '\0') {
    (**(code **)(*param_1 + 0x74))();
  }
  return;
}



void FUN_0044bf44(undefined4 *param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int *piVar1;
  undefined4 local_34;
  undefined4 local_30;
  undefined4 local_2c;
  undefined4 local_28;
  LONG local_24;
  LONG local_20;
  POINT local_1c;
  undefined4 local_14;
  undefined4 local_10;
  undefined4 local_c;
  undefined4 local_8;
  
  piVar1 = *(int **)(*(int *)(param_4 + -4) + 0x120);
  FUN_00417520((int *)piVar1[4],*(undefined4 *)(param_4 + -8));
  FUN_0040ea58(*param_1,param_1[3],&local_24);
  local_1c.x = local_24;
  local_1c.y = local_20;
  FUN_0040ea58(*param_1,param_1[1],&local_2c);
  local_14 = local_2c;
  local_10 = local_28;
  FUN_0040ea58(param_1[2],param_1[1],&local_34);
  local_c = local_34;
  local_8 = local_30;
  FUN_00417fd0(piVar1,&local_1c,2);
  FUN_00417520((int *)piVar1[4],*(undefined4 *)(param_4 + -0xc));
  FUN_0040ea58(param_1[2],param_1[1],&local_24);
  local_1c.x = local_24;
  local_1c.y = local_20;
  FUN_0040ea58(param_1[2],param_1[3],&local_2c);
  local_14 = local_2c;
  local_10 = local_28;
  FUN_0040ea58(*param_1,param_1[3],&local_34);
  local_c = local_34;
  local_8 = local_30;
  FUN_00417fd0(piVar1,&local_1c,2);
  return;
}



void FUN_0044c034(undefined4 param_1,int param_2,int param_3,int param_4,int param_5,int param_6)

{
  int *piVar1;
  
  piVar1 = *(int **)(*(int *)(param_6 + -4) + 0x120);
  FUN_00417520((int *)piVar1[4],param_1);
  FUN_00417f4c(piVar1,param_2,param_3);
  FUN_00417eec(piVar1,param_5,param_4);
  return;
}



void FUN_0044c074(int *param_1)

{
  int *piVar1;
  undefined4 uVar2;
  int iVar3;
  int iVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_ECX_03;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 extraout_EDX_03;
  undefined1 *puVar5;
  undefined1 *puVar6;
  undefined1 *puVar7;
  undefined4 local_20 [4];
  undefined4 local_10;
  undefined4 local_c;
  int *local_8;
  
  puVar5 = &stack0xfffffffc;
  puVar6 = &stack0xfffffffc;
  puVar7 = &stack0xfffffffc;
  piVar1 = (int *)param_1[0x48];
  local_8 = param_1;
  if ((*(byte *)(param_1 + 8) & 0x10) != 0) {
    if (*(char *)((int)param_1 + 0x129) == '\x06') {
      FUN_004175fc((int *)piVar1[4],2);
      FUN_004175e0((int *)piVar1[4],CONCAT31((int3)((uint)extraout_EDX >> 8),0xe),extraout_ECX);
      FUN_00417520((int *)piVar1[4],0xffd8ce);
      FUN_00417920((int *)piVar1[5],'\x01');
      iVar3 = FUN_0042a824(local_8);
      iVar4 = FUN_0042a868(local_8);
      FUN_00418008(piVar1,0,0,iVar4,iVar3);
      return;
    }
    FUN_004175fc((int *)piVar1[4],0);
    FUN_004175e0((int *)piVar1[4],CONCAT31((int3)((uint)extraout_EDX_00 >> 8),4),extraout_ECX_00);
    FUN_00417520((int *)piVar1[4],0);
    FUN_00417920((int *)piVar1[5],'\0');
  }
  FUN_0041762c((int *)piVar1[4],1);
  if ((char)local_8[0x4a] == '\0') {
    local_c = 0x80000010;
    local_10 = 0x80000014;
  }
  else {
    local_c = 0x80000014;
    local_10 = 0x80000010;
  }
  uVar2 = local_c;
  switch(*(undefined1 *)((int)local_8 + 0x129)) {
  case 0:
    FUN_0040ea70(0,0,local_8[0xe] + -1,local_20,local_8[0xf] + -1);
    FUN_0044bf44(local_20,extraout_EDX_01,extraout_ECX_01,(int)puVar5);
    break;
  case 1:
    local_c = local_10;
    FUN_0040ea70(1,1,local_8[0xe] + -1,local_20,local_8[0xf] + -1);
    FUN_0044bf44(local_20,extraout_EDX_02,extraout_ECX_02,(int)puVar6);
    local_10 = uVar2;
    local_c = uVar2;
    FUN_0040ea70(0,0,local_8[0xe] + -2,local_20,local_8[0xf] + -2);
    FUN_0044bf44(local_20,extraout_EDX_03,extraout_ECX_03,(int)puVar7);
    break;
  case 2:
    FUN_0044c034(local_c,0,0,0,local_8[0xe],(int)&stack0xfffffffc);
    FUN_0044c034(local_10,0,1,1,local_8[0xe],(int)&stack0xfffffffc);
    break;
  case 3:
    FUN_0044c034(local_c,0,local_8[0xf] + -2,local_8[0xf] + -2,local_8[0xe],(int)&stack0xfffffffc);
    FUN_0044c034(local_10,0,local_8[0xf] + -1,local_8[0xf] + -1,local_8[0xe],(int)&stack0xfffffffc);
    break;
  case 4:
    FUN_0044c034(local_c,0,0,local_8[0xf],0,(int)&stack0xfffffffc);
    FUN_0044c034(local_10,1,0,local_8[0xf],1,(int)&stack0xfffffffc);
    break;
  case 5:
    FUN_0044c034(local_c,local_8[0xe] + -2,0,local_8[0xf],local_8[0xe] + -2,(int)&stack0xfffffffc);
    FUN_0044c034(local_10,local_8[0xe] + -1,0,local_8[0xf],local_8[0xe] + -1,(int)&stack0xfffffffc);
  }
  return;
}



int * FUN_0044c2fc(int *param_1,char param_2,int *param_3)

{
  HWND pHVar1;
  int *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00414460(param_1,'\0',param_3);
  *(undefined1 *)(param_1 + 0xe) = 1;
  param_1[9] = 1000;
  pHVar1 = FUN_0044075c();
  param_1[10] = (int)pHVar1;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_0044c384(int *param_1,UINT *param_2,undefined4 param_3)

{
  UINT UVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar2;
  
  if (*param_2 == 0x113) {
    uVar2 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffffe0;
    FUN_00403130(param_1,param_2,param_3);
    *in_FS_OFFSET = uVar2;
  }
  else {
    UVar1 = DefWindowProcA((HWND)param_1[10],*param_2,param_2[1],param_2[2]);
    param_2[3] = UVar1;
  }
  return;
}



void FUN_0044c3f8(int param_1)

{
  UINT_PTR UVar1;
  int *piVar2;
  undefined4 unaff_EBX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  undefined4 *local_8;
  
  puStack_14 = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  puStack_18 = &LAB_0044c477;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  KillTimer(*(HWND *)(param_1 + 0x28),1);
  if (((*(UINT *)(param_1 + 0x24) != 0) && (*(char *)(param_1 + 0x38) != '\0')) &&
     (*(short *)(param_1 + 0x32) != 0)) {
    UVar1 = SetTimer(*(HWND *)(param_1 + 0x28),1,*(UINT *)(param_1 + 0x24),(TIMERPROC)0x0);
    if (UVar1 == 0) {
      FUN_004054e4((undefined4 *)PTR_PTR_004758dc,(int *)&local_8);
      piVar2 = FUN_0040aa10((int *)PTR_DAT_0040dbec,'\x01',local_8);
      FUN_004036ac(piVar2);
    }
  }
  *in_FS_OFFSET = unaff_EBX;
  local_8 = (undefined4 *)0x44c476;
  FUN_00403bdc((int *)&local_8);
  return;
}



int * FUN_0044c4d0(int *param_1,char param_2,int *param_3)

{
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_004327fc(param_1,'\0',param_3);
  param_1[0x10] = DAT_0044c564;
  FUN_0042a5f8(param_1,0xb9);
  FUN_0042a618(param_1,0x29);
  *(undefined1 *)((int)param_1 + 0x207) = 2;
  FUN_0044c8dc(param_1,2);
  FUN_0044c8f8(param_1,1);
  *(undefined1 *)(param_1 + 0x81) = 0;
  FUN_0042af4c((int)param_1,-0x7ffffff1);
  *(undefined1 *)((int)param_1 + 0x205) = 1;
  FUN_00431124(param_1,1,extraout_ECX_00);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_0044c718(char param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  *(undefined4 *)(param_4 + -4) = 0x80000014;
  if (param_1 == '\x01') {
    *(undefined4 *)(param_4 + -4) = 0x80000010;
  }
  *(undefined4 *)(param_4 + -8) = 0x80000010;
  if (param_1 == '\x01') {
    *(undefined4 *)(param_4 + -8) = 0x80000014;
  }
  return;
}



void FUN_0044c8dc(int *param_1,undefined1 param_2)

{
  *(undefined1 *)((int)param_1 + 0x1fa) = param_2;
  FUN_0042d990(param_1);
  (**(code **)(*param_1 + 0x74))();
  return;
}



void FUN_0044c8f8(int *param_1,int param_2)

{
  param_1[0x7f] = param_2;
  FUN_0042d990(param_1);
  (**(code **)(*param_1 + 0x74))();
  return;
}



void FUN_0044c9a4(int *param_1,int param_2)

{
  char cVar1;
  undefined1 *puVar2;
  int iVar3;
  int *piVar4;
  int *piVar5;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_34;
  undefined1 *puStack_30;
  undefined1 *puStack_2c;
  int local_1c [4];
  int local_c;
  int *local_8;
  
  puStack_2c = &stack0xfffffffc;
  local_c = param_2;
  local_8 = param_1;
  if ((char)param_1[0x13] == '\0') {
    puStack_2c = (undefined1 *)0x44cad4;
    FUN_0042f980(param_1,param_2);
  }
  else {
    *(undefined1 *)(param_1 + 0x7e) = 1;
    puStack_30 = &LAB_0044cac2;
    uStack_34 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_34;
    piVar4 = (int *)(*(int *)(param_2 + 4) + 0x44);
    piVar5 = local_1c;
    for (iVar3 = 4; iVar3 != 0; iVar3 = iVar3 + -1) {
      *piVar5 = *piVar4;
      piVar4 = piVar4 + 1;
      piVar5 = piVar5 + 1;
    }
    cVar1 = *(char *)((int)local_8 + 0x4b);
    if (cVar1 == '\x01') {
      puVar2 = &stack0xfffffffc;
      if (local_8[0xf] == 0) {
        FUN_0042a618(local_8,local_1c[3] - local_1c[1]);
        puVar2 = puStack_2c;
      }
    }
    else if (cVar1 == '\x02') {
      puVar2 = &stack0xfffffffc;
      if (local_8[0xf] == 0) {
        puStack_2c = &stack0xfffffffc;
        (**(code **)(*local_8 + 0x7c))
                  (local_8,local_8[0xc],local_8[0xd] - (local_1c[3] - local_1c[1]),
                   local_1c[3] - local_1c[1],local_8[0xe]);
        puVar2 = puStack_2c;
      }
    }
    else if (cVar1 == '\x03') {
      puVar2 = &stack0xfffffffc;
      if (local_8[0xe] == 0) {
        puStack_2c = &stack0xfffffffc;
        FUN_0042a5f8(local_8,local_1c[2] - local_1c[0]);
        puVar2 = puStack_2c;
      }
    }
    else {
      puVar2 = &stack0xfffffffc;
      if ((cVar1 == '\x04') && (puVar2 = &stack0xfffffffc, local_8[0xe] == 0)) {
        puStack_2c = &stack0xfffffffc;
        (**(code **)(*local_8 + 0x7c))
                  (local_8,local_8[0xc] - (local_1c[2] - local_1c[0]),local_8[0xd],local_8[0xf],
                   local_1c[2] - local_1c[0]);
        puVar2 = puStack_2c;
      }
    }
    puStack_2c = puVar2;
    FUN_0042f980(local_8,local_c);
    FUN_0040374c();
  }
  return;
}



undefined4 FUN_0044cadc(int *param_1,undefined4 param_2,undefined4 param_3)

{
  char cVar1;
  undefined3 extraout_var;
  
  if (((char)param_1[0x7e] == '\0') &&
     (cVar1 = FUN_004319a8(param_1,param_2,param_3), cVar1 != '\0')) {
    return CONCAT31(extraout_var,1);
  }
  return 0;
}



int * FUN_0044cb08(int *param_1,char param_2,int *param_3)

{
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00431ef0(param_1,'\0',param_3);
  *(undefined1 *)(param_1 + 0x4b) = 1;
  FUN_0042a3ac(param_1,CONCAT31((int3)((uint)extraout_EDX >> 8),3),extraout_ECX_00);
  FUN_0042a5f8(param_1,3);
  FUN_0042afb0((int)param_1,-0xe);
  param_1[0x52] = 0x1e;
  *(undefined1 *)(param_1 + 0x5a) = 3;
  param_1[0x58] = -1;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_0044cbb0(int param_1)

{
  HWND hWnd;
  HDC pHVar1;
  int *piVar2;
  undefined4 uVar3;
  HGDIOBJ pvVar4;
  undefined4 extraout_ECX;
  HRGN hrgnClip;
  DWORD flags;
  
  flags = 0x412;
  hrgnClip = (HRGN)0x0;
  hWnd = (HWND)FUN_00430e98(*(int **)(param_1 + 0x24));
  pHVar1 = GetDCEx(hWnd,hrgnClip,flags);
  *(HDC *)(param_1 + 0x140) = pHVar1;
  if (*(char *)(param_1 + 0x168) == '\x03') {
    if (*(int *)(param_1 + 0x130) == 0) {
      piVar2 = FUN_00417658((int *)PTR_PTR_00415ba4,'\x01',extraout_ECX);
      *(int **)(param_1 + 0x130) = piVar2;
      uVar3 = FUN_0041e5bc(0,0xffffff);
      FUN_004177d8(piVar2,uVar3);
    }
    pvVar4 = (HGDIOBJ)FUN_00417838(*(int *)(param_1 + 0x130));
    pvVar4 = SelectObject(*(HDC *)(param_1 + 0x140),pvVar4);
    *(HGDIOBJ *)(param_1 + 0x164) = pvVar4;
  }
  return;
}



void FUN_0044cc2c(int param_1)

{
  int local_c;
  int local_8;
  
  *(byte *)(param_1 + 0x144) = *(byte *)(param_1 + 0x144) ^ 1;
  FUN_0040ea58(*(undefined4 *)(param_1 + 0x30),*(undefined4 *)(param_1 + 0x34),&local_c);
  if ((byte)(*(char *)(param_1 + 0x4b) - 3U) < 2) {
    local_c = *(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x16c);
  }
  else {
    local_8 = *(int *)(param_1 + 0x34) + *(int *)(param_1 + 0x16c);
  }
  PatBlt(*(HDC *)(param_1 + 0x140),local_c,local_8,*(int *)(param_1 + 0x38),*(int *)(param_1 + 0x3c)
         ,0x5a0049);
  return;
}



void FUN_0044cc98(int param_1)

{
  HWND hWnd;
  HDC hDC;
  
  if (*(HGDIOBJ *)(param_1 + 0x164) != (HGDIOBJ)0x0) {
    SelectObject(*(HDC *)(param_1 + 0x140),*(HGDIOBJ *)(param_1 + 0x164));
  }
  hDC = *(HDC *)(param_1 + 0x140);
  hWnd = (HWND)FUN_00430e98(*(int **)(param_1 + 0x24));
  ReleaseDC(hWnd,hDC);
  if (*(int **)(param_1 + 0x130) != (int *)0x0) {
    FUN_00402f54(*(int **)(param_1 + 0x130));
    *(undefined4 *)(param_1 + 0x130) = 0;
  }
  return;
}



int * FUN_0044cce0(int param_1)

{
  POINT pt;
  char cVar1;
  int iVar2;
  int *piVar3;
  BOOL BVar4;
  int iVar5;
  int local_28;
  int local_24;
  RECT RStack_20;
  
  FUN_0040ea58(*(undefined4 *)(param_1 + 0x30),*(undefined4 *)(param_1 + 0x34),&local_28);
  cVar1 = *(char *)(param_1 + 0x4b);
  if (cVar1 == '\x01') {
    local_24 = local_24 + -1;
  }
  else if (cVar1 == '\x02') {
    local_24 = local_24 + *(int *)(param_1 + 0x3c);
  }
  else if (cVar1 == '\x03') {
    local_28 = local_28 + -1;
  }
  else {
    if (cVar1 != '\x04') {
      return (int *)0x0;
    }
    local_28 = local_28 + *(int *)(param_1 + 0x38);
  }
  iVar2 = FUN_0042de00(*(int *)(param_1 + 0x24));
  if (-1 < iVar2 + -1) {
    iVar5 = 0;
    do {
      piVar3 = (int *)FUN_0042ddc4(*(int *)(param_1 + 0x24),iVar5);
      if ((*(char *)((int)piVar3 + 0x47) != '\0') &&
         (cVar1 = (**(code **)(*piVar3 + 0x4c))(), cVar1 != '\0')) {
        FUN_0042a7c8((int)piVar3,&RStack_20.left);
        if (RStack_20.right == RStack_20.left) {
          if ((*(char *)(param_1 + 0x4b) == '\x01') || (*(char *)(param_1 + 0x4b) == '\x03')) {
            RStack_20.left = RStack_20.left + -1;
          }
          else {
            RStack_20.right = RStack_20.right + 1;
          }
        }
        if (RStack_20.bottom == RStack_20.top) {
          if ((*(char *)(param_1 + 0x4b) == '\x01') || (*(char *)(param_1 + 0x4b) == '\x03')) {
            RStack_20.top = RStack_20.top + -1;
          }
          else {
            RStack_20.bottom = RStack_20.bottom + 1;
          }
        }
        pt.y = local_24;
        pt.x = local_28;
        BVar4 = PtInRect(&RStack_20,pt);
        if (BVar4 != 0) {
          return piVar3;
        }
      }
      iVar5 = iVar5 + 1;
      iVar2 = iVar2 + -1;
    } while (iVar2 != 0);
  }
  return (int *)0x0;
}



void FUN_0044cdcc(int param_1)

{
  FUN_0042a2a4(param_1);
  if ((*(short *)(param_1 + 0x68) == -0xf) || (*(short *)(param_1 + 0x68) == -0xe)) {
    if ((byte)(*(char *)(param_1 + 0x4b) - 1U) < 2) {
      FUN_0042afb0(param_1,-0xf);
    }
    else {
      FUN_0042afb0(param_1,-0xe);
    }
  }
  return;
}



void FUN_0044d15c(int *param_1)

{
  char cVar1;
  int iVar2;
  int *piVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  
  iVar2 = param_1[0x54];
  if (iVar2 != param_1[0x58]) {
    cVar1 = *(char *)((int)param_1 + 0x4b);
    if (cVar1 == '\x01') {
      puStack_10 = (undefined1 *)0x44d1c0;
      FUN_0042a618((int *)param_1[0x4d],iVar2);
    }
    else {
      if (cVar1 == '\x02') {
        puStack_10 = (undefined1 *)0x44d23d;
        FUN_0042d968(param_1[9]);
        puStack_14 = &LAB_0044d298;
        uStack_18 = *in_FS_OFFSET;
        *in_FS_OFFSET = &uStack_18;
        piVar3 = (int *)param_1[0x4d];
        puStack_10 = &stack0xfffffffc;
        FUN_0042a5d4(piVar3,(piVar3[0xf] - param_1[0x54]) + piVar3[0xd]);
        FUN_0042a618((int *)param_1[0x4d],param_1[0x54]);
        *in_FS_OFFSET = uStack_18;
        puStack_10 = (undefined1 *)0x44d29f;
        puStack_14 = (undefined1 *)0x44d297;
        FUN_0042d970((int *)param_1[9]);
        return;
      }
      if (cVar1 == '\x03') {
        puStack_10 = (undefined1 *)0x44d1ab;
        FUN_0042a5f8((int *)param_1[0x4d],iVar2);
      }
      else if (cVar1 == '\x04') {
        puStack_10 = (undefined1 *)0x44d1d0;
        FUN_0042d968(param_1[9]);
        puStack_14 = &LAB_0044d22b;
        uStack_18 = *in_FS_OFFSET;
        *in_FS_OFFSET = &uStack_18;
        piVar3 = (int *)param_1[0x4d];
        puStack_10 = &stack0xfffffffc;
        FUN_0042a5b4(piVar3,(piVar3[0xe] - param_1[0x54]) + piVar3[0xc]);
        FUN_0042a5f8((int *)param_1[0x4d],param_1[0x54]);
        *in_FS_OFFSET = uStack_18;
        puStack_10 = (undefined1 *)0x44d29f;
        puStack_14 = (undefined1 *)0x44d22a;
        FUN_0042d970((int *)param_1[9]);
        return;
      }
    }
    puStack_10 = (undefined1 *)0x44d2aa;
    (**(code **)(*param_1 + 0x80))();
    if (*(short *)((int)param_1 + 0x17a) != 0) {
      puStack_10 = (undefined1 *)0x44d2c9;
      (*(code *)param_1[0x5e])(param_1[0x5f],param_1);
    }
    param_1[0x58] = param_1[0x54];
  }
  return;
}



void FUN_0044d2e0(int param_1,int param_2,int param_3,int *param_4,int *param_5)

{
  char cVar1;
  int iVar2;
  
  cVar1 = *(char *)(param_1 + 0x4b);
  if ((byte)(cVar1 - 3U) < 2) {
    *param_4 = param_2 - *(int *)(param_1 + 0x138);
  }
  else {
    *param_4 = param_3 - *(int *)(param_1 + 0x13c);
  }
  iVar2 = 0;
  if (cVar1 == '\x01') {
    iVar2 = *(int *)(*(int *)(param_1 + 0x134) + 0x3c) + *param_4;
  }
  else if (cVar1 == '\x02') {
    iVar2 = *(int *)(*(int *)(param_1 + 0x134) + 0x3c) - *param_4;
  }
  else if (cVar1 == '\x03') {
    iVar2 = *(int *)(*(int *)(param_1 + 0x134) + 0x38) + *param_4;
  }
  else if (cVar1 == '\x04') {
    iVar2 = *(int *)(*(int *)(param_1 + 0x134) + 0x38) - *param_4;
  }
  *param_5 = iVar2;
  if (iVar2 < *(int *)(param_1 + 0x148)) {
    *param_5 = *(int *)(param_1 + 0x148);
  }
  else if (*(int *)(param_1 + 0x14c) < iVar2) {
    *param_5 = *(int *)(param_1 + 0x14c);
  }
  if (iVar2 != *param_5) {
    if ((cVar1 == '\x02') || (cVar1 == '\x04')) {
      iVar2 = iVar2 - *param_5;
    }
    else {
      iVar2 = *param_5 - iVar2;
    }
    *param_4 = *param_4 + iVar2;
  }
  return;
}



void FUN_0044d3b4(int param_1,int param_2,int param_3)

{
  FUN_0044d2e0(param_1,param_2,param_3,(int *)(param_1 + 0x16c),(int *)(param_1 + 0x150));
  return;
}



void FUN_0044d474(int *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
                 undefined4 param_5)

{
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  FUN_0042c3e0((int)param_1,param_2,param_3,param_4,param_5);
  if (param_1[0x4d] != 0) {
    if (((char)param_1[0x5a] == '\x01') || ((char)param_1[0x5a] == '\x03')) {
      FUN_0044cc2c((int)param_1);
    }
    FUN_0044d15c(param_1);
    FUN_00403130(param_1,extraout_EDX,extraout_ECX);
  }
  return;
}



void FUN_0044d4c8(int *param_1,undefined4 param_2,short *param_3,undefined1 param_4)

{
  if (*param_3 == 0x1b) {
    FUN_00403130(param_1,param_2,param_3);
  }
  else if (*(short *)((int)param_1 + 0x15a) != 0) {
    (*(code *)param_1[0x56])(param_1[0x57],param_2,param_3,param_4);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0044d580(void)

{
  undefined4 uVar1;
  undefined4 *in_FS_OFFSET;
  undefined1 auStack_10 [12];
  
  uVar1 = *in_FS_OFFSET;
  *in_FS_OFFSET = auStack_10;
  _DAT_0047680c = _DAT_0047680c + 1;
  *in_FS_OFFSET = uVar1;
  return;
}



void FUN_0044dcc0(HWND param_1)

{
  int iVar1;
  int iVar2;
  undefined1 *puVar3;
  uint uVar4;
  int cx;
  int cy;
  UINT uFlags;
  tagRECT local_1c;
  
  GetWindowRect(param_1,&local_1c);
  if (*(int **)(*(int *)PTR_DAT_004757c0 + 0x38) == (int *)0x0) {
    FUN_00446c84(*(int *)PTR_DAT_004758e0,0);
  }
  else {
    FUN_004435e4(*(int **)(*(int *)PTR_DAT_004757c0 + 0x38));
  }
  uFlags = 0x15;
  cy = 0;
  cx = 0;
  iVar1 = FUN_004469f8();
  iVar2 = FUN_004469d4();
  iVar1 = iVar1 + ((iVar2 - local_1c.bottom) + local_1c.top) / 3;
  puVar3 = FUN_004469b4();
  iVar2 = FUN_00446a18();
  uVar4 = (iVar2 - local_1c.right) + local_1c.left;
  iVar2 = (int)uVar4 >> 1;
  if (iVar2 < 0) {
    iVar2 = iVar2 + (uint)((uVar4 & 1) != 0);
  }
  SetWindowPos(param_1,(HWND)0x0,(int)(puVar3 + iVar2),iVar1,cx,cy,uFlags);
  return;
}



int * FUN_0044ddc0(int *param_1,char param_2,int *param_3)

{
  undefined1 *puVar1;
  int *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00414460(param_1,'\0',param_3);
  *(undefined1 *)(param_1 + 9) = 1;
  puVar1 = FUN_004406a0();
  param_1[0xd] = (int)puVar1;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_0044de08(int *param_1,char param_2)

{
  int *piVar1;
  byte extraout_DL;
  
  piVar1 = FUN_004032b4(param_1,param_2);
  if (piVar1[0xd] != 0) {
    FUN_00440738(piVar1[0xd]);
  }
  FUN_004144ac(piVar1,extraout_DL & 0xfc);
  if ('\0' < (char)extraout_DL) {
    FUN_004032a4(piVar1);
  }
  return;
}



void FUN_0044dee8(int *param_1)

{
  (**(code **)(*param_1 + -0x14))();
  return;
}



undefined4 FUN_0044e024(void)

{
  LONG LVar1;
  HWND pHVar2;
  HWND in_stack_00000004;
  int in_stack_00000008;
  WPARAM in_stack_0000000c;
  int in_stack_00000010;
  
  if (in_stack_00000008 == 0x110) {
    *(HWND *)(DAT_00474a5c + 0x30) = in_stack_00000004;
    LVar1 = SetWindowLongA(in_stack_00000004,-4,*(LONG *)(DAT_00474a5c + 0x34));
    *(LONG *)(DAT_00474a5c + 0x28) = LVar1;
    CallWindowProcA(*(WNDPROC *)(DAT_00474a5c + 0x34),in_stack_00000004,0x110,in_stack_0000000c,
                    in_stack_00000010);
    DAT_00474a5c = 0;
  }
  else if ((in_stack_00000008 == 0x4e) && (*(int *)(in_stack_00000010 + 8) == -0x259)) {
    pHVar2 = (HWND)GetWindowLongA(in_stack_00000004,-8);
    FUN_0044dcc0(pHVar2);
  }
  return 0;
}



undefined4 FUN_0044e14c(int *param_1,int param_2)

{
  undefined4 uVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  FUN_0044e73c((int)param_1,param_2);
  uVar1 = FUN_00403130(param_1,extraout_EDX,extraout_ECX);
  (**(code **)(*(int *)param_1[0x1d] + 0x40))();
  return uVar1;
}



void FUN_0044e378(undefined4 *param_1,int *param_2)

{
  byte *pbVar1;
  char *pcVar2;
  
  FUN_00403bdc(param_2);
  if (param_1 != (undefined4 *)0x0) {
    FUN_00403ea8(param_2,param_1,(undefined4 *)&DAT_0044e3c4);
    pbVar1 = FUN_00404020((undefined *)*param_2);
    for (pcVar2 = FUN_0040b7b8(pbVar1,'|'); pcVar2 != (char *)0x0;
        pcVar2 = FUN_0040b7b8((byte *)(pcVar2 + 1),'|')) {
      *pcVar2 = '\0';
    }
  }
  return;
}



void FUN_0044e3c8(int *param_1,undefined4 param_2)

{
  char *pcVar1;
  uint uVar2;
  int iVar3;
  uint *puVar4;
  undefined4 *in_FS_OFFSET;
  bool bVar5;
  undefined4 uStack_74;
  undefined1 *puStack_70;
  undefined1 *puStack_6c;
  undefined4 local_60;
  undefined4 local_5c;
  undefined4 local_58;
  undefined *local_54;
  int local_48;
  char *local_44;
  int local_40;
  undefined *local_34;
  undefined *local_30;
  uint local_2c;
  undefined *local_24;
  code *local_1c;
  int local_18;
  undefined *local_14;
  undefined *local_10;
  undefined *local_c;
  undefined4 local_8;
  
  puStack_6c = &stack0xfffffffc;
  local_c = (undefined *)0x0;
  local_10 = (undefined *)0x0;
  local_14 = (undefined *)0x0;
  puStack_70 = &LAB_0044e5e0;
  uStack_74 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_74;
  local_8 = param_2;
  (**(code **)(*(int *)param_1[0x1d] + 0x40))();
  FUN_00402c14(&local_60,0x4c,0);
  local_60 = 0x4c;
  local_58 = DAT_004764d8;
  FUN_0044e378((undefined4 *)param_1[0x16],(int *)&local_c);
  local_54 = FUN_00404020(local_c);
  local_48 = param_1[0x17];
  param_1[0x18] = local_48;
  if ((*(byte *)(param_1 + 0x15) & 0x40) == 0) {
    local_40 = 0x104;
  }
  else {
    local_40 = 0xffef;
  }
  FUN_00404190((int *)&local_10,local_40 + 2);
  local_44 = FUN_00404020(local_10);
  FUN_00402c14((undefined4 *)local_44,local_40 + 2,0);
  pcVar1 = FUN_00404020((undefined *)param_1[0x1c]);
  FUN_00408b84(local_44,pcVar1,local_40);
  if ((param_1[0x19] == 0) && (DAT_00474a58 != '\0')) {
    local_34 = &DAT_0044e5f0;
  }
  else {
    local_34 = FUN_00404020((undefined *)param_1[0x19]);
  }
  local_30 = FUN_00404020((undefined *)param_1[0x1a]);
  local_2c = 0x20;
  uVar2 = 0;
  puVar4 = &DAT_00474a64;
  do {
    bVar5 = (byte)uVar2 < 0x1f;
    if ((byte)uVar2 < 0x20) {
      bVar5 = (*(byte *)((int)param_1 + ((int)(uVar2 & 0x7f) >> 3) + 0x54) >> (uVar2 & 7) & 1) != 0;
    }
    if (bVar5) {
      local_2c = local_2c | *puVar4;
    }
    uVar2 = uVar2 + 1;
    puVar4 = puVar4 + 1;
  } while ((char)uVar2 != '\x14');
  if (*PTR_DAT_00475700 == '\0') {
    local_2c = local_2c & 0xfff7ffff;
  }
  else {
    local_2c = local_2c ^ 0x80000;
  }
  FUN_00403c74((int *)&local_14,param_1[0x1b]);
  if ((local_14 == (undefined *)0x0) && ((local_2c & 0x80000) == 0)) {
    FUN_00408a38((undefined *)param_1[0x1c],(int *)&local_14);
    FUN_004040a4((int *)&local_14,1,1);
  }
  if (local_14 != (undefined *)0x0) {
    local_24 = FUN_00404020(local_14);
  }
  if (((*(byte *)((int)param_1 + 0x56) & 1) == 0) && (*PTR_DAT_00475700 != '\0')) {
    local_1c = FUN_0044e024;
  }
  else {
    local_1c = (code *)&LAB_0044dd58;
  }
  if (param_1[0xe] != 0) {
    local_2c = local_2c | 0x40;
    local_18 = param_1[0xe];
  }
  local_5c = *(undefined4 *)(*(int *)PTR_DAT_004757c0 + 0x24);
  iVar3 = (**(code **)(*param_1 + 0x38))(param_1,local_8,&local_60);
  if (iVar3 != 0) {
    FUN_0044e73c((int)param_1,(int)&local_60);
    if ((local_2c & 0x400) == 0) {
      param_1[0x15] = param_1[0x15] & 0xffffff7f;
    }
    else {
      param_1[0x15] = param_1[0x15] | 0x80;
    }
    if ((local_2c & 1) == 0) {
      param_1[0x15] = param_1[0x15] & 0xfffffffe;
    }
    else {
      param_1[0x15] = param_1[0x15] | 1;
    }
    param_1[0x17] = local_48;
  }
  *in_FS_OFFSET = uStack_74;
  puStack_6c = &LAB_0044e5e7;
  puStack_70 = (undefined1 *)0x44e5df;
  FUN_00403c00((int *)&local_14,3);
  return;
}



char * FUN_0044e5f4(byte *param_1,int *param_2,undefined4 param_3,int param_4)

{
  char *pcVar1;
  
  pcVar1 = FUN_0040b7b8(param_1,*(char *)(param_4 + -1));
  if (pcVar1 == (char *)0x0) {
    FUN_00403d94(param_2,(char *)param_1);
    pcVar1 = FUN_00408b0c((char *)param_1);
  }
  else {
    FUN_00403cc4(param_2,(undefined4 *)param_1,(int)pcVar1 - (int)param_1);
    pcVar1 = pcVar1 + 1;
  }
  return pcVar1;
}



void FUN_0044e63c(byte *param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int *piVar1;
  byte *pbVar2;
  char *pcVar3;
  int iVar4;
  undefined4 extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  char *local_c;
  undefined4 *local_8;
  
  puStack_14 = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  local_c = (char *)0x0;
  puStack_18 = &LAB_0044e721;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  iVar4 = param_4;
  pbVar2 = (byte *)FUN_0044e5f4(param_1,(int *)&local_8,param_3,param_4);
  pbVar2 = (byte *)FUN_0044e5f4(pbVar2,(int *)&local_c,iVar4,param_4);
  if (local_c == (char *)0x0) {
    piVar1 = *(int **)(*(int *)(param_4 + -8) + 0x74);
    (**(code **)(*piVar1 + 0x34))(piVar1,local_8);
  }
  else {
    pcVar3 = FUN_00408824((undefined *)local_8);
    if (*pcVar3 != '\\') {
      FUN_00403e64((int *)&local_8,(undefined4 *)&DAT_0044e738);
    }
    do {
      if (*local_c != '\\') {
        iVar4 = FUN_00403e5c((int)local_c);
        if (((iVar4 < 4) || (local_c[1] != ':')) || (local_c[2] != '\\')) {
          FUN_00403ea8((int *)&local_c,local_8,(undefined4 *)local_c);
        }
      }
      piVar1 = *(int **)(*(int *)(param_4 + -8) + 0x74);
      (**(code **)(*piVar1 + 0x34))(piVar1,local_c);
      pbVar2 = (byte *)FUN_0044e5f4(pbVar2,(int *)&local_c,extraout_ECX,param_4);
    } while (local_c != (char *)0x0);
  }
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_0044e728;
  puStack_18 = (undefined1 *)0x44e720;
  FUN_00403c00((int *)&local_c,2);
  return;
}



void FUN_0044e73c(int param_1,int param_2)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  undefined4 *local_10;
  int local_c;
  undefined1 local_5;
  
  puStack_18 = &stack0xfffffffc;
  local_10 = (undefined4 *)0x0;
  puStack_1c = &LAB_0044e7e7;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  local_5 = 0;
  if (((*(byte *)(param_1 + 0x54) & 0x40) != 0) &&
     (((*(byte *)(param_1 + 0x56) & 1) != 0 || (*PTR_DAT_00475700 == '\0')))) {
    local_5 = 0x20;
  }
  local_c = param_1;
  if ((*(byte *)(param_1 + 0x54) & 0x40) == 0) {
    FUN_0044e5f4(*(byte **)(param_2 + 0x1c),(int *)(param_1 + 0x70),0,(int)&stack0xfffffffc);
    (**(code **)(**(int **)(local_c + 0x74) + 0x34))
              (*(int **)(local_c + 0x74),*(undefined4 *)(local_c + 0x70));
  }
  else {
    puStack_18 = &stack0xfffffffc;
    FUN_0044e63c(*(byte **)(param_2 + 0x1c),param_2,0,(int)&stack0xfffffffc);
    (**(code **)(**(int **)(local_c + 0x74) + 0xc))(*(int **)(local_c + 0x74),0,&local_10);
    FUN_00403c30((int *)(local_c + 0x70),local_10);
  }
  *in_FS_OFFSET = uStack_20;
  puStack_18 = &LAB_0044e7ee;
  puStack_1c = (undefined1 *)0x44e7e6;
  FUN_00403bdc((int *)&local_10);
  return;
}



void FUN_0044e7f4(int param_1,LPRECT param_2)

{
  HWND pHVar1;
  LPRECT lpRect;
  
  pHVar1 = *(HWND *)(param_1 + 0x30);
  if (pHVar1 == (HWND)0x0) {
    FUN_0040ea70(0,0,0,&param_2->left,0);
  }
  else if ((*(byte *)(param_1 + 0x56) & 1) == 0) {
    lpRect = param_2;
    pHVar1 = GetDlgItem(pHVar1,0x45f);
    GetWindowRect(pHVar1,lpRect);
    MapWindowPoints((HWND)0x0,*(HWND *)(param_1 + 0x30),(LPPOINT)param_2,2);
  }
  else {
    GetClientRect(pHVar1,param_2);
  }
  return;
}



void FUN_0044e848(int param_1,int *param_2)

{
  HWND hWnd;
  UINT Msg;
  WPARAM wParam;
  char *lParam;
  char acStack_110 [264];
  
  lParam = acStack_110;
  if ((*PTR_DAT_00475700 == '\0') || (*(int *)(param_1 + 0x30) == 0)) {
    FUN_00403c30(param_2,*(undefined4 **)(param_1 + 0x70));
  }
  else {
    wParam = 0x105;
    Msg = 0x465;
    hWnd = GetParent(*(HWND *)(param_1 + 0x30));
    SendMessageA(hWnd,Msg,wParam,(LPARAM)lParam);
    FUN_00408cdc(acStack_110,param_2);
  }
  return;
}



bool FUN_0044e93c(int *param_1)

{
  int iVar1;
  
  iVar1 = FUN_0044e3c8(param_1,&DAT_0044a160);
  return iVar1 != 0;
}



int FUN_0044e954(int param_1,int param_2)

{
  if (param_1 <= param_2) {
    param_1 = param_2;
  }
  return param_1;
}



void FUN_0044e95c(int *param_1,LPSIZE param_2)

{
  int iVar1;
  HDC hdc;
  char *pcVar2;
  LPSIZE lpsz;
  char local_3c [26];
  char local_22 [26];
  
  pcVar2 = local_3c;
  iVar1 = 0;
  do {
    *pcVar2 = (char)iVar1 + 'A';
    iVar1 = iVar1 + 1;
    pcVar2 = pcVar2 + 1;
  } while (iVar1 != 0x1a);
  iVar1 = 0;
  pcVar2 = local_22;
  do {
    *pcVar2 = (char)iVar1 + 'a';
    iVar1 = iVar1 + 1;
    pcVar2 = pcVar2 + 1;
  } while (iVar1 != 0x1a);
  iVar1 = 0x34;
  pcVar2 = local_3c;
  lpsz = param_2;
  hdc = (HDC)FUN_004183d4(param_1);
  GetTextExtentPointA(hdc,pcVar2,iVar1,lpsz);
  param_2->cx = param_2->cx / 0x34;
  return;
}



int * FUN_0044eb14(int *param_1,char param_2,int *param_3)

{
  BOOL BVar1;
  HFONT pHVar2;
  int *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_fffffe90;
  undefined4 in_stack_fffffe94;
  undefined4 local_158 [70];
  LOGFONTA local_40;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_fffffe90,in_stack_fffffe94);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0044207c(param_1,'\0',param_3);
  local_158[0] = 0x154;
  BVar1 = SystemParametersInfoA(0x29,0,local_158,0);
  if (BVar1 != 0) {
    pHVar2 = CreateFontIndirectA(&local_40);
    FUN_004171f0((int *)param_1[0x16],pHVar2);
  }
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_fffffe90;
  }
  return param_1;
}



void FUN_0044ec48(uint *param_1,byte param_2,ushort param_3)

{
  LONG nNumerator;
  LONG nNumerator_00;
  char cVar1;
  byte bVar2;
  int iVar3;
  int *piVar4;
  uint uVar5;
  LPCSTR pCVar6;
  int *piVar7;
  HDC pHVar8;
  int iVar9;
  HICON pHVar10;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  uint uVar11;
  undefined **ppuVar12;
  int *in_FS_OFFSET;
  bool bVar13;
  tagRECT *ptVar14;
  int iVar15;
  undefined1 *puStack_8c;
  undefined1 *puStack_88;
  undefined1 *puStack_84;
  uint *local_74;
  uint *local_70;
  uint *local_6c;
  undefined *local_68;
  tagRECT local_64;
  int *local_54;
  undefined **local_50;
  int *local_4c;
  byte local_46;
  byte local_45;
  int local_44;
  int local_40;
  int local_3c;
  int local_38;
  int local_34;
  int local_30;
  int local_2c;
  int local_28;
  int local_24;
  int local_20;
  int local_1c;
  tagSIZE local_18;
  int *local_10;
  ushort local_b;
  byte local_9;
  uint *local_8;
  
  puStack_84 = &stack0xfffffffc;
  local_74 = (uint *)0x0;
  local_70 = (uint *)0x0;
  local_6c = (uint *)0x0;
  local_68 = (undefined *)0x0;
  puStack_88 = &LAB_0044f187;
  puStack_8c = (undefined1 *)*in_FS_OFFSET;
  *in_FS_OFFSET = (int)&puStack_8c;
  local_b = param_3;
  local_9 = param_2;
  local_8 = param_1;
  local_10 = FUN_0044eb14((int *)PTR_PTR_0044e9b0,'\x01',*(int **)PTR_DAT_004757c0);
  (**(code **)(*local_10 + 0x68))(local_10,*(undefined1 *)(*(int *)PTR_DAT_004757c0 + 0x28));
  FUN_00443440((int)local_10,'\x03');
  iVar3 = FUN_00443644((int)local_10);
  FUN_004182f4(iVar3);
  piVar4 = (int *)FUN_00443644((int)local_10);
  FUN_0044e95c(piVar4,&local_18);
  nNumerator = local_18.cx;
  local_1c = MulDiv(8,local_18.cx,4);
  nNumerator_00 = local_18.cy;
  local_20 = MulDiv(8,local_18.cy,8);
  local_24 = MulDiv(10,nNumerator,4);
  local_28 = MulDiv(10,nNumerator_00,8);
  local_2c = MulDiv(0x32,nNumerator,4);
  uVar11 = 0;
  piVar4 = &DAT_00476820;
  local_50 = &PTR_PTR_00474b08;
  do {
    bVar13 = (byte)uVar11 < 0xf;
    if ((byte)uVar11 < 0x10) {
      bVar13 = (*(byte *)((int)&local_b + ((int)(uVar11 & 0x7f) >> 3)) >> (uVar11 & 7) & 1) != 0;
    }
    if (bVar13) {
      if (*piVar4 == 0) {
        FUN_0040ea70(0,0,0,&local_64.left,0);
        uVar5 = FUN_0042ccec((int)local_10);
        uVar5 = uVar5 | 0x420;
        ptVar14 = &local_64;
        iVar3 = -1;
        FUN_004054e4((undefined4 *)*local_50,(int *)&local_68);
        pCVar6 = FUN_00404020(local_68);
        piVar7 = (int *)FUN_00443644((int)local_10);
        pHVar8 = (HDC)FUN_004183d4(piVar7);
        DrawTextA(pHVar8,pCVar6,iVar3,ptVar14,uVar5);
        *piVar4 = (local_64.right - local_64.left) + 8;
      }
      if (local_2c < *piVar4) {
        local_2c = *piVar4;
      }
    }
    uVar11 = uVar11 + 1;
    local_50 = local_50 + 1;
    piVar4 = piVar4 + 1;
  } while ((char)uVar11 != '\v');
  local_30 = MulDiv(0xe,local_18.cy,8);
  local_34 = MulDiv(4,local_18.cx,4);
  iVar15 = 0;
  uVar11 = FUN_00446c48();
  iVar3 = (int)uVar11 >> 1;
  if (iVar3 < 0) {
    iVar3 = iVar3 + (uint)((uVar11 & 1) != 0);
  }
  SetRect(&local_64,0,0,iVar3,iVar15);
  uVar11 = FUN_0042ccec((int)local_10);
  uVar11 = uVar11 | 0x450;
  ptVar14 = &local_64;
  iVar3 = FUN_00403e5c((int)local_8);
  iVar3 = iVar3 + 1;
  pCVar6 = FUN_00404020((undefined *)local_8);
  piVar4 = (int *)FUN_00443644((int)local_10);
  pHVar8 = (HDC)FUN_004183d4(piVar4);
  DrawTextA(pHVar8,pCVar6,iVar3,ptVar14,uVar11);
  pCVar6 = *(LPCSTR *)(&DAT_00474ac8 + (uint)local_9 * 4);
  local_38 = local_64.right;
  local_3c = local_64.bottom;
  if ((pCVar6 != (LPCSTR)0x0) &&
     (local_38 = local_64.right + local_24 + 0x20, local_64.bottom < 0x20)) {
    local_3c = 0x20;
  }
  iVar3 = 0;
  uVar11 = 0;
  do {
    bVar13 = (byte)uVar11 < 0xf;
    if ((byte)uVar11 < 0x10) {
      bVar13 = (*(byte *)((int)&local_b + ((int)(uVar11 & 0x7f) >> 3)) >> (uVar11 & 7) & 1) != 0;
    }
    if (bVar13) {
      iVar3 = iVar3 + 1;
    }
    uVar11 = uVar11 + 1;
  } while ((char)uVar11 != '\v');
  iVar15 = 0;
  if (iVar3 != 0) {
    iVar15 = local_2c * iVar3 + (iVar3 + -1) * local_34;
  }
  iVar3 = FUN_0044e954(local_38,iVar15);
  FUN_00442c20(local_10,iVar3 + local_1c * 2);
  FUN_00442c50(local_10,local_3c + local_30 + local_28 + local_20 * 2);
  uVar11 = FUN_00446c48();
  iVar3 = (int)uVar11 >> 1;
  if (iVar3 < 0) {
    iVar3 = iVar3 + (uint)((uVar11 & 1) != 0);
  }
  iVar9 = local_10[0xe] >> 1;
  if (iVar9 < 0) {
    iVar9 = iVar9 + (uint)((local_10[0xe] & 1U) != 0);
  }
  FUN_0042a5b4(local_10,iVar3 - iVar9);
  uVar11 = FUN_00446c3c();
  iVar3 = (int)uVar11 >> 1;
  if (iVar3 < 0) {
    iVar3 = iVar3 + (uint)((uVar11 & 1) != 0);
  }
  iVar9 = local_10[0xf] >> 1;
  if (iVar9 < 0) {
    iVar9 = iVar9 + (uint)((local_10[0xf] & 1U) != 0);
  }
  FUN_0042a5d4(local_10,iVar3 - iVar9);
  if (local_9 == 4) {
    FUN_00448990(*(int *)PTR_DAT_004757c0,(int *)&local_70);
    FUN_0042adf0((int)local_10,local_70);
  }
  else {
    FUN_004054e4((undefined4 *)(&PTR_PTR_00474ab4)[local_9],(int *)&local_6c);
    FUN_0042adf0((int)local_10,local_6c);
  }
  if (pCVar6 != (LPCSTR)0x0) {
    piVar4 = FUN_0044b994((int *)PTR_PTR_0044a1a0,'\x01',local_10);
    (**(code **)(*piVar4 + 0x18))(piVar4,s_Image_0044f1a0);
    (**(code **)(*piVar4 + 0x60))(piVar4,local_10);
    pHVar10 = LoadIconA((HINSTANCE)0x0,pCVar6);
    piVar7 = (int *)FUN_0041a31c((int *)piVar4[0x4a]);
    FUN_0041e128(piVar7,pHVar10);
    (**(code **)(*piVar4 + 0x7c))(piVar4,local_1c,local_20,0x20,0x20);
  }
  piVar4 = FUN_004225a8((int *)PTR_PTR_004206e8,'\x01',local_10);
  (**(code **)(*piVar4 + 0x18))(piVar4,s_Message_0044f1b0);
  (**(code **)(*piVar4 + 0x60))(piVar4,local_10);
  FUN_00422a38(piVar4,CONCAT31((int3)((uint)extraout_EDX >> 8),1),extraout_ECX);
  FUN_0042adf0((int)piVar4,local_8);
  FUN_0042a7e8(piVar4,&local_64.left);
  (**(code **)(*piVar4 + 0x68))(piVar4,*(undefined1 *)((int)local_10 + 0x4f));
  local_44 = (local_38 - local_64.right) + local_1c;
  cVar1 = FUN_00403130(piVar4,extraout_EDX_00,extraout_ECX_00);
  if (cVar1 != '\0') {
    iVar3 = FUN_0042a824(local_10);
    local_44 = (iVar3 - local_44) - piVar4[0xe];
  }
  (**(code **)(*piVar4 + 0x7c))(piVar4,local_44,local_20,local_64.bottom,local_64.right);
  if ((local_b & 4) == 0) {
    if ((local_b & 1) == 0) {
      local_45 = 5;
    }
    else {
      local_45 = 0;
    }
  }
  else {
    local_45 = 2;
  }
  if ((local_b & 8) == 0) {
    if ((local_b & 2) == 0) {
      local_46 = 2;
    }
    else {
      local_46 = 1;
    }
  }
  else {
    local_46 = 3;
  }
  iVar3 = FUN_0042a824(local_10);
  local_40 = iVar3 - iVar15 >> 1;
  if (local_40 < 0) {
    local_40 = local_40 + (uint)((iVar3 - iVar15 & 1U) != 0);
  }
  uVar11 = 0;
  local_50 = &PTR_DAT_00474adc;
  ppuVar12 = &PTR_PTR_00474b08;
  local_54 = &DAT_00474b34;
  iVar3 = local_64.bottom;
  do {
    bVar2 = (byte)uVar11;
    bVar13 = bVar2 < 0xf;
    if (bVar2 < 0x10) {
      bVar13 = (*(byte *)((int)&local_b + ((int)(uVar11 & 0x7f) >> 3)) >> (uVar11 & 7) & 1) != 0;
    }
    if (bVar13) {
      local_4c = FUN_0042497c((int *)PTR_PTR_00421b4c,'\x01',local_10);
      (**(code **)(*local_4c + 0x18))(local_4c,*local_50);
      (**(code **)(*local_4c + 0x60))(local_4c,local_10);
      FUN_004054e4((undefined4 *)*ppuVar12,(int *)&local_74);
      FUN_0042adf0((int)local_4c,local_74);
      local_4c[0x7f] = *local_54;
      if (bVar2 == local_45) {
        FUN_00424a5c(local_4c,1);
      }
      if (bVar2 == local_46) {
        *(undefined1 *)((int)local_4c + 0x1f9) = 1;
      }
      (**(code **)(*local_4c + 0x7c))
                (local_4c,local_40,local_3c + local_20 + local_28,local_30,local_2c);
      local_40 = local_40 + local_2c + local_34;
      if (bVar2 == 10) {
        local_4c[0x43] = (int)local_10;
        local_4c[0x42] = (int)&LAB_0044eb8c;
      }
    }
    uVar11 = uVar11 + 1;
    local_54 = local_54 + 1;
    ppuVar12 = ppuVar12 + 1;
    local_50 = local_50 + 1;
  } while ((char)uVar11 != '\v');
  *in_FS_OFFSET = iVar3;
  puStack_8c = &LAB_0044f18e;
  FUN_00403c00((int *)&local_74,4);
  return;
}



void FUN_0044f1b8(uint *param_1,byte param_2,ushort param_3,int param_4)

{
  FUN_0044f1d8(param_1,param_2,param_3,(undefined4 *)0x0,-1,-1,param_4);
  return;
}



void FUN_0044f1d8(uint *param_1,byte param_2,ushort param_3,undefined4 *param_4,int param_5,
                 int param_6,int param_7)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  
  puStack_1c = (undefined1 *)0x44f1f9;
  piVar1 = (int *)FUN_0044ec48(param_1,param_2,param_3);
  puStack_20 = &LAB_0044f278;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  piVar1[0x54] = param_7;
  puStack_1c = &stack0xfffffffc;
  FUN_00403c30(piVar1 + 0x89,param_4);
  if (-1 < param_6) {
    FUN_0042a5b4(piVar1,param_6);
  }
  if (-1 < param_5) {
    FUN_0042a5d4(piVar1,param_5);
  }
  if ((param_5 < 0) && (param_6 < 0)) {
    FUN_004439dc((int)piVar1,'\x04');
  }
  (**(code **)(*piVar1 + 0xd8))();
  *in_FS_OFFSET = uStack_24;
  puStack_1c = &LAB_0044f27f;
  puStack_20 = (undefined1 *)0x44f277;
  FUN_00402f54(piVar1);
  return;
}



int * FUN_0044f7f4(int *param_1,char param_2,int *param_3)

{
  int *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0042cf04(param_1,'\0',param_3);
  *(undefined1 *)(param_1 + 0x7c) = DAT_0044f844;
  *(undefined1 *)((int)param_1 + 0x1f1) = 1;
  *(undefined1 *)((int)param_1 + 0x1f2) = 2;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_0044f848(int param_1,char param_2)

{
  if (param_2 != *(char *)(param_1 + 0x1f0)) {
    *(char *)(param_1 + 0x1f0) = param_2;
    FUN_0042e448(param_1);
  }
  return;
}



void FUN_0044f898(int *param_1,int param_2)

{
  LPRECT lprc;
  uint uVar1;
  
  lprc = *(LPRECT *)(param_2 + 8);
  InflateRect(lprc,-param_1[0x4b],-param_1[0x4b]);
  uVar1 = (uint)(*(char *)((int)param_1 + 0x1f1) != '\0');
  if (*(char *)((int)param_1 + 0x1f2) != '\0') {
    uVar1 = uVar1 + 1;
  }
  if ((*(byte *)(param_1 + 0x7c) & 1) != 0) {
    lprc->left = lprc->left + uVar1;
  }
  if ((*(byte *)(param_1 + 0x7c) & 2) != 0) {
    lprc->top = lprc->top + uVar1;
  }
  if ((*(byte *)(param_1 + 0x7c) & 4) != 0) {
    lprc->right = lprc->right - uVar1;
  }
  if ((*(byte *)(param_1 + 0x7c) & 8) != 0) {
    lprc->bottom = lprc->bottom - uVar1;
  }
  FUN_00431b6c(param_1,param_2);
  return;
}



int FUN_0044faf8(int param_1,int *param_2,int *param_3)

{
  char cVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int *piVar7;
  undefined4 unaff_EBX;
  int iVar8;
  int *in_FS_OFFSET;
  int iStack_34;
  undefined1 *puStack_30;
  undefined1 *puStack_2c;
  
  if ((*(char *)(param_1 + 0x2e1) == '\0') && (*(char *)(param_1 + 0x2e0) != '\0')) {
    puStack_2c = (undefined1 *)0x44fb34;
    iVar6 = FUN_0042f790(param_1);
    if ((iVar6 != 0) &&
       ((*param_2 != *(int *)(param_1 + 0x38) || (*param_3 != *(int *)(param_1 + 0x3c))))) {
      iVar6 = *param_2;
      iVar8 = *param_3;
      cVar1 = *(char *)(param_1 + 0x2e0);
      if (cVar1 != '\0') {
        if (cVar1 == '\x01') {
          iVar8 = iVar8 + *(int *)(param_1 + 0x2d8);
        }
        else {
          if (cVar1 != '\x02') {
            return 0;
          }
          iVar6 = iVar6 + *(int *)(param_1 + 0x2dc);
        }
        *(undefined4 *)(param_1 + 0x2d0) = *(undefined4 *)(param_1 + 0x38);
        *(undefined4 *)(param_1 + 0x2d4) = *(undefined4 *)(param_1 + 0x3c);
        puStack_2c = (undefined1 *)0x44fbc2;
        piVar7 = (int *)FUN_0042f7a4(param_1,0);
        iVar2 = *(int *)(param_1 + 0x38);
        iVar3 = piVar7[0xe];
        iVar4 = *(int *)(param_1 + 0x3c);
        iVar5 = piVar7[0xf];
        *(undefined1 *)(param_1 + 0x2e1) = 1;
        puStack_30 = &LAB_0044fc2f;
        iStack_34 = *in_FS_OFFSET;
        *in_FS_OFFSET = (int)&iStack_34;
        iVar8 = iVar8 - (iVar4 - iVar5);
        puStack_2c = &stack0xfffffffc;
        (**(code **)(*piVar7 + 0x7c))(piVar7,piVar7[0xc],piVar7[0xd],iVar8,iVar6 - (iVar2 - iVar3));
        *in_FS_OFFSET = iVar8;
        *(undefined1 *)(param_1 + 0x2e1) = 0;
        return param_1;
      }
    }
  }
  return CONCAT31((int3)((uint)unaff_EBX >> 8),1);
}



void FUN_0044fca0(void)

{
  HWND hWnd;
  HMENU hMenu;
  int in_stack_00000004;
  BOOL bRevert;
  
  if (((*(char *)(*(int *)(in_stack_00000004 + -4) + 0x211) != '\0') &&
      ((*(byte *)(*(int *)(in_stack_00000004 + -4) + 0x210) & 1) != 0)) &&
     (*(char *)(*(int *)(in_stack_00000004 + -4) + 0x217) != '\x01')) {
    bRevert = 0;
    hWnd = (HWND)FUN_00430e98(*(int **)(in_stack_00000004 + -4));
    hMenu = GetSystemMenu(hWnd,bRevert);
    DeleteMenu(hMenu,0xf130,0);
    DeleteMenu(hMenu,0xf030,0);
    DeleteMenu(hMenu,0xf020,0);
    DeleteMenu(hMenu,0xf120,0);
  }
  return;
}



void FUN_0044feb0(int *param_1,int *param_2,undefined4 param_3)

{
  if ((param_2[1] & 0xfff0U) == 0xf000) {
    param_1[0xb7] = 0;
    param_1[0xb6] = 0;
  }
  FUN_00445088(param_1,param_2,param_3);
  *(undefined1 *)(param_1 + 0xb8) = 0;
  return;
}



bool FUN_00451e04(void)

{
  int iVar1;
  
  iVar1 = FUN_0041e9f0();
  if (iVar1 == 0) {
    InitCommonControls();
  }
  return iVar1 != 0;
}



void FUN_00451e30(void)

{
  LPCSTR lptstrFilename;
  DWORD dwLen;
  BOOL BVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_38;
  DWORD *lpdwHandle;
  undefined4 uStack_2c;
  undefined1 *puStack_28;
  undefined1 *puStack_24;
  uint local_18;
  LPVOID local_14;
  LPCVOID local_10;
  DWORD local_c;
  undefined *local_8;
  
  puStack_24 = &stack0xfffffffc;
  local_8 = (undefined *)0x0;
  puStack_28 = &LAB_00451f08;
  uStack_2c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_2c;
  if (DAT_00476864 == 0) {
    FUN_00403c74((int *)&local_8,0x451f20);
    lpdwHandle = &local_c;
    lptstrFilename = FUN_00404020(local_8);
    uStack_38 = 0x451e79;
    dwLen = GetFileVersionInfoSizeA(lptstrFilename,lpdwHandle);
    if (dwLen != 0) {
      local_10 = (LPCVOID)FUN_004026f4(dwLen);
      uStack_38 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack_38;
      BVar1 = GetFileVersionInfoA(lptstrFilename,local_c,dwLen,local_10);
      if (BVar1 != 0) {
        BVar1 = VerQueryValueA(local_10,&lpSubBlock_00451f30,&local_14,&local_18);
        if (BVar1 != 0) {
          DAT_00476864 = *(int *)((int)local_14 + 8);
        }
      }
      *in_FS_OFFSET = uStack_38;
      FUN_0040270c((int)local_10);
      return;
    }
  }
  *in_FS_OFFSET = uStack_2c;
  puStack_24 = &LAB_00451f0f;
  puStack_28 = (undefined1 *)0x451f07;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_00451f80(int *param_1,int *param_2)

{
  int *piVar1;
  
  piVar1 = FUN_004030cc(param_2,(int)PTR_PTR_0044ffcc);
  if ((char)piVar1 == '\0') {
    FUN_0040faf8(param_1,param_2);
  }
  else {
    FUN_004520c4((int)param_1,(uint *)param_2[3]);
    FUN_004520ec((int)param_1,param_2[4]);
    FUN_00452094((int)param_1,(char)param_2[5]);
    FUN_004520a4((int)param_1,*(char *)((int)param_2 + 0x15));
    FUN_004520b4((int)param_1,(char)param_2[6]);
  }
  return;
}



void FUN_00451fdc(int param_1,char param_2)

{
  if (param_2 != *(char *)(param_1 + 0x16)) {
    *(char *)(param_1 + 0x16) = param_2;
    *(undefined1 *)(param_1 + 0x17) = 0;
    FUN_0040fd04(param_1,'\0');
  }
  return;
}



void FUN_00452008(int *param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  if (*(char *)((int)param_1 + 0x17) != '\0') {
    iVar1 = FUN_00403130(param_1,param_2,param_3);
    if (iVar1 != 0) {
      iVar1 = FUN_00403130(param_1,extraout_EDX,extraout_ECX);
      FUN_00451fdc((int)param_1,*(char *)(*(int *)(iVar1 + 0x18) + 0x4f));
      *(undefined1 *)((int)param_1 + 0x17) = 1;
    }
  }
  return;
}



undefined4 FUN_00452040(int param_1)

{
  if ((PTR_DAT_004758fc[9] != '\0') && (*(char *)(param_1 + 0x16) != '\0')) {
    return CONCAT31((int3)((uint)param_1 >> 8),1);
  }
  return 0;
}



undefined4 FUN_00452058(int param_1)

{
  if ((PTR_DAT_004758fc[9] != '\0') && (*(char *)(param_1 + 0x16) == '\x01')) {
    return CONCAT31((int3)((uint)param_1 >> 8),1);
  }
  return 0;
}



void FUN_00452094(int param_1,char param_2)

{
  if (param_2 != *(char *)(param_1 + 0x14)) {
    *(char *)(param_1 + 0x14) = param_2;
    FUN_0040fd04(param_1,'\0');
  }
  return;
}



void FUN_004520a4(int param_1,char param_2)

{
  if (param_2 != *(char *)(param_1 + 0x15)) {
    *(char *)(param_1 + 0x15) = param_2;
    FUN_0040fd04(param_1,'\0');
  }
  return;
}



void FUN_004520b4(int param_1,char param_2)

{
  if (param_2 != *(char *)(param_1 + 0x18)) {
    *(char *)(param_1 + 0x18) = param_2;
    FUN_0040fd04(param_1,'\0');
  }
  return;
}



void FUN_004520c4(int param_1,uint *param_2)

{
  undefined1 in_ZF;
  
  FUN_00403f6c(*(uint **)(param_1 + 0xc),param_2);
  if (!(bool)in_ZF) {
    FUN_00403c30((int *)(param_1 + 0xc),param_2);
    FUN_0040fd04(param_1,'\0');
  }
  return;
}



void FUN_004520ec(int param_1,int param_2)

{
  if (param_2 != *(int *)(param_1 + 0x10)) {
    *(int *)(param_1 + 0x10) = param_2;
    FUN_0040fd04(param_1,'\x01');
  }
  return;
}



int * FUN_004520fc(int *param_1,char param_2,int param_3)

{
  int extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0040fe80(param_1,'\0',(int)PTR_PTR_0044ffcc);
  param_1[6] = param_3;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_00452140(int param_1)

{
  FUN_0040ff04(param_1);
  return;
}



void FUN_0045214c(int param_1,int param_2)

{
  FUN_00410068(param_1,param_2);
  return;
}



int * FUN_00452194(int *param_1,char param_2,int *param_3)

{
  int *piVar1;
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  char extraout_DL;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0042cf04(param_1,'\0',param_3);
  param_1[0x10] = DAT_0045224c;
  FUN_0042af4c((int)param_1,-0x7ffffff1);
  FUN_0042a618(param_1,0x13);
  FUN_0042a3ac(param_1,CONCAT31((int3)((uint)extraout_EDX >> 8),2),extraout_ECX_00);
  piVar1 = FUN_004520fc((int *)PTR_PTR_0045016c,'\x01',(int)param_1);
  param_1[0x7c] = (int)piVar1;
  piVar1 = FUN_00417954((int *)PTR_PTR_004262cc,'\x01',extraout_ECX_01);
  param_1[0x7d] = (int)piVar1;
  FUN_00429b28(piVar1,(int)param_1);
  *(undefined1 *)((int)param_1 + 0x1fd) = 1;
  FUN_0042aee4((int)param_1,'\0');
  *(undefined1 *)((int)param_1 + 0x1fe) = 1;
  FUN_00452774((int)param_1);
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



void FUN_00452430(undefined4 param_1,int *param_2,char param_3,char param_4)

{
  char local_5;
  
  local_5 = param_3;
  if (param_4 != '\0') {
    FUN_00427ee0(&local_5);
  }
  if (local_5 == '\x01') {
    FUN_004040ec((undefined4 *)&DAT_00452494,param_2,1);
  }
  else if (local_5 == '\x02') {
    FUN_004040ec((undefined4 *)&DAT_00452488,param_2,1);
  }
  return;
}



void FUN_00452498(int *param_1,undefined4 param_2,undefined4 param_3)

{
  char cVar1;
  bool bVar2;
  undefined *lParam;
  uint uVar3;
  HWND hWnd;
  UINT Msg;
  
  cVar1 = FUN_00403130(param_1,param_2,param_3);
  FUN_00452430(param_1,param_1 + 0x7e,'\0',cVar1);
  bVar2 = FUN_00431194((int)param_1);
  if (bVar2) {
    lParam = FUN_00404020((undefined *)param_1[0x7e]);
    uVar3 = FUN_0042b3a0((int)param_1);
    uVar3 = *(uint *)(&DAT_00474ba0 + (uVar3 & 0x7f) * 4) | 0xff;
    Msg = 0x401;
    hWnd = (HWND)FUN_00430e98(param_1);
    SendMessageA(hWnd,Msg,uVar3,(LPARAM)lParam);
  }
  return;
}



void FUN_004524fc(int *param_1,uint *param_2)

{
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined1 in_ZF;
  
  FUN_00403f6c((uint *)param_1[0x7e],param_2);
  if (!(bool)in_ZF) {
    FUN_00403c30(param_1 + 0x7e,param_2);
    FUN_00452498(param_1,extraout_EDX,extraout_ECX);
  }
  return;
}



void FUN_00452528(int *param_1,int param_2)

{
  bool bVar1;
  int iVar2;
  int iVar3;
  int *piVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  int iVar5;
  
  FUN_004302bc(param_1,param_2);
  bVar1 = FUN_00431194((int)param_1);
  if (bVar1) {
    if ((char)param_1[0x7f] == '\0') {
      iVar2 = FUN_00410060(param_1[0x7c]);
      if (-1 < iVar2 + -1) {
        iVar5 = 0;
        do {
          iVar3 = FUN_0045214c(param_1[0x7c],iVar5);
          if (*(char *)(iVar3 + 0x17) != '\0') {
            piVar4 = (int *)FUN_0045214c(param_1[0x7c],iVar5);
            FUN_00452008(piVar4,extraout_EDX_00,extraout_ECX_00);
          }
          iVar5 = iVar5 + 1;
          iVar2 = iVar2 + -1;
        } while (iVar2 != 0);
      }
      FUN_00452918(param_1,'\x01','\x01');
    }
    else {
      FUN_00452498(param_1,extraout_EDX,extraout_ECX);
    }
  }
  return;
}



void FUN_00452774(int param_1)

{
  if (*(char *)(param_1 + 0x1fe) != '\0') {
    FUN_0042aeac(param_1);
  }
  return;
}



void FUN_00452790(int *param_1,int param_2,char param_3)

{
  bool bVar1;
  int iVar2;
  WPARAM wParam;
  HWND pHVar3;
  undefined4 uVar4;
  undefined *lParam;
  uint uVar5;
  uint uVar6;
  undefined4 *in_FS_OFFSET;
  UINT UVar7;
  RECT *pRVar8;
  BOOL bErase;
  undefined4 uStack_34;
  undefined1 *puStack_30;
  undefined1 *puStack_2c;
  RECT local_1c;
  undefined *local_c;
  char local_5;
  
  puStack_2c = &stack0xfffffffc;
  local_c = (undefined *)0x0;
  puStack_30 = &LAB_004528f0;
  uStack_34 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_34;
  local_5 = param_3;
  bVar1 = FUN_00431194((int)param_1);
  if (bVar1) {
    iVar2 = FUN_0045214c(param_1[0x7c],param_2);
    if (local_5 == '\0') {
      *(undefined1 *)(iVar2 + 0x19) = 1;
      pRVar8 = &local_1c;
      wParam = FUN_0040fd28(iVar2);
      UVar7 = 0x40a;
      pHVar3 = (HWND)FUN_00430e98(param_1);
      SendMessageA(pHVar3,UVar7,wParam,(LPARAM)pRVar8);
      bErase = -1;
      pRVar8 = &local_1c;
      pHVar3 = (HWND)FUN_00430e98(param_1);
      InvalidateRect(pHVar3,pRVar8,bErase);
    }
    else if (*(char *)(iVar2 + 0x19) != '\0') {
      *(undefined1 *)(iVar2 + 0x19) = 0;
      uVar6 = 0;
      if (*(char *)(iVar2 + 0x15) == '\0') {
        uVar6 = 0x100;
      }
      else if (*(char *)(iVar2 + 0x15) == '\x02') {
        uVar6 = 0x200;
      }
      uVar4 = FUN_00452040(iVar2);
      if ((char)uVar4 != '\0') {
        uVar6 = uVar6 | 0x400;
      }
      if (*(char *)(iVar2 + 0x18) == '\x01') {
        uVar6 = uVar6 | 0x1000;
      }
      FUN_00403c74((int *)&local_c,*(int *)(iVar2 + 0xc));
      uVar4 = FUN_00452058(iVar2);
      if ((char)uVar4 == '\0') {
        if (*(char *)(iVar2 + 0x14) == '\x01') {
          FUN_004040ec((undefined4 *)&DAT_00452914,(int *)&local_c,1);
        }
        else if (*(char *)(iVar2 + 0x14) == '\x02') {
          FUN_004040ec((undefined4 *)&DAT_00452908,(int *)&local_c,1);
        }
      }
      else {
        uVar4 = FUN_00452058(iVar2);
        FUN_00452430(param_1,(int *)&local_c,*(char *)(iVar2 + 0x14),(char)uVar4);
      }
      lParam = FUN_00404020(local_c);
      uVar5 = FUN_0040fd28(iVar2);
      uVar6 = uVar6 | uVar5;
      UVar7 = 0x401;
      pHVar3 = (HWND)FUN_00430e98(param_1);
      SendMessageA(pHVar3,UVar7,uVar6,(LPARAM)lParam);
    }
  }
  *in_FS_OFFSET = uStack_34;
  puStack_2c = &LAB_004528f7;
  puStack_30 = (undefined1 *)0x4528ef;
  FUN_00403bdc((int *)&local_c);
  return;
}



// WARNING: Type propagation algorithm not settling

void FUN_00452918(int *param_1,char param_2,char param_3)

{
  bool bVar1;
  HWND pHVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  UINT UVar6;
  WPARAM WVar7;
  undefined1 *lParam;
  int *piVar8;
  WPARAM local_218;
  int local_214 [129];
  
  bVar1 = FUN_00431194((int)param_1);
  if (bVar1) {
    local_218 = FUN_00410060(param_1[0x7c]);
    if (param_2 != '\0') {
      if (0x80 < (int)local_218) {
        local_218 = 0x80;
      }
      if (local_218 == 0) {
        local_214[1] = 0xffffffff;
        piVar8 = local_214 + 1;
        WVar7 = 1;
        UVar6 = 0x404;
        pHVar2 = (HWND)FUN_00430e98(param_1);
        SendMessageA(pHVar2,UVar6,WVar7,(LPARAM)piVar8);
        lParam = &wParam_00452a2c;
        WVar7 = 0;
        UVar6 = 0x401;
        pHVar2 = (HWND)FUN_00430e98(param_1);
        SendMessageA(pHVar2,UVar6,WVar7,(LPARAM)lParam);
      }
      else {
        local_214[0] = 0;
        if (-1 < (int)(local_218 - 2)) {
          iVar5 = local_218 - 1;
          iVar4 = 0;
          piVar8 = local_214;
          do {
            piVar8 = (int *)((int)piVar8 + 4);
            iVar3 = FUN_0045214c(param_1[0x7c],iVar4);
            local_214[0] = local_214[0] + *(int *)(iVar3 + 0x10);
            *piVar8 = local_214[0];
            iVar4 = iVar4 + 1;
            iVar5 = iVar5 + -1;
          } while (iVar5 != 0);
        }
        local_214[local_218] = -1;
        piVar8 = local_214 + 1;
        UVar6 = 0x404;
        WVar7 = local_218;
        pHVar2 = (HWND)FUN_00430e98(param_1);
        SendMessageA(pHVar2,UVar6,WVar7,(LPARAM)piVar8);
      }
    }
    if (-1 < (int)(local_218 - 1)) {
      iVar5 = 0;
      do {
        FUN_00452790(param_1,iVar5,param_3);
        iVar5 = iVar5 + 1;
        local_218 = local_218 - 1;
      } while (local_218 != 0);
    }
  }
  return;
}



void FUN_00452bd8(int param_1,char param_2)

{
  if ((param_2 != *(char *)(param_1 + 0x1fe)) &&
     (*(char *)(param_1 + 0x1fe) = param_2, param_2 != '\0')) {
    if (*(char *)(param_1 + 0x49) != '\0') {
      FUN_0042aee4(param_1,'\0');
    }
    FUN_00452774(param_1);
  }
  return;
}



void FUN_00452c1c(int param_1,int param_2)

{
  FUN_0042c6cc(param_1,param_2);
  if ((*(char *)(param_1 + 0x1fe) != '\0') && (*(char *)(param_1 + 0x49) != '\0')) {
    *(undefined1 *)(param_1 + 0x1fe) = 0;
  }
  return;
}



void FUN_00452cb8(int param_1,int param_2)

{
  FUN_004305c4(param_1,param_2);
  FUN_0042e448(param_1);
  return;
}



void FUN_00452ccc(int param_1,int param_2)

{
  FUN_00430654(param_1,param_2);
  FUN_00452774(param_1);
  return;
}



void FUN_00452d1c(undefined4 param_1,int *param_2,undefined4 param_3,undefined4 param_4)

{
  (**(code **)(*param_2 + 8))(param_2,param_3,param_4);
  return;
}



int * FUN_00452d30(int *param_1,char param_2,int *param_3)

{
  int *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00431ef0(param_1,'\0',param_3);
  param_1[0x10] = DAT_00452d98;
  FUN_0042a5f8(param_1,0x17);
  FUN_0042a618(param_1,0x16);
  param_1[0x4b] = -1;
  *(undefined1 *)((int)param_1 + 0x13d) = 0;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_00452dec(int *param_1,undefined1 param_2,int param_3,int param_4)

{
  bool bVar1;
  int iVar2;
  byte bVar3;
  
  FUN_0042c374((int)param_1,param_2,param_3,param_4);
  if (*(char *)((int)param_1 + 0x13d) != '\x02') {
    return;
  }
  bVar1 = FUN_0042afcc(param_1);
  if (bVar1) {
    if ((((param_3 < 0) || (iVar2 = FUN_0042a824(param_1), iVar2 <= param_3)) || (param_4 < 0)) ||
       (iVar2 = FUN_0042a868(param_1), iVar2 < param_4)) {
      bVar3 = 0;
    }
    else {
      bVar3 = 1;
    }
    FUN_00453554((int)param_1,bVar3);
    return;
  }
  return;
}



void FUN_00452f54(int *param_1,int param_2,int param_3,int param_4,int param_5)

{
  bool bVar1;
  bool bVar2;
  uint uVar3;
  int iVar4;
  bool bVar5;
  bool bVar6;
  uint local_10;
  
  if (((((param_2 == param_1[0xc]) && (param_3 == param_1[0xd])) && (param_5 == param_1[0xe])) &&
      (param_4 == param_1[0xf])) ||
     (((param_1[0x50] != 0 || ((*(byte *)(param_1 + 8) & 1) != 0)) || (param_1[0x51] == 0)))) {
    FUN_0042a440(param_1,param_2,param_3,param_4,param_5);
  }
  else {
    local_10 = FUN_0045384c((int)param_1);
    uVar3 = FUN_00455464(param_1[0x51],local_10,param_2,param_3);
    bVar5 = uVar3 != local_10;
    if (bVar5) {
      bVar2 = false;
      iVar4 = FUN_0045384c((int)param_1);
      if (iVar4 < (int)local_10) {
        local_10 = FUN_0045384c((int)param_1);
      }
    }
    else if (((byte)(*(char *)((int)param_1 + 0x13d) - 3U) < 2) && (param_5 != param_1[0xe])) {
      bVar2 = true;
      bVar5 = bVar2;
    }
    else {
      bVar2 = false;
      bVar5 = bVar2;
    }
    if ((*(char *)((int)param_1 + 0x13d) == '\x02') &&
       ((iVar4 = FUN_00451e30(), 0x40046 < iVar4 || (*(char *)(param_1[0x51] + 0x20f) == '\0')))) {
      param_5 = (param_5 + *(int *)(param_1[0x51] + 0x1f8)) - param_1[0xe];
    }
    if (((byte)(*(char *)((int)param_1 + 0x13d) - 3U) < 2) ||
       (param_5 == *(int *)(param_1[0x51] + 0x1f8))) {
      bVar1 = false;
    }
    else {
      bVar1 = true;
    }
    bVar6 = param_4 != *(int *)(param_1[0x51] + 0x1fc);
    if (bVar2) {
      FUN_0042a440(param_1,param_2,param_3,param_4,param_5);
    }
    if ((*(byte *)(param_1 + 8) & 0x10) != 0) {
      if (bVar1) {
        FUN_00454270((int *)param_1[0x51],param_5);
      }
      if (bVar6) {
        FUN_0045425c((int *)param_1[0x51],param_4);
      }
    }
    if (((!bVar5) || (bVar1)) || (bVar6)) {
      FUN_00453fd4((int *)param_1[0x51],local_10);
    }
    else {
      if (bVar2) {
        if ((byte)(*(char *)((int)param_1 + 0x13d) - 3U) < 2) {
          FUN_004547b4((int *)param_1[0x51],local_10);
        }
        else {
          FUN_004548bc((int *)param_1[0x51],local_10);
        }
      }
      FUN_004552d0((int *)param_1[0x51]);
      FUN_0045410c((int *)param_1[0x51],0);
    }
  }
  return;
}



void FUN_00453140(int *param_1)

{
  int *piVar1;
  uint uVar2;
  int iVar3;
  HDC pHVar4;
  int iVar5;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  tagRECT *ptVar6;
  tagRECT *ptVar7;
  UINT UVar8;
  UINT UVar9;
  tagRECT local_1c;
  
  ptVar7 = &local_1c;
  ptVar6 = &local_1c;
  if (param_1[0x51] != 0) {
    if (((*(char *)((int)param_1 + 0x13d) == '\x02') && (*(char *)(param_1[0x51] + 0x20f) == '\0'))
       && (*(char *)(param_1[0x51] + 0x279) == '\0')) {
      iVar3 = FUN_00451e30();
      if (iVar3 == 0x50050) {
        piVar1 = (int *)param_1[0x48];
        if (*(char *)((int)param_1 + 0x12a) == '\0') {
          FUN_0040ea70(param_1[0xe] + -0xe,1,param_1[0xe],&local_1c.left,param_1[0xf]);
          UVar9 = 0xe;
          UVar8 = 1;
          pHVar4 = (HDC)FUN_004183d4(piVar1);
          DrawEdge(pHVar4,ptVar7,UVar8,UVar9);
          local_1c.top = 0;
          UVar9 = 1;
          UVar8 = 6;
          ptVar7 = &local_1c;
          pHVar4 = (HDC)FUN_004183d4(piVar1);
          DrawEdge(pHVar4,ptVar7,UVar8,UVar9);
        }
        else {
          FUN_0040ea70(param_1[0xe] + -0xd,0xffffffff,param_1[0xe],&local_1c.left,param_1[0xf]);
          UVar9 = 0xe;
          UVar8 = 10;
          pHVar4 = (HDC)FUN_004183d4(piVar1);
          DrawEdge(pHVar4,ptVar6,UVar8,UVar9);
          UVar9 = 1;
          UVar8 = 6;
          ptVar7 = &local_1c;
          pHVar4 = (HDC)FUN_004183d4(piVar1);
          DrawEdge(pHVar4,ptVar7,UVar8,UVar9);
        }
      }
    }
    ptVar7 = &local_1c;
    ptVar6 = &local_1c;
    if (*(char *)((int)param_1 + 0x13d) == '\x04') {
      piVar1 = (int *)param_1[0x48];
      uVar2 = param_1[0xe];
      iVar3 = (int)uVar2 >> 1;
      if (iVar3 < 0) {
        iVar3 = iVar3 + (uint)((uVar2 & 1) != 0);
      }
      FUN_0040ea70(iVar3 + -1,0,uVar2,&local_1c.left,param_1[0xf]);
      UVar9 = 1;
      UVar8 = 6;
      pHVar4 = (HDC)FUN_004183d4(piVar1);
      DrawEdge(pHVar4,ptVar7,UVar8,UVar9);
    }
    if ((*(byte *)(param_1 + 8) & 0x10) != 0) {
      if ((byte)(*(char *)((int)param_1 + 0x13d) - 3U) < 2) {
        piVar1 = (int *)param_1[0x48];
        FUN_004175fc((int *)piVar1[4],2);
        FUN_004175e0((int *)piVar1[4],CONCAT31((int3)((uint)extraout_EDX >> 8),0xe),extraout_ECX);
        FUN_00417520((int *)piVar1[4],0xffd8ce);
        FUN_00417920((int *)piVar1[5],'\x01');
        iVar3 = FUN_0042a824(param_1);
        iVar5 = FUN_0042a868(param_1);
        FUN_00418008(piVar1,0,0,iVar5,iVar3);
      }
      else if ((*(char *)(param_1[0x51] + 0x20f) != '\0') &&
              (*(char *)((int)param_1 + 0x12a) == '\0')) {
        piVar1 = (int *)param_1[0x48];
        FUN_0040ea70(0,0,param_1[0xe],&local_1c.left,param_1[0xf]);
        UVar9 = 0xf;
        UVar8 = 4;
        pHVar4 = (HDC)FUN_004183d4(piVar1);
        DrawEdge(pHVar4,ptVar6,UVar8,UVar9);
      }
    }
  }
  return;
}



byte FUN_00453338(int *param_1)

{
  char cVar1;
  byte bVar2;
  
  bVar2 = 0;
  if ((*(char *)((int)param_1 + 0x12a) != '\0') &&
     (bVar2 = DAT_00474baa, *(char *)((int)param_1 + 0x13d) == '\x01')) {
    bVar2 = DAT_00474ba8;
  }
  cVar1 = (**(code **)(*param_1 + 0x4c))();
  if ((cVar1 != '\0') &&
     (((int *)param_1[0x51] == (int *)0x0 ||
      (cVar1 = (**(code **)(*(int *)param_1[0x51] + 0x4c))(), cVar1 != '\0')))) {
    bVar2 = bVar2 | DAT_00474bac;
  }
  if ((*(char *)((int)param_1 + 0x47) == '\0') && ((*(byte *)(param_1 + 8) & 0x10) == 0)) {
    bVar2 = bVar2 | DAT_00474bae;
  }
  if ((char)param_1[0x4c] != '\0') {
    bVar2 = bVar2 | DAT_00474bb0;
  }
  if ((char)param_1[0x4f] != '\0') {
    bVar2 = bVar2 | DAT_00474bb2;
  }
  if (*(char *)((int)param_1 + 0x131) != '\0') {
    bVar2 = bVar2 | DAT_00474bb6;
  }
  return bVar2;
}



void FUN_00453424(int *param_1,uint param_2)

{
  undefined1 uVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  *(bool *)((int)param_1 + 0x12a) = (param_2 & 3) != 0;
  (**(code **)(*param_1 + 0x5c))(param_1,(param_2 & 4) != 0);
  if ((*(byte *)(param_1 + 8) & 0x10) == 0) {
    FUN_0042acd8(param_1,CONCAT31((int3)((uint)extraout_EDX >> 8),(param_2 & 8) == 0),extraout_ECX);
  }
  if ((*(char *)((int)param_1 + 0x12a) == '\0') && ((param_2 & 0x10) != 0)) {
    uVar1 = 1;
  }
  else {
    uVar1 = 0;
  }
  *(undefined1 *)(param_1 + 0x4c) = uVar1;
  *(bool *)(param_1 + 0x4f) = (param_2 & 0x20) != 0;
  *(bool *)((int)param_1 + 0x131) = (param_2 & 0x80) != 0;
  return;
}



void FUN_0045348c(int *param_1)

{
  int *piVar1;
  uint uVar2;
  int iVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  if (((*(byte *)(param_1 + 8) & 0x10) == 0) && (param_1[0x51] != 0)) {
    piVar1 = (int *)param_1[0x51];
    if (piVar1 != (int *)0x0) {
      uVar2 = (*(byte *)((int)param_1 + 0x47) ^ 1) & 0x7f;
      iVar3 = FUN_0045384c((int)param_1);
      FUN_0042bd64((int)piVar1,0x404,iVar3,uVar2);
      if ((char)piVar1[0x13] != '\0') {
        FUN_00403130(piVar1,extraout_EDX,extraout_ECX);
      }
    }
    (**(code **)(*param_1 + 0x94))();
    iVar3 = FUN_0045384c((int)param_1);
    FUN_0045410c((int *)param_1[0x51],iVar3);
  }
  return;
}



void FUN_004534fc(int *param_1)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  
  iVar1 = param_1[0x51];
  if (iVar1 != 0) {
    uVar2 = (**(code **)(*param_1 + 0x4c))();
    uVar2 = uVar2 & 0x7f;
    iVar3 = FUN_0045384c((int)param_1);
    FUN_0042bd64(iVar1,0x401,iVar3,uVar2);
  }
  return;
}



void FUN_00453554(int param_1,byte param_2)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  
  if (param_2 != *(byte *)(param_1 + 0x12a)) {
    *(byte *)(param_1 + 0x12a) = param_2;
    iVar1 = *(int *)(param_1 + 0x144);
    if (iVar1 != 0) {
      uVar2 = FUN_0040711c((uint)param_2,0);
      iVar3 = FUN_0045384c(param_1);
      FUN_0042bd64(iVar1,*(undefined4 *)
                          (&DAT_00474bc4 + (uint)(*(char *)(param_1 + 0x13d) == '\x01') * 4),iVar3,
                   uVar2);
      FUN_00454b1c(*(int *)(param_1 + 0x144));
    }
  }
  return;
}



void FUN_004535b4(int param_1,int param_2,undefined4 param_3)

{
  if ((param_2 != *(int *)(param_1 + 0x138)) && (*(int *)(param_1 + 0x138) = param_2, param_2 != 0))
  {
    FUN_00414540(param_2,param_1,param_3);
  }
  return;
}



void FUN_004535f0(int *param_1,int param_2)

{
  int iVar1;
  
  if ((param_2 != param_1[0x4b]) && (param_1[0x4b] = param_2, param_1[0x51] != 0)) {
    (**(code **)(*param_1 + 0x90))();
    iVar1 = FUN_0045384c((int)param_1);
    FUN_0042bd64(param_1[0x51],0x42b,iVar1,param_2);
    if ((*(char *)(param_1[0x51] + 0x210) != '\0') || (*(char *)(param_1[0x51] + 0x20f) != '\0')) {
      (**(code **)(*param_1 + 0x74))();
    }
  }
  return;
}



void FUN_00453654(int param_1,byte param_2)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  
  if (param_2 != *(byte *)(param_1 + 0x131)) {
    *(byte *)(param_1 + 0x131) = param_2;
    iVar1 = *(int *)(param_1 + 0x144);
    if (iVar1 != 0) {
      uVar2 = (uint)param_2;
      iVar3 = FUN_0045384c(param_1);
      FUN_0042bd64(iVar1,0x406,iVar3,uVar2);
    }
  }
  return;
}



void FUN_004536e0(int *param_1,int param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_EDX;
  
  if (param_2 != 0) {
    if (param_2 != param_1[0x4d]) {
      FUN_00414540(param_2,(int)param_1,param_3);
    }
    iVar1 = FUN_0043b3f0(param_2);
    FUN_0042a20c(param_1,iVar1,extraout_ECX);
    FUN_0042adf0((int)param_1,*(uint **)(param_2 + 0x24));
    FUN_00453554((int)param_1,*(byte *)(param_2 + 0x2c));
    (**(code **)(*param_1 + 0x5c))(param_1,*(undefined1 *)(param_2 + 0x2d));
    FUN_00403c30(param_1 + 0x1c,*(undefined4 **)(param_2 + 0x4c));
    FUN_004535f0(param_1,*(int *)(param_2 + 0x34));
    FUN_0042acd8(param_1,CONCAT31((int3)((uint)extraout_EDX >> 8),*(undefined1 *)(param_2 + 0x32)),
                 extraout_ECX_00);
  }
  param_1[0x4d] = param_2;
  return;
}



void FUN_00453814(int *param_1,char param_2)

{
  if ((param_2 != (char)param_1[0x4f]) && (*(char *)(param_1 + 0x4f) = param_2, param_1[0x51] != 0))
  {
    (**(code **)(*param_1 + 0x90))();
  }
  return;
}



int FUN_0045384c(int param_1)

{
  int iVar1;
  
  if (*(int *)(param_1 + 0x144) != 0) {
    iVar1 = FUN_0040f544(*(int *)(*(int *)(param_1 + 0x144) + 0x200),param_1);
    return iVar1;
  }
  return -1;
}



void FUN_0045389c(int param_1)

{
  int *piVar1;
  int iVar2;
  
  piVar1 = *(int **)(param_1 + 0x144);
  if (piVar1 != (int *)0x0) {
    iVar2 = FUN_0045384c(param_1);
    FUN_004548bc(piVar1,iVar2);
  }
  return;
}



undefined4 FUN_0045390c(int param_1)

{
  if (*(int **)(param_1 + 0x5c) != (int *)0x0) {
    param_1 = (**(code **)(**(int **)(param_1 + 0x5c) + 0x24))();
    if ((char)param_1 != '\0') {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



undefined4 FUN_0045392c(int param_1)

{
  if (*(int **)(param_1 + 0x5c) != (int *)0x0) {
    param_1 = (**(code **)(**(int **)(param_1 + 0x5c) + 0x34))();
    if ((char)param_1 != '\0') {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



void FUN_0045394c(int *param_1,int *param_2,char param_3)

{
  int *piVar1;
  
  FUN_0042c8d0(param_1,param_2,param_3);
  piVar1 = FUN_004030cc(param_2,(int)PTR_PTR_00435828);
  if ((char)piVar1 != '\0') {
    if ((param_3 == '\0') || (*(char *)((int)param_1 + 0x12a) == '\0')) {
      FUN_00453554((int)param_1,*(byte *)(param_2 + 0x16));
    }
    if ((param_3 == '\0') || (param_1[0x4b] == -1)) {
      FUN_004535f0(param_1,param_2[0x19]);
    }
  }
  return;
}



int * FUN_00453a48(int *param_1,char param_2,int *param_3)

{
  int iVar1;
  int *piVar2;
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_ECX_03;
  undefined4 extraout_ECX_04;
  undefined4 extraout_ECX_05;
  undefined4 extraout_ECX_06;
  char extraout_DL;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  RECT *pRVar3;
  undefined4 in_stack_ffffffd0;
  undefined4 in_stack_ffffffd4;
  RECT local_18;
  char local_5;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffd0,in_stack_ffffffd4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  local_5 = param_2;
  FUN_0044f7f4(param_1,'\0',param_3);
  param_1[0x10] = DAT_00453bdc;
  FUN_0042a5f8(param_1,0x96);
  FUN_0042a618(param_1,0x1d);
  FUN_0042a3ac(param_1,CONCAT31((int3)((uint)extraout_EDX >> 8),1),extraout_ECX_00);
  FUN_0044f848((int)param_1,DAT_00453be0);
  param_1[0x7e] = 0x17;
  param_1[0x7f] = 0x16;
  *(undefined1 *)(param_1 + 0x8c) = 1;
  *(undefined1 *)((int)param_1 + 0x211) = 1;
  iVar1 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX_01);
  param_1[0x80] = iVar1;
  piVar2 = FUN_00417954((int *)PTR_PTR_004262cc,'\x01',extraout_ECX_02);
  param_1[0x82] = (int)piVar2;
  FUN_00429b28(piVar2,(int)param_1);
  iVar1 = FUN_00402f24((int *)PTR_DAT_00436454,'\x01',extraout_ECX_03);
  param_1[0x86] = iVar1;
  *(int **)(iVar1 + 0xc) = param_1;
  *(undefined1 **)(iVar1 + 8) = &LAB_00454ed8;
  iVar1 = FUN_00402f24((int *)PTR_DAT_00436454,'\x01',extraout_ECX_04);
  param_1[0x88] = iVar1;
  *(int **)(iVar1 + 0xc) = param_1;
  *(undefined1 **)(iVar1 + 8) = &LAB_00454f7c;
  iVar1 = FUN_00402f24((int *)PTR_DAT_00436454,'\x01',extraout_ECX_05);
  param_1[0x8a] = iVar1;
  *(int **)(iVar1 + 0xc) = param_1;
  *(undefined1 **)(iVar1 + 8) = &LAB_00455020;
  piVar2 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX_06);
  param_1[0x8d] = (int)piVar2;
  (**(code **)(*piVar2 + 0x40))(piVar2,1);
  (**(code **)(*piVar2 + 0x34))(piVar2,1);
  iVar1 = FUN_0041c784(piVar2);
  FUN_00417804(*(int **)(iVar1 + 0x14),0x8000000f);
  FUN_0040ea70(0,0,1,&local_18.left,1);
  pRVar3 = &local_18;
  piVar2 = (int *)FUN_0041c784(piVar2);
  FUN_00417eb0(piVar2,pRVar3);
  param_1[0x29] = (int)PTR_PTR_0044f66c;
  if (local_5 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffd0;
  }
  return param_1;
}



undefined4 FUN_00453dd0(void)

{
  int *piVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  int in_stack_00000004;
  
  iVar3 = *(int *)(*(int *)(*(int *)(in_stack_00000004 + -4) + 0x200) + 8);
  if (-1 < iVar3 + -1) {
    iVar4 = 0;
    do {
      piVar1 = (int *)FUN_0040f4e8(*(undefined4 **)(*(int *)(in_stack_00000004 + -4) + 0x200),iVar4)
      ;
      piVar2 = FUN_004030cc(piVar1,(int)PTR_PTR_00450b54);
      if (((char)piVar2 != '\0') &&
         ((((*(byte *)(*(int *)(in_stack_00000004 + -4) + 0x20) & 0x10) != 0 ||
           (*(char *)((int)piVar1 + 0x47) != '\0')) &&
          (1 < (byte)(*(char *)((int)piVar1 + 0x13d) - 3U))))) {
        return CONCAT31((int3)((uint)*(int *)(in_stack_00000004 + -4) >> 8),1);
      }
      iVar4 = iVar4 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  return 0;
}



void FUN_00453e40(int *param_1,uint param_2,int param_3)

{
  int iVar1;
  undefined4 uVar2;
  undefined2 extraout_var;
  uint uVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  undefined2 local_c;
  
  puStack_1c = (undefined1 *)0x453e58;
  FUN_004552c0((int)param_1);
  puStack_20 = &LAB_00453f77;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  puStack_1c = &stack0xfffffffc;
  FUN_00430e74(param_1);
  FUN_0042bd64((int)param_1,0x41e,0x14,0);
  FUN_0042bd64((int)param_1,0x42f,param_1[0x8b],0);
  iVar1 = param_1[0x85];
  if (iVar1 == 0) {
    iVar1 = param_1[0x87];
    if (iVar1 == 0) {
      iVar1 = param_1[0x89];
      if (iVar1 == 0) {
        uVar3 = 0;
        local_c = 0;
      }
      else {
        uVar3 = *(uint *)(iVar1 + 0x28);
        local_c = (undefined2)*(undefined4 *)(iVar1 + 0x24);
      }
    }
    else {
      uVar3 = *(uint *)(iVar1 + 0x28);
      local_c = (undefined2)*(undefined4 *)(iVar1 + 0x24);
    }
  }
  else {
    uVar3 = *(uint *)(iVar1 + 0x28);
    local_c = (undefined2)*(undefined4 *)(iVar1 + 0x24);
  }
  uVar2 = FUN_004071b0(uVar3,CONCAT22(extraout_var,local_c));
  FUN_0042bd64((int)param_1,0x420,0,uVar2);
  if (*(char *)((int)param_1 + 0x20d) != '\0') {
    uVar2 = FUN_00453dd0();
    if ((char)uVar2 != '\0') {
      param_3 = param_3 - param_1[0x90];
    }
  }
  if ((int)param_2 < 1) {
    param_2 = 1;
  }
  if (param_3 < 1) {
    param_3 = 1;
  }
  uVar2 = FUN_004071b0(param_2,param_3);
  FUN_0042bd64((int)param_1,0x41f,0,uVar2);
  param_1[0x7e] = param_2;
  param_1[0x7f] = param_3;
  *in_FS_OFFSET = uStack_24;
  puStack_1c = &LAB_00453f7e;
  puStack_20 = (undefined1 *)0x453f76;
  FUN_004552c8((int)param_1);
  return;
}



void FUN_00453fd4(int *param_1,undefined4 param_2)

{
  int iVar1;
  int *piVar2;
  uint uVar3;
  int iVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_44;
  undefined1 *puStack_40;
  int local_2c;
  int local_28;
  int local_24;
  int local_20;
  undefined1 local_1c [12];
  int *local_10;
  int *local_8;
  
  if ((*(byte *)(param_1 + 8) & 1) == 0) {
    puStack_40 = (undefined1 *)0x453ffd;
    iVar1 = FUN_0042bd64((int)param_1,0x417,param_2,local_1c);
    if (iVar1 != 0) {
      puStack_40 = (undefined1 *)0x454017;
      iVar1 = FUN_0042bd64((int)param_1,0x41d,param_2,&local_2c);
      if (iVar1 != 0) {
        local_8 = local_10;
        piVar2 = FUN_004030cc(local_10,(int)PTR_PTR_00450b54);
        if ((char)piVar2 != '\0') {
          (**(code **)(*local_8 + 0x88))();
        }
        puStack_40 = &LAB_004540fb;
        uStack_44 = *in_FS_OFFSET;
        *in_FS_OFFSET = &uStack_44;
        FUN_004030cc(local_8,(int)PTR_PTR_00450b54);
        if ((char)piVar2 == '\0') {
          piVar2 = FUN_004030cc(local_8,(int)PTR_PTR_00427220);
          if ((char)piVar2 != '\0') {
            FUN_00430e74(param_1);
          }
          FUN_0042a7e8(local_8,&local_2c);
          iVar1 = local_8[0xf];
          if (iVar1 < local_20 - local_28) {
            uVar3 = (local_20 - local_28) - iVar1;
            iVar4 = (int)uVar3 >> 1;
            if (iVar4 < 0) {
              iVar4 = iVar4 + (uint)((uVar3 & 1) != 0);
            }
            (**(code **)(*local_8 + 0x7c))
                      (local_8,local_2c,local_28 + iVar4,iVar1,local_24 - local_2c);
          }
        }
        else {
          FUN_0042a7e8(local_8,&local_2c);
        }
        *in_FS_OFFSET = uStack_44;
        puStack_40 = (undefined1 *)0x4540eb;
        piVar2 = FUN_004030cc(local_8,(int)PTR_PTR_00450b54);
        if ((char)piVar2 != '\0') {
          puStack_40 = (undefined1 *)0x4540fa;
          (**(code **)(*local_8 + 0x8c))();
        }
        return;
      }
    }
  }
  return;
}



void FUN_0045410c(int *param_1,int param_2)

{
  int iVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  if (((*(byte *)(param_1 + 8) & 1) == 0) && (param_1[0x8f] < 1)) {
    puStack_14 = (undefined1 *)0x454134;
    FUN_004552c0((int)param_1);
    puStack_18 = &LAB_00454176;
    uStack_1c = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_1c;
    puStack_14 = &stack0xfffffffc;
    iVar1 = FUN_00455308((int)param_1);
    iVar1 = iVar1 + -1;
    if (param_2 - iVar1 == 0 || param_2 < iVar1) {
      iVar2 = (param_2 - iVar1) + -1;
      do {
        FUN_00453fd4(param_1,iVar1);
        iVar1 = iVar1 + -1;
        iVar2 = iVar2 + 1;
      } while (iVar2 != 0);
    }
    *in_FS_OFFSET = uStack_1c;
    puStack_14 = (undefined1 *)0x45417d;
    puStack_18 = (undefined1 *)0x454175;
    FUN_004552c8((int)param_1);
    return;
  }
  return;
}



void FUN_00454184(int param_1,uint *param_2,uint *param_3)

{
  bool bVar1;
  int iVar2;
  uint uVar3;
  int iVar4;
  int local_34;
  int local_30;
  int local_2c;
  int local_28;
  undefined1 local_24 [9];
  byte local_1b;
  
  bVar1 = FUN_00431194(param_1);
  if (bVar1) {
    iVar2 = FUN_00451e30();
    if (iVar2 < 0x40046) {
      iVar2 = FUN_00455308(param_1);
      iVar2 = iVar2 + -1;
      if (-1 < iVar2) {
        while (((-1 < iVar2 && (iVar4 = FUN_0042bd64(param_1,0x417,iVar2,local_24), iVar4 != 0)) &&
               ((local_1b & 1) != 0))) {
          iVar2 = iVar2 + -1;
        }
        if (iVar2 < 0) {
          iVar2 = FUN_0042bd64(param_1,0x41d,0,&local_34);
          if (iVar2 != 0) {
            *param_3 = local_28 - local_30;
          }
        }
        else {
          iVar2 = FUN_0042bd64(param_1,0x41d,iVar2,&local_34);
          if (iVar2 != 0) {
            *param_3 = local_28 - local_30;
            *param_2 = local_2c - local_34;
          }
        }
      }
    }
    else {
      uVar3 = FUN_0042bd64(param_1,0x43a,0,0);
      *param_3 = uVar3 >> 0x10;
      *param_2 = uVar3 & 0xffff;
    }
  }
  return;
}



void FUN_0045425c(int *param_1,int param_2)

{
  if (param_2 != param_1[0x7f]) {
    param_1[0x7f] = param_2;
    FUN_004550d8(param_1);
  }
  return;
}



void FUN_00454270(int *param_1,int param_2)

{
  if (param_2 != param_1[0x7e]) {
    param_1[0x7e] = param_2;
    FUN_004550d8(param_1);
  }
  return;
}



void FUN_00454284(int *param_1,int *param_2)

{
  int *piVar1;
  uint uVar2;
  
  piVar1 = FUN_004030cc(param_2,(int)PTR_PTR_00450b54);
  if ((char)piVar1 != '\0') {
    param_2[0x51] = (int)param_1;
  }
  if ((*(byte *)(param_2 + 8) & 1) == 0) {
    uVar2 = FUN_0040f544(param_1[0x80],(int)param_2);
    if ((int)uVar2 < 0) {
      uVar2 = FUN_00455318((int)param_1,uVar2,param_2[0xc],param_2[0xd]);
      FUN_0040f564((int *)param_1[0x80],uVar2,(int)param_2);
      FUN_004543c0((int)param_1,0x415,uVar2,uVar2);
    }
    else {
      uVar2 = FUN_00455464((int)param_1,uVar2,param_2[0xc],param_2[0xd]);
    }
  }
  else {
    uVar2 = FUN_0040f38c((int *)param_1[0x80],(int)param_2);
    FUN_004548bc(param_1,uVar2);
  }
  if (*(char *)((int)param_1 + 0x211) == '\0') {
    FUN_0045410c(param_1,uVar2);
  }
  else {
    FUN_0045410c(param_1,0);
  }
  FUN_004550d8(param_1);
  return;
}



void FUN_00454340(int *param_1,int *param_2)

{
  int iVar1;
  int *piVar2;
  
  iVar1 = FUN_0040f544(param_1[0x80],(int)param_2);
  if (-1 < iVar1) {
    piVar2 = FUN_004030cc(param_2,(int)PTR_PTR_00450b54);
    if ((char)piVar2 != '\0') {
      param_2[0x51] = 0;
    }
    iVar1 = FUN_0040f680((int *)param_1[0x80],(int)param_2);
    FUN_0042bd64((int)param_1,0x416,iVar1,0);
    FUN_004552d0(param_1);
    if (*(char *)((int)param_1 + 0x211) == '\0') {
      FUN_0045410c(param_1,iVar1);
    }
    else {
      FUN_0045410c(param_1,0);
    }
    FUN_004550d8(param_1);
  }
  return;
}



void FUN_004543c0(int param_1,undefined4 param_2,int param_3,undefined4 param_4)

{
  int *piVar1;
  int *piVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_103c;
  undefined1 *puStack_1038;
  undefined1 *puStack_1034;
  int local_1024;
  char local_1020;
  undefined1 auStack_101f [27];
  int iStack_1004;
  int local_20;
  int local_1c;
  byte local_18;
  byte local_17;
  int *local_14;
  undefined4 local_10;
  undefined *local_c;
  undefined4 local_8;
  
  puStack_1034 = &stack0xfffffffc;
  local_1024 = 0;
  local_c = (undefined *)0x0;
  puStack_1038 = &LAB_0045458f;
  uStack_103c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_103c;
  iStack_1004 = param_1;
  local_8 = param_2;
  piVar1 = (int *)FUN_0040f4e8(*(undefined4 **)(param_1 + 0x200),param_3);
  piVar2 = FUN_004030cc(piVar1,(int)PTR_PTR_00450b54);
  local_14 = piVar1;
  if ((char)piVar2 == '\0') {
    FUN_00402c14(&local_20,0x14,0);
    local_17 = DAT_00474bbe;
    local_20 = piVar1[0xe];
    local_1c = -1;
    if ((*(char *)((int)piVar1 + 0x47) == '\0') && ((*(byte *)(piVar1 + 8) & 0x10) == 0)) {
      local_18 = local_18 | DAT_00474bae;
    }
    local_10 = 0xffffffff;
  }
  else {
    FUN_00402c14(&local_20,0x14,0);
    if ((byte)(*(byte *)((int)piVar1 + 0x13d) - 3) < 2) {
      local_20 = piVar1[0xe];
      local_1c = -1;
    }
    else {
      local_20 = piVar1[0x4b];
      local_1c = param_3;
      if (local_20 < 0) {
        local_20 = -2;
      }
    }
    local_17 = (&DAT_00474bb8)[(*(byte *)((int)piVar1 + 0x13d) & 0x7f) * 2];
    if ((*(char *)((int)piVar1 + 0x129) != '\0') && (iVar3 = FUN_00451e30(), 0x40046 < iVar3)) {
      local_17 = local_17 | 0x10;
    }
    local_18 = FUN_00453338(piVar1);
    if (*(char *)((int)piVar1 + 299) != '\0') {
      local_17 = local_17 | 4;
    }
    if (*(char *)(param_1 + 0x20d) == '\0') {
      local_10 = 0xffffffff;
    }
    else {
      FUN_0042adc0((int)piVar1,&local_1024);
      if (local_1024 == 0) {
        FUN_00403c74((int *)&local_c,0x4545ac);
      }
      else {
        FUN_0042adc0((int)piVar1,(int *)&local_c);
      }
      FUN_00408bb8(&local_1020,local_c);
      iVar3 = FUN_00403e5c((int)local_c);
      auStack_101f[iVar3] = 0;
      local_10 = FUN_0042bd64(param_1,0x41c,0,&local_1020);
    }
  }
  FUN_0042bd64(param_1,local_8,param_4,&local_20);
  *in_FS_OFFSET = uStack_103c;
  puStack_1034 = &LAB_00454596;
  puStack_1038 = (undefined1 *)0x454586;
  FUN_00403bdc(&local_1024);
  puStack_1038 = (undefined1 *)0x45458e;
  FUN_00403bdc((int *)&local_c);
  return;
}



void FUN_004545b0(int param_1,undefined4 param_2,int param_3,undefined4 param_4)

{
  int *piVar1;
  int *piVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_104c;
  undefined1 *puStack_1048;
  undefined1 *puStack_1044;
  int local_1034;
  char local_1030;
  undefined1 auStack_102f [43];
  int iStack_1004;
  undefined4 local_30;
  uint local_2c;
  int local_28;
  int local_24;
  byte local_20;
  byte local_1f;
  undefined2 local_1e;
  int *local_1c;
  char *local_18;
  int local_14;
  undefined *local_10;
  int local_c;
  undefined4 local_8;
  
  puStack_1044 = &stack0xfffffffc;
  local_1034 = 0;
  local_10 = (undefined *)0x0;
  puStack_1048 = &LAB_00454793;
  uStack_104c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_104c;
  iStack_1004 = param_1;
  local_c = param_3;
  local_8 = param_2;
  piVar1 = (int *)FUN_0040f4e8(*(undefined4 **)(param_1 + 0x200),param_3);
  FUN_00402c14(&local_30,0x20,0);
  local_30 = 0x20;
  piVar2 = FUN_004030cc(piVar1,(int)PTR_PTR_00450b54);
  local_1c = piVar1;
  if ((char)piVar2 == '\0') {
    local_2c = 0x7e;
    local_1f = DAT_00474bbe;
    local_1e = (undefined2)piVar1[0xe];
    local_28 = -1;
    local_18 = (char *)0x0;
    local_14 = 0;
  }
  else {
    local_2c = 0x7c;
    if ((byte)(*(byte *)((int)piVar1 + 0x13d) - 3) < 2) {
      local_28 = -1;
    }
    else {
      local_2c = 0x7d;
      local_24 = piVar1[0x4b];
      if (local_24 < 0) {
        local_24 = -2;
      }
      local_28 = local_c;
    }
    local_1e = (undefined2)piVar1[0xe];
    local_1f = (&DAT_00474bb8)[(*(byte *)((int)piVar1 + 0x13d) & 0x7f) * 2];
    if (*(char *)((int)piVar1 + 0x129) != '\0') {
      local_1f = local_1f | 0x10;
    }
    if (*(char *)((int)piVar1 + 299) != '\0') {
      local_1f = local_1f | 4;
    }
    local_20 = FUN_00453338(piVar1);
    if (*(char *)(param_1 + 0x20d) == '\0') {
      local_18 = (char *)0x0;
      local_14 = 0;
    }
    else {
      FUN_0042adc0((int)piVar1,&local_1034);
      if (local_1034 == 0) {
        FUN_00403c74((int *)&local_10,0x4547b0);
      }
      else {
        FUN_0042adc0((int)piVar1,(int *)&local_10);
      }
      FUN_00408bb8(&local_1030,local_10);
      iVar3 = FUN_00403e5c((int)local_10);
      auStack_102f[iVar3] = 0;
      local_18 = &local_1030;
      local_14 = FUN_00403e5c((int)local_10);
      local_2c = local_2c | 2;
    }
    if ((byte)(*(char *)((int)piVar1 + 0x13d) - 3U) < 2) {
      local_2c = 0x1c;
      local_20 = 0x24;
      local_1f = 0;
    }
  }
  FUN_0042bd64(param_1,local_8,param_4,&local_30);
  *in_FS_OFFSET = uStack_104c;
  puStack_1044 = &LAB_0045479a;
  puStack_1048 = (undefined1 *)0x45478a;
  FUN_00403bdc(&local_1034);
  puStack_1048 = (undefined1 *)0x454792;
  FUN_00403bdc((int *)&local_10);
  return;
}



uint FUN_004547b4(int *param_1,int param_2)

{
  char cVar1;
  HWND pHVar2;
  uint uVar3;
  uint dwNewLong;
  int *in_FS_OFFSET;
  int in_stack_ffffffcc;
  int iVar4;
  int iStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  
  if (((*(byte *)(param_1 + 8) & 1) == 0) && (param_1[0x8f] == 0)) {
    puStack_18 = (undefined1 *)0x4547e5;
    FUN_004552c0((int)param_1);
    puStack_1c = &dwNewLong_004548a9;
    iStack_20 = *in_FS_OFFSET;
    *in_FS_OFFSET = (int)&iStack_20;
    iVar4 = -0x10;
    puStack_18 = &stack0xfffffffc;
    pHVar2 = (HWND)FUN_00430e98(param_1);
    uVar3 = GetWindowLongA(pHVar2,iVar4);
    dwNewLong = uVar3 & 0xefffffff;
    iVar4 = -0x10;
    pHVar2 = (HWND)FUN_00430e98(param_1);
    SetWindowLongA(pHVar2,iVar4,dwNewLong);
    *in_FS_OFFSET = (int)&stack0xffffffd4;
    iVar4 = FUN_00455308((int)param_1);
    if (param_2 < iVar4) {
      in_stack_ffffffcc = 0x454849;
      cVar1 = FUN_004543c0((int)param_1,0x416,param_2,param_2);
      if (cVar1 != '\0') {
        FUN_004543c0((int)param_1,0x415,param_2,param_2);
        in_stack_ffffffcc = param_2;
      }
    }
    *in_FS_OFFSET = in_stack_ffffffcc;
    iVar4 = -0x10;
    pHVar2 = (HWND)FUN_00430e98(param_1);
    uVar3 = SetWindowLongA(pHVar2,iVar4,uVar3);
    return uVar3;
  }
  return (uint)param_1 & 0xffffff00;
}



void FUN_004548bc(int *param_1,int param_2)

{
  HWND pHVar1;
  uint dwNewLong;
  uint dwNewLong_00;
  int *in_FS_OFFSET;
  int iVar2;
  int iStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  
  if (((*(byte *)(param_1 + 8) & 1) == 0) && (param_1[0x8f] < 1)) {
    puStack_14 = (undefined1 *)0x4548ed;
    FUN_004552c0((int)param_1);
    puStack_18 = &nIndex_004549aa;
    iStack_1c = *in_FS_OFFSET;
    *in_FS_OFFSET = (int)&iStack_1c;
    puStack_14 = &stack0xfffffffc;
    FUN_00430e74(param_1);
    iVar2 = -0x10;
    pHVar1 = (HWND)FUN_00430e98(param_1);
    dwNewLong = GetWindowLongA(pHVar1,iVar2);
    dwNewLong_00 = dwNewLong & 0xefffffff;
    iVar2 = -0x10;
    pHVar1 = (HWND)FUN_00430e98(param_1);
    SetWindowLongA(pHVar1,iVar2,dwNewLong_00);
    *in_FS_OFFSET = (int)&stack0xffffffd8;
    iVar2 = FUN_00455308((int)param_1);
    if (param_2 < iVar2) {
      FUN_004545b0((int)param_1,0x442,param_2,param_2);
    }
    else {
      FUN_004543c0((int)param_1,0x415,param_2,param_2);
    }
    *in_FS_OFFSET = param_2;
    iVar2 = -0x10;
    pHVar1 = (HWND)FUN_00430e98(param_1);
    SetWindowLongA(pHVar1,iVar2,dwNewLong);
    return;
  }
  return;
}



void FUN_004549b8(int *param_1)

{
  HWND pHVar1;
  uint dwNewLong;
  uint dwNewLong_00;
  int iVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar4;
  int iVar5;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  
  puStack_1c = (undefined1 *)0x4549cc;
  FUN_004552c0((int)param_1);
  puStack_20 = &nIndex_00454aa3;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  puStack_1c = &stack0xfffffffc;
  FUN_00430e74(param_1);
  iVar5 = -0x10;
  pHVar1 = (HWND)FUN_00430e98(param_1);
  dwNewLong = GetWindowLongA(pHVar1,iVar5);
  dwNewLong_00 = dwNewLong & 0xefffffff;
  iVar5 = -0x10;
  pHVar1 = (HWND)FUN_00430e98(param_1);
  SetWindowLongA(pHVar1,iVar5,dwNewLong_00);
  uVar4 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffffd0;
  iVar2 = FUN_00455308((int)param_1);
  iVar5 = *(int *)(param_1[0x80] + 8);
  if (-1 < iVar5 + -1) {
    iVar3 = 0;
    do {
      if (iVar3 < iVar2) {
        FUN_004545b0((int)param_1,0x442,iVar3,iVar3);
      }
      else {
        FUN_004543c0((int)param_1,0x415,iVar3,iVar3);
      }
      iVar3 = iVar3 + 1;
      iVar5 = iVar5 + -1;
    } while (iVar5 != 0);
  }
  *in_FS_OFFSET = uVar4;
  iVar5 = -0x10;
  pHVar1 = (HWND)FUN_00430e98(param_1);
  SetWindowLongA(pHVar1,iVar5,dwNewLong);
  return;
}



void FUN_00454abc(int param_1,undefined4 param_2)

{
  byte bVar1;
  int iVar2;
  uint uVar3;
  undefined4 extraout_EDX;
  undefined1 auStack_1c [8];
  undefined1 local_14;
  int *local_10;
  
  iVar2 = FUN_0042bd64(param_1,0x417,param_2,auStack_1c);
  if (iVar2 != 0) {
    FUN_00453424(local_10,CONCAT31((int3)((uint)extraout_EDX >> 8),local_14));
    bVar1 = FUN_00453338(local_10);
    uVar3 = FUN_0040711c((uint)bVar1,0);
    iVar2 = FUN_0045384c((int)local_10);
    FUN_0042bd64(param_1,0x411,iVar2,uVar3);
  }
  return;
}



void FUN_00454b1c(int param_1)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  iVar3 = *(int *)(*(int *)(param_1 + 0x200) + 8);
  if (-1 < iVar3 + -1) {
    iVar2 = 0;
    do {
      piVar1 = (int *)FUN_0040f4e8(*(undefined4 **)(param_1 + 0x200),iVar2);
      piVar1 = FUN_004030cc(piVar1,(int)PTR_PTR_00450b54);
      if ((char)piVar1 != '\0') {
        FUN_00454abc(param_1,iVar2);
      }
      iVar2 = iVar2 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  return;
}



void FUN_00454b60(int *param_1,undefined4 param_2,undefined4 param_3)

{
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  if ((char)param_2 != *(char *)((int)param_1 + 0x20d)) {
    *(char *)((int)param_1 + 0x20d) = (char)param_2;
    if ((*(byte *)(param_1 + 8) & 1) == 0) {
      FUN_0042e448((int)param_1);
      param_3 = extraout_ECX;
      param_2 = extraout_EDX;
    }
    FUN_00403130(param_1,param_2,param_3);
  }
  return;
}



void FUN_00454b90(int param_1,int param_2)

{
  FUN_0040f4e8(*(undefined4 **)(param_1 + 0x200),param_2);
  return;
}



undefined4 FUN_00454ba8(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 0x200) + 8);
}



void FUN_00454bf0(int *param_1,undefined4 param_2,undefined4 param_3)

{
  if (((char)param_2 != *(char *)((int)param_1 + 0x211)) &&
     (*(char *)((int)param_1 + 0x211) = (char)param_2, (char)param_1[0x13] != '\0')) {
    FUN_00403130(param_1,param_2,param_3);
  }
  return;
}



void FUN_00454c68(int *param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int iVar1;
  int *piVar2;
  int x;
  HDC hdcDst;
  HIMAGELIST himl;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  int i;
  int y;
  UINT fStyle;
  undefined4 uStack_34;
  undefined1 *puStack_30;
  undefined1 *puStack_2c;
  RECT local_1c;
  int *local_c;
  int local_8;
  
  puStack_2c = (undefined1 *)0x454c7f;
  local_c = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',param_3);
  puStack_30 = &LAB_00454d4d;
  uStack_34 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_34;
  puStack_2c = &stack0xfffffffc;
  iVar1 = FUN_00436d0c(param_1);
  (**(code **)(*local_c + 0x40))(local_c,iVar1 * param_1[10]);
  (**(code **)(*local_c + 0x34))(local_c,param_1[9]);
  FUN_0040ea70(0,0,*(undefined4 *)(*(int *)(param_4 + -4) + 0x38),&local_1c.left,
               *(undefined4 *)(*(int *)(param_4 + -4) + 0x3c));
  piVar2 = (int *)FUN_0041c784(local_c);
  FUN_00417804((int *)piVar2[5],0x8000000f);
  FUN_00417eb0(piVar2,&local_1c);
  iVar1 = FUN_00436d0c(param_1);
  if (-1 < iVar1 + -1) {
    iVar3 = 0;
    do {
      fStyle = 1;
      y = 0;
      x = param_1[10] * iVar3;
      piVar2 = (int *)FUN_0041c784(local_c);
      hdcDst = (HDC)FUN_004183d4(piVar2);
      i = iVar3;
      himl = (HIMAGELIST)FUN_004369f0(param_1);
      ImageList_Draw(himl,i,hdcDst,x,y,fStyle);
      iVar3 = iVar3 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  local_8 = FUN_0041dc34((int)local_c);
  *in_FS_OFFSET = uStack_34;
  puStack_2c = &LAB_00454d54;
  puStack_30 = (undefined1 *)0x454d4c;
  FUN_00402f54(local_c);
  return;
}



void FUN_00454d60(int param_1,int *param_2,undefined4 param_3)

{
  undefined4 uVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY_38;
  undefined1 *puStackY_34;
  undefined4 *puVar2;
  undefined4 local_2c;
  int local_28;
  undefined4 local_24;
  undefined4 local_20;
  undefined4 local_1c;
  int *local_18;
  int local_14;
  undefined4 local_10;
  undefined4 local_c;
  int local_8;
  
  local_8 = param_1;
  if (param_2 != (int *)0x0) {
    puStackY_34 = (undefined1 *)0x454d75;
    local_20 = FUN_00454c68(param_2,param_2,param_3,(int)&stack0xfffffffc);
    local_28 = *(int *)(local_8 + 0x238);
    local_14 = local_20;
    if (local_28 == 0) {
      local_10 = 0;
      puVar2 = &local_10;
      puStackY_34 = (undefined1 *)0x454df5;
      local_c = local_20;
      uVar1 = FUN_00454ba8(local_8);
      puStackY_34 = (undefined1 *)0x454e04;
      FUN_0042bd64(local_8,0x413,uVar1,puVar2);
    }
    else {
      local_2c = 0;
      local_24 = 0;
      local_1c = FUN_00454ba8(local_8);
      puStackY_34 = (undefined1 *)0x454e37;
      FUN_0042bd64(local_8,0x42e,0,&local_2c);
      if (*(HGDIOBJ *)(local_8 + 0x238) != (HGDIOBJ)0x0) {
        puStackY_34 = (undefined1 *)0x454e4a;
        DeleteObject(*(HGDIOBJ *)(local_8 + 0x238));
      }
    }
    *(int *)(local_8 + 0x238) = local_14;
    return;
  }
  local_18 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',param_3);
  puStackY_34 = &LAB_00454dca;
  uStackY_38 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY_38;
  (**(code **)(*local_18 + 8))(local_18,*(undefined4 *)(local_8 + 0x234));
  local_14 = FUN_0041dc34((int)local_18);
  *in_FS_OFFSET = uStackY_38;
  puStackY_34 = (undefined1 *)0x454dc9;
  FUN_00402f54(local_18);
  return;
}



void FUN_00454e5c(int *param_1)

{
  bool bVar1;
  int iVar2;
  undefined4 extraout_ECX;
  
  if ((char)param_1[0x8c] == '\0') {
    bVar1 = FUN_00431194((int)param_1);
    if (bVar1) {
      FUN_00454d60((int)param_1,(int *)param_1[0x85],extraout_ECX);
    }
  }
  else {
    if ((int *)param_1[0x85] != (int *)0x0) {
      iVar2 = FUN_004369f0((int *)param_1[0x85]);
      FUN_00454efc(param_1,iVar2);
    }
    if ((int *)param_1[0x87] != (int *)0x0) {
      iVar2 = FUN_004369f0((int *)param_1[0x87]);
      FUN_00454fa0(param_1,iVar2);
    }
    if ((int *)param_1[0x89] != (int *)0x0) {
      iVar2 = FUN_004369f0((int *)param_1[0x89]);
      FUN_00455044(param_1,iVar2);
      return;
    }
  }
  return;
}



void FUN_00454efc(int *param_1,undefined4 param_2)

{
  bool bVar1;
  
  bVar1 = FUN_00431194((int)param_1);
  if (bVar1) {
    FUN_0042bd64((int)param_1,0x430,0,param_2);
  }
  (**(code **)(*param_1 + 0x74))();
  return;
}



void FUN_00454f28(int *param_1,int param_2)

{
  undefined4 extraout_ECX;
  
  if (param_1[0x85] != 0) {
    FUN_00437690(param_1[0x85],param_1[0x86]);
  }
  param_1[0x85] = param_2;
  if (param_2 == 0) {
    FUN_00454efc(param_1,0);
  }
  else {
    FUN_004376d4(param_2,param_1[0x86]);
    FUN_00414540(param_1[0x85],(int)param_1,extraout_ECX);
  }
  FUN_004550d8(param_1);
  return;
}



void FUN_00454fa0(int *param_1,undefined4 param_2)

{
  bool bVar1;
  
  bVar1 = FUN_00431194((int)param_1);
  if (bVar1) {
    FUN_0042bd64((int)param_1,0x436,0,param_2);
  }
  (**(code **)(*param_1 + 0x74))();
  return;
}



void FUN_00454fcc(int *param_1,int param_2)

{
  undefined4 extraout_ECX;
  
  if (param_1[0x87] != 0) {
    FUN_00437690(param_1[0x87],param_1[0x88]);
  }
  param_1[0x87] = param_2;
  if (param_2 == 0) {
    FUN_00454fa0(param_1,0);
  }
  else {
    FUN_004376d4(param_2,param_1[0x88]);
    FUN_00414540(param_1[0x87],(int)param_1,extraout_ECX);
  }
  FUN_004550d8(param_1);
  return;
}



void FUN_00455044(int *param_1,undefined4 param_2)

{
  bool bVar1;
  
  bVar1 = FUN_00431194((int)param_1);
  if (bVar1) {
    FUN_0042bd64((int)param_1,0x434,0,param_2);
  }
  (**(code **)(*param_1 + 0x74))();
  return;
}



void FUN_00455070(int *param_1,int param_2)

{
  undefined4 extraout_ECX;
  
  if (param_1[0x89] != 0) {
    FUN_00437690(param_1[0x89],param_1[0x8a]);
  }
  param_1[0x89] = param_2;
  if (param_2 == 0) {
    FUN_00455044(param_1,0);
  }
  else {
    FUN_004376d4(param_2,param_1[0x8a]);
    FUN_00414540(param_1[0x89],(int)param_1,extraout_ECX);
  }
  FUN_004550d8(param_1);
  return;
}



void FUN_004550d8(int *param_1)

{
  bool bVar1;
  
  if (((*(byte *)(param_1 + 8) & 1) != 0) && (bVar1 = FUN_00431194((int)param_1), !bVar1)) {
    return;
  }
  FUN_00453e40(param_1,param_1[0x7e],param_1[0x7f]);
  FUN_004552d0(param_1);
  return;
}



void FUN_00455108(int *param_1)

{
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  (**(code **)(*param_1 + -0x10))();
  if ((*(char *)((int)param_1 + 0x269) != '\0') && ((char)param_1[0x9a] != '\0')) {
    FUN_00403130(param_1,extraout_EDX,extraout_ECX);
  }
  return;
}



void FUN_00455134(int *param_1,int param_2)

{
  short sVar1;
  int iVar2;
  int *piVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_EDX;
  int aiStack_1c [2];
  int local_14 [2];
  
  if (*(char *)((int)param_1 + 0x269) == '\0') goto LAB_004551d3;
  iVar2 = FUN_0042bd64((int)param_1,0x447,0,0);
  sVar1 = *(short *)(param_2 + 4);
  if (sVar1 != 0xd) {
    if (sVar1 == 0x1b) {
      FUN_00403130(param_1,extraout_EDX,extraout_ECX);
      goto LAB_004551d3;
    }
    if (sVar1 != 0x28) goto LAB_004551d3;
  }
  if ((-1 < iVar2) && (iVar2 < *(int *)(param_1[0x80] + 8))) {
    piVar3 = (int *)FUN_0040f4e8((undefined4 *)param_1[0x80],iVar2);
    FUN_0040ea58(1,1,local_14);
    FUN_0042a938(piVar3,local_14,aiStack_1c);
    FUN_00403130(param_1,piVar3,extraout_ECX_00);
  }
  if (*(short *)(param_2 + 4) == 0x28) {
    return;
  }
LAB_004551d3:
  FUN_0042fbac(param_1,param_2);
  return;
}



void FUN_004551e4(int param_1,int param_2,undefined4 param_3,undefined *param_4,undefined4 param_5)

{
  undefined4 uVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  
  iVar4 = *(int *)(*(int *)(param_1 + 0x200) + 8);
  if (-1 < iVar4 + -1) {
    iVar5 = 0;
    do {
      uVar1 = FUN_0040f4e8(*(undefined4 **)(param_1 + 0x200),iVar5);
      (*(code *)param_4)(param_5,uVar1);
      iVar5 = iVar5 + 1;
      iVar4 = iVar4 + -1;
    } while (iVar4 != 0);
  }
  iVar4 = FUN_0042de00(param_1);
  if (-1 < iVar4 + -1) {
    iVar5 = 0;
    do {
      iVar2 = FUN_0042ddc4(param_1,iVar5);
      if (*(int *)(iVar2 + 4) == param_2) {
        iVar3 = FUN_0040f544(*(int *)(param_1 + 0x200),iVar2);
        if (iVar3 == -1) {
          (*(code *)param_4)(param_5,iVar2);
        }
      }
      iVar5 = iVar5 + 1;
      iVar4 = iVar4 + -1;
    } while (iVar4 != 0);
  }
  return;
}



void FUN_004552c0(int param_1)

{
  *(int *)(param_1 + 0x23c) = *(int *)(param_1 + 0x23c) + 1;
  return;
}



void FUN_004552c8(int param_1)

{
  *(int *)(param_1 + 0x23c) = *(int *)(param_1 + 0x23c) + -1;
  return;
}



void FUN_004552d0(int *param_1)

{
  bool bVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  if ((*(byte *)(param_1 + 8) & 1) == 0) {
    bVar1 = FUN_00431194((int)param_1);
    if (bVar1) {
      FUN_0042bd64((int)param_1,0x421,0,0);
      if ((char)param_1[0x13] != '\0') {
        FUN_00403130(param_1,extraout_EDX,extraout_ECX);
      }
    }
  }
  return;
}



void FUN_00455308(int param_1)

{
  FUN_0042bd64(param_1,0x418,0,0);
  return;
}



uint FUN_00455318(int param_1,uint param_2,int param_3,int param_4)

{
  int *piVar1;
  int iVar2;
  uint uVar3;
  uint uVar4;
  bool bVar5;
  byte local_40 [32];
  int local_20;
  int *local_1c;
  uint local_18;
  uint local_14;
  uint local_10;
  int local_c;
  int local_8;
  
  if ((((int)param_2 < 0) || (uVar4 = param_2, 1 < *(int *)(*(int *)(param_1 + 0x200) + 8))) &&
     (uVar4 = 0, *(int *)(*(int *)(param_1 + 0x200) + 8) != 0)) {
    local_10 = 0;
    local_14 = 0;
    local_18 = 0;
    local_c = 0x7fffffff;
    local_8 = param_3;
    for (; (0 < local_c && ((int)uVar4 < *(int *)(*(int *)(param_1 + 0x200) + 8)));
        uVar4 = uVar4 + 1) {
      uVar3 = uVar4;
      if (param_2 != uVar4) {
        local_1c = (int *)FUN_0040f4e8(*(undefined4 **)(param_1 + 0x200),uVar4);
        piVar1 = FUN_004030cc(local_1c,(int)PTR_PTR_00450b54);
        if ((((char)piVar1 != '\0') && ((char)local_1c[0x4f] != '\0')) ||
           (uVar3 = local_18, uVar4 == *(int *)(*(int *)(param_1 + 0x200) + 8) - 1U)) {
          uVar3 = param_4 - local_1c[0xd] >> 0x1f;
          iVar2 = (param_4 - local_1c[0xd] ^ uVar3) - uVar3;
          if (iVar2 < local_c) {
            local_14 = local_10;
            local_18 = uVar4;
            local_c = iVar2;
          }
          local_10 = uVar4 + 1;
          uVar3 = local_18;
        }
      }
      local_18 = uVar3;
    }
    uVar4 = local_14;
    if ((int)local_14 <= (int)local_18) {
      local_20 = (local_18 - local_14) + 1;
      do {
        if ((param_2 != uVar4) &&
           (iVar2 = FUN_0040f4e8(*(undefined4 **)(param_1 + 0x200),uVar4),
           local_8 <= *(int *)(iVar2 + 0x30))) break;
        uVar4 = uVar4 + 1;
        local_20 = local_20 + -1;
      } while (local_20 != 0);
    }
    if (uVar4 == param_2 + 1) {
      FUN_00402d3c(CONCAT22((short)(local_14 >> 0x10),CONCAT11(0x20,(char)local_14)),local_18,
                   local_40);
      bVar5 = param_2 < 0xff;
      if (param_2 < 0x100) {
        bVar5 = (local_40[(int)param_2 >> 3] >> (param_2 & 7) & 1) != 0;
      }
      if (bVar5) {
        uVar4 = param_2;
      }
    }
  }
  return uVar4;
}



uint FUN_00455464(int param_1,uint param_2,int param_3,int param_4)

{
  int iVar1;
  uint uVar2;
  uint *in_FS_OFFSET;
  uint uStack_20;
  undefined1 *puStack_1c;
  uint local_c;
  
  puStack_1c = (undefined1 *)0x45547f;
  local_c = FUN_00455318(param_1,param_2,param_3,param_4);
  if (param_2 != local_c) {
    if ((int)param_2 < (int)local_c) {
      local_c = local_c - 1;
    }
    iVar1 = FUN_0040f4e8(*(undefined4 **)(param_1 + 0x200),param_2);
    FUN_0040f3d8(*(int **)(param_1 + 0x200),param_2);
    FUN_0040f564(*(int **)(param_1 + 0x200),local_c,iVar1);
    FUN_004552c0(param_1);
    puStack_1c = &LAB_00455519;
    uStack_20 = *in_FS_OFFSET;
    *in_FS_OFFSET = (uint)&uStack_20;
    FUN_0042bd64(param_1,0x416,param_2,0);
    FUN_004543c0(param_1,0x415,local_c,local_c);
    *in_FS_OFFSET = local_c;
    puStack_1c = (undefined1 *)0x455520;
    uStack_20 = 0x455518;
    uVar2 = FUN_004552c8(param_1);
    return uVar2;
  }
  return local_c;
}



void FUN_0045552c(int *param_1,int param_2)

{
  uint uVar1;
  uint uVar2;
  int iVar3;
  bool bVar4;
  char cVar5;
  int local_24 [2];
  int local_1c;
  
  uVar1 = FUN_0040f544(param_1[0x80],param_2);
  if (uVar1 != 0xffffffff) {
    uVar2 = FUN_00455464((int)param_1,uVar1,*(int *)(param_2 + 0x30),*(int *)(param_2 + 0x34));
    bVar4 = uVar1 != uVar2;
    cVar5 = '\0';
    if (bVar4) {
      uVar2 = FUN_0040f544(param_1[0x80],param_2);
      if ((int)uVar2 < (int)uVar1) {
        uVar1 = uVar2;
      }
    }
    else {
      iVar3 = FUN_0042bd64((int)param_1,0x41d,uVar1,local_24);
      if (iVar3 != 0) {
        bVar4 = *(int *)(param_2 + 0x38) != local_1c - local_24[0];
        cVar5 = bVar4;
      }
    }
    if (((*(byte *)(param_1 + 8) & 0x10) == 0) || (*(int *)(param_2 + 0x3c) == param_1[0x7f])) {
      if (bVar4) {
        if (cVar5 != '\0') {
          FUN_004547b4(param_1,uVar1);
        }
        FUN_004552d0(param_1);
        FUN_0045410c(param_1,0);
      }
      else {
        FUN_00453fd4(param_1,uVar1);
      }
    }
    else {
      FUN_0045425c(param_1,*(int *)(param_2 + 0x3c));
    }
  }
  return;
}



void FUN_004556b0(int param_1,int param_2)

{
  char *pcVar1;
  uint uVar2;
  
  pcVar1 = *(char **)(param_2 + 8);
  uVar2 = FUN_00408af4(pcVar1);
  FUN_00403cc4((int *)(param_1 + 0x204),(undefined4 *)pcVar1,uVar2);
  return;
}



void FUN_00455754(int *param_1,int param_2)

{
  bool bVar1;
  HWND pHVar2;
  int iVar3;
  int iVar4;
  HRGN pHVar5;
  HRGN hrgnSrc1;
  int iVar6;
  tagRECT *ptVar7;
  UINT flags;
  tagRECT local_20;
  
  ptVar7 = &local_20;
  if (((*(char *)((int)param_1 + 0x20f) != '\0') && (bVar1 = FUN_00431194((int)param_1), bVar1)) &&
     (param_1[9] != 0)) {
    pHVar2 = (HWND)FUN_00430e98(param_1);
    GetWindowRect(pHVar2,ptVar7);
    ptVar7 = &local_20;
    iVar3 = FUN_0042a824(param_1);
    iVar6 = local_20.right - local_20.left;
    iVar4 = FUN_0042a868(param_1);
    iVar4 = (local_20.bottom - local_20.top) - iVar4;
    pHVar5 = CreateRectRgn(0,0,param_1[0xe] - (iVar6 - iVar3),param_1[0xf] - iVar4);
    hrgnSrc1 = CreateRectRgn(0,0,*(int *)(*(int *)(param_2 + 8) + 0x10) - iVar4,
                             *(int *)(*(int *)(param_2 + 8) + 0x14) - iVar4);
    CombineRgn(pHVar5,hrgnSrc1,pHVar5,3);
    GetRgnBox(pHVar5,&local_20);
    local_20.left = local_20.left + -2;
    DeleteObject(pHVar5);
    DeleteObject(hrgnSrc1);
    FUN_0042f1d8(param_1,param_2);
    flags = 5;
    pHVar5 = (HRGN)0x0;
    pHVar2 = (HWND)FUN_00430e98(param_1);
    RedrawWindow(pHVar2,ptVar7,pHVar5,flags);
    return;
  }
  FUN_0042f1d8(param_1,param_2);
  return;
}



void FUN_00455898(int *param_1,int *param_2,undefined4 param_3,int param_4)

{
  int *piVar1;
  int *piVar2;
  uint uVar3;
  int iVar4;
  uint uVar5;
  int iVar6;
  int local_1c;
  int local_18;
  int local_14;
  char local_d;
  
  *param_1 = 0;
  *param_2 = 0;
  local_14 = *(int *)(*(int *)(param_4 + -4) + 0x22c);
  local_18 = 0;
  iVar6 = *(int *)(*(int *)(*(int *)(param_4 + -4) + 0x200) + 8);
  if (-1 < iVar6 + -1) {
    uVar5 = 0;
    do {
      piVar1 = (int *)FUN_0040f4e8(*(undefined4 **)(*(int *)(param_4 + -4) + 0x200),uVar5);
      if (((*(byte *)(*(int *)(param_4 + -4) + 0x20) & 0x10) != 0) ||
         (*(char *)((int)piVar1 + 0x47) != '\0')) {
        piVar2 = FUN_004030cc(piVar1,(int)PTR_PTR_00450b54);
        if (((char)piVar2 == '\0') ||
           (*(int *)(*(int *)(*(int *)(param_4 + -4) + 0x200) + 8) + -1 <= (int)uVar5)) {
          local_d = '\0';
        }
        else if (*(int *)(param_4 + -8) == 0) {
          local_d = (char)piVar1[0x4f];
        }
        else {
          uVar3 = FUN_0040fa3c(*(int *)(param_4 + -8),uVar5);
          local_d = (char)uVar3;
        }
        piVar2 = FUN_004030cc(piVar1,(int)PTR_PTR_00450b54);
        if (((char)piVar2 == '\0') || (1 < (byte)(*(char *)((int)piVar1 + 0x13d) - 3U))) {
          if (*param_1 < local_14 + piVar1[0xe]) {
            *param_1 = local_14 + piVar1[0xe];
          }
          iVar4 = *(int *)(*(int *)(param_4 + -4) + 0x1fc) + local_18;
          if (*param_2 < iVar4) {
            *param_2 = iVar4;
          }
        }
        else {
          local_1c = piVar1[0xe];
          iVar4 = FUN_00451e30();
          if (iVar4 < 0x40047) {
LAB_004559b0:
            local_1c = (local_1c * 2) / 3;
          }
          else if (*(char *)(*(int *)(param_4 + -4) + 0x20f) == '\0') {
            iVar4 = FUN_00451e30();
            if (0x40047 < iVar4) goto LAB_004559b0;
          }
          if ((local_d == '\0') ||
             (*(int *)(*(int *)(*(int *)(param_4 + -4) + 0x200) + 8) + -1 <= (int)uVar5)) {
            if (*param_1 < local_14 + piVar1[0xe]) {
              *param_1 = local_14 + piVar1[0xe];
            }
          }
          else {
            iVar4 = *(int *)(*(int *)(param_4 + -4) + 0x1fc) + local_18 + local_1c;
            if (*param_2 < iVar4) {
              *param_2 = iVar4;
            }
          }
          if (local_d != '\0') {
            local_18 = local_18 + local_1c;
          }
        }
        if (local_d == '\0') {
          local_14 = local_14 + piVar1[0xe];
        }
        else {
          local_14 = *(int *)(*(int *)(param_4 + -4) + 0x22c);
          local_18 = local_18 + *(int *)(*(int *)(param_4 + -4) + 0x1fc);
        }
      }
      uVar5 = uVar5 + 1;
      iVar6 = iVar6 + -1;
    } while (iVar6 != 0);
  }
  if ((0 < *param_2) && (*(char *)(*(int *)(param_4 + -4) + 0x20f) == '\0')) {
    *param_2 = *param_2 + 2;
  }
  return;
}



int FUN_00455aa0(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  undefined4 *puVar1;
  bool bVar2;
  int *piVar3;
  int *piVar4;
  int iVar5;
  uint uVar6;
  uint uVar7;
  uint uVar8;
  int local_10;
  int local_c;
  
  local_c = 1;
  local_10 = *(int *)(*(int *)(param_4 + -4) + 0x22c);
  uVar8 = 0;
  do {
    puVar1 = *(undefined4 **)(*(int *)(param_4 + -4) + 0x200);
    if ((int)puVar1[2] <= (int)uVar8) {
      return local_c;
    }
    piVar3 = (int *)FUN_0040f4e8(puVar1,uVar8);
    piVar4 = FUN_004030cc(piVar3,(int)PTR_PTR_00450b54);
    if ((char)piVar4 != '\0') {
      FUN_0040fa10(*(int *)(param_4 + -8),uVar8,'\0');
    }
    if (((*(byte *)(*(int *)(param_4 + -4) + 0x20) & 0x10) != 0) ||
       (*(char *)((int)piVar3 + 0x47) != '\0')) {
      if (param_1 < local_10 + piVar3[0xe]) {
        piVar4 = FUN_004030cc(piVar3,(int)PTR_PTR_00450b54);
        if (((char)piVar4 == '\0') || (1 < (byte)(*(char *)((int)piVar3 + 0x13d) - 3U))) {
          bVar2 = false;
          uVar7 = uVar8;
          if (-1 < (int)uVar8) {
            do {
              piVar4 = (int *)FUN_0040f4e8(*(undefined4 **)(*(int *)(param_4 + -4) + 0x200),uVar7);
              piVar4 = FUN_004030cc(piVar4,(int)PTR_PTR_00450b54);
              if ((char)piVar4 != '\0') {
                iVar5 = FUN_0040f4e8(*(undefined4 **)(*(int *)(param_4 + -4) + 0x200),uVar7);
                if ((((*(byte *)(iVar5 + 0x20) & 0x10) != 0) || (*(char *)(iVar5 + 0x47) != '\0'))
                   && ((byte)(*(char *)(iVar5 + 0x13d) - 3U) < 2)) {
                  uVar6 = FUN_0040fa3c(*(int *)(param_4 + -8),uVar7);
                  if ((char)uVar6 == '\0') {
                    bVar2 = true;
                    local_10 = *(int *)(*(int *)(param_4 + -4) + 0x22c);
                    FUN_0040fa10(*(int *)(param_4 + -8),uVar7,'\x01');
                    local_c = local_c + 1;
                    uVar8 = uVar7;
                  }
                  break;
                }
              }
              uVar7 = uVar7 - 1;
            } while (uVar7 != 0xffffffff);
          }
          if (!bVar2) {
            uVar7 = uVar8 - 1;
            if (-1 < (int)uVar7) {
              do {
                piVar4 = (int *)FUN_0040f4e8(*(undefined4 **)(*(int *)(param_4 + -4) + 0x200),uVar7)
                ;
                piVar4 = FUN_004030cc(piVar4,(int)PTR_PTR_00450b54);
                if ((char)piVar4 != '\0') {
                  iVar5 = FUN_0040f4e8(*(undefined4 **)(*(int *)(param_4 + -4) + 0x200),uVar7);
                  if (((*(byte *)(iVar5 + 0x20) & 0x10) != 0) || (*(char *)(iVar5 + 0x47) != '\0'))
                  {
                    uVar6 = FUN_0040fa3c(*(int *)(param_4 + -8),uVar7);
                    if ((char)uVar6 == '\0') {
                      bVar2 = true;
                      local_10 = *(int *)(*(int *)(param_4 + -4) + 0x22c);
                      FUN_0040fa10(*(int *)(param_4 + -8),uVar7,'\x01');
                      local_c = local_c + 1;
                      uVar8 = uVar7;
                    }
                    break;
                  }
                }
                uVar7 = uVar7 - 1;
              } while (uVar7 != 0xffffffff);
            }
            if (!bVar2) {
              local_10 = local_10 + piVar3[0xe];
            }
          }
          goto LAB_00455c8c;
        }
      }
      local_10 = local_10 + piVar3[0xe];
    }
LAB_00455c8c:
    uVar8 = uVar8 + 1;
  } while( true );
}



int FUN_00455cac(undefined4 param_1,int *param_2,undefined4 param_3,int param_4)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  int iVar2;
  int iVar3;
  int local_28;
  int local_24;
  int local_20;
  int local_1c;
  int local_18;
  int local_14;
  int local_10;
  int local_c;
  int *local_8;
  
  local_8 = param_2;
  FUN_0040ea58(0xffffffff,0xffffffff,&local_28);
  FUN_0040ea58(0,0,&local_20);
  iVar2 = 0;
  iVar1 = param_4;
  FUN_00455aa0(0,extraout_EDX,extraout_ECX,param_4);
  iVar3 = param_4;
  FUN_00455898(&local_18,&local_14,iVar1,param_4);
  iVar1 = param_4;
  FUN_00455aa0(0x7fffffff,extraout_EDX_00,iVar3,param_4);
  FUN_00455898(&local_10,&local_c,iVar1,param_4);
  do {
    while( true ) {
      if (local_10 <= local_18) {
        return iVar2;
      }
      local_28 = local_20;
      local_24 = local_1c;
      local_20 = local_18 + local_10 >> 1;
      if (local_20 < 0) {
        local_20 = local_20 + (uint)((local_18 + local_10 & 1U) != 0);
      }
      iVar1 = param_4;
      iVar2 = FUN_00455aa0(local_20,local_10,local_20,param_4);
      iVar3 = param_4;
      FUN_00455898(&local_20,&local_1c,iVar1,param_4);
      if (local_1c <= *local_8) break;
      if ((local_18 == local_20) && (local_14 == local_1c)) {
        iVar1 = FUN_00455aa0(local_10,extraout_EDX_01,iVar3,param_4);
        return iVar1;
      }
      local_18 = local_20;
      local_14 = local_1c;
    }
    if (*local_8 <= local_1c) {
      return iVar2;
    }
    local_10 = local_20;
    local_c = local_1c;
  } while ((local_28 != local_20) || (local_24 != local_1c));
  return iVar2;
}



undefined4 FUN_00455dc0(int *param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int iVar1;
  int iVar2;
  int iVar3;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 uVar4;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  int iVar5;
  int iVar6;
  int iVar7;
  bool bVar8;
  int local_14;
  int local_10;
  int local_c;
  undefined4 local_8;
  
  local_8 = 0;
  iVar7 = 0;
  iVar5 = *param_1;
  iVar1 = param_4;
  local_c = FUN_00455aa0(iVar5,0,param_3,param_4);
  iVar3 = param_4;
  iVar1 = FUN_00455aa0(0,extraout_EDX,iVar1,param_4);
  if ((iVar1 != local_c) && (uVar4 = extraout_EDX_00, 0 < iVar5)) {
    do {
      iVar1 = iVar5 + iVar7 >> 1;
      if (iVar1 < 0) {
        iVar1 = iVar1 + (uint)((iVar5 + iVar7 & 1U) != 0);
      }
      iVar6 = param_4;
      iVar2 = FUN_00455aa0(iVar1,uVar4,iVar3,param_4);
      iVar3 = iVar6;
      iVar6 = iVar1;
      if ((iVar2 != local_c) && (bVar8 = iVar1 == iVar7, iVar6 = iVar5, iVar7 = iVar1, bVar8)) {
        iVar7 = param_4;
        FUN_00455aa0(iVar5,extraout_EDX_01,iVar3,param_4);
        iVar3 = iVar7;
        break;
      }
      uVar4 = extraout_EDX_01;
      iVar5 = iVar6;
    } while (iVar7 < iVar6);
  }
  iVar5 = param_4;
  FUN_00455898(&local_14,&local_10,iVar3,param_4);
  FUN_00455aa0(local_14,extraout_EDX_02,iVar5,param_4);
  return local_8;
}



undefined1 FUN_00455e54(int *param_1,int *param_2,int *param_3)

{
  bool bVar1;
  char cVar2;
  undefined1 uVar3;
  int iVar4;
  int iVar5;
  int *piVar6;
  undefined4 extraout_ECX;
  int extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined1 *puVar8;
  uint uVar9;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_58;
  undefined1 *puStack_54;
  int local_34;
  int local_30;
  int local_2c;
  int local_28;
  bool local_21;
  int local_20;
  int local_1c;
  undefined1 local_15;
  int *local_14;
  int *local_10;
  int *local_c;
  int *local_8;
  uint uVar7;
  
  puVar8 = &stack0xfffffffc;
  local_15 = 1;
  local_14 = param_3;
  local_10 = param_2;
  local_8 = param_1;
  bVar1 = FUN_00431194((int)param_1);
  if (bVar1) {
    iVar4 = FUN_00455308((int)local_8);
    if ((-1 < iVar4 + -1) || ((*(byte *)(local_8 + 8) & 0x10) == 0)) {
      local_c = (int *)0x0;
      local_2c = FUN_0042a824(local_8);
      iVar5 = FUN_0042a868(local_8);
      iVar4 = local_2c;
      local_1c = local_8[0xe] - local_2c;
      local_20 = local_8[0xf] - iVar5;
      puStack_54 = (undefined1 *)0x455ee1;
      local_28 = iVar5;
      FUN_00455898(&local_2c,&local_28,extraout_ECX,(int)&stack0xfffffffc);
      FUN_0040ea58(*local_10 - local_1c,*local_14 - local_20,&local_34);
      if (*(char *)((int)local_8 + 0x4b) == '\0') {
        uVar9 = local_34 - iVar4 >> 0x1f;
        iVar4 = (local_34 - iVar4 ^ uVar9) - uVar9;
        uVar9 = local_30 - iVar5 >> 0x1f;
        local_21 = iVar4 < (int)((local_30 - iVar5 ^ uVar9) - uVar9);
      }
      else {
        local_21 = (byte)(*(char *)((int)local_8 + 0x4b) - 3U) < 2;
        iVar4 = extraout_ECX_00;
      }
      if (*(char *)((int)local_8 + 0x211) != '\0') {
        local_c = (int *)FUN_00402f24((int *)PTR_DAT_0040dd64,'\x01',iVar4);
        puStack_54 = &LAB_00456039;
        uStack_58 = *in_FS_OFFSET;
        *in_FS_OFFSET = &uStack_58;
        FUN_0040f96c((int)local_c,*(int *)(local_8[0x80] + 8));
        if (local_21 == false) {
          FUN_00455dc0(&local_34,&local_30,extraout_ECX_01,(int)&stack0xfffffffc);
        }
        else {
          puVar8 = &stack0xfffffffc;
          FUN_00455cac(&local_34,&local_30,extraout_ECX_01,(int)&stack0xfffffffc);
        }
        FUN_00455898(&local_34,&local_30,puVar8,(int)&stack0xfffffffc);
        if ((((local_21 == false) && (*(char *)((int)local_8 + 0x4b) != '\0')) ||
            (local_34 == local_2c)) && (local_30 == local_28)) {
          FUN_00454b1c((int)local_8);
        }
        else {
          iVar4 = local_c[1];
          if (-1 < iVar4 + -1) {
            uVar9 = 0;
            do {
              piVar6 = (int *)FUN_0040f4e8((undefined4 *)local_8[0x80],uVar9);
              piVar6 = FUN_004030cc(piVar6,(int)PTR_PTR_00450b54);
              if ((char)piVar6 != '\0') {
                uVar7 = FUN_0040fa3c((int)local_c,uVar9);
                cVar2 = (char)uVar7;
                piVar6 = (int *)FUN_0040f4e8((undefined4 *)local_8[0x80],uVar9);
                FUN_00453814(piVar6,cVar2);
              }
              uVar9 = uVar9 + 1;
              iVar4 = iVar4 + -1;
            } while (iVar4 != 0);
          }
          FUN_0045410c(local_8,0);
        }
        *in_FS_OFFSET = uStack_58;
        puStack_54 = (undefined1 *)0x456038;
        uVar3 = FUN_00402f54(local_c);
        return uVar3;
      }
      puStack_54 = (undefined1 *)0x45604c;
      FUN_00455898(&local_34,&local_30,iVar4,(int)&stack0xfffffffc);
      if (((char)local_8[0x13] != '\0') && (*(char *)((int)local_8 + 0x4b) != '\x05')) {
        if ((local_21 != false) || (*(char *)((int)local_8 + 0x4b) == '\0')) {
          *local_10 = local_34 + local_1c;
        }
        if ((local_21 == false) || (*(char *)((int)local_8 + 0x4b) == '\0')) {
          *local_14 = local_30 + local_20;
        }
      }
    }
  }
  return local_15;
}



void FUN_0045610c(int *param_1,int param_2)

{
  char cVar1;
  int *piVar2;
  int iVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 uVar4;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 uVar5;
  
  cVar1 = (**(code **)(*param_1 + 0x4c))();
  if ((((cVar1 != '\0') && ((char)param_1[0x5a] != '\0')) &&
      (*(char *)((int)param_1 + 0x20d) != '\0')) &&
     (piVar2 = (int *)FUN_00456af4((int)param_1,*(undefined2 *)(param_2 + 4)), piVar2 != (int *)0x0)
     ) {
    uVar4 = extraout_ECX;
    uVar5 = extraout_EDX;
    if (((*(char *)((int)piVar2 + 0x13d) == '\x02') &&
        (iVar3 = FUN_00451e30(), uVar4 = extraout_ECX_00, uVar5 = extraout_EDX_00, 0x40046 < iVar3))
       || ((piVar2[0x4e] == 0 && (piVar2[0x4d] == 0)))) {
      FUN_00403130(piVar2,uVar5,uVar4);
    }
    else {
      FUN_00403130(param_1,piVar2,uVar4);
    }
    *(undefined4 *)(param_2 + 0xc) = 1;
    return;
  }
  FUN_004303c0((int)param_1,param_2);
  return;
}



void FUN_004561b4(int *param_1)

{
  FUN_00430470(param_1);
  FUN_0042e448((int)param_1);
  return;
}



void FUN_00456208(int param_1,int param_2)

{
  FUN_00430654(param_1,param_2);
  FUN_0042e448(param_1);
  return;
}



void FUN_0045621c(int param_1)

{
  int iVar1;
  
  FUN_004571d0(param_1);
  *(undefined1 *)(param_1 + 0x279) = 0;
  iVar1 = FUN_00451e30();
  if ((iVar1 == 0x50050) && (*(int *)(param_1 + 0x274) != 0)) {
    (**(code **)(**(int **)(param_1 + 0x274) + 0x74))();
  }
  *(undefined1 *)(param_1 + 0x268) = 1;
  return;
}



undefined4 FUN_00456790(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  bool bVar1;
  HWND pHVar2;
  HWND pHVar3;
  HANDLE pvVar4;
  undefined4 uVar5;
  int *piVar6;
  undefined3 extraout_var;
  char cVar7;
  int local_c [2];
  
  pHVar2 = (HWND)FUN_00430e98(*(int **)(param_4 + -4));
  pHVar3 = GetCapture();
  if (pHVar2 == pHVar3) {
    pvVar4 = FUN_00428234();
    *(HANDLE *)(param_4 + -8) = pvVar4;
    if ((*(int *)(param_4 + -8) != 0) &&
       (*(int *)(*(int *)(param_4 + -8) + 0x24) != *(int *)(param_4 + -4))) {
      *(undefined4 *)(param_4 + -8) = 0;
    }
  }
  else {
    *(undefined4 *)(param_4 + -8) = 0;
  }
  cVar7 = '\0';
  FUN_00407184(*(undefined4 *)(param_1 + 8),local_c);
  uVar5 = FUN_0042e708(*(int *)(param_4 + -4),local_c,0,cVar7);
  *(undefined4 *)(param_4 + -0xc) = uVar5;
  if (((*(int *)(param_4 + -0xc) != 0) &&
      (piVar6 = FUN_004030cc(*(int **)(param_4 + -0xc),(int)PTR_PTR_00450b54), (char)piVar6 != '\0')
      ) && (bVar1 = FUN_0042b4cc(*(int *)(param_4 + -0xc)), !bVar1)) {
    return CONCAT31(extraout_var,1);
  }
  return 0;
}



void FUN_00456844(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  WPARAM wParam;
  HWND hWnd;
  UINT Msg;
  int *lParam;
  int local_30;
  int local_2c;
  undefined4 local_28;
  int local_24;
  
  FUN_00402c14(&local_30,0x2c,0);
  local_30 = FUN_00430e98(*(int **)(param_4 + -4));
  local_2c = FUN_00430e98(*(int **)(param_4 + -4));
  local_28 = 0xfffffd3a;
  local_24 = FUN_0045384c(param_1);
  lParam = &local_30;
  wParam = FUN_00430e98(*(int **)(param_4 + -4));
  Msg = 0x4e;
  hWnd = (HWND)FUN_00430e98(*(int **)(param_4 + -4));
  SendMessageA(hWnd,Msg,wParam,(LPARAM)lParam);
  return;
}



void FUN_00456af4(int param_1,undefined2 param_2)

{
  char cVar1;
  int *piVar2;
  undefined2 extraout_var;
  int iVar3;
  int iVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  int local_10;
  undefined2 local_a;
  int local_8;
  
  puStack_20 = &stack0xfffffffc;
  local_10 = 0;
  puStack_24 = &LAB_00456ba3;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  iVar4 = *(int *)(*(int *)(param_1 + 0x200) + 8);
  local_a = param_2;
  local_8 = param_1;
  if (-1 < iVar4 + -1) {
    iVar3 = 0;
    do {
      piVar2 = (int *)FUN_0040f4e8(*(undefined4 **)(local_8 + 0x200),iVar3);
      piVar2 = FUN_004030cc(piVar2,(int)PTR_PTR_00450b54);
      if ((((char)piVar2 != '\0') &&
          (piVar2 = (int *)FUN_0040f4e8(*(undefined4 **)(local_8 + 0x200),iVar3),
          *(char *)((int)piVar2 + 0x47) != '\0')) &&
         (cVar1 = (**(code **)(*piVar2 + 0x4c))(), cVar1 != '\0')) {
        FUN_0042adc0((int)piVar2,&local_10);
        cVar1 = FUN_00440914(CONCAT22(extraout_var,local_a),local_10);
        if (cVar1 != '\0') break;
      }
      iVar3 = iVar3 + 1;
      iVar4 = iVar4 + -1;
    } while (iVar4 != 0);
  }
  *in_FS_OFFSET = uStack_28;
  puStack_20 = &LAB_00456baa;
  puStack_24 = (undefined1 *)0x456ba2;
  FUN_00403bdc(&local_10);
  return;
}



bool FUN_00456bb4(int param_1,char param_2,char param_3)

{
  bool bVar1;
  
  if (param_3 == '\0') {
    if (param_2 == '\x01') {
      if ((*(short *)(param_1 + 0x262) == 0) && (*(short *)(param_1 + 0x252) == 0)) {
        bVar1 = false;
      }
      else {
        bVar1 = true;
      }
    }
    else {
      if (param_2 != '\0') {
        return false;
      }
      if ((((*(short *)(param_1 + 0x25a) == 0) && (*(short *)(param_1 + 0x24a) == 0)) &&
          (*(short *)(param_1 + 0x262) == 0)) && (*(short *)(param_1 + 0x252) == 0)) {
        bVar1 = false;
      }
      else {
        bVar1 = true;
      }
    }
  }
  else if (param_2 == '\x01') {
    bVar1 = *(short *)(param_1 + 0x252) != 0;
  }
  else if (param_2 == '\0') {
    if ((*(short *)(param_1 + 0x24a) == 0) && (*(short *)(param_1 + 0x252) == 0)) {
      bVar1 = false;
    }
    else {
      bVar1 = true;
    }
  }
  else {
    bVar1 = false;
  }
  return bVar1;
}



int * FUN_00456d1c(char param_1)

{
  int iVar1;
  int iVar2;
  char cVar3;
  int iVar4;
  int *piVar5;
  int iVar6;
  
  iVar2 = DAT_00476874;
  iVar1 = DAT_0047686c;
  if (DAT_0047686c != 0) {
    iVar4 = FUN_00454ba8(DAT_0047686c);
    iVar6 = iVar2;
    if (param_1 == '\0') {
      do {
        if (iVar6 == 0) {
          iVar6 = iVar4;
        }
        iVar6 = iVar6 + -1;
        piVar5 = (int *)FUN_00454b90(iVar1,iVar6);
        if (((*(char *)((int)piVar5 + 0x47) != '\0') &&
            (cVar3 = (**(code **)(*piVar5 + 0x4c))(), cVar3 != '\0')) &&
           (*(char *)((int)piVar5 + 299) != '\0')) {
          return piVar5;
        }
      } while (iVar6 != iVar2);
    }
    else {
      do {
        if (iVar6 == iVar4 + -1) {
          iVar6 = 0;
        }
        else {
          iVar6 = iVar6 + 1;
        }
        piVar5 = (int *)FUN_00454b90(iVar1,iVar6);
        if (((*(char *)((int)piVar5 + 0x47) != '\0') &&
            (cVar3 = (**(code **)(*piVar5 + 0x4c))(), cVar3 != '\0')) &&
           (*(char *)((int)piVar5 + 299) != '\0')) {
          return piVar5;
        }
      } while (iVar6 != iVar2);
    }
  }
  return (int *)0x0;
}



LRESULT FUN_00456dc8(void)

{
  bool bVar1;
  int iVar2;
  undefined4 uVar3;
  uint uVar4;
  int *piVar5;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_ECX_03;
  undefined4 extraout_ECX_04;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 uVar6;
  int *piVar7;
  int in_stack_00000004;
  WPARAM in_stack_00000008;
  undefined4 *in_stack_0000000c;
  int local_18 [2];
  POINT local_10;
  LRESULT local_8;
  
  if (((DAT_00476878 != (int *)0x0) && (iVar2 = thunk_FUN_0043b978((int)DAT_00476878), iVar2 != 0))
     && (uVar3 = FUN_0043ce6c(iVar2), (char)uVar3 != '\0')) {
    if (in_stack_0000000c[2] == 0x25) {
      in_stack_0000000c[2] = 0x27;
    }
    else if (in_stack_0000000c[2] == 0x27) {
      in_stack_0000000c[2] = 0x25;
    }
  }
  local_8 = CallNextHookEx(DAT_00476868,in_stack_00000004,in_stack_00000008,
                           (LPARAM)in_stack_0000000c);
  if (local_8 != 0) {
    return local_8;
  }
  if (in_stack_00000004 != 2) {
    return 0;
  }
  piVar7 = (int *)0x0;
  uVar3 = extraout_ECX;
  uVar6 = extraout_EDX;
  if (DAT_00474be4 == '\0') {
    DAT_00474be4 = '\x01';
    PostMessageA((HWND)*in_stack_0000000c,0x100,0x28,0);
    uVar3 = extraout_ECX_00;
    uVar6 = extraout_EDX_00;
  }
  iVar2 = in_stack_0000000c[1];
  if (iVar2 != 0x100) {
    if (iVar2 == 0x104) {
      if (in_stack_0000000c[2] == 0x12) {
        FUN_00403130(DAT_0047686c,uVar6,uVar3);
        return local_8;
      }
    }
    else if (iVar2 == 0x11f) {
      uVar4 = FUN_00407128(in_stack_0000000c[2]);
      if (((short)uVar4 == -1) && (in_stack_0000000c[3] == 0)) {
        if (DAT_00476884 != '\0') {
          return local_8;
        }
        FUN_00403130(DAT_0047686c,extraout_EDX_01,extraout_ECX_01);
        return local_8;
      }
      DAT_00476884 = '\0';
      uVar4 = FUN_00407128(in_stack_0000000c[2]);
      if ((uVar4 & 0x10) != 0) {
        GetSubMenu((HMENU)in_stack_0000000c[3],(uint)*(ushort *)(in_stack_0000000c + 2));
      }
      DAT_00476878 = (int *)FUN_0043c77c(DAT_0047686c[0x9b]);
    }
    else if (iVar2 == 0x200) {
      local_10.x = in_stack_0000000c[5];
      local_10.y = in_stack_0000000c[6];
      if (((LPPOINT)local_10.x != lpPoint_0047687c) || (local_10.y != DAT_00476880)) {
        piVar7 = FUN_004297f8(&local_10,0);
        lpPoint_0047687c = (LPPOINT)local_10.x;
        DAT_00476880 = local_10.y;
      }
    }
    goto LAB_00457016;
  }
  if (in_stack_0000000c[2] == 0xd) {
    *(undefined1 *)(DAT_0047686c + 0x9e) = 1;
    goto LAB_00457016;
  }
  if (in_stack_0000000c[2] == 0x1b) {
    DAT_00476884 = '\x01';
    goto LAB_00457016;
  }
  if (DAT_00476878 == (int *)0x0) goto LAB_00457016;
  if ((in_stack_0000000c[2] == 0x27) &&
     (iVar2 = FUN_0043b408((int)DAT_00476878), uVar3 = extraout_ECX_02, uVar6 = extraout_EDX_02,
     iVar2 == 0)) {
    piVar7 = FUN_00456d1c('\x01');
  }
  else {
    if (in_stack_0000000c[2] == 0x25) {
      piVar7 = (int *)FUN_00403130(DAT_00476878,uVar6,uVar3);
      piVar7 = FUN_004030cc(piVar7,(int)PTR_PTR_00438874);
      if ((char)piVar7 != '\0') {
        piVar7 = FUN_00456d1c('\0');
        goto LAB_00456fb7;
      }
    }
    piVar7 = (int *)0x0;
  }
LAB_00456fb7:
  if (piVar7 != (int *)0x0) {
    FUN_0040ea58(0,0,local_18);
    FUN_0042a938(piVar7,local_18,&local_10.x);
  }
LAB_00457016:
  if (((((piVar7 != (int *)0x0) &&
        (piVar5 = FUN_004030cc(piVar7,(int)PTR_PTR_00450b54), (char)piVar5 != '\0')) &&
       (iVar2 = FUN_0045384c((int)piVar7), iVar2 != DAT_00476874)) &&
      ((*(char *)((int)piVar7 + 299) != '\0' && (piVar7[9] != 0)))) &&
     (bVar1 = FUN_00431194(piVar7[9]), bVar1)) {
    DAT_00476884 = '\x01';
    *(undefined1 *)(DAT_0047686c + 0x9a) = 0;
    FUN_00403130(DAT_0047686c,piVar7,extraout_ECX_03);
    FUN_00403130(DAT_0047686c,piVar7,extraout_ECX_04);
  }
  return local_8;
}



void FUN_00457098(void)

{
  DWORD dwThreadId;
  
  DAT_00476884 = 0;
  GetCursorPos((LPPOINT)&lpPoint_0047687c);
  if (DAT_00476868 == (HHOOK)0x0) {
    dwThreadId = GetCurrentThreadId();
    DAT_00476868 = SetWindowsHookExA(-1,FUN_00456dc8,(HINSTANCE)0x0,dwThreadId);
  }
  return;
}



void FUN_004570d0(void)

{
  if (DAT_00476868 != (HHOOK)0x0) {
    UnhookWindowsHookEx(DAT_00476868);
  }
  DAT_00476868 = (HHOOK)0x0;
  DAT_00476878 = 0;
  DAT_0047686c = 0;
  DAT_00476874 = 0xffffffff;
  DAT_00474be4 = 0;
  return;
}



void FUN_0045710c(undefined4 param_1,undefined4 param_2,undefined4 param_3,int param_4,
                 WPARAM param_5,int *param_6)

{
  int iVar1;
  
  if (param_4 == 0) {
    if (param_6[1] == 0xb001) {
      FUN_00403130(DAT_00476870,param_2,param_3);
    }
    else if ((DAT_00476868 == 0) &&
            ((((iVar1 = param_6[1], iVar1 == 0x102 || (iVar1 == 0x100)) || (iVar1 == 0x101)) ||
             ((iVar1 == 0x104 || (iVar1 == 0x105)))))) {
      iVar1 = FUN_00430e98(DAT_00476870);
      *param_6 = iVar1;
    }
  }
  CallNextHookEx(DAT_00476888,param_4,param_5,(LPARAM)param_6);
  return;
}



void FUN_00457188(void)

{
  DWORD dwThreadId;
  
  if (DAT_00476888 == (HHOOK)0x0) {
    dwThreadId = GetCurrentThreadId();
    DAT_00476888 = SetWindowsHookExA(3,FUN_0045710c,(HINSTANCE)0x0,dwThreadId);
  }
  return;
}



void FUN_004571ac(void)

{
  if (DAT_00476888 != (HHOOK)0x0) {
    UnhookWindowsHookEx(DAT_00476888);
  }
  DAT_00476888 = (HHOOK)0x0;
  DAT_00476870 = 0;
  return;
}



void FUN_004571d0(int param_1)

{
  int iVar1;
  int iVar2;
  
  if ((((*(int *)(param_1 + 0x270) != 0) && (*(int *)(param_1 + 0x274) != 0)) &&
      (*(int *)(*(int *)(param_1 + 0x274) + 0x134) != 0)) && (*(int *)(param_1 + 0x26c) != 0)) {
    iVar1 = FUN_0043b408(*(int *)(*(int *)(param_1 + 0x26c) + 0x28));
    iVar1 = iVar1 + -1;
    if (-1 < iVar1) {
      do {
        iVar2 = FUN_0043b418(*(int *)(*(int *)(param_1 + 0x26c) + 0x28),iVar1);
        FUN_0043b644(*(int **)(*(int *)(param_1 + 0x26c) + 0x28),iVar1);
        FUN_0043b594(*(int **)(param_1 + 0x270),0,iVar2);
        iVar1 = iVar1 + -1;
      } while (iVar1 != -1);
    }
    FUN_00402f54(*(int **)(param_1 + 0x26c));
    *(undefined4 *)(param_1 + 0x26c) = 0;
    *(undefined4 *)(param_1 + 0x274) = 0;
    *(undefined4 *)(param_1 + 0x270) = 0;
  }
  return;
}



undefined1 FUN_0045727c(int *param_1,int *param_2)

{
  undefined1 uVar1;
  int *piVar2;
  int iVar3;
  undefined4 uVar4;
  int iVar5;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY_40;
  undefined1 *puStackY_3c;
  undefined4 uStack_34;
  undefined1 *puStack_30;
  undefined1 *puStack_2c;
  int local_20 [2];
  int local_18;
  undefined4 local_14;
  char local_e;
  undefined1 local_d;
  int *local_c;
  int *local_8;
  
  puStack_2c = &stack0xfffffffc;
  local_d = 0;
  if (param_2 == (int *)0x0) {
    return 0;
  }
  *(undefined1 *)(param_1 + 0x9a) = 0;
  puStack_30 = &LAB_00457538;
  uStack_34 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_34;
  local_c = param_2;
  local_8 = param_1;
  if (param_2[0x4e] == 0) {
    if ((int *)param_2[0x4d] == (int *)0x0) {
      FUN_0040374c();
      return local_d;
    }
    puStack_2c = &stack0xfffffffc;
    (**(code **)(*(int *)param_2[0x4d] + 0x40))();
    FUN_004571d0((int)local_8);
    piVar2 = FUN_0043d958((int *)PTR_PTR_00438874,'\x01',local_8);
    local_8[0x9b] = (int)piVar2;
    iVar5 = thunk_FUN_0043b978(local_c[0x4d]);
    if (iVar5 != 0) {
      FUN_0043d1e8((int *)local_8[0x9b],*(char *)(iVar5 + 0x24));
    }
    FUN_0043da1c(local_8[0x9b],*(undefined4 *)(local_c[0x4d] + 0x48));
    *(undefined1 *)(local_8[0x9b] + 0x58) = 1;
    iVar5 = thunk_FUN_0043b978(local_c[0x4d]);
    if (iVar5 != 0) {
      FUN_0043ce04(local_8[0x9b],*(int *)(iVar5 + 0x3c));
    }
    iVar5 = local_c[0x4d];
    local_8[0x9c] = iVar5;
    iVar5 = FUN_0043b408(iVar5);
    iVar5 = iVar5 + -1;
    if (-1 < iVar5) {
      do {
        iVar3 = FUN_0043b418(local_8[0x9c],iVar5);
        FUN_0043b644((int *)local_8[0x9c],iVar5);
        FUN_0043b594(*(int **)(local_8[0x9b] + 0x28),0,iVar3);
        iVar5 = iVar5 + -1;
      } while (iVar5 != -1);
    }
  }
  else {
    param_1[0x9b] = param_2[0x4e];
    puStack_2c = &stack0xfffffffc;
  }
  FUN_0042a990(local_8,0);
  *(int **)(local_8[0x9b] + 0x54) = local_8;
  if ((*(char *)((int)local_c + 299) == '\0') && (local_c[0x4d] == 0)) {
    local_e = '\0';
  }
  else {
    local_e = '\x01';
  }
  if (local_e != '\0') {
    DAT_00476874 = FUN_0045384c((int)local_c);
    DAT_0047686c = local_8;
    FUN_00457098();
  }
  puStackY_3c = (undefined1 *)0x457444;
  FUN_0042bd64((int)local_8,0x448,0xffffffff,0);
  puStackY_3c = &LAB_004574da;
  uStackY_40 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY_40;
  uVar4 = FUN_0042a868(local_c);
  FUN_0040ea58(0,uVar4,local_20);
  FUN_0042a938(local_c,local_20,&local_18);
  uVar4 = FUN_0043ce6c(local_8[0x9b]);
  if ((char)uVar4 != '\0') {
    local_18 = local_18 + local_c[0xe];
  }
  *(undefined1 *)((int)local_8 + 0x279) = 1;
  iVar5 = FUN_00451e30();
  if (iVar5 == 0x50050) {
    (**(code **)(*local_c + 0x74))();
  }
  (**(code **)(*(int *)local_8[0x9b] + 0x40))((int *)local_8[0x9b],local_18,local_14);
  uVar1 = 0;
  *in_FS_OFFSET = uStackY_40;
  if (local_e != '\0') {
    puStackY_3c = (undefined1 *)0x4574d9;
    uVar1 = FUN_004570d0();
  }
  return uVar1;
}



undefined4 FUN_00457548(void)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int in_stack_00000004;
  
  iVar3 = *(int *)(*(int *)(*(int *)(in_stack_00000004 + -4) + 0x200) + 8);
  if (-1 < iVar3 + -1) {
    iVar4 = 0;
    do {
      piVar1 = (int *)FUN_0040f4e8(*(undefined4 **)(*(int *)(in_stack_00000004 + -4) + 0x200),iVar4)
      ;
      piVar1 = FUN_004030cc(piVar1,(int)PTR_PTR_00450b54);
      if (((char)piVar1 != '\0') &&
         (iVar2 = FUN_0040f4e8(*(undefined4 **)(*(int *)(in_stack_00000004 + -4) + 0x200),iVar4),
         *(int *)(iVar2 + 0x134) != 0)) {
        return 1;
      }
      iVar4 = iVar4 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  return 0;
}



void FUN_004575b4(int *param_1,int param_2)

{
  char cVar1;
  undefined4 uVar2;
  HWND pHVar3;
  int iVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  
  if (*(char *)((int)param_1 + 0x269) == '\0') {
    cVar1 = (**(code **)(*param_1 + 0x4c))();
    if (((cVar1 != '\0') && ((char)param_1[0x5a] != '\0')) &&
       (*(char *)((int)param_1 + 0x20d) != '\0')) {
      uVar2 = FUN_00457548();
      if ((((char)uVar2 != '\0') && ((*(uint *)(param_2 + 4) & 0xfff0) == 0xf100)) &&
         ((*(short *)(param_2 + 8) != 0x20 && (*(short *)(param_2 + 8) != 0x2d)))) {
        pHVar3 = GetCapture();
        if (pHVar3 == (HWND)0x0) {
          if (*(short *)(param_2 + 8) == 0) {
            iVar4 = 0;
            uVar2 = extraout_ECX;
          }
          else {
            iVar4 = FUN_00456af4((int)param_1,*(short *)(param_2 + 8));
            uVar2 = extraout_ECX_00;
          }
          if ((*(short *)(param_2 + 8) == 0) || (iVar4 != 0)) {
            FUN_00403130(param_1,iVar4,uVar2);
            *(undefined4 *)(param_2 + 0xc) = 1;
          }
        }
      }
    }
  }
  return;
}



void FUN_004576c0(int *param_1,int param_2)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 uVar2;
  
  FUN_0042bd64((int)param_1,0x449,1,0);
  DAT_00476870 = param_1;
  FUN_0042afdc(param_1,'\x01');
  FUN_00457188();
  if (param_2 == 0) {
    FUN_0042bd64((int)param_1,0x448,0,0);
    *(undefined1 *)(param_1 + 0x9a) = 1;
  }
  else {
    uVar2 = 0;
    iVar1 = FUN_0045384c(param_2);
    FUN_0042bd64((int)param_1,0x448,iVar1,uVar2);
    FUN_00403130(param_1,param_2,extraout_ECX);
  }
  return;
}



void FUN_00457738(int *param_1)

{
  if (*(char *)((int)param_1 + 0x269) != '\0') {
    FUN_004571ac();
    FUN_0042afdc(param_1,'\0');
    FUN_0042bd64((int)param_1,0x449,0,0);
  }
  *(undefined1 *)((int)param_1 + 0x269) = 0;
  *(undefined1 *)(param_1 + 0x9a) = 0;
  FUN_0042bd64((int)param_1,0x448,0xffffffff,0);
  return;
}



bool FUN_00457784(int *param_1,int param_2,undefined4 param_3)

{
  undefined *puVar1;
  undefined1 *puVar2;
  undefined1 uVar3;
  uint extraout_ECX;
  uint uVar4;
  uint extraout_ECX_00;
  undefined4 extraout_EDX;
  undefined4 uVar5;
  undefined4 extraout_EDX_00;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  
  puVar1 = PTR_DAT_004757c0;
  if (*(char *)((int)param_1 + 0x269) == '\0') {
    puStack_18 = (undefined1 *)0x4577ca;
    FUN_00403130(param_1,param_2,param_3);
    puStack_1c = &LAB_00457824;
    uStack_20 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_20;
    *(undefined1 *)((int)param_1 + 0x269) = 1;
    uVar4 = extraout_ECX;
    uVar5 = extraout_EDX;
    puStack_18 = &stack0xfffffffc;
    do {
      FUN_00448cd8(*(int *)puVar1,uVar5,uVar4);
      puVar2 = puStack_18;
      if (*(char *)(*(int *)puVar1 + 0x8c) != '\0') {
        *(undefined1 *)((int)param_1 + 0x269) = 0;
      }
      uVar4 = extraout_ECX_00;
      uVar5 = extraout_EDX_00;
    } while (*(char *)((int)param_1 + 0x269) != '\0');
    *in_FS_OFFSET = uStack_20;
    puStack_18 = &DAT_0045782b;
    puStack_1c = (undefined1 *)0x457823;
    uVar3 = FUN_00403130(param_1,uStack_20,puVar2);
    return (bool)uVar3;
  }
  if (param_2 != 0) {
    puStack_18 = (undefined1 *)0x4577b4;
    FUN_00403130(param_1,param_2,param_3);
  }
  return param_2 != 0;
}



int * FUN_004581c4(int *param_1,char param_2,int param_3,int param_4)

{
  int iVar1;
  int extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_004366a4(param_1,'\0',param_3,param_4);
  iVar1 = FUN_00402f24((int *)PTR_DAT_0040dd64,'\x01',extraout_ECX_00);
  param_1[0x1e] = iVar1;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



uint FUN_00458244(int *param_1)

{
  uint uVar1;
  
  uVar1 = FUN_0040fa54(param_1[0x1e]);
  if (*(int *)(param_1[0x1e] + 4) <= (int)uVar1) {
    uVar1 = FUN_00436b24(param_1,(int *)0x0,(int *)0x0);
    FUN_0040f96c(param_1[0x1e],uVar1 + 1);
  }
  FUN_0040fa10(param_1[0x1e],uVar1,'\x01');
  return uVar1;
}



uint FUN_00458284(int *param_1,int *param_2,int param_3)

{
  uint uVar1;
  
  uVar1 = FUN_00458244(param_1);
  FUN_00436d30(param_1,uVar1,param_2,param_3);
  param_1[0x1f] = param_1[0x1f] + 1;
  return uVar1;
}



void FUN_004582b0(int param_1,uint param_2)

{
  uint uVar1;
  
  uVar1 = FUN_0040fa3c(*(int *)(param_1 + 0x78),param_2);
  if ((char)uVar1 != '\0') {
    *(int *)(param_1 + 0x7c) = *(int *)(param_1 + 0x7c) + -1;
    FUN_0040fa10(*(int *)(param_1 + 0x78),param_2,'\0');
  }
  return;
}



int * FUN_004582d8(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00402f24(param_1,'\0',param_3);
  iVar1 = FUN_00402f24((int *)PTR_PTR_0040dca8,'\x01',extraout_ECX_00);
  param_1[1] = iVar1;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



int * FUN_0045834c(int param_1,int param_2,int param_3)

{
  int *piVar1;
  int iVar2;
  
  iVar2 = *(int *)(*(int *)(param_1 + 4) + 8) + -1;
  if (-1 < iVar2) {
    do {
      piVar1 = (int *)FUN_0040f4e8(*(undefined4 **)(param_1 + 4),iVar2);
      if ((param_2 == piVar1[10]) && (param_3 == piVar1[9])) {
        return piVar1;
      }
      iVar2 = iVar2 + -1;
    } while (iVar2 != -1);
  }
  piVar1 = FUN_004581c4((int *)PTR_PTR_00458058,'\x01',param_2,param_3);
  FUN_0040f38c(*(int **)(param_1 + 4),(int)piVar1);
  return piVar1;
}



void FUN_004583ac(int param_1,int *param_2)

{
  if ((param_2 != (int *)0x0) && (param_2[0x1f] == 0)) {
    FUN_0040f680(*(int **)(param_1 + 4),(int)param_2);
    FUN_00402f54(param_2);
  }
  return;
}



undefined4 FUN_004583cc(int param_1)

{
  return CONCAT31((int3)((uint)*(int *)(param_1 + 4) >> 8),*(int *)(*(int *)(param_1 + 4) + 8) == 0)
  ;
}



int * FUN_004583d8(int *param_1,char param_2,undefined4 param_3)

{
  byte bVar1;
  int *piVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00402f24(param_1,'\0',param_3);
  piVar2 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX_00);
  param_1[1] = (int)piVar2;
  piVar2[3] = (int)param_1;
  piVar2[2] = (int)FUN_00458510;
  param_1[7] = 0x8080;
  *(undefined1 *)(param_1 + 8) = 1;
  bVar1 = 0;
  do {
    param_1[bVar1 + 3] = -1;
    bVar1 = bVar1 + 1;
  } while (bVar1 != 4);
  if (DAT_00474c14 == (int *)0x0) {
    DAT_00474c14 = FUN_004582d8((int *)PTR_DAT_00458110,'\x01',extraout_ECX_01);
  }
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



void FUN_004584c8(int param_1)

{
  uint uVar1;
  uint uVar2;
  
  uVar2 = 0;
  do {
    uVar1 = *(uint *)(param_1 + 0xc + (uVar2 & 0x7f) * 4);
    if (uVar1 != 0xffffffff) {
      FUN_004582b0(*(int *)(param_1 + 8),uVar1);
    }
    *(undefined4 *)(param_1 + 0xc + (uVar2 & 0x7f) * 4) = 0xffffffff;
    uVar2 = uVar2 + 1;
  } while ((char)uVar2 != '\x04');
  FUN_004583ac(DAT_00474c14,*(int **)(param_1 + 8));
  *(undefined4 *)(param_1 + 8) = 0;
  return;
}



void FUN_00458510(int param_1,int *param_2)

{
  uint uVar1;
  
  if (param_2 == *(int **)(param_1 + 4)) {
    uVar1 = FUN_0041c954(*(int **)(param_1 + 4));
    *(uint *)(param_1 + 0x1c) = uVar1;
    FUN_004584c8(param_1);
    if (*(short *)(param_1 + 0x2a) != 0) {
      (**(code **)(param_1 + 0x28))(*(undefined4 *)(param_1 + 0x2c),param_1);
    }
  }
  return;
}



int FUN_00458540(int param_1,int *param_2)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  int iVar4;
  
  FUN_004584c8(param_1);
  iVar1 = (**(code **)(**(int **)(param_1 + 4) + 8))(*(int **)(param_1 + 4),param_2);
  if (param_2 != (int *)0x0) {
    iVar1 = (**(code **)(*param_2 + 0x20))();
    if (0 < iVar1) {
      uVar2 = FUN_0041c954(param_2);
      *(uint *)(param_1 + 0x1c) = uVar2;
      iVar3 = (**(code **)(*param_2 + 0x2c))();
      iVar4 = (**(code **)(*param_2 + 0x20))();
      iVar1 = iVar3 / iVar4;
      if (iVar3 % iVar4 == 0) {
        iVar3 = (**(code **)(*param_2 + 0x2c))();
        iVar1 = (**(code **)(*param_2 + 0x20))();
        iVar3 = iVar3 / iVar1;
        if (4 < iVar3) {
          iVar3 = 1;
        }
        iVar1 = FUN_004585b8(param_1,(char)iVar3);
      }
    }
  }
  return iVar1;
}



void FUN_004585b8(int param_1,char param_2)

{
  if ((param_2 != *(char *)(param_1 + 0x20)) && (param_2 != '\0')) {
    FUN_004584c8(param_1);
    *(char *)(param_1 + 0x20) = param_2;
    FUN_00458510(param_1,*(int **)(param_1 + 4));
  }
  return;
}



int FUN_004585e0(int param_1,byte param_2)

{
  int iVar1;
  int iVar2;
  int *piVar3;
  int iVar4;
  HPALETTE pHVar5;
  int *piVar6;
  int *piVar7;
  uint uVar8;
  HDC pHVar9;
  HDC pHVar10;
  undefined4 uVar11;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_ECX_03;
  byte bVar12;
  undefined4 *in_FS_OFFSET;
  int iVar13;
  int iVar14;
  int x1;
  int iVar15;
  int y1;
  DWORD DVar16;
  COLORREF CVar17;
  undefined4 uStack_60;
  undefined4 uStack_54;
  undefined1 *puStack_50;
  undefined1 *puStack_4c;
  int local_3c [4];
  RECT local_2c;
  int *local_1c;
  int *local_18;
  int *local_14;
  int *local_10;
  byte local_9;
  int local_8;
  
  local_9 = param_2;
  if ((param_2 == 2) && (*(byte *)(param_1 + 0x20) < 3)) {
    local_9 = 0;
  }
  iVar1 = *(int *)(param_1 + 0xc + (uint)local_9 * 4);
  if (iVar1 != -1) {
    return iVar1;
  }
  puStack_4c = (undefined1 *)0x458622;
  local_8 = param_1;
  iVar1 = (**(code **)(**(int **)(param_1 + 4) + 0x2c))();
  puStack_4c = (undefined1 *)0x45862f;
  iVar2 = (**(code **)(**(int **)(local_8 + 4) + 0x20))();
  if (iVar1 == 0 && iVar2 == 0) {
    return -1;
  }
  puStack_4c = (undefined1 *)0x458642;
  iVar1 = (**(code **)(**(int **)(local_8 + 4) + 0x2c))();
  iVar1 = iVar1 / (int)(uint)*(byte *)(local_8 + 0x20);
  puStack_4c = (undefined1 *)0x45865b;
  iVar2 = (**(code **)(**(int **)(local_8 + 4) + 0x20))();
  uVar11 = extraout_ECX;
  if (*(int *)(local_8 + 8) == 0) {
    if (DAT_00474c14 == (int *)0x0) {
      puStack_4c = (undefined1 *)0x45867b;
      DAT_00474c14 = FUN_004582d8((int *)PTR_DAT_00458110,'\x01',extraout_ECX);
    }
    puStack_4c = (undefined1 *)0x45868e;
    piVar3 = FUN_0045834c((int)DAT_00474c14,iVar1,iVar2);
    *(int **)(local_8 + 8) = piVar3;
    uVar11 = extraout_ECX_00;
  }
  puStack_4c = (undefined1 *)0x4586a0;
  local_10 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',uVar11);
  puStack_50 = &LAB_00458b8f;
  uStack_54 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_54;
  puStack_4c = &stack0xfffffffc;
  (**(code **)(*local_10 + 0x40))(local_10,iVar1);
  (**(code **)(*local_10 + 0x34))(local_10,iVar2);
  uStack_60 = 0x4586d5;
  FUN_0040ea70(0,0,iVar1,&local_2c.left,iVar2);
  iVar4 = FUN_0041c784(local_10);
  FUN_00417804(*(int **)(iVar4 + 0x14),0x8000000f);
  pHVar5 = (HPALETTE)(**(code **)(**(int **)(local_8 + 4) + 0x24))();
  pHVar5 = FUN_0041bfa8(pHVar5);
  (**(code **)(*local_10 + 0x38))(local_10,pHVar5);
  bVar12 = local_9;
  if (*(char *)(local_8 + 0x20) <= (char)local_9) {
    bVar12 = 0;
  }
  uStack_60 = 0x45872b;
  FUN_0040ea70((uint)bVar12 * iVar1,0,(bVar12 + 1) * iVar1,local_3c,iVar2);
  if (local_9 != 0) {
    if (local_9 == 1) {
      local_18 = (int *)0x0;
      local_14 = (int *)0x0;
      uStack_60 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack_60;
      local_18 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX_01);
      local_14 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX_02);
      (**(code **)(*local_14 + 8))(local_14,*(undefined4 *)(local_8 + 4));
      (**(code **)(*local_14 + 0x68))(local_14,1);
      if (*(byte *)(local_8 + 0x20) < 2) {
        (**(code **)(*local_18 + 8))(local_18,*(undefined4 *)(local_8 + 4));
        (**(code **)(*local_18 + 0x68))(local_18,1);
        iVar4 = FUN_0041c784(local_18);
        FUN_00417804(*(int **)(iVar4 + 0x14),0);
        (**(code **)(*local_18 + 0x40))(local_18,iVar1);
        uVar11 = FUN_0041c838((int)local_18);
        if ((char)uVar11 != '\0') {
          iVar4 = FUN_0041c784(local_18);
          FUN_00417034(*(int **)(iVar4 + 0xc),0xffffff,extraout_ECX_03);
          FUN_0041d630(local_18,0);
          iVar4 = FUN_0041c784(local_18);
          FUN_00417804(*(int **)(iVar4 + 0x14),0xffffff);
        }
        FUN_0041d630(local_18,1);
        piVar3 = (int *)FUN_0041c784(local_10);
        FUN_00417804((int *)piVar3[5],0x8000000f);
        FUN_00417eb0(piVar3,&local_2c);
        FUN_00417804((int *)piVar3[5],0x80000014);
        CVar17 = 0;
        pHVar9 = (HDC)FUN_004183d4(piVar3);
        SetTextColor(pHVar9,CVar17);
        CVar17 = 0xffffff;
        pHVar9 = (HDC)FUN_004183d4(piVar3);
        SetBkColor(pHVar9,CVar17);
        DVar16 = 0xe20746;
        y1 = 0;
        x1 = 0;
        piVar6 = (int *)FUN_0041c784(local_18);
        pHVar9 = (HDC)FUN_004183d4(piVar6);
        iVar14 = 1;
        iVar13 = 1;
        iVar4 = iVar1;
        iVar15 = iVar2;
        pHVar10 = (HDC)FUN_004183d4(piVar3);
        BitBlt(pHVar10,iVar13,iVar14,iVar4,iVar15,pHVar9,x1,y1,DVar16);
        FUN_00417804((int *)piVar3[5],0x80000010);
        CVar17 = 0;
        pHVar9 = (HDC)FUN_004183d4(piVar3);
        SetTextColor(pHVar9,CVar17);
        CVar17 = 0xffffff;
        pHVar9 = (HDC)FUN_004183d4(piVar3);
        SetBkColor(pHVar9,CVar17);
        DVar16 = 0xe20746;
        iVar14 = 0;
        iVar13 = 0;
        piVar6 = (int *)FUN_0041c784(local_18);
        pHVar9 = (HDC)FUN_004183d4(piVar6);
        iVar15 = 0;
        iVar4 = 0;
        pHVar10 = (HDC)FUN_004183d4(piVar3);
        BitBlt(pHVar10,iVar4,iVar15,iVar1,iVar2,pHVar9,iVar13,iVar14,DVar16);
      }
      else {
        local_1c = (int *)FUN_0041c784(local_10);
        piVar3 = local_3c;
        piVar6 = (int *)FUN_0041c784(local_14);
        FUN_00417d34(local_1c,&local_2c.left,piVar6,piVar3);
        FUN_0041d630(local_18,1);
        (**(code **)(*local_18 + 0x40))(local_18,iVar1);
        (**(code **)(*local_18 + 0x34))(local_18,iVar2);
        iVar4 = FUN_0041c784(local_14);
        FUN_00417804(*(int **)(iVar4 + 0x14),0xffffff);
        piVar3 = local_3c;
        piVar6 = (int *)FUN_0041c784(local_14);
        piVar7 = (int *)FUN_0041c784(local_18);
        FUN_00417d34(piVar7,&local_2c.left,piVar6,piVar3);
        FUN_00417804((int *)local_1c[5],0x80000014);
        pHVar9 = (HDC)FUN_004183d4(local_1c);
        SetTextColor(pHVar9,0);
        SetBkColor(pHVar9,0xffffff);
        DVar16 = 0xe20746;
        iVar15 = 0;
        iVar4 = 0;
        piVar3 = (int *)FUN_0041c784(local_18);
        pHVar10 = (HDC)FUN_004183d4(piVar3);
        BitBlt(pHVar9,0,0,iVar1,iVar2,pHVar10,iVar4,iVar15,DVar16);
        iVar4 = FUN_0041c784(local_14);
        FUN_00417804(*(int **)(iVar4 + 0x14),0x808080);
        piVar3 = local_3c;
        piVar6 = (int *)FUN_0041c784(local_14);
        piVar7 = (int *)FUN_0041c784(local_18);
        FUN_00417d34(piVar7,&local_2c.left,piVar6,piVar3);
        FUN_00417804((int *)local_1c[5],0x80000010);
        pHVar9 = (HDC)FUN_004183d4(local_1c);
        SetTextColor(pHVar9,0);
        SetBkColor(pHVar9,0xffffff);
        DVar16 = 0xe20746;
        iVar15 = 0;
        iVar4 = 0;
        piVar3 = (int *)FUN_0041c784(local_18);
        pHVar10 = (HDC)FUN_004183d4(piVar3);
        BitBlt(pHVar9,0,0,iVar1,iVar2,pHVar10,iVar4,iVar15,DVar16);
        uVar11 = FUN_00416b74(*(uint *)(local_8 + 0x1c));
        iVar4 = FUN_0041c784(local_14);
        FUN_00417804(*(int **)(iVar4 + 0x14),uVar11);
        piVar3 = local_3c;
        piVar6 = (int *)FUN_0041c784(local_14);
        piVar7 = (int *)FUN_0041c784(local_18);
        FUN_00417d34(piVar7,&local_2c.left,piVar6,piVar3);
        FUN_00417804((int *)local_1c[5],0x8000000f);
        pHVar9 = (HDC)FUN_004183d4(local_1c);
        SetTextColor(pHVar9,0);
        SetBkColor(pHVar9,0xffffff);
        DVar16 = 0xe20746;
        iVar15 = 0;
        iVar4 = 0;
        piVar3 = (int *)FUN_0041c784(local_18);
        pHVar10 = (HDC)FUN_004183d4(piVar3);
        BitBlt(pHVar9,0,0,iVar1,iVar2,pHVar10,iVar4,iVar15,DVar16);
      }
      *in_FS_OFFSET = uStack_60;
      FUN_00402f54(local_14);
      iVar1 = FUN_00402f54(local_18);
      return iVar1;
    }
    if (1 < (byte)(local_9 - 2)) goto LAB_00458b79;
  }
  piVar3 = local_3c;
  piVar6 = (int *)FUN_0041c784(*(int **)(local_8 + 4));
  uStack_60 = 0x458755;
  piVar7 = (int *)FUN_0041c784(local_10);
  FUN_00417d34(piVar7,&local_2c.left,piVar6,piVar3);
  if (*(char *)(*(int *)(local_8 + 4) + 0x30) == '\x01') {
    uVar8 = FUN_00458284(*(int **)(local_8 + 8),local_10,*(int *)(local_8 + 0x1c));
    *(uint *)(local_8 + 0xc + (uint)local_9 * 4) = uVar8;
  }
  else {
    uVar8 = FUN_00458284(*(int **)(local_8 + 8),local_10,0x20000000);
    *(uint *)(local_8 + 0xc + (uint)local_9 * 4) = uVar8;
  }
LAB_00458b79:
  *in_FS_OFFSET = uStack_54;
  puStack_4c = &DAT_00458b96;
  puStack_50 = (undefined1 *)0x458b8e;
  iVar1 = FUN_00402f54(local_10);
  return iVar1;
}



void FUN_00458bb8(int param_1,int *param_2,int *param_3,char param_4,byte param_5)

{
  int iVar1;
  HDC pHVar2;
  HIMAGELIST p_Var3;
  int iVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  COLORREF CVar8;
  COLORREF CVar9;
  UINT UVar10;
  
  if (*(int *)(param_1 + 4) != 0) {
    iVar1 = (**(code **)(**(int **)(param_1 + 4) + 0x2c))();
    if (iVar1 != 0) {
      iVar1 = (**(code **)(**(int **)(param_1 + 4) + 0x20))();
      if (iVar1 != 0) {
        iVar1 = FUN_004585e0(param_1,param_5);
        if ((param_4 == '\0') && (param_5 != 3)) {
          UVar10 = 0;
          CVar9 = 0x1fffffff;
          CVar8 = FUN_00416b74(0x8000000f);
          iVar7 = 0;
          iVar6 = 0;
          iVar5 = param_3[1];
          iVar4 = *param_3;
          pHVar2 = (HDC)FUN_004183d4(param_2);
          p_Var3 = (HIMAGELIST)FUN_004369f0(*(int **)(param_1 + 8));
          ImageList_DrawEx(p_Var3,iVar1,pHVar2,iVar4,iVar5,iVar6,iVar7,CVar8,CVar9,UVar10);
        }
        else {
          UVar10 = 1;
          CVar9 = 0x1fffffff;
          CVar8 = 0x1fffffff;
          iVar7 = 0;
          iVar6 = 0;
          iVar5 = param_3[1];
          iVar4 = *param_3;
          pHVar2 = (HDC)FUN_004183d4(param_2);
          p_Var3 = (HIMAGELIST)FUN_004369f0(*(int **)(param_1 + 8));
          ImageList_DrawEx(p_Var3,iVar1,pHVar2,iVar4,iVar5,iVar6,iVar7,CVar8,CVar9,UVar10);
        }
      }
    }
  }
  return;
}



void FUN_00458c74(undefined4 param_1,int *param_2,undefined *param_3,uint param_4,char param_5,
                 LONG *param_6)

{
  uint uVar1;
  LPCSTR pCVar2;
  HDC pHVar3;
  int iVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  tagRECT *ptVar5;
  tagRECT local_14;
  
  ptVar5 = &local_14;
  for (iVar4 = 4; iVar4 != 0; iVar4 = iVar4 + -1) {
    ptVar5->left = *param_6;
    param_6 = param_6 + 1;
    ptVar5 = (tagRECT *)&ptVar5->top;
  }
  FUN_00417920((int *)param_2[5],'\x01');
  if (param_5 == '\x01') {
    OffsetRect(&local_14,1,1);
    FUN_00417034((int *)param_2[3],-0x7fffffec,extraout_ECX);
    uVar1 = param_4 | 5;
    ptVar5 = &local_14;
    iVar4 = FUN_00403e5c((int)param_3);
    pCVar2 = FUN_00404020(param_3);
    pHVar3 = (HDC)FUN_004183d4(param_2);
    DrawTextA(pHVar3,pCVar2,iVar4,ptVar5,uVar1);
    OffsetRect(&local_14,-1,-1);
    FUN_00417034((int *)param_2[3],-0x7ffffff0,extraout_ECX_00);
    uVar1 = param_4 | 5;
    ptVar5 = &local_14;
    iVar4 = FUN_00403e5c((int)param_3);
    pCVar2 = FUN_00404020(param_3);
    pHVar3 = (HDC)FUN_004183d4(param_2);
    DrawTextA(pHVar3,pCVar2,iVar4,ptVar5,uVar1);
  }
  else {
    uVar1 = param_4 | 5;
    ptVar5 = &local_14;
    iVar4 = FUN_00403e5c((int)param_3);
    pCVar2 = FUN_00404020(param_3);
    pHVar3 = (HDC)FUN_004183d4(param_2);
    DrawTextA(pHVar3,pCVar2,iVar4,ptVar5,uVar1);
  }
  return;
}



void FUN_00458d58(int param_1,int *param_2,int *param_3,uint param_4,LPRECT param_5,int *param_6,
                 int param_7,int param_8,byte param_9,undefined *param_10,int *param_11)

{
  undefined4 uVar1;
  int iVar2;
  uint uVar3;
  LPCSTR lpchText;
  HDC hdc;
  LONG *pLVar4;
  LPRECT ptVar5;
  byte bVar6;
  LONG local_44 [4];
  int local_34;
  int local_30;
  int local_2c;
  int local_28;
  int local_24;
  int local_20;
  int local_1c;
  int local_18;
  int local_14;
  int local_10;
  int *local_c;
  int local_8;
  
  bVar6 = 0;
  if ((param_4 & 2) == 2) {
    if (param_9 == 0) {
      param_9 = 1;
    }
    else if (param_9 == 1) {
      param_9 = 0;
    }
  }
  local_c = param_2;
  local_8 = param_1;
  FUN_0040ea58(param_3[2] - *param_3,param_3[3] - param_3[1],&local_1c);
  if (*(int *)(local_8 + 4) == 0) {
    FUN_0040ea58(0,0,&local_24);
  }
  else {
    uVar1 = (**(code **)(**(int **)(local_8 + 4) + 0x20))();
    iVar2 = (**(code **)(**(int **)(local_8 + 4) + 0x2c))();
    FUN_0040ea58(iVar2 / (int)(uint)*(byte *)(local_8 + 0x20),uVar1,&local_24);
  }
  iVar2 = FUN_00403e5c((int)param_10);
  if (iVar2 < 1) {
    FUN_0040ea70(0,0,0,local_44,0);
    pLVar4 = local_44;
    ptVar5 = param_5;
    for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {
      ptVar5->left = *pLVar4;
      pLVar4 = pLVar4 + (uint)bVar6 * -2 + 1;
      ptVar5 = (LPRECT)((int)ptVar5 + (uint)bVar6 * -8 + 4);
    }
    FUN_0040ea58(0,0,&local_2c);
  }
  else {
    FUN_0040ea70(0,0,param_3[2] - *param_3,local_44,0);
    pLVar4 = local_44;
    ptVar5 = param_5;
    for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {
      ptVar5->left = *pLVar4;
      pLVar4 = pLVar4 + (uint)bVar6 * -2 + 1;
      ptVar5 = (LPRECT)((int)ptVar5 + (uint)bVar6 * -8 + 4);
    }
    uVar3 = param_4 | 0x400;
    ptVar5 = param_5;
    iVar2 = FUN_00403e5c((int)param_10);
    lpchText = FUN_00404020(param_10);
    hdc = (HDC)FUN_004183d4(local_c);
    DrawTextA(hdc,lpchText,iVar2,ptVar5,uVar3);
    FUN_0040ea58(param_5->right - param_5->left,param_5->bottom - param_5->top,&local_2c);
  }
  if (param_9 < 2) {
    uVar3 = (local_18 - local_20) + 1;
    iVar2 = (int)uVar3 >> 1;
    if (iVar2 < 0) {
      iVar2 = iVar2 + (uint)((uVar3 & 1) != 0);
    }
    param_6[1] = iVar2;
    uVar3 = (local_18 - local_28) + 1;
    local_10 = (int)uVar3 >> 1;
    if (local_10 < 0) {
      local_10 = local_10 + (uint)((uVar3 & 1) != 0);
    }
  }
  else {
    uVar3 = (local_1c - local_24) + 1;
    iVar2 = (int)uVar3 >> 1;
    if (iVar2 < 0) {
      iVar2 = iVar2 + (uint)((uVar3 & 1) != 0);
    }
    *param_6 = iVar2;
    uVar3 = (local_1c - local_2c) + 1;
    local_14 = (int)uVar3 >> 1;
    if (local_14 < 0) {
      local_14 = local_14 + (uint)((uVar3 & 1) != 0);
    }
  }
  if ((local_2c == 0) || (local_24 == 0)) {
    param_7 = 0;
  }
  if (param_8 == -1) {
    if (param_7 == -1) {
      FUN_0040ea58(local_24 + local_2c,local_20 + local_28,&local_34);
      if (param_9 < 2) {
        local_34 = local_1c - local_34;
      }
      else {
        local_34 = local_18 - local_30;
      }
      param_8 = local_34 / 3;
      param_7 = param_8;
    }
    else {
      FUN_0040ea58(local_24 + param_7 + local_2c,local_20 + param_7 + local_28,&local_34);
      if (param_9 < 2) {
        uVar3 = (local_1c - local_34) + 1;
        param_8 = (int)uVar3 >> 1;
        if (param_8 < 0) {
          param_8 = param_8 + (uint)((uVar3 & 1) != 0);
        }
      }
      else {
        uVar3 = (local_18 - local_30) + 1;
        param_8 = (int)uVar3 >> 1;
        if (param_8 < 0) {
          param_8 = param_8 + (uint)((uVar3 & 1) != 0);
        }
      }
    }
  }
  else if (param_7 == -1) {
    FUN_0040ea58(local_1c - (param_8 + local_24),local_18 - (param_8 + local_20),&local_34);
    if (param_9 < 2) {
      param_7 = local_34 - local_2c >> 1;
      if (param_7 < 0) {
        param_7 = param_7 + (uint)((local_34 - local_2c & 1U) != 0);
      }
    }
    else {
      param_7 = local_30 - local_28 >> 1;
      if (param_7 < 0) {
        param_7 = param_7 + (uint)((local_30 - local_28 & 1U) != 0);
      }
    }
  }
  if (param_9 == 0) {
    *param_6 = param_8;
    local_14 = param_8 + local_24 + param_7;
  }
  else if (param_9 == 1) {
    local_24 = (local_1c - param_8) - local_24;
    *param_6 = local_24;
    local_14 = (local_24 - param_7) - local_2c;
  }
  else if (param_9 == 2) {
    param_6[1] = param_8;
    local_10 = param_8 + local_20 + param_7;
  }
  else if (param_9 == 3) {
    local_20 = (local_18 - param_8) - local_20;
    param_6[1] = local_20;
    local_10 = (local_20 - param_7) - local_28;
  }
  *param_6 = *param_6 + *param_3 + *param_11;
  param_6[1] = param_6[1] + param_3[1] + param_11[1];
  OffsetRect(param_5,*param_3 + local_14 + *param_11,param_3[1] + local_10 + *param_11);
  return;
}



void FUN_00459068(int param_1,int *param_2,int *param_3,LPRECT param_4,uint param_5,char param_6,
                 byte param_7,int param_8,int param_9,byte param_10,undefined *param_11,
                 int *param_12)

{
  int local_10 [2];
  int *local_8;
  
  local_8 = param_3;
  FUN_00458d58(param_1,param_2,param_3,param_5,param_4,local_10,param_8,param_9,param_10,param_11,
               param_12);
  FUN_00458bb8(param_1,param_2,local_10,param_6,param_7);
  FUN_00458c74(param_1,param_2,param_11,param_5,param_7,&param_4->left);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

int * FUN_004590d8(int *param_1,char param_2,int *param_3)

{
  int iVar1;
  int *piVar2;
  int *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar3;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  piVar2 = FUN_004583d8((int *)PTR_DAT_00458168,'\x01',param_3);
  param_1[0x4b] = (int)piVar2;
  iVar1 = param_1[0x4b];
  *(int **)(iVar1 + 0x2c) = param_1;
  *(undefined1 **)(iVar1 + 0x28) = &LAB_00459700;
  FUN_00431ef0(param_1,'\0',param_3);
  uVar3 = 0x16;
  (**(code **)(*param_1 + 0x7c))(param_1,0,0,0x16,0x17);
  param_1[0x10] = DAT_00459190;
  FUN_0042aee4((int)param_1,'\x01');
  FUN_0042af4c((int)param_1,-0x7ffffff1);
  param_1[0x4d] = 4;
  param_1[0x4f] = -1;
  *(undefined1 *)((int)param_1 + 0x133) = 0;
  *(undefined1 *)(param_1 + 0x4e) = 1;
  _DAT_00474c18 = _DAT_00474c18 + 1;
  if (param_2 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = uVar3;
  }
  return param_1;
}



void FUN_00459414(int *param_1)

{
  char cVar1;
  int *piVar2;
  undefined4 extraout_EDX;
  tagPOINT tStack_10;
  
  if ((char)param_1[0x50] != '\0') {
    cVar1 = (**(code **)(*param_1 + 0x4c))();
    if (cVar1 != '\0') {
      GetCursorPos(&tStack_10);
      piVar2 = FUN_004297f8(&tStack_10,CONCAT31((int3)((uint)extraout_EDX >> 8),1));
      *(bool *)((int)param_1 + 0x141) = param_1 != piVar2;
      if (param_1 != piVar2) {
        FUN_0042bd64((int)param_1,0xb014,0,0);
      }
      else {
        FUN_0042bd64((int)param_1,0xb013,0,0);
      }
    }
  }
  return;
}



void FUN_00459478(int *param_1)

{
  char cVar1;
  
  FUN_0042ca90(param_1);
  cVar1 = (**(code **)(*param_1 + 0x4c))();
  FUN_004585e0(param_1[0x4b],cVar1 == '\0');
  return;
}



void FUN_0045959c(int *param_1,undefined4 param_2,undefined4 param_3,int param_4,int param_5)

{
  bool bVar1;
  int iVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_ECX_03;
  undefined4 extraout_ECX_04;
  undefined4 extraout_ECX_05;
  undefined4 uVar3;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 extraout_EDX_03;
  undefined4 extraout_EDX_04;
  undefined4 extraout_EDX_05;
  undefined4 uVar4;
  
  FUN_0042c3e0((int)param_1,param_2,param_3,param_4,param_5);
  if (*(char *)((int)param_1 + 0x131) != '\0') {
    *(undefined1 *)((int)param_1 + 0x131) = 0;
    uVar3 = extraout_ECX;
    uVar4 = extraout_EDX;
    if ((((param_5 < 0) ||
         (iVar2 = FUN_0042a824(param_1), uVar3 = extraout_ECX_00, uVar4 = extraout_EDX_00,
         iVar2 <= param_5)) || (param_4 < 0)) ||
       (iVar2 = FUN_0042a868(param_1), uVar3 = extraout_ECX_01, uVar4 = extraout_EDX_01,
       iVar2 < param_4)) {
      bVar1 = false;
    }
    else {
      bVar1 = true;
    }
    if (param_1[0x4a] == 0) {
      *(undefined1 *)((int)param_1 + 0x142) = 0;
      *(undefined1 *)((int)param_1 + 0x141) = 0;
      if ((bVar1) && (1 < (byte)(*(char *)((int)param_1 + 0x142) - 2U))) {
        (**(code **)(*param_1 + 0x74))();
        uVar3 = extraout_ECX_02;
        uVar4 = extraout_EDX_02;
      }
    }
    else if (bVar1) {
      FUN_00459740(param_1,*(byte *)(param_1 + 0x4c) ^ 1);
      uVar3 = extraout_ECX_03;
      uVar4 = extraout_EDX_03;
      if ((char)param_1[0x4c] != '\0') {
        (**(code **)(*param_1 + 0x78))();
        uVar3 = extraout_ECX_04;
        uVar4 = extraout_EDX_04;
      }
    }
    else {
      if ((char)param_1[0x4c] != '\0') {
        *(undefined1 *)((int)param_1 + 0x142) = 3;
      }
      (**(code **)(*param_1 + 0x78))();
      uVar3 = extraout_ECX_05;
      uVar4 = extraout_EDX_05;
    }
    if (bVar1) {
      FUN_00403130(param_1,uVar4,uVar3);
    }
    FUN_00459414(param_1);
    return;
  }
  return;
}



undefined4 FUN_004596a4(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 300) + 4);
}



void FUN_00459708(int param_1)

{
  undefined4 local_10;
  int local_c;
  int local_8;
  undefined4 local_4;
  
  local_c = *(int *)(param_1 + 0x128);
  if ((local_c != 0) && (*(int *)(param_1 + 0x24) != 0)) {
    local_10 = 0xb018;
    local_4 = 0;
    local_8 = param_1;
    FUN_0042de20(*(int *)(param_1 + 0x24),(int)&local_10);
  }
  return;
}



void FUN_00459740(int *param_1,char param_2)

{
  if (param_1[0x4a] == 0) {
    param_2 = '\0';
  }
  if ((param_2 != (char)param_1[0x4c]) &&
     (((char)param_1[0x4c] == '\0' || (*(char *)((int)param_1 + 0x132) != '\0')))) {
    *(char *)(param_1 + 0x4c) = param_2;
    if (param_2 == '\0') {
      *(undefined1 *)((int)param_1 + 0x142) = 0;
      (**(code **)(*param_1 + 0x78))();
    }
    else {
      if (*(char *)((int)param_1 + 0x142) == '\0') {
        (**(code **)(*param_1 + 0x74))();
      }
      *(undefined1 *)((int)param_1 + 0x142) = 3;
    }
    if (param_2 != '\0') {
      FUN_00459708((int)param_1);
    }
  }
  return;
}



void FUN_00459868(int *param_1,int param_2)

{
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  FUN_0042c1e0(param_1,param_2);
  if ((char)param_1[0x4c] != '\0') {
    FUN_00403130(param_1,extraout_EDX,extraout_ECX);
  }
  return;
}



void FUN_00459908(int *param_1,int param_2)

{
  char cVar1;
  undefined2 extraout_var;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  int local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_8 = 0;
  puStack_1c = &LAB_00459992;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  FUN_0042adc0((int)param_1,&local_8);
  cVar1 = FUN_00440914(CONCAT22(extraout_var,*(undefined2 *)(param_2 + 4)),local_8);
  if (cVar1 != '\0') {
    cVar1 = (**(code **)(*param_1 + 0x4c))();
    if ((((cVar1 != '\0') && (*(char *)((int)param_1 + 0x47) != '\0')) && (param_1[9] != 0)) &&
       (*(char *)(param_1[9] + 0x168) != '\0')) {
      FUN_00403130(param_1,extraout_EDX,extraout_ECX);
      *(undefined4 *)(param_2 + 0xc) = 1;
      goto LAB_0045997c;
    }
  }
  (**(code **)(*param_1 + -0x10))(param_1,param_2);
LAB_0045997c:
  *in_FS_OFFSET = uStack_20;
  puStack_18 = &LAB_00459999;
  puStack_1c = (undefined1 *)0x459991;
  FUN_00403bdc(&local_8);
  return;
}



void FUN_00459a5c(int *param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int *piVar1;
  int iVar2;
  undefined4 uVar3;
  undefined4 uVar4;
  int *piVar5;
  undefined1 uVar6;
  RECT *pRVar7;
  RECT local_14;
  
  piVar1 = (int *)FUN_004596a4(*(int *)(param_4 + -4));
  (**(code **)(*piVar1 + 0x40))(piVar1,param_1[10]);
  (**(code **)(*piVar1 + 0x34))(piVar1,param_1[9]);
  iVar2 = FUN_0041c784(piVar1);
  FUN_00417804(*(int **)(iVar2 + 0x14),0xff00ff);
  uVar3 = (**(code **)(*piVar1 + 0x20))();
  pRVar7 = &local_14;
  uVar4 = (**(code **)(*piVar1 + 0x2c))();
  FUN_0040ea70(0,0,uVar4,&pRVar7->left,uVar3);
  pRVar7 = &local_14;
  piVar5 = (int *)FUN_0041c784(piVar1);
  FUN_00417eb0(piVar5,pRVar7);
  uVar3 = 0;
  uVar6 = 1;
  iVar2 = FUN_0041c784(piVar1);
  FUN_00437228(param_1,iVar2,0,uVar6,param_2,uVar3);
  return;
}



void FUN_00459aec(int *param_1,int *param_2,char param_3)

{
  char cVar1;
  int *piVar2;
  int iVar3;
  undefined4 extraout_ECX;
  
  FUN_0042c8d0(param_1,param_2,param_3);
  piVar2 = FUN_004030cc(param_2,(int)PTR_PTR_00435828);
  if ((char)piVar2 != '\0') {
    piVar2 = (int *)FUN_004596a4((int)param_1);
    cVar1 = (**(code **)(*piVar2 + 0x1c))();
    if ((((cVar1 != '\0') && (param_2[0x13] != 0)) && (*(int *)(param_2[0x13] + 0x2c) != 0)) &&
       (-1 < param_2[0x19])) {
      iVar3 = FUN_00436d0c(*(int **)(param_2[0x13] + 0x2c));
      if (param_2[0x19] < iVar3) {
        FUN_00459a5c(*(int **)(param_2[0x13] + 0x2c),param_2[0x19],extraout_ECX,
                     (int)&stack0xfffffffc);
      }
    }
  }
  return;
}



void FUN_00459b64(void)

{
  char cVar1;
  undefined4 *puVar2;
  
  cVar1 = '\v';
  puVar2 = &DAT_004768a0;
  do {
    FUN_00402f54((int *)*puVar2);
    puVar2 = puVar2 + 1;
    cVar1 = cVar1 + -1;
  } while (cVar1 != '\0');
  return;
}



void FUN_0045b220(undefined4 *param_1,undefined4 *param_2,int *param_3)

{
  char *pcVar1;
  
  pcVar1 = FUN_00408824((undefined *)param_1);
  if (*pcVar1 == '\\') {
    FUN_00403ea8(param_3,param_1,param_2);
  }
  else {
    FUN_00403f1c(param_3,3);
  }
  return;
}



void FUN_0045b268(int *param_1)

{
  char cVar1;
  PCNZCH pCVar2;
  undefined1 in_ZF;
  
  FUN_00403f6c((uint *)*param_1,(uint *)&DAT_0045b310);
  if (!(bool)in_ZF) {
    cVar1 = *(char *)*param_1;
    if (cVar1 == '\\') {
      FUN_004040a4(param_1,1,1);
    }
    if (*(char *)*param_1 == '.') {
      FUN_004040a4(param_1,1,4);
    }
    pCVar2 = FUN_0040b538(&DAT_0045b310,(undefined *)*param_1);
    if (pCVar2 == (PCNZCH)0x0) {
      FUN_00403bdc(param_1);
    }
    else {
      FUN_004040a4(param_1,1,(int)pCVar2);
      FUN_00403ea8(param_1,(undefined4 *)&DAT_0045b31c,(undefined4 *)*param_1);
    }
    if (cVar1 == '\\') {
      FUN_00403ea8(param_1,(undefined4 *)&DAT_0045b310,(undefined4 *)*param_1);
    }
    return;
  }
  FUN_00403bdc(param_1);
  return;
}



void FUN_0045b324(undefined4 *param_1,int *param_2,int param_3,int *param_4)

{
  int iVar1;
  LONG LVar2;
  int *in_FS_OFFSET;
  bool bVar3;
  int iStack_2c;
  undefined1 *puStack_28;
  undefined1 *puStack_24;
  int local_14;
  uint *local_10;
  int local_c;
  undefined4 *local_8;
  
  puStack_24 = &stack0xfffffffc;
  local_c = 0;
  local_10 = (uint *)0x0;
  local_14 = 0;
  puStack_28 = &LAB_0045b439;
  iStack_2c = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)&iStack_2c;
  local_8 = param_1;
  FUN_00403c30(param_4,param_1);
  FUN_00408938((undefined *)*param_4,(int *)&local_10);
  FUN_00408a00((undefined *)*param_4,&local_14);
  iVar1 = FUN_00403e5c((int)local_10);
  if ((iVar1 < 2) || (*(char *)((int)local_10 + 1) != ':')) {
    FUN_00403bdc(&local_c);
  }
  else {
    FUN_00404064((int)local_10,1,2,&local_c);
    FUN_004040a4((int *)&local_10,1,2);
  }
  while ((local_10 != (uint *)0x0 || (local_c != 0))) {
    LVar2 = FUN_00418234(param_2,(undefined *)*param_4);
    bVar3 = param_3 == LVar2;
    if (LVar2 <= param_3) break;
    FUN_00403f6c(local_10,(uint *)s_______0045b454);
    if (bVar3) {
      FUN_00403bdc(&local_c);
      FUN_00403c74((int *)&local_10,0x45b464);
    }
    else if (local_10 == (uint *)0x0) {
      FUN_00403bdc(&local_c);
    }
    else {
      FUN_0045b268((int *)&local_10);
    }
    iStack_2c = local_14;
    FUN_00403f1c(param_4,3);
  }
  *in_FS_OFFSET = iStack_2c;
  puStack_24 = &LAB_0045b440;
  puStack_28 = (undefined1 *)0x45b438;
  FUN_00403c00(&local_14,3);
  return;
}



void FUN_0045b46c(undefined4 param_1,int *param_2)

{
  LPCSTR lpRootPathName;
  BOOL BVar1;
  uint uVar2;
  undefined4 *in_FS_OFFSET;
  CHAR *lpVolumeNameBuffer;
  DWORD nVolumeNameSize;
  LPDWORD lpVolumeSerialNumber;
  DWORD *lpMaximumComponentLength;
  DWORD *lpFileSystemFlags;
  LPSTR lpFileSystemNameBuffer;
  DWORD nFileSystemNameSize;
  undefined4 uStack_150;
  undefined4 uStack_144;
  undefined1 *puStack_140;
  undefined1 *puStack_13c;
  int local_130;
  undefined1 local_12c;
  undefined4 *local_128;
  undefined4 *local_124;
  undefined4 *local_120;
  undefined *local_11c;
  CHAR local_115 [261];
  DWORD local_10;
  DWORD local_c;
  UINT local_8;
  
  puStack_13c = &stack0xfffffffc;
  local_128 = (undefined4 *)0x0;
  local_124 = (undefined4 *)0x0;
  local_120 = (undefined4 *)0x0;
  local_11c = (undefined *)0x0;
  puStack_140 = &nFileSystemNameSize_0045b5dd;
  uStack_144 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_144;
  local_8 = SetErrorMode(1);
  uStack_150 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_150;
  local_115[0] = '\0';
  nFileSystemNameSize = 0;
  lpFileSystemNameBuffer = (LPSTR)0x0;
  lpFileSystemFlags = &local_10;
  lpMaximumComponentLength = &local_c;
  lpVolumeSerialNumber = (LPDWORD)0x0;
  nVolumeNameSize = 0x105;
  lpVolumeNameBuffer = local_115;
  FUN_00403d84((int *)&local_11c,param_1);
  FUN_00403e64((int *)&local_11c,(undefined4 *)&DAT_0045b5f4);
  lpRootPathName = FUN_00404020(local_11c);
  BVar1 = GetVolumeInformationA
                    (lpRootPathName,lpVolumeNameBuffer,nVolumeNameSize,lpVolumeSerialNumber,
                     lpMaximumComponentLength,lpFileSystemFlags,lpFileSystemNameBuffer,
                     nFileSystemNameSize);
  if (BVar1 == 0) {
    FUN_00403bdc(param_2);
  }
  else {
    uVar2 = FUN_00408af4(local_115);
    FUN_00403cc4(param_2,(undefined4 *)local_115,uVar2);
  }
  if ((byte)param_1 < 0x61) {
    FUN_0040b664((undefined *)*param_2,(int *)&local_120);
    FUN_00403c30(param_2,local_120);
  }
  else {
    FUN_0040b5d8((undefined *)*param_2,(int *)&local_124);
    FUN_00403c30(param_2,local_124);
  }
  local_130 = *param_2;
  local_12c = 0xb;
  FUN_00409224(&LAB_0045b600,&local_130,0,(int *)&local_128);
  FUN_00403c30(param_2,local_128);
  *in_FS_OFFSET = uStack_150;
  uStack_150 = 0x45b5b7;
  SetErrorMode(local_8);
  return;
}



void FUN_0045b608(undefined4 param_1,int *param_2)

{
  DWORD DVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_130;
  undefined1 *puStack_12c;
  undefined1 *puStack_128;
  undefined4 *local_11c;
  undefined4 *local_118;
  CHAR local_111 [261];
  DWORD local_c;
  byte local_8 [4];
  
  puStack_128 = &stack0xfffffffc;
  local_11c = (undefined4 *)0x0;
  local_118 = (undefined4 *)0x0;
  puStack_12c = &LAB_0045b6d8;
  uStack_130 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_130;
  local_c = 0x105;
  local_8[0] = FUN_00402a30((byte)param_1);
  local_8[1] = 0x3a;
  local_8[2] = 0;
  DVar1 = WNetGetConnectionA((LPCSTR)local_8,local_111,&local_c);
  if (DVar1 == 0) {
    FUN_00403cc4(param_2,(undefined4 *)local_111,local_c);
    if ((byte)param_1 < 0x61) {
      FUN_0040b664((undefined *)*param_2,(int *)&local_118);
      FUN_00403c30(param_2,local_118);
    }
    else {
      FUN_0040b5d8((undefined *)*param_2,(int *)&local_11c);
      FUN_00403c30(param_2,local_11c);
    }
  }
  else {
    FUN_0045b46c(param_1,param_2);
  }
  *in_FS_OFFSET = uStack_130;
  puStack_128 = &LAB_0045b6df;
  puStack_12c = (undefined1 *)0x45b6d7;
  FUN_00403c00((int *)&local_11c,2);
  return;
}



void FUN_0045b6e8(undefined4 *param_1,char *param_2,int *param_3,int *param_4)

{
  char *pcVar1;
  int iVar2;
  undefined4 uVar3;
  int iVar4;
  int *in_FS_OFFSET;
  int iStackY_48;
  int iStackY_3c;
  undefined1 *puStackY_38;
  int *piVar5;
  int iStack_30;
  undefined1 *puStack_2c;
  undefined1 *puStack_28;
  int local_18;
  undefined4 *local_14;
  char *local_10;
  char *local_c;
  undefined4 *local_8;
  
  puStack_28 = &stack0xfffffffc;
  local_c = (char *)0x0;
  local_10 = (char *)0x0;
  local_14 = (undefined4 *)0x0;
  local_18 = 0;
  puStack_2c = &LAB_0045b96b;
  iStack_30 = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)&iStack_30;
  local_8 = param_1;
  FUN_0040281c('\0',(int *)&local_c);
  *param_2 = *local_c;
  FUN_00403c30(param_3,local_8);
  if (*(char *)*param_3 == '[') {
    pcVar1 = FUN_00408824((undefined *)*param_3);
    if (*pcVar1 == ']') {
      puStackY_38 = (undefined1 *)0x45b746;
      piVar5 = param_3;
      iVar2 = FUN_00403e5c(*param_3);
      puStackY_38 = (undefined1 *)0x45b757;
      FUN_00404064(*param_3,2,iVar2 - 2,piVar5);
      goto LAB_0045b7b4;
    }
  }
  FUN_0040896c((char *)*param_3,(int *)&local_10);
  iVar2 = FUN_00403e5c((int)local_10);
  if (iVar2 == 0) {
    FUN_0040896c(local_c,(int *)&local_10);
  }
  else {
    iVar2 = FUN_00403e5c((int)local_10);
    FUN_004040a4(param_3,1,iVar2);
  }
  iVar2 = FUN_00403e5c((int)local_10);
  if ((iVar2 < 2) || (local_10[1] != ':')) {
    *param_2 = '\0';
  }
  else {
    *param_2 = *local_10;
  }
LAB_0045b7b4:
  puStackY_38 = &LAB_0045b949;
  iStackY_3c = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)&iStackY_3c;
  uVar3 = FUN_0045dcc4(local_10);
  if ((char)uVar3 != '\0') {
    FUN_00402800(local_10);
    FUN_004027c4();
  }
  FUN_00408a00((undefined *)*param_3,(int *)&local_14);
  FUN_00403c30(param_4,local_14);
  iVar2 = FUN_00403e5c(*param_3);
  iVar4 = FUN_00403e5c(*param_4);
  if (iVar2 == iVar4 + 1) {
    FUN_00403c30(param_3,(undefined4 *)&DAT_0045b984);
  }
  else {
    iVar2 = FUN_00403e5c(*param_3);
    iVar4 = FUN_00403e5c(*param_4);
    if (iVar4 < iVar2) {
      iVar2 = FUN_00403e5c(*param_3);
      iVar4 = FUN_00403e5c(*param_4);
      FUN_00404190(param_3,(iVar2 - iVar4) - 1);
    }
    else {
      FUN_0040281c('\0',param_3);
      FUN_0040896c((char *)*param_3,&local_18);
      iVar2 = FUN_00403e5c(local_18);
      FUN_004040a4(param_3,1,iVar2);
      iVar2 = FUN_00403e5c(*param_3);
      if (iVar2 == 0) {
        FUN_00403c30(param_3,(undefined4 *)&DAT_0045b984);
      }
    }
  }
  iVar2 = FUN_00403e5c(*param_3);
  if (0 < iVar2) {
    FUN_00402800((undefined *)*param_3);
    FUN_004027c4();
  }
  iVar2 = FUN_00403e5c(*param_4);
  if (0 < iVar2) {
    pcVar1 = FUN_00404148(&DAT_0045b990,(char *)*param_4);
    if ((int)pcVar1 < 1) {
      pcVar1 = FUN_00404148(&DAT_0045b99c,(char *)*param_4);
      if ((int)pcVar1 < 1) {
        uVar3 = FUN_00408694((undefined *)*param_4);
        if ((char)uVar3 == '\0') {
          FUN_00402800((undefined *)*param_4);
          FUN_004027c4();
          iVar2 = FUN_00403e5c(*param_3);
          if (iVar2 == 1) {
            FUN_00403ea8(param_3,(undefined4 *)&DAT_0045b984,(undefined4 *)*param_4);
          }
          else {
            iStackY_48 = *param_4;
            FUN_00403f1c(param_3,3);
          }
          FUN_00403bdc(param_4);
        }
      }
    }
  }
  if (*param_2 == '\0') {
    FUN_00403ea8(param_3,(undefined4 *)local_10,(undefined4 *)*param_3);
  }
  *in_FS_OFFSET = iStackY_48;
  uVar3 = FUN_0045dcc4(local_c);
  if ((char)uVar3 != '\0') {
    FUN_00402800(local_c);
    FUN_004027c4();
  }
  return;
}



LONG FUN_0045b9a0(int param_1)

{
  HDC hdc;
  HGDIOBJ pvVar1;
  tagTEXTMETRICA local_40;
  
  hdc = GetDC((HWND)0x0);
  pvVar1 = (HGDIOBJ)FUN_00417048(param_1);
  pvVar1 = SelectObject(hdc,pvVar1);
  GetTextMetricsA(hdc,&local_40);
  SelectObject(hdc,pvVar1);
  ReleaseDC((HWND)0x0,hdc);
  return local_40.tmHeight;
}



int * FUN_0045b9e0(int *param_1,char param_2,int *param_3)

{
  int *extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_fffffee4;
  undefined4 in_stack_fffffee8;
  byte local_105;
  char local_104;
  char local_5;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403254((int)param_1,param_2,param_3,in_stack_fffffee4,in_stack_fffffee8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  local_5 = param_2;
  FUN_00423790(param_1,'\0',param_3);
  (**(code **)(*param_1 + 0xc4))(param_1,3);
  FUN_0045c0f4((int)param_1,extraout_EDX,extraout_ECX_00);
  FUN_00402894('\0',&local_105,0xff);
  *(char *)(param_1 + 0x95) = local_104;
  if (local_104 == '\\') {
    *(undefined1 *)(param_1 + 0x95) = 0;
  }
  FUN_0045c0bc((int)param_1);
  if (local_5 != '\0') {
    FUN_004032ac(param_1);
    *in_FS_OFFSET = in_stack_fffffee4;
  }
  return param_1;
}



void FUN_0045bac4(undefined4 param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_2c;
  undefined1 *puStack_28;
  undefined1 *puStack_24;
  undefined1 local_18 [4];
  undefined1 local_14;
  undefined4 local_10;
  undefined1 local_c;
  int local_8;
  
  puStack_24 = &stack0xfffffffc;
  local_8 = 0;
  puStack_28 = &LAB_0045bb39;
  uStack_2c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_2c;
  local_18[0] = *(undefined1 *)(param_4 + -5);
  local_14 = 2;
  local_c = 0xb;
  local_10 = param_1;
  FUN_00409224((byte *)s__s___s_0045bb50,local_18,1,&local_8);
  piVar1 = *(int **)(*(int *)(param_4 + -4) + 0x1f0);
  (**(code **)(*piVar1 + 0x38))(piVar1,local_8,param_2);
  *in_FS_OFFSET = uStack_2c;
  puStack_24 = &LAB_0045bb40;
  puStack_28 = (undefined1 *)0x45bb38;
  FUN_00403bdc(&local_8);
  return;
}



void FUN_0045bd30(int *param_1,byte param_2)

{
  byte bVar1;
  byte bVar2;
  int iVar3;
  undefined4 uVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 uVar5;
  undefined4 extraout_ECX_03;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  WPARAM WVar6;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  int local_10;
  byte *local_c;
  byte local_5;
  undefined3 extraout_var;
  
  puStack_20 = &stack0xfffffffc;
  local_c = (byte *)0x0;
  puStack_24 = &LAB_0045be57;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  local_5 = param_2;
  iVar3 = FUN_00423998(param_1);
  if (-1 < iVar3) {
    bVar1 = FUN_00402a30(local_5);
    bVar2 = FUN_00402a30(*(byte *)(param_1 + 0x95));
    if (bVar1 == bVar2) goto LAB_0045be41;
  }
  if (local_5 == 0) {
    *(undefined1 *)(param_1 + 0x95) = 0;
    FUN_004239b4(param_1,0xffffffff);
    uVar5 = extraout_ECX;
    uVar4 = extraout_EDX;
  }
  else {
    if (*(char *)((int)param_1 + 0x255) == '\x01') {
      bVar1 = FUN_00402a30(local_5);
      *(byte *)(param_1 + 0x95) = bVar1;
    }
    else {
      bVar1 = FUN_00402a30(local_5);
      *(byte *)(param_1 + 0x95) = bVar1 + 0x20;
    }
    local_10 = (**(code **)(*(int *)param_1[0x7c] + 0x14))();
    uVar5 = extraout_ECX_00;
    uVar4 = extraout_EDX_00;
    if (-1 < local_10 + -1) {
      WVar6 = 0;
      do {
        (**(code **)(*(int *)param_1[0x7c] + 0xc))((int *)param_1[0x7c],WVar6,&local_c);
        bVar1 = FUN_00402a30(*local_c);
        uVar4 = CONCAT31(extraout_var,bVar1);
        bVar2 = FUN_00402a30(*(byte *)(param_1 + 0x95));
        if ((bVar1 == bVar2) && (local_c[1] == 0x3a)) {
          FUN_004239b4(param_1,WVar6);
          uVar5 = extraout_ECX_02;
          uVar4 = extraout_EDX_01;
          break;
        }
        WVar6 = WVar6 + 1;
        local_10 = local_10 + -1;
        uVar5 = extraout_ECX_01;
      } while (local_10 != 0);
    }
  }
  if ((int *)param_1[0x94] != (int *)0x0) {
    FUN_0045c318((int *)param_1[0x94],*(byte *)(param_1 + 0x95));
    uVar5 = extraout_ECX_03;
    uVar4 = extraout_EDX_02;
  }
  FUN_00403130(param_1,uVar4,uVar5);
LAB_0045be41:
  *in_FS_OFFSET = uStack_28;
  puStack_20 = &LAB_0045be5e;
  puStack_24 = (undefined1 *)0x45be56;
  FUN_00403bdc((int *)&local_c);
  return;
}



void FUN_0045bec0(int *param_1)

{
  FUN_00423ab8(param_1);
  (**(code **)(*param_1 + 200))();
  FUN_0045bd30(param_1,*(byte *)(param_1 + 0x95));
  return;
}



void FUN_0045bee4(int param_1,undefined4 param_2,LONG *param_3)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  int *piVar4;
  LPCSTR lpchText;
  HDC hdc;
  int iVar5;
  uint uVar6;
  RECT *pRVar7;
  uint *in_FS_OFFSET;
  int *piVar8;
  UINT format;
  uint uVar9;
  int *piVar10;
  undefined *local_40;
  int local_3c [4];
  int local_2c [4];
  RECT local_1c;
  int *local_c;
  undefined4 local_8;
  
  local_40 = (undefined *)0x0;
  pRVar7 = &local_1c;
  for (iVar5 = 4; iVar5 != 0; iVar5 = iVar5 + -1) {
    pRVar7->left = *param_3;
    param_3 = param_3 + 1;
    pRVar7 = (RECT *)&pRVar7->top;
  }
  piVar10 = (int *)&LAB_0045c01e;
  uVar9 = *in_FS_OFFSET;
  *in_FS_OFFSET = (uint)&stack0xffffffa8;
  local_c = *(int **)(param_1 + 500);
  local_8 = param_2;
  FUN_00417eb0(local_c,&local_1c);
  iVar5 = 0x10;
  piVar1 = (int *)(**(code **)(**(int **)(param_1 + 0x1f0) + 0x18))
                            (*(int **)(param_1 + 0x1f0),local_8);
  if (piVar1 != (int *)0x0) {
    iVar5 = (**(code **)(*piVar1 + 0x2c))();
    iVar2 = (**(code **)(*piVar1 + 0x20))();
    piVar8 = local_2c;
    iVar3 = (**(code **)(*piVar1 + 0x2c))();
    FUN_0040ea8c(0,0,iVar3,piVar8,iVar2);
    piVar8 = local_2c;
    iVar2 = (**(code **)(*piVar1 + 0x20))();
    iVar2 = iVar2 + -1;
    piVar4 = (int *)FUN_0041c784(piVar1);
    piVar4 = (int *)FUN_00418360(piVar4,0,iVar2);
    iVar2 = (**(code **)(*piVar1 + 0x20))();
    (**(code **)(*piVar1 + 0x2c))();
    iVar3 = (**(code **)(*piVar1 + 0x20))();
    uVar6 = (local_1c.top + local_1c.bottom) - iVar3;
    iVar3 = (int)uVar6 >> 1;
    if (iVar3 < 0) {
      iVar3 = iVar3 + (uint)((uVar6 & 1) != 0);
    }
    FUN_0040ea8c(local_1c.left + 2,iVar3,iVar2,piVar4,(int)piVar8);
    FUN_00417a74(local_c,local_3c,piVar1,uVar9,piVar10);
  }
  local_1c.left = iVar5 + local_1c.left + 6;
  format = 0x824;
  pRVar7 = &local_1c;
  iVar5 = -1;
  (**(code **)(**(int **)(param_1 + 0x1f0) + 0xc))(*(int **)(param_1 + 0x1f0),local_8,&local_40);
  lpchText = FUN_00404020(local_40);
  hdc = (HDC)FUN_004183d4(*(int **)(param_1 + 500));
  DrawTextA(hdc,lpchText,iVar5,pRVar7,format);
  *in_FS_OFFSET = uVar9;
  FUN_00403bdc((int *)&local_40);
  return;
}



void FUN_0045c0bc(int param_1)

{
  LONG LVar1;
  int iVar2;
  
  LVar1 = FUN_0045b9a0(*(int *)(param_1 + 0x58));
  iVar2 = (**(code **)(**(int **)(param_1 + 600) + 0x20))();
  if (LVar1 < iVar2) {
    LVar1 = (**(code **)(**(int **)(param_1 + 600) + 0x20))();
  }
  FUN_00423a44(param_1,LVar1);
  return;
}



void FUN_0045c0f4(int param_1,undefined4 param_2,undefined4 param_3)

{
  int *piVar1;
  HBITMAP pHVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  
  piVar1 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',param_3);
  *(int **)(param_1 + 600) = piVar1;
  pHVar2 = LoadBitmapA(DAT_004764d8,s_FLOPPY_0045c1dc);
  FUN_0041d3e0(piVar1,pHVar2);
  piVar1 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX);
  *(int **)(param_1 + 0x25c) = piVar1;
  pHVar2 = LoadBitmapA(DAT_004764d8,(LPCSTR)&lpBitmapName_0045c1e4);
  FUN_0041d3e0(piVar1,pHVar2);
  piVar1 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX_00);
  *(int **)(param_1 + 0x260) = piVar1;
  pHVar2 = LoadBitmapA(DAT_004764d8,s_NETWORK_0045c1ec);
  FUN_0041d3e0(piVar1,pHVar2);
  piVar1 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX_01);
  *(int **)(param_1 + 0x264) = piVar1;
  pHVar2 = LoadBitmapA(DAT_004764d8,s_CDROM_0045c1f4);
  FUN_0041d3e0(piVar1,pHVar2);
  piVar1 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX_02);
  *(int **)(param_1 + 0x268) = piVar1;
  pHVar2 = LoadBitmapA(DAT_004764d8,&lpBitmapName_0045c1fc);
  FUN_0041d3e0(piVar1,pHVar2);
  return;
}



int FUN_0045c230(undefined *param_1)

{
  byte *pbVar1;
  char *pcVar2;
  int iVar3;
  
  iVar3 = 0;
  pbVar1 = FUN_00404020(param_1);
  for (pcVar2 = FUN_0040b7b8(pbVar1,'\\'); pcVar2 != (char *)0x0;
      pcVar2 = FUN_0040b7b8((byte *)(pcVar2 + 1),'\\')) {
    iVar3 = iVar3 + 1;
  }
  return iVar3;
}



void FUN_0045c318(int *param_1,byte param_2)

{
  byte bVar1;
  byte bVar2;
  undefined4 uVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_24;
  undefined1 *puStack_20;
  undefined1 *puStack_1c;
  byte local_10 [4];
  byte local_c;
  byte local_b;
  undefined *local_8;
  
  puStack_1c = &stack0xfffffffc;
  local_8 = (undefined *)0x0;
  puStack_20 = &LAB_0045c3d1;
  uStack_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_24;
  bVar1 = FUN_00402a30(param_2);
  uVar3 = FUN_0045ce18((int)param_1);
  bVar2 = FUN_00402a30((byte)uVar3);
  if (bVar1 != bVar2) {
    if (param_2 != 0) {
      local_c = 1;
      local_b = param_2;
      FUN_00402ad4(local_10,&local_c);
      FUN_00402aa4(local_10,&LAB_0045c3e0,2);
      FUN_00403e00((int *)&local_8,local_10);
      FUN_00402800(local_8);
      FUN_004027c4();
      FUN_0040281c('\0',param_1 + 0x95);
    }
    if ((char)param_1[0x91] == '\0') {
      (**(code **)(*param_1 + 200))();
      (**(code **)(*param_1 + 0xc0))();
    }
  }
  *in_FS_OFFSET = uStack_24;
  puStack_1c = &LAB_0045c3d8;
  puStack_20 = (undefined1 *)0x45c3d0;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_0045c414(int param_1,int param_2,undefined4 param_3)

{
  *(int *)(param_1 + 0x240) = param_2;
  if (param_2 != 0) {
    FUN_00414540(param_2,param_1,param_3);
  }
  FUN_0045cf94(param_1);
  return;
}



void FUN_0045c434(int *param_1,undefined *param_2)

{
  undefined4 uVar1;
  
  uVar1 = FUN_0045dcc4((undefined *)param_1[0x95]);
  if ((char)uVar1 != '\0') {
    FUN_00402800((undefined *)param_1[0x95]);
    FUN_004027c4();
  }
  FUN_00402800(param_2);
  FUN_004027c4();
  FUN_0040281c('\0',param_1 + 0x95);
  (**(code **)(*param_1 + 200))();
  (**(code **)(*param_1 + 0xc0))();
  return;
}



void FUN_0045c48c(int *param_1)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_18;
  undefined1 *puStack_14;
  undefined1 *puStack_10;
  int local_8;
  
  puStack_10 = &stack0xfffffffc;
  local_8 = 0;
  puStack_14 = &LAB_0045c4d8;
  uStack_18 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_18;
  iVar1 = FUN_00425424(param_1);
  FUN_0045cc00((int)param_1,iVar1,&local_8);
  (**(code **)(*param_1 + 0xbc))(param_1,local_8);
  *in_FS_OFFSET = uStack_18;
  puStack_10 = &LAB_0045c4df;
  puStack_14 = (undefined1 *)0x45c4d7;
  FUN_00403bdc(&local_8);
  return;
}



void FUN_0045c4e4(int param_1,undefined4 *param_2,int *param_3)

{
  if ((*(char *)(param_1 + 0x245) == '\0') && (*(char *)(param_1 + 0x246) == '\0')) {
    FUN_00408374((undefined *)param_2,param_3);
    return;
  }
  FUN_00403c30(param_3,param_2);
  return;
}



void FUN_0045c514(int param_1,undefined *param_2,undefined *param_3)

{
  if (*(char *)(param_1 + 0x246) != '\0') {
    FUN_004083a8(param_2,param_3);
    return;
  }
  FUN_0040b570(param_2,param_3);
  return;
}



void FUN_0045c534(undefined4 param_1,undefined4 *param_2,int *param_3)

{
  DWORD DVar1;
  undefined4 *in_FS_OFFSET;
  bool bVar2;
  undefined4 uStack_184;
  undefined1 *puStack_180;
  undefined1 *puStack_17c;
  undefined4 uStack_178;
  undefined1 *puStack_174;
  undefined1 *puStack_170;
  undefined *local_164;
  WORD local_160 [4];
  uint local_158;
  uint *local_154;
  int local_8;
  
  local_164 = (undefined *)0x0;
  puStack_170 = (undefined1 *)0x45c55c;
  FUN_004043b4((int)local_160,(int)PTR_DAT_00407634);
  puStack_174 = &LAB_0045c644;
  uStack_178 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_178;
  local_8 = 0;
  puStack_17c = (undefined1 *)0x45c581;
  puStack_170 = &stack0xfffffffc;
  FUN_0045b220(param_2,(undefined4 *)&DAT_0045c65c,(int *)&local_164);
  puStack_17c = (undefined1 *)0x45c597;
  DVar1 = FUN_00408794(local_164,0x10,local_160);
  puStack_180 = &LAB_0045c613;
  uStack_184 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_184;
  puStack_17c = &stack0xfffffffc;
  while (DVar1 == 0) {
    bVar2 = (local_158 & 0x10) == 0x10;
    if (((bVar2) && (FUN_00403f6c(local_154,(uint *)&DAT_0045c668), !bVar2)) &&
       (FUN_00403f6c(local_154,(uint *)&DAT_0045c674), !bVar2)) {
      (**(code **)(*param_3 + 0x34))(param_3,local_154);
      local_8 = local_8 + 1;
    }
    DVar1 = FUN_004087e4(local_160);
  }
  *in_FS_OFFSET = uStack_184;
  puStack_17c = &LAB_0045c61a;
  puStack_180 = (undefined1 *)0x45c612;
  FUN_00408808((int)local_160);
  return;
}



void FUN_0045ca4c(int param_1)

{
  if (*(int **)(param_1 + 0x238) != (int *)0x0) {
    FUN_0045d914(*(int **)(param_1 + 0x238),*(undefined **)(param_1 + 0x254));
  }
  FUN_0045cf94(param_1);
  if (*(short *)(param_1 + 0x25a) != 0) {
    (**(code **)(param_1 + 600))(*(undefined4 *)(param_1 + 0x25c),param_1);
  }
  return;
}



void FUN_0045cc00(int param_1,int param_2,int *param_3)

{
  byte bVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 *puVar5;
  undefined4 uStack_3c;
  undefined1 *puStack_38;
  undefined1 *puStack_34;
  undefined4 *local_24;
  undefined4 *local_20;
  int local_1c;
  undefined4 *local_18;
  undefined4 *local_14;
  int local_10;
  char *local_c;
  int *local_8;
  
  puStack_34 = &stack0xfffffffc;
  local_c = (char *)0x0;
  local_10 = 0;
  local_14 = (undefined4 *)0x0;
  local_18 = (undefined4 *)0x0;
  local_1c = 0;
  local_20 = (undefined4 *)0x0;
  local_24 = (undefined4 *)0x0;
  puStack_38 = &LAB_0045cd84;
  uStack_3c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_3c;
  local_8 = param_3;
  FUN_00403bdc(param_3);
  iVar2 = (**(code **)(**(int **)(param_1 + 0x1f0) + 0x14))();
  if (param_2 < iVar2) {
    FUN_00403c74((int *)&local_c,*(int *)(param_1 + 0x254));
    iVar2 = (**(code **)(**(int **)(param_1 + 0x1f0) + 0x18))(*(int **)(param_1 + 0x1f0),param_2);
    if (param_2 == 0) {
      FUN_0040896c(local_c,(int *)&local_14);
      FUN_00403ea8(local_8,local_14,(undefined4 *)&LAB_0045cd9c);
    }
    else if (iVar2 == *(int *)(param_1 + 0x248)) {
      (**(code **)(**(int **)(param_1 + 0x1f0) + 0xc))(*(int **)(param_1 + 0x1f0),param_2,&local_18)
      ;
      FUN_0045b220((undefined4 *)local_c,local_18,local_8);
    }
    else if (iVar2 == *(int *)(param_1 + 0x250)) {
      FUN_00403c30(local_8,(undefined4 *)local_c);
    }
    else {
      local_10 = 0;
      FUN_0040896c(local_c,&local_1c);
      iVar2 = FUN_00403e5c(local_1c);
      FUN_004040a4((int *)&local_c,1,iVar2);
      iVar2 = 0;
      while (iVar4 = iVar2, param_2 + 1 != local_10) {
        iVar4 = iVar2 + 1;
        iVar3 = FUN_00403e5c((int)local_c);
        if (iVar3 < iVar4) break;
        bVar1 = local_c[iVar2];
        if (((byte)PTR_DAT_004758ec[(int)(uint)bVar1 >> 3] >> (bVar1 & 7) & 1) == 0) {
          iVar2 = iVar4;
          if (bVar1 == 0x5c) {
            local_10 = local_10 + 1;
          }
        }
        else {
          iVar2 = iVar2 + 2;
        }
      }
      FUN_00404064((int)local_c,1,iVar4 - 1,(int *)&local_20);
      puVar5 = local_20;
      FUN_0040896c(*(char **)(param_1 + 0x254),(int *)&local_24);
      FUN_00403ea8(local_8,local_24,puVar5);
    }
  }
  *in_FS_OFFSET = uStack_3c;
  puStack_34 = &LAB_0045cd8b;
  puStack_38 = (undefined1 *)0x45cd7b;
  FUN_00403c00((int *)&local_24,5);
  puStack_38 = (undefined1 *)0x45cd83;
  FUN_00403bdc((int *)&local_c);
  return;
}



void FUN_0045cde0(int param_1)

{
  LONG LVar1;
  int iVar2;
  
  LVar1 = FUN_0045b9a0(*(int *)(param_1 + 0x58));
  iVar2 = (**(code **)(**(int **)(param_1 + 0x24c) + 0x20))();
  if (LVar1 < iVar2 + 1) {
    iVar2 = (**(code **)(**(int **)(param_1 + 0x24c) + 0x20))();
    LVar1 = iVar2 + 1;
  }
  FUN_0042552c(param_1,LVar1);
  return;
}



undefined4 FUN_0045ce18(int param_1)

{
  return CONCAT31((int3)((uint)*(undefined1 **)(param_1 + 0x254) >> 8),
                  **(undefined1 **)(param_1 + 0x254));
}



void FUN_0045cf40(int *param_1,int param_2,char param_3)

{
  FUN_0042a368(param_1,param_2,param_3);
  if (param_3 == '\x01') {
    if (param_2 == param_1[0x8e]) {
      param_1[0x8e] = 0;
    }
    else if (param_2 == param_1[0x8f]) {
      param_1[0x8f] = 0;
    }
    else if (param_2 == param_1[0x90]) {
      param_1[0x90] = 0;
    }
  }
  return;
}



void FUN_0045cf94(int param_1)

{
  int iVar1;
  undefined1 *puVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  uint **in_stack_ffffffdc;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  uint *local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_8 = (uint *)0x0;
  puStack_1c = &LAB_0045cffc;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  iVar1 = *(int *)(param_1 + 0x240);
  puVar2 = &stack0xfffffffc;
  if (iVar1 != 0) {
    iVar3 = *(int *)(param_1 + 0x38);
    if (*(char *)(iVar1 + 0x12d) == '\0') {
      iVar3 = *(int *)(iVar1 + 0x38);
    }
    in_stack_ffffffdc = &local_8;
    FUN_0045b324(*(undefined4 **)(param_1 + 0x254),*(int **)(iVar1 + 0x120),iVar3,
                 (int *)in_stack_ffffffdc);
    FUN_0042adf0(iVar1,local_8);
    puVar2 = puStack_18;
  }
  puStack_18 = puVar2;
  *in_FS_OFFSET = in_stack_ffffffdc;
  puStack_1c = &LAB_0045d003;
  uStack_20 = 0x45cffb;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_0045d670(int *param_1,int *param_2)

{
  bool bVar1;
  WPARAM WVar2;
  int iVar3;
  
  WVar2 = FUN_00425424(param_1);
  if (((-1 < (int)WVar2) && (iVar3 = (**(code **)(*(int *)param_1[0x7c] + 0x14))(), iVar3 != 0)) &&
     (bVar1 = FUN_00425558(param_1,WVar2), bVar1)) {
    (**(code **)(*(int *)param_1[0x7c] + 0xc))((int *)param_1[0x7c],WVar2,param_2);
    return;
  }
  FUN_00403bdc(param_2);
  return;
}



void FUN_0045d6bc(int *param_1,undefined *param_2)

{
  int iVar1;
  undefined *lParam;
  HWND hWnd;
  undefined4 *in_FS_OFFSET;
  UINT Msg;
  WPARAM WVar2;
  undefined4 uStack_1c;
  undefined1 *puStack_18;
  undefined1 *puStack_14;
  undefined *local_8;
  
  puStack_14 = &stack0xfffffffc;
  local_8 = (undefined *)0x0;
  puStack_18 = &LAB_0045d732;
  uStack_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1c;
  FUN_0045d670(param_1,(int *)&local_8);
  iVar1 = FUN_0040b570(param_2,local_8);
  if (iVar1 != 0) {
    lParam = FUN_00404020(param_2);
    WVar2 = 0;
    Msg = 0x1a2;
    hWnd = (HWND)FUN_00430e98(param_1);
    WVar2 = SendMessageA(hWnd,Msg,WVar2,(LPARAM)lParam);
    FUN_00425460(param_1,WVar2);
    (**(code **)(*param_1 + 0xc0))();
  }
  *in_FS_OFFSET = uStack_1c;
  puStack_14 = &LAB_0045d739;
  puStack_18 = (undefined1 *)0x45d731;
  FUN_00403bdc((int *)&local_8);
  return;
}



void FUN_0045d914(int *param_1,undefined *param_2)

{
  int iVar1;
  undefined4 uVar2;
  
  iVar1 = FUN_0040b570(param_2,(undefined *)param_1[0x8e]);
  if (iVar1 != 0) {
    uVar2 = FUN_0045dcc4((undefined *)param_1[0x8e]);
    if ((char)uVar2 != '\0') {
      FUN_00402800((undefined *)param_1[0x8e]);
      FUN_004027c4();
    }
    FUN_00402800(param_2);
    FUN_004027c4();
    FUN_0040281c('\0',param_1 + 0x8e);
    (**(code **)(*param_1 + 0xc4))();
  }
  return;
}



void FUN_0045d998(int *param_1,uint *param_2)

{
  undefined1 in_ZF;
  
  FUN_00403f6c((uint *)param_1[0x8f],param_2);
  if (!(bool)in_ZF) {
    FUN_00403c30(param_1 + 0x8f,param_2);
    (**(code **)(*param_1 + 0xc4))();
  }
  return;
}



void FUN_0045d9c8(int *param_1)

{
  FUN_00430498(param_1);
  FUN_0045d9dc((int)param_1);
  return;
}



void FUN_0045d9dc(int param_1)

{
  LONG LVar1;
  int iVar2;
  
  LVar1 = FUN_0045b9a0(*(int *)(param_1 + 0x58));
  if (*(char *)(param_1 + 0x26c) == '\x01') {
    iVar2 = (**(code **)(**(int **)(param_1 + 0x250) + 0x20))();
    if (LVar1 < iVar2 + 1) {
      iVar2 = (**(code **)(**(int **)(param_1 + 0x250) + 0x20))();
      LVar1 = iVar2 + 1;
    }
  }
  FUN_0042552c(param_1,LVar1);
  return;
}



undefined4 FUN_0045dcc4(undefined *param_1)

{
  LPCSTR lpFileName;
  DWORD DVar1;
  
  lpFileName = FUN_00404020(param_1);
  DVar1 = GetFileAttributesA(lpFileName);
  if ((DVar1 != 0xffffffff) && ((DVar1 & 0x10) != 0)) {
    return CONCAT31((int3)(DVar1 >> 8),1);
  }
  return 0;
}



void FUN_0045e228(int *param_1,int *param_2)

{
  undefined4 uVar1;
  int iVar2;
  undefined4 uVar3;
  int *piVar4;
  RECT *pRVar5;
  RECT RStack_18;
  
  uVar1 = (**(code **)(*param_2 + 0x2c))();
  (**(code **)(*param_1 + 0x40))(param_1,uVar1);
  uVar1 = (**(code **)(*param_2 + 0x20))();
  (**(code **)(*param_1 + 0x34))(param_1,uVar1);
  iVar2 = FUN_0041c784(param_1);
  FUN_00417804(*(int **)(iVar2 + 0x14),0x80000006);
  iVar2 = FUN_0041c784(param_1);
  FUN_00417920(*(int **)(iVar2 + 0x14),'\0');
  pRVar5 = &RStack_18;
  uVar1 = (**(code **)(*param_1 + 0x20))();
  uVar3 = (**(code **)(*param_1 + 0x2c))();
  FUN_0040ea70(0,0,uVar3,&pRVar5->left,uVar1);
  pRVar5 = &RStack_18;
  piVar4 = (int *)FUN_0041c784(param_1);
  FUN_00417eb0(piVar4,pRVar5);
  return;
}



void FUN_0045e2ac(void)

{
  FUN_00402a6c();
  return;
}



undefined4 FUN_0045e2e4(undefined4 param_1,int param_2)

{
  undefined4 uVar1;
  
  if (param_2 == 0) {
    uVar1 = 0;
  }
  else {
    uVar1 = FUN_00402a6c();
  }
  return uVar1;
}



void FUN_0045e3bc(int param_1)

{
  FUN_0045e2e4(*(int *)(param_1 + 0x130) - *(int *)(param_1 + 0x128),
               *(int *)(param_1 + 300) - *(int *)(param_1 + 0x128));
  return;
}



void FUN_0045e588(int param_1,int *param_2)

{
  int *piVar1;
  int *piVar2;
  int *piVar3;
  int local_1c [4];
  
  piVar3 = local_1c;
  piVar1 = (int *)FUN_0041c784(param_2);
  piVar1[8] = 0x42;
  FUN_0040ea70(0,0,*(undefined4 *)(param_1 + 0x38),local_1c,*(undefined4 *)(param_1 + 0x3c));
  piVar2 = (int *)FUN_0041c784(param_2);
  FUN_00417d34(piVar1,local_1c,piVar2,piVar3);
  piVar1[8] = 0xcc0020;
  return;
}



void FUN_0045e5dc(int param_1,int *param_2,int *param_3)

{
  int *piVar1;
  LONG LVar2;
  int iVar3;
  int *piVar4;
  int iVar5;
  undefined4 extraout_ECX;
  uint uVar6;
  undefined4 *in_FS_OFFSET;
  undefined **ppuVar7;
  undefined4 uStack_48;
  undefined1 *puStack_44;
  undefined1 *puStack_40;
  undefined4 uStack_3c;
  undefined1 *puStack_38;
  undefined1 *puStack_34;
  undefined4 local_24;
  undefined1 local_20;
  int local_1c [4];
  int *local_c;
  undefined *local_8;
  
  puStack_34 = &stack0xfffffffc;
  local_8 = (undefined *)0x0;
  piVar1 = local_1c;
  for (iVar5 = 4; iVar5 != 0; iVar5 = iVar5 + -1) {
    *piVar1 = *param_3;
    param_3 = param_3 + 1;
    piVar1 = piVar1 + 1;
  }
  puStack_38 = &LAB_0045e721;
  uStack_3c = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_3c;
  puStack_40 = (undefined1 *)0x45e614;
  local_c = FUN_0041c218((int *)PTR_LAB_0045e130,'\x01',0);
  puStack_44 = &LAB_0045e704;
  uStack_48 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_48;
  puStack_40 = &stack0xfffffffc;
  FUN_0045e228(local_c,param_2);
  FUN_0045e588(param_1,local_c);
  ppuVar7 = &local_8;
  local_24 = FUN_0045e3bc(param_1);
  local_20 = 0;
  FUN_00409224(&DAT_0045e738,&local_24,0,(int *)ppuVar7);
  piVar1 = (int *)FUN_0041c784(local_c);
  FUN_00417920((int *)piVar1[5],'\x01');
  FUN_004182f4((int)piVar1);
  FUN_00417034((int *)piVar1[3],0xffffff,extraout_ECX);
  LVar2 = FUN_00418234(piVar1,local_8);
  uVar6 = ((local_1c[2] - local_1c[0]) + 1) - LVar2;
  iVar5 = (int)uVar6 >> 1;
  if (iVar5 < 0) {
    iVar5 = iVar5 + (uint)((uVar6 & 1) != 0);
  }
  LVar2 = FUN_00418250(piVar1,local_8);
  uVar6 = ((local_1c[3] - local_1c[1]) + 1) - LVar2;
  iVar3 = (int)uVar6 >> 1;
  if (iVar3 < 0) {
    iVar3 = iVar3 + (uint)((uVar6 & 1) != 0);
  }
  FUN_0041814c(piVar1,local_1c,iVar5,local_8,iVar3);
  iVar5 = FUN_0041c784(param_2);
  *(undefined4 *)(iVar5 + 0x20) = 0x660046;
  piVar1 = local_c;
  piVar4 = (int *)FUN_0041c784(param_2);
  FUN_00417dbc(piVar4,0,0,piVar1);
  *in_FS_OFFSET = uStack_48;
  puStack_40 = &LAB_0045e70b;
  puStack_44 = (undefined1 *)0x45e703;
  FUN_00402f54(local_c);
  return;
}



void FUN_0045e740(int param_1,int *param_2,undefined4 *param_3)

{
  int *piVar1;
  int iVar2;
  RECT *pRVar3;
  RECT local_1c;
  
  pRVar3 = &local_1c;
  for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {
    pRVar3->left = *param_3;
    param_3 = param_3 + 1;
    pRVar3 = (RECT *)((int)pRVar3 + 4);
  }
  iVar2 = FUN_0041c784(param_2);
  FUN_00417804(*(int **)(iVar2 + 0x14),*(undefined4 *)(param_1 + 0x13c));
  piVar1 = (int *)FUN_0041c784(param_2);
  FUN_00417eb0(piVar1,&local_1c);
  return;
}



void FUN_0045e780(int param_1,int *param_2,LONG *param_3)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  RECT *pRVar4;
  int iVar5;
  int iVar6;
  RECT local_30;
  RECT local_20;
  
  pRVar4 = &local_30;
  for (iVar3 = 4; iVar3 != 0; iVar3 = iVar3 + -1) {
    pRVar4->left = *param_3;
    param_3 = param_3 + 1;
    pRVar4 = (RECT *)&pRVar4->top;
  }
  iVar3 = (local_30.right - local_30.left) + 1;
  iVar5 = local_30.bottom - local_30.top;
  iVar6 = iVar5 + 1;
  piVar1 = (int *)FUN_0041c784(param_2);
  FUN_00417804((int *)piVar1[5],*(undefined4 *)(param_1 + 0x13c));
  FUN_00417eb0(piVar1,&local_30);
  FUN_00417520((int *)piVar1[4],*(undefined4 *)(param_1 + 0x138));
  FUN_0041762c((int *)piVar1[4],1);
  FUN_00417804((int *)piVar1[5],*(undefined4 *)(param_1 + 0x138));
  if (*(char *)(param_1 + 0x134) == '\x01') {
    FUN_0045e3bc(param_1);
    iVar5 = FUN_0045e2ac();
    if (iVar3 < iVar5) {
      iVar5 = iVar3;
    }
    if (0 < iVar5) {
      FUN_0040ea70(local_30.left,local_30.top,iVar5,&local_20.left,iVar6);
      FUN_00417eb0(piVar1,&local_20);
    }
  }
  else if (*(char *)(param_1 + 0x134) == '\x02') {
    FUN_0045e3bc(param_1);
    iVar2 = FUN_0045e2ac();
    if (iVar6 <= iVar2) {
      iVar2 = iVar5;
    }
    FUN_0040ea70(local_30.left,iVar6 - iVar2,iVar3,&local_20.left,iVar6);
    FUN_00417eb0(piVar1,&local_20);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0045e884(int param_1,int *param_2,LONG *param_3)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  RECT *pRVar6;
  uint uVar7;
  RECT local_24;
  undefined4 local_14;
  
  pRVar6 = &local_24;
  for (iVar5 = 4; iVar5 != 0; iVar5 = iVar5 + -1) {
    pRVar6->left = *param_3;
    param_3 = param_3 + 1;
    pRVar6 = (RECT *)&pRVar6->top;
  }
  uVar7 = local_24.right - local_24.left;
  iVar5 = local_24.bottom - local_24.top;
  if (*(char *)(param_1 + 0x136) == '\x01') {
    uVar7 = uVar7 + 1;
    iVar5 = iVar5 + 1;
  }
  piVar1 = (int *)FUN_0041c784(param_2);
  FUN_00417804((int *)piVar1[5],*(undefined4 *)(param_1 + 0x60));
  FUN_00417eb0(piVar1,&local_24);
  FUN_00417804((int *)piVar1[5],*(undefined4 *)(param_1 + 0x13c));
  FUN_00417520((int *)piVar1[4],*(undefined4 *)(param_1 + 0x138));
  FUN_0041762c((int *)piVar1[4],1);
  FUN_00417e68(piVar1,local_24.left,local_24.top,iVar5,uVar7);
  iVar2 = FUN_0045e3bc(param_1);
  if (0 < iVar2) {
    FUN_00417804((int *)piVar1[5],*(undefined4 *)(param_1 + 0x138));
    iVar2 = (int)uVar7 >> 1;
    if (iVar2 < 0) {
      iVar2 = iVar2 + (uint)((uVar7 & 1) != 0);
    }
    local_14 = FUN_0045e3bc(param_1);
    FUN_00402a40();
    iVar3 = FUN_00402a60();
    FUN_00402a50();
    iVar4 = FUN_00402a60();
    FUN_00417f78(piVar1,local_24.left,local_24.top,0,iVar2,iVar4,iVar3,iVar5,uVar7);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0045e9e0(int param_1,int *param_2,LONG *param_3)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  RECT *pRVar4;
  int local_2c;
  RECT local_28;
  int local_18;
  int local_14;
  
  pRVar4 = &local_28;
  for (iVar3 = 4; iVar3 != 0; iVar3 = iVar3 + -1) {
    pRVar4->left = *param_3;
    param_3 = param_3 + 1;
    pRVar4 = (RECT *)&pRVar4->top;
  }
  iVar3 = local_28.right - local_28.left;
  local_2c = local_28.bottom - local_28.top;
  if (*(char *)(param_1 + 0x136) == '\x01') {
    iVar3 = iVar3 + 1;
    local_2c = local_2c + 1;
  }
  piVar1 = (int *)FUN_0041c784(param_2);
  FUN_00417804((int *)piVar1[5],*(undefined4 *)(param_1 + 0x60));
  FUN_00417eb0(piVar1,&local_28);
  FUN_00417804((int *)piVar1[5],*(undefined4 *)(param_1 + 0x13c));
  FUN_00417520((int *)piVar1[4],*(undefined4 *)(param_1 + 0x138));
  FUN_0041762c((int *)piVar1[4],1);
  FUN_00417f78(piVar1,local_28.left,local_28.top,local_28.bottom + -1,local_28.left,
               local_28.bottom + -1,iVar3 + local_28.left,local_2c * 2 + -1,iVar3);
  FUN_00417f4c(piVar1,local_28.left,local_28.bottom);
  FUN_00417eec(piVar1,iVar3 + local_28.left,local_28.bottom);
  iVar3 = FUN_0045e3bc(param_1);
  if (0 < iVar3) {
    FUN_00417520((int *)piVar1[4],*(undefined4 *)(param_1 + 0x138));
    local_14 = (int)*(uint *)(param_1 + 0x38) >> 1;
    if (local_14 < 0) {
      local_14 = local_14 + (uint)((*(uint *)(param_1 + 0x38) & 1) != 0);
    }
    FUN_00417f4c(piVar1,local_14,local_28.bottom + -1);
    local_18 = FUN_0045e3bc(param_1);
    FUN_00402a50();
    local_18 = local_28.bottom + -1;
    iVar3 = FUN_00402a60();
    FUN_00402a40();
    iVar2 = FUN_00402a60();
    FUN_00417eec(piVar1,iVar2,iVar3);
  }
  return;
}



void FUN_0045ebd0(int *param_1,int param_2)

{
  undefined1 *puVar1;
  int extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar2;
  undefined4 *puVar3;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  byte *local_18;
  undefined4 local_14;
  undefined1 local_10;
  int local_c;
  undefined1 local_8;
  
  puStack_20 = &stack0xfffffffc;
  local_18 = (byte *)0x0;
  puStack_24 = &LAB_0045ec73;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  puVar1 = &stack0xfffffffc;
  if (param_2 != param_1[0x4a]) {
    puVar1 = &stack0xfffffffc;
    if ((param_1[0x4b] < param_2) && (puVar1 = &stack0xfffffffc, (*(byte *)(param_1 + 8) & 1) == 0))
    {
      local_14 = 0x80000001;
      local_10 = 0;
      local_c = param_1[0x4b] + -1;
      local_8 = 0;
      puVar3 = &local_14;
      uVar2 = 1;
      FUN_004054e4((undefined4 *)PTR_PTR_004756e8,(int *)&local_18);
      uVar2 = FUN_0040aa4c((int)PTR_DAT_0040dc48,'\x01',local_18,uVar2,puVar3);
      FUN_004036ac(uVar2);
      param_2 = extraout_EDX;
      puVar1 = puStack_20;
    }
    puStack_20 = puVar1;
    param_1[0x4a] = param_2;
    if (param_1[0x4c] < param_2) {
      param_1[0x4c] = param_2;
    }
    puStack_24 = (undefined1 *)0x45ec5d;
    FUN_0042b29c(param_1);
    puVar1 = puStack_20;
  }
  puStack_20 = puVar1;
  *in_FS_OFFSET = puStack_20;
  local_18 = &LAB_0045ec7a;
  FUN_00403bdc((int *)&local_18);
  return;
}



void FUN_0045ec80(int *param_1,int param_2)

{
  undefined1 *puVar1;
  int extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar2;
  int *piVar3;
  undefined4 uStack_28;
  undefined1 *puStack_24;
  undefined1 *puStack_20;
  byte *local_18;
  int local_14;
  undefined1 local_10;
  undefined4 local_c;
  undefined1 local_8;
  
  puStack_20 = &stack0xfffffffc;
  local_18 = (byte *)0x0;
  puStack_24 = &LAB_0045ed23;
  uStack_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_28;
  puVar1 = &stack0xfffffffc;
  if (param_2 != param_1[0x4b]) {
    puVar1 = &stack0xfffffffc;
    if ((param_2 < param_1[0x4a]) && (puVar1 = &stack0xfffffffc, (*(byte *)(param_1 + 8) & 1) == 0))
    {
      local_14 = param_1[0x4a] + 1;
      local_10 = 0;
      local_c = 0x7fffffff;
      local_8 = 0;
      piVar3 = &local_14;
      uVar2 = 1;
      FUN_004054e4((undefined4 *)PTR_PTR_004756e8,(int *)&local_18);
      uVar2 = FUN_0040aa4c((int)PTR_DAT_0040dc48,'\x01',local_18,uVar2,piVar3);
      FUN_004036ac(uVar2);
      param_2 = extraout_EDX;
      puVar1 = puStack_20;
    }
    puStack_20 = puVar1;
    param_1[0x4b] = param_2;
    if (param_2 < param_1[0x4c]) {
      param_1[0x4c] = param_2;
    }
    puStack_24 = (undefined1 *)0x45ed0d;
    FUN_0042b29c(param_1);
    puVar1 = puStack_20;
  }
  puStack_20 = puVar1;
  *in_FS_OFFSET = puStack_20;
  local_18 = &LAB_0045ed2a;
  FUN_00403bdc((int *)&local_18);
  return;
}



void FUN_0045ed30(int *param_1,int param_2)

{
  int iVar1;
  int iVar2;
  
  iVar1 = FUN_0045e3bc((int)param_1);
  iVar2 = param_1[0x4a];
  if ((iVar2 <= param_2) && (iVar2 = param_2, param_1[0x4b] < param_2)) {
    iVar2 = param_1[0x4b];
  }
  if (iVar2 != param_1[0x4c]) {
    param_1[0x4c] = iVar2;
    iVar2 = FUN_0045e3bc((int)param_1);
    if (iVar1 != iVar2) {
      FUN_0042b29c(param_1);
    }
  }
  return;
}



void FUN_0045ef40(void)

{
  int in_stack_00000004;
  
  FUN_004026f4(in_stack_00000004);
  return;
}



void FUN_0045ef50(void)

{
  int in_stack_00000004;
  
  FUN_0040270c(in_stack_00000004);
  return;
}



void FUN_0045ef60(void)

{
  undefined4 *in_stack_00000004;
  undefined1 in_stack_00000008;
  uint in_stack_0000000c;
  
  FUN_00402c14(in_stack_00000004,in_stack_0000000c,in_stack_00000008);
  return;
}



void FUN_0045ef78(void)

{
  undefined4 *in_stack_00000004;
  undefined4 *in_stack_00000008;
  uint in_stack_0000000c;
  
  FUN_00402920(in_stack_00000008,in_stack_00000004,in_stack_0000000c);
  return;
}



void FUN_0045ef8c(void)

{
  undefined4 in_stack_00000004;
  int in_stack_00000008;
  int in_stack_0000000c;
  int *in_stack_00000010;
  
  (**(code **)(*in_stack_00000010 + 4))
            (in_stack_00000010,in_stack_00000004,in_stack_00000008 * in_stack_0000000c);
  return;
}



void FUN_0045efa8(void)

{
  undefined4 in_stack_00000004;
  int in_stack_00000008;
  int in_stack_0000000c;
  int *in_stack_00000010;
  
  (**(code **)(*in_stack_00000010 + 8))
            (in_stack_00000010,in_stack_00000004,in_stack_00000008 * in_stack_0000000c);
  return;
}



undefined4 FUN_0045efc4(void)

{
  return 0;
}



void FUN_0045efcc(void)

{
  FUN_00402a6c();
  return;
}



void FUN_0045f038(undefined4 *param_1)

{
  int *piVar1;
  
  piVar1 = FUN_0040aa10((int *)PTR_DAT_0041559c,'\x01',param_1);
  FUN_004036ac(piVar1);
  return;
}



void FUN_0045f050(int *param_1)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uVar1;
  undefined4 *puVar2;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  byte *local_10;
  undefined4 local_c;
  undefined1 local_8;
  
  puStack_18 = &stack0xfffffffc;
  local_10 = (byte *)0x0;
  puStack_1c = &LAB_0045f0b5;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  local_c = *(undefined4 *)(*param_1 + 0x14);
  local_8 = 0;
  puVar2 = &local_c;
  uVar1 = 0;
  FUN_004054e4((undefined4 *)PTR_PTR_00475788,(int *)&local_10);
  uVar1 = FUN_0040aa4c((int)PTR_LAB_0045efe4,'\x01',local_10,uVar1,puVar2);
  FUN_004036ac(uVar1);
  *in_FS_OFFSET = puStack_18;
  local_10 = &LAB_0045f0bc;
  FUN_00403bdc((int *)&local_10);
  return;
}



void FUN_0045f378(int param_1)

{
  if (*(int *)(param_1 + 0xa8) != 0) {
    FUN_0046be60(param_1 + 0xa8);
    *(undefined4 *)(param_1 + 0xa8) = 0;
  }
  return;
}



void FUN_0045f39c(int param_1,undefined4 *param_2)

{
  int iVar1;
  undefined **ppuVar2;
  undefined4 *puVar3;
  undefined4 *in_FS_OFFSET;
  byte bVar4;
  undefined4 uStack_20;
  undefined1 *puStack_1c;
  undefined1 *puStack_18;
  
  bVar4 = 0;
  puStack_18 = (undefined1 *)0x45f3b7;
  FUN_00402c14(param_2,0x26c,0);
  ppuVar2 = &PTR_FUN_00474c48;
  puVar3 = param_2;
  for (iVar1 = 0x1d; iVar1 != 0; iVar1 = iVar1 + -1) {
    *puVar3 = *ppuVar2;
    ppuVar2 = ppuVar2 + (uint)bVar4 * -2 + 1;
    puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
  }
  param_2[0x2a] = param_2;
  puStack_18 = (undefined1 *)0x45f3eb;
  FUN_00460424(param_2 + 0x2a,0x3d,0x1c2);
  puStack_1c = &LAB_0045f587;
  uStack_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_20;
  param_2[0x1d] = &LAB_0045f284;
  param_2[0x22] = param_1;
  param_2[0x2c] = param_2 + 0x1d;
  puStack_18 = &stack0xfffffffc;
  FUN_0041158c(*(int **)(*(int *)(param_1 + 0x20) + 8),0);
  FUN_00461bcc((int)(param_2 + 0x2a),*(undefined4 *)(*(int *)(param_1 + 0x20) + 8));
  FUN_00460728(param_2 + 0x2a,-1);
  param_2[0x35] = 1;
  param_2[0x36] = 1 << (*(byte *)(param_1 + 0x3b) & 0x1f);
  param_2[0x3d] = -(uint)(*(char *)(param_1 + 0x34) != '\0');
  if (*(char *)(param_1 + 0x35) != '\0') {
    param_2[0x34] = 1;
  }
  if ((*(char *)(param_1 + 0x36) == '\x01') || (param_2[0x34] == 1)) {
    param_2[0x3e] = 0xffffffff;
    param_2[0x41] = 0xec;
  }
  if (*(char *)(param_1 + 0x3a) == '\x01') {
    param_2[0x3b] = 1;
    param_2[0x40] = 0;
    param_2[0x3f] = 1;
  }
  param_2[0x27] = param_2[0x3b];
  *(bool *)(param_2 + 0x28) = param_2[0x40] != 0;
  param_2[0x29] = param_2[0x3f];
  if (*(char *)(param_1 + 0x38) != '\0') {
    iVar1 = FUN_00460874(param_2 + 0x2a);
    if (iVar1 != 0) {
      param_2[0x44] = param_2[0x40];
      param_2[0x3b] = 1;
      param_2[0x40] = 0;
      param_2[0x3f] = 1;
      param_2[0x39] = 0xffffffff;
    }
  }
  *in_FS_OFFSET = uStack_20;
  return;
}



void FUN_0045f5a4(int param_1)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack_280;
  undefined1 *puStack_27c;
  undefined1 *puStack_278;
  undefined4 local_270 [42];
  int local_1c8 [2];
  undefined4 local_1c0;
  undefined4 local_15c;
  undefined4 local_158;
  
  if (*(char *)(param_1 + 0x3c) != '\0') {
    puStack_278 = (undefined1 *)0x45f5c3;
    FUN_0045f39c(param_1,local_270);
    puStack_27c = &LAB_0045f623;
    uStack_280 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_280;
    local_1c0 = 0;
    puStack_278 = &stack0xfffffffc;
    FUN_00462070(local_1c8);
    *(undefined4 *)(param_1 + 0x28) = local_15c;
    *(undefined4 *)(param_1 + 0x2c) = local_158;
    iVar1 = FUN_00460874(local_1c8);
    *(bool *)(param_1 + 0x39) = iVar1 != 0;
    *in_FS_OFFSET = uStack_280;
    puStack_278 = (undefined1 *)0x45f62a;
    puStack_27c = (undefined1 *)0x45f622;
    FUN_0045f378((int)local_270);
    return;
  }
  return;
}



void FUN_0045f638(int *param_1)

{
  int *piVar1;
  undefined4 uVar2;
  uint uVar3;
  int iVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined **ppuVar5;
  uint uVar6;
  undefined4 *puVar7;
  undefined4 *in_FS_OFFSET;
  byte bVar8;
  undefined4 uStack_2dc;
  undefined1 *puStack_2d8;
  undefined1 *puStack_2d4;
  undefined4 uStack_2c0;
  undefined1 *puStack_2bc;
  undefined1 *puStack_2b8;
  undefined4 uStack_2b4;
  undefined1 *puStack_2b0;
  undefined1 *puStack_2ac;
  undefined4 uStack_2a8;
  undefined1 *puStack_2a4;
  undefined1 *puStack_2a0;
  undefined4 local_290 [4];
  undefined4 local_280 [29];
  undefined1 *local_20c [5];
  int *local_1f8;
  undefined4 *local_1d8 [2];
  undefined1 **local_1d0;
  undefined4 local_1c0;
  uint local_1bc;
  undefined4 local_1b8;
  undefined4 local_1b4;
  uint local_103;
  int *local_14;
  int local_10;
  uint local_c;
  int *local_8;
  
  bVar8 = 0;
  puStack_2a0 = (undefined1 *)0x45f659;
  local_8 = param_1;
  FUN_00402c14(local_280,0x26c,0);
  ppuVar5 = &PTR_FUN_00474c48;
  puVar7 = local_280;
  for (iVar4 = 0x1d; iVar4 != 0; iVar4 = iVar4 + -1) {
    *puVar7 = *ppuVar5;
    ppuVar5 = ppuVar5 + (uint)bVar8 * -2 + 1;
    puVar7 = puVar7 + (uint)bVar8 * -2 + 1;
  }
  local_1d8[0] = local_280;
  puStack_2a0 = (undefined1 *)0x45f68c;
  FUN_0046cb0c((int *)local_1d8,0x3d,0x165);
  puStack_2a4 = &LAB_0045f9a8;
  uStack_2a8 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_2a8;
  puStack_2b0 = &LAB_0045f971;
  uStack_2b4 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_2b4;
  local_20c[0] = &LAB_0045f284;
  local_1f8 = local_8;
  local_1d0 = local_20c;
  uVar2 = extraout_ECX;
  puStack_2ac = &stack0xfffffffc;
  puStack_2a0 = &stack0xfffffffc;
  if (*(int *)(local_8[8] + 8) != 0) {
    puStack_2b8 = (undefined1 *)0x45f6dc;
    puStack_2ac = &stack0xfffffffc;
    puStack_2a0 = &stack0xfffffffc;
    FUN_004600c8((int)local_8,0,extraout_ECX);
    uVar2 = extraout_ECX_00;
  }
  puStack_2b8 = (undefined1 *)0x45f6e8;
  piVar1 = (int *)FUN_00402f24((int *)PTR_PTR_0040e3d0,'\x01',uVar2);
  *(int **)(local_8[8] + 8) = piVar1;
  puStack_2b8 = (undefined1 *)0x45f6fc;
  FUN_0041158c(piVar1,0);
  puStack_2b8 = (undefined1 *)0x45f710;
  FUN_0046bf84((int)local_1d8,*(undefined4 *)(local_8[8] + 8));
  if ((int *)local_8[9] != (int *)0x0) {
    puStack_2b8 = (undefined1 *)0x45f721;
    iVar4 = (**(code **)(*(int *)local_8[9] + 0x2c))();
    if (iVar4 != 0) {
      puStack_2b8 = (undefined1 *)0x45f730;
      iVar4 = (**(code **)(*(int *)local_8[9] + 0x20))();
      if (iVar4 != 0) {
        puStack_2b8 = (undefined1 *)0x45f751;
        local_1c0 = (**(code **)(*(int *)local_8[9] + 0x2c))();
        puStack_2b8 = (undefined1 *)0x45f762;
        uVar2 = (**(code **)(*(int *)local_8[9] + 0x2c))();
        *(undefined4 *)(local_8[8] + 0x10) = uVar2;
        puStack_2b8 = (undefined1 *)0x45f776;
        local_1bc = (**(code **)(*(int *)local_8[9] + 0x20))();
        puStack_2b8 = (undefined1 *)0x45f787;
        uVar2 = (**(code **)(*(int *)local_8[9] + 0x20))();
        *(undefined4 *)(local_8[8] + 0xc) = uVar2;
        local_1b8 = 3;
        local_1b4 = 2;
        puStack_2b8 = (undefined1 *)0x45f7b0;
        local_14 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX_01);
        puStack_2bc = &LAB_0045f960;
        uStack_2c0 = *in_FS_OFFSET;
        *in_FS_OFFSET = &uStack_2c0;
        puStack_2b8 = &stack0xfffffffc;
        (**(code **)(*local_14 + 8))(local_14,local_8[9]);
        FUN_0041d784(local_14,6);
        FUN_0046c184((int *)local_1d8);
        FUN_0046c0c0((int *)local_1d8,(uint)*(byte *)((int)local_8 + 0x37),-1);
        if (*(char *)((int)local_8 + 0x35) != '\0') {
          *(undefined1 *)(local_8[8] + 0x14) = 1;
          FUN_0046c2e8((int *)local_1d8,1);
        }
        if (*(char *)((int)local_8 + 0x39) != '\0') {
          FUN_0046c750((int *)local_1d8);
        }
        local_10 = FUN_0041c8ec((int)local_14,0);
        iVar4 = FUN_0041c8ec((int)local_14,1);
        uVar6 = iVar4 - local_10;
        if (((int)uVar6 < 1) || ((uVar6 & 3) != 0)) {
          local_c = 1;
        }
        else {
          local_c = local_1bc;
        }
        puStack_2d4 = (undefined1 *)0x45f886;
        FUN_0040ea70(0,0,0,local_290,0);
        puStack_2d4 = (undefined1 *)0x45f8a0;
        FUN_00403130(local_8,local_8,0);
        puStack_2d8 = &LAB_0045f943;
        uStack_2dc = *in_FS_OFFSET;
        *in_FS_OFFSET = &uStack_2dc;
        puStack_2d4 = &stack0xfffffffc;
        FUN_0046c934((int *)local_1d8,-1);
        while (local_103 < local_1bc) {
          uVar3 = FUN_0046c9a0((int *)local_1d8,&local_10,local_c);
          local_10 = local_10 + uVar6 * uVar3;
        }
        FUN_0046cc1c((int *)local_1d8);
        *in_FS_OFFSET = uStack_2dc;
        puStack_2d4 = &LAB_0045f94a;
        puStack_2d8 = (undefined1 *)0x45f902;
        iVar4 = FUN_0040a7d4();
        if (iVar4 == 0) {
          puStack_2d8 = (undefined1 *)0x64;
        }
        else {
          puStack_2d8 = (undefined1 *)0x0;
        }
        uStack_2dc = 0;
        FUN_0040ea70(0,0,0,local_290,0);
        FUN_00403130(local_8,local_8,CONCAT31((int3)((uint)extraout_ECX_02 >> 8),2));
        return;
      }
    }
  }
  *in_FS_OFFSET = uStack_2b4;
  puStack_2ac = (undefined1 *)0x45f741;
  FUN_0040374c();
  return;
}



undefined1 FUN_0045f9d8(int *param_1,int *param_2)

{
  undefined1 uVar1;
  int *piVar2;
  
  uVar1 = 0;
  piVar2 = FUN_004030cc(param_2,(int)PTR_LAB_0045ee64);
  if ((char)piVar2 != '\0') {
    if ((*(int *)(param_1[8] + 8) == 0) || (*(int *)(param_2[8] + 8) == 0)) {
      uVar1 = param_1[8] == param_2[8];
    }
    else {
      uVar1 = FUN_00419a40(param_1,param_2);
    }
  }
  return uVar1;
}



void FUN_0045fa20(int param_1)

{
  FUN_00402f54(*(int **)(param_1 + 0x24));
  *(undefined4 *)(param_1 + 0x24) = 0;
  return;
}



void FUN_0045fa34(int param_1)

{
  BYTE BVar1;
  int iVar2;
  PALETTEENTRY *pPVar3;
  uint uVar4;
  LOGPALETTE local_40c [128];
  
  local_40c[0].palVersion = 0x300;
  local_40c[0].palNumEntries = *(ushort *)(param_1 + 0x80);
  if (*(int *)(param_1 + 0x28) == 1) {
    uVar4 = (uint)local_40c[0].palNumEntries;
    if (-1 < (int)(uVar4 - 1)) {
      iVar2 = 0;
      pPVar3 = local_40c[0].palPalEntry;
      do {
        BVar1 = *(BYTE *)(**(int **)(param_1 + 0x84) + iVar2);
        pPVar3->peRed = BVar1;
        pPVar3->peGreen = BVar1;
        pPVar3->peBlue = BVar1;
        pPVar3->peFlags = '\0';
        iVar2 = iVar2 + 1;
        pPVar3 = pPVar3 + 1;
        uVar4 = uVar4 - 1;
      } while (uVar4 != 0);
    }
  }
  else {
    uVar4 = (uint)local_40c[0].palNumEntries;
    if (-1 < (int)(uVar4 - 1)) {
      iVar2 = 0;
      pPVar3 = local_40c[0].palPalEntry;
      do {
        pPVar3->peRed = *(BYTE *)(*(int *)(*(int *)(param_1 + 0x84) + 8) + iVar2);
        pPVar3->peGreen = *(BYTE *)(*(int *)(*(int *)(param_1 + 0x84) + 4) + iVar2);
        pPVar3->peBlue = *(BYTE *)(**(int **)(param_1 + 0x84) + iVar2);
        pPVar3->peFlags = '\0';
        iVar2 = iVar2 + 1;
        pPVar3 = pPVar3 + 1;
        uVar4 = uVar4 - 1;
      } while (uVar4 != 0);
    }
  }
  CreatePalette(local_40c);
  return;
}



void FUN_0045fadc(int param_1,HPALETTE param_2)

{
  int *piVar1;
  undefined1 *puVar2;
  UINT UVar3;
  undefined4 uVar4;
  int iVar5;
  undefined1 auStack_414 [4];
  tagPALETTEENTRY local_410 [256];
  
  UVar3 = GetPaletteEntries(param_2,0,0x100,(LPPALETTEENTRY)(auStack_414 + 4));
  if (UVar3 != 0) {
    uVar4 = (**(code **)(*(int *)(param_1 + 4) + 8))(param_1,1,UVar3);
    *(undefined4 *)(param_1 + 0x84) = uVar4;
    *(UINT *)(param_1 + 0x80) = UVar3;
    if (-1 < (int)(UVar3 - 1)) {
      iVar5 = 0;
      puVar2 = &stack0xfffffbe8;
      do {
        piVar1 = *(int **)(param_1 + 0x84);
        *(undefined1 *)(piVar1[2] + iVar5) = puVar2[4];
        *(undefined1 *)(piVar1[1] + iVar5) = puVar2[5];
        *(undefined1 *)(*piVar1 + iVar5) = puVar2[6];
        iVar5 = iVar5 + 1;
        UVar3 = UVar3 - 1;
        puVar2 = puVar2 + 4;
      } while (UVar3 != 0);
    }
  }
  return;
}



int * FUN_0045fb64(int *param_1,undefined4 param_2,undefined4 param_3)

{
  int *piVar1;
  HPALETTE pHVar2;
  int iVar3;
  uint uVar4;
  int iVar5;
  undefined4 uVar6;
  undefined4 extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 *puVar7;
  undefined4 uStack_2d0;
  undefined1 *puStack_2cc;
  undefined1 *puStack_2c8;
  undefined4 uStack_2b4;
  undefined1 *puStack_2b0;
  undefined1 *puStack_2ac;
  undefined4 uStack_2a8;
  undefined1 *puStack_2a4;
  undefined1 *puStack_2a0;
  undefined4 local_290 [4];
  undefined4 local_280 [39];
  undefined4 local_1e4;
  char local_1e0;
  undefined4 local_1dc;
  int local_1d8 [2];
  int local_1d0;
  int local_1b0;
  int local_19c;
  undefined4 local_194;
  undefined4 local_184;
  undefined4 local_180;
  undefined4 local_16c;
  uint local_168;
  int local_15c;
  int local_154;
  uint local_150;
  int local_14c;
  char local_11;
  int local_10;
  int *local_c;
  int *local_8;
  
  local_c = (int *)param_1[9];
  if (local_c == (int *)0x0) {
    puStack_2a0 = (undefined1 *)0x45fb96;
    local_8 = param_1;
    piVar1 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',param_3);
    local_8[9] = (int)piVar1;
    local_c = (int *)local_8[9];
    local_11 = '\x01';
    puStack_2a0 = (undefined1 *)0x45fbb7;
    FUN_0045f39c((int)local_8,local_280);
    puStack_2a4 = &LAB_0045ff59;
    uStack_2a8 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_2a8;
    puStack_2b0 = &LAB_0045ff2a;
    uStack_2b4 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_2b4;
    puStack_2ac = &stack0xfffffffc;
    puStack_2a0 = &stack0xfffffffc;
    FUN_0041d3e0((int *)local_8[9],(HANDLE)0x0);
    if ((*(char *)((int)local_8 + 0x36) == '\x01') || (local_1b0 == 1)) {
      FUN_0041d784((int *)local_8[9],3);
    }
    else {
      FUN_0041d784((int *)local_8[9],6);
    }
    puStack_2c8 = (undefined1 *)0x45fc26;
    FUN_0040ea70(0,0,0,local_290,0);
    puStack_2c8 = (undefined1 *)0x45fc40;
    FUN_00403130(local_8,local_8,0);
    puStack_2cc = &LAB_0045ff19;
    uStack_2d0 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_2d0;
    pHVar2 = (HPALETTE)local_8[0xc];
    puStack_2c8 = &stack0xfffffffc;
    if (pHVar2 != (HPALETTE)0x0) {
      if (*(char *)((int)local_8 + 0x36) == '\x01') {
        puStack_2c8 = &stack0xfffffffc;
        FUN_0045fadc((int)local_1d8,pHVar2);
        pHVar2 = FUN_0041bfa8((HPALETTE)local_8[0xc]);
        (**(code **)(*(int *)local_8[9] + 0x38))((int *)local_8[9],pHVar2);
        local_11 = '\0';
      }
      else {
        puStack_2c8 = &stack0xfffffffc;
        DeleteObject(pHVar2);
        local_8[0xc] = 0;
      }
    }
    FUN_00461c38(local_1d8);
    piVar1 = (int *)local_8[9];
    FUN_0041d3e0(piVar1,(HANDLE)0x0);
    (**(code **)(*piVar1 + 0x40))(piVar1,local_16c);
    (**(code **)(*piVar1 + 0x34))(piVar1,local_168);
    local_10 = FUN_0041c8ec((int)piVar1,0);
    iVar3 = FUN_0041c8ec((int)piVar1,1);
    uVar4 = iVar3 - local_10;
    if (((int)uVar4 < 1) || (iVar3 = local_15c, (uVar4 & 3) != 0)) {
      iVar3 = 1;
    }
    if (local_19c != 0) {
      while (iVar5 = FUN_00460794(local_1d8), iVar5 != 2) {
        FUN_00461ef8(local_1d8,local_14c);
        if ((((*(int *)(local_1d0 + 0xc) == 0) && (local_154 != 0)) &&
            (uVar6 = FUN_0041c868(local_8[9]), (char)uVar6 == '\x03')) && (local_11 != '\0')) {
          uVar6 = FUN_0045fa34((int)local_1d8);
          (**(code **)(*(int *)local_8[9] + 0x38))((int *)local_8[9],uVar6);
          *(undefined1 *)((int)local_8 + 0x1a) = 1;
        }
        local_10 = FUN_0041c8ec(local_8[9],0);
        while (local_150 < local_168) {
          iVar5 = FUN_00461dbc(local_1d8,&local_10,iVar3);
          local_10 = local_10 + uVar4 * iVar5;
        }
        FUN_00461f58(local_1d8);
      }
      local_194 = local_1e4;
      local_184 = local_1dc;
      if (local_1e0 != '\0') {
        local_180 = 0xffffffff;
        local_154 = 0;
      }
      FUN_00461ef8(local_1d8,local_14c);
      local_10 = FUN_0041c8ec(local_8[9],0);
    }
    if (((local_19c == 0) || (local_1e0 != '\0')) && ((local_154 != 0 && (local_11 != '\0')))) {
      uVar6 = FUN_0045fa34((int)local_1d8);
      (**(code **)(*(int *)local_8[9] + 0x38))((int *)local_8[9],uVar6);
      *(undefined1 *)((int)local_8 + 0x1a) = 1;
      local_10 = FUN_0041c8ec(local_8[9],0);
    }
    while (local_150 < local_168) {
      iVar5 = FUN_00461dbc(local_1d8,&local_10,iVar3);
      local_10 = local_10 + uVar4 * iVar5;
    }
    if (local_19c != 0) {
      FUN_00461f58(local_1d8);
    }
    FUN_004608a8(local_1d8);
    *in_FS_OFFSET = uStack_2d0;
    puStack_2c8 = &LAB_0045ff20;
    puStack_2cc = (undefined1 *)0x45fec1;
    iVar3 = FUN_0040a7d4();
    if (iVar3 == 0) {
      puStack_2cc = (undefined1 *)0x64;
    }
    else {
      puStack_2cc = (undefined1 *)0x0;
    }
    uStack_2d0 = CONCAT31((int3)((uint)local_8 >> 8),*(undefined1 *)((int)local_8 + 0x1a));
    FUN_0040ea70(0,0,0,local_290,0);
    puVar7 = local_290;
    uVar6 = 0;
    FUN_00403130(local_8,local_8,CONCAT31((int3)((uint)extraout_ECX >> 8),2));
    if (*(char *)((int)local_8 + 0x1a) != '\0') {
      local_8 = (int *)(**(code **)(*local_8 + 0x10))(local_8,local_8,*local_8,uVar6,puVar7);
    }
    return local_8;
  }
  return local_c;
}



undefined4 FUN_0046002c(int param_1)

{
  undefined4 uVar1;
  
  if (*(int **)(param_1 + 0x24) != (int *)0x0) {
    uVar1 = (**(code **)(**(int **)(param_1 + 0x24) + 0x2c))();
    return uVar1;
  }
  if (*(char *)(param_1 + 0x3b) == '\0') {
    uVar1 = *(undefined4 *)(*(int *)(param_1 + 0x20) + 0x10);
  }
  else {
    FUN_0045f5a4(param_1);
    uVar1 = *(undefined4 *)(param_1 + 0x28);
  }
  return uVar1;
}



void FUN_00460058(int *param_1)

{
  if (*(int *)(param_1[8] + 8) == 0) {
    FUN_0045f638(param_1);
  }
  return;
}



void FUN_00460068(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  (**(code **)(**(int **)(param_1 + 0x24) + 0x58))
            (*(int **)(param_1 + 0x24),param_2,param_3,param_4);
  return;
}



void FUN_004600ac(int param_1)

{
  int *piVar1;
  undefined4 extraout_ECX;
  
  FUN_00402f54(*(int **)(param_1 + 0x24));
  piVar1 = FUN_0041c218((int *)PTR_PTR_00416178,'\x01',extraout_ECX);
  *(int **)(param_1 + 0x24) = piVar1;
  return;
}



void FUN_004600c8(int param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  
  if (*(int **)(param_1 + 0x20) != (int *)0x0) {
    FUN_0041b77c(*(int **)(param_1 + 0x20));
    param_3 = extraout_ECX;
  }
  iVar1 = FUN_00402f24((int *)PTR_PTR_0045ee08,'\x01',param_3);
  *(int *)(param_1 + 0x20) = iVar1;
  FUN_0041b778(iVar1);
  return;
}



void FUN_004600f4(int *param_1,int *param_2,int param_3)

{
  int iStack_10;
  
  iStack_10 = param_3;
  (**(code **)(*param_2 + 4))(param_2,&iStack_10,4);
  FUN_0046011c(param_1,iStack_10,param_2);
  return;
}



void FUN_0046011c(int *param_1,int param_2,int *param_3)

{
  undefined4 *puVar1;
  int iVar2;
  undefined4 extraout_ECX;
  int iVar3;
  undefined **ppuVar4;
  undefined4 *in_FS_OFFSET;
  byte bVar5;
  undefined4 uStack_25c;
  undefined1 *puStack_258;
  undefined1 *puStack_254;
  undefined4 *local_242 [6];
  undefined4 local_22a;
  undefined4 local_226;
  int local_21e;
  undefined4 local_80 [29];
  int *local_c;
  int *local_8;
  
  bVar5 = 0;
  puStack_254 = (undefined1 *)0x460138;
  local_c = param_3;
  local_8 = param_1;
  FUN_004600c8((int)param_1,param_2,param_3);
  puStack_254 = (undefined1 *)0x460143;
  FUN_00402f54((int *)local_8[9]);
  local_8[9] = 0;
  iVar2 = local_8[8];
  puStack_254 = (undefined1 *)0x46015d;
  puVar1 = (undefined4 *)FUN_00402f24((int *)PTR_PTR_0040e3d0,'\x01',extraout_ECX);
  *(undefined4 **)(iVar2 + 8) = puVar1;
  puStack_254 = (undefined1 *)0x46016a;
  (**(code **)*puVar1)(puVar1,param_2);
  puStack_254 = (undefined1 *)0x46017a;
  FUN_004115d0(local_c,*(undefined4 *)(*(int *)(iVar2 + 8) + 4),param_2);
  if (0 < param_2) {
    ppuVar4 = &PTR_FUN_00474c48;
    puVar1 = local_80;
    for (iVar3 = 0x1d; iVar3 != 0; iVar3 = iVar3 + -1) {
      *puVar1 = *ppuVar4;
      ppuVar4 = ppuVar4 + (uint)bVar5 * -2 + 1;
      puVar1 = puVar1 + (uint)bVar5 * -2 + 1;
    }
    local_242[0] = local_80;
    puStack_254 = (undefined1 *)0x4601af;
    FUN_00460424((int *)local_242,0x3d,0x1c2);
    puStack_258 = &LAB_00460232;
    uStack_25c = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack_25c;
    puStack_254 = &stack0xfffffffc;
    FUN_0041158c(*(int **)(iVar2 + 8),0);
    FUN_00461bcc((int)local_242,*(undefined4 *)(iVar2 + 8));
    FUN_00460728((int *)local_242,-1);
    *(undefined4 *)(iVar2 + 0x10) = local_22a;
    *(undefined4 *)(iVar2 + 0xc) = local_226;
    *(bool *)(iVar2 + 0x14) = local_21e == 1;
    iVar2 = FUN_00460874((int *)local_242);
    *(bool *)((int)local_8 + 0x39) = iVar2 != 0;
    *in_FS_OFFSET = uStack_25c;
    puStack_254 = (undefined1 *)0x460239;
    puStack_258 = (undefined1 *)0x460231;
    FUN_004604ec((int)local_242);
    return;
  }
  *(undefined1 *)((int)local_8 + 0x1a) = 1;
  puStack_254 = (undefined1 *)0x46024b;
  (**(code **)(*local_8 + 0x10))(local_8,local_8);
  return;
}



void FUN_004603e4(void)

{
  HDC hdc;
  int iVar1;
  int iVar2;
  
  hdc = GetDC((HWND)0x0);
  iVar1 = GetDeviceCaps(hdc,0xc);
  iVar2 = GetDeviceCaps(hdc,0xe);
  DAT_00474c43 = iVar1 * iVar2 < 9;
  ReleaseDC((HWND)0x0,hdc);
  return;
}



void FUN_00460424(int *param_1,int param_2,int param_3)

{
  int iVar1;
  
  param_1[1] = 0;
  if (param_2 != 0x3d) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 10;
    *(undefined4 *)(iVar1 + 0x18) = 0x3d;
    *(int *)(iVar1 + 0x1c) = param_2;
    (**(code **)*param_1)();
  }
  if (param_3 != 0x1c2) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x13;
    *(undefined4 *)(iVar1 + 0x18) = 0x1c2;
    *(int *)(iVar1 + 0x1c) = param_3;
    (**(code **)*param_1)();
  }
  iVar1 = *param_1;
  FUN_0045ef60();
  *param_1 = iVar1;
  param_1[3] = 1;
  FUN_00461488(param_1);
  param_1[2] = 0;
  param_1[5] = 0;
  FUN_0045ef60();
  FUN_0045ef60();
  FUN_0045ef60();
  FUN_0046bd54((int)param_1);
  FUN_00461ad8((int)param_1);
  param_1[4] = 200;
  return;
}



void FUN_004604ec(int param_1)

{
  FUN_0046be60(param_1);
  return;
}



void FUN_00460540(int *param_1)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  
  iVar1 = param_1[8];
  if (iVar1 == 1) {
    param_1[9] = 1;
    param_1[10] = 1;
  }
  else if (iVar1 == 3) {
    if (param_1[0x45] == 0) {
      if (*(int *)((int)param_1 + 0x11d) == 0) {
        piVar2 = (int *)param_1[0x35];
        iVar1 = *piVar2;
        iVar3 = piVar2[0x15];
        iVar4 = piVar2[0x2a];
        if (((iVar1 == 1) && (iVar3 == 2)) && (iVar4 == 3)) {
          param_1[9] = 3;
        }
        else if (((iVar1 == 0x52) && (iVar3 == 0x47)) && (iVar4 == 0x42)) {
          param_1[9] = 2;
        }
        else {
          iVar5 = *param_1;
          *(int *)(iVar5 + 0x18) = iVar1;
          *(int *)(iVar5 + 0x1c) = iVar3;
          *(int *)(iVar5 + 0x20) = iVar4;
          *(undefined4 *)(*param_1 + 0x14) = 0x6b;
          (**(code **)(*param_1 + 4))(param_1,1);
          param_1[9] = 3;
        }
      }
      else if (*(char *)((int)param_1 + 0x121) == '\0') {
        param_1[9] = 2;
      }
      else if (*(char *)((int)param_1 + 0x121) == '\x01') {
        param_1[9] = 3;
      }
      else {
        iVar1 = *param_1;
        *(undefined4 *)(iVar1 + 0x14) = 0x6e;
        *(uint *)(iVar1 + 0x18) = (uint)*(byte *)((int)param_1 + 0x121);
        (**(code **)(*param_1 + 4))(param_1,0xffffffff);
        param_1[9] = 3;
      }
    }
    else {
      param_1[9] = 3;
    }
    param_1[10] = 2;
  }
  else if (iVar1 == 4) {
    if (*(int *)((int)param_1 + 0x11d) == 0) {
      param_1[9] = 4;
    }
    else if (*(char *)((int)param_1 + 0x121) == '\0') {
      param_1[9] = 4;
    }
    else if (*(char *)((int)param_1 + 0x121) == '\x02') {
      param_1[9] = 5;
    }
    else {
      iVar1 = *param_1;
      *(undefined4 *)(iVar1 + 0x14) = 0x6e;
      *(uint *)(iVar1 + 0x18) = (uint)*(byte *)((int)param_1 + 0x121);
      (**(code **)(*param_1 + 4))(param_1,0xffffffff);
      param_1[9] = 5;
    }
    param_1[10] = 4;
  }
  else {
    param_1[9] = 0;
    param_1[10] = 0;
  }
  param_1[0xb] = 1;
  param_1[0xc] = 1;
  param_1[0xd] = 0;
  param_1[0xe] = 0x3ff00000;
  param_1[0xf] = 0;
  param_1[0x10] = 0;
  param_1[0x11] = 0;
  param_1[0x12] = 1;
  param_1[0x13] = 1;
  param_1[0x14] = 0;
  param_1[0x15] = 2;
  param_1[0x16] = 1;
  param_1[0x17] = 0x100;
  param_1[0x21] = 0;
  param_1[0x18] = 0;
  param_1[0x19] = 0;
  param_1[0x1a] = 0;
  return;
}



int FUN_00460728(int *param_1,int param_2)

{
  int iVar1;
  
  if ((param_1[4] != 200) && (param_1[4] != 0xc9)) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x12;
    *(int *)(iVar1 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  iVar1 = FUN_00460794(param_1);
  if (iVar1 != 0) {
    if (iVar1 == 1) {
      iVar1 = 1;
    }
    else if (iVar1 == 2) {
      if (param_2 != 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0x32;
        (**(code **)*param_1)();
      }
      FUN_0046be34((int)param_1);
      iVar1 = 2;
    }
  }
  return iVar1;
}



int FUN_00460794(int *param_1)

{
  int iVar1;
  int iVar2;
  
  iVar2 = 0;
  switch(param_1[4]) {
  case 200:
    (**(code **)(*(int *)((int)param_1 + 0x1a6) + 4))();
    (**(code **)(param_1[5] + 8))();
    param_1[4] = 0xc9;
  case 0xc9:
    iVar2 = (*(code *)**(undefined4 **)((int)param_1 + 0x1a6))();
    if (iVar2 == 1) {
      FUN_00460540(param_1);
      param_1[4] = 0xca;
    }
    break;
  case 0xca:
    iVar2 = 1;
    break;
  case 0xcb:
  case 0xcc:
  case 0xcd:
  case 0xce:
  case 0xcf:
  case 0xd0:
  case 0xd2:
    iVar2 = (*(code *)**(undefined4 **)((int)param_1 + 0x1a6))();
    break;
  default:
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x12;
    *(int *)(iVar1 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  return iVar2;
}



undefined4 FUN_00460840(int *param_1)

{
  int iVar1;
  
  if ((param_1[4] < 200) || (0xd2 < param_1[4])) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x12;
    *(int *)(iVar1 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  return *(undefined4 *)(*(int *)((int)param_1 + 0x1a6) + 0x14);
}



undefined4 FUN_00460874(int *param_1)

{
  int iVar1;
  
  if ((param_1[4] < 0xca) || (0xd2 < param_1[4])) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x12;
    *(int *)(iVar1 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  return *(undefined4 *)(*(int *)((int)param_1 + 0x1a6) + 0x10);
}



undefined4 FUN_004608a8(int *param_1)

{
  int iVar1;
  
  if (((param_1[4] == 0xcd) || (param_1[4] == 0xce)) && (param_1[0xf] == 0)) {
    if ((uint)param_1[0x22] < (uint)param_1[0x1c]) {
      *(undefined4 *)(*param_1 + 0x14) = 0x42;
      (**(code **)*param_1)();
    }
    (**(code **)(*(int *)((int)param_1 + 0x196) + 4))();
    param_1[4] = 0xd2;
  }
  else if (param_1[4] == 0xcf) {
    param_1[4] = 0xd2;
  }
  else if (param_1[4] != 0xd2) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x12;
    *(int *)(iVar1 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  do {
    if (*(int *)(*(int *)((int)param_1 + 0x1a6) + 0x14) != 0) {
      (**(code **)(param_1[5] + 0x18))();
      FUN_0046be34((int)param_1);
      return 1;
    }
    iVar1 = (*(code *)**(undefined4 **)((int)param_1 + 0x1a6))();
  } while (iVar1 != 0);
  return 0;
}



void FUN_00460958(int *param_1,undefined4 param_2)

{
  int iVar1;
  
  iVar1 = *param_1;
  *(undefined4 *)(iVar1 + 0x14) = 0x35;
  *(undefined4 *)(iVar1 + 0x18) = param_2;
  (**(code **)*param_1)();
  return;
}



int FUN_0046096c(int *param_1,int param_2,uint param_3)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  uint uVar4;
  undefined4 *puVar5;
  uint uVar6;
  
  iVar1 = param_1[1];
  if (0x3b9ac9f4 < param_3) {
    FUN_00460958(param_1,1);
  }
  if ((param_3 & 7) != 0) {
    param_3 = param_3 + (8 - (param_3 & 7));
  }
  if ((param_2 < 0) || (1 < param_2)) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0xc;
    *(int *)(iVar2 + 0x18) = param_2;
    (**(code **)*param_1)();
  }
  puVar3 = (undefined4 *)0x0;
  for (puVar5 = *(undefined4 **)(iVar1 + 0x30 + param_2 * 4);
      (puVar5 != (undefined4 *)0x0 && ((uint)puVar5[2] < param_3)); puVar5 = (undefined4 *)*puVar5)
  {
    puVar3 = puVar5;
  }
  if (puVar5 == (undefined4 *)0x0) {
    if (puVar3 == (undefined4 *)0x0) {
      uVar6 = *(uint *)(&DAT_00474cbc + param_2 * 4);
    }
    else {
      uVar6 = *(uint *)(&DAT_00474cc4 + param_2 * 4);
    }
    uVar4 = 1000000000 - (param_3 + 0xc);
    if (uVar4 < uVar6) {
      uVar6 = uVar4;
    }
    while (puVar5 = (undefined4 *)FUN_00461574(), puVar5 == (undefined4 *)0x0) {
      uVar6 = uVar6 / 2;
      if (uVar6 < 0x32) {
        FUN_00460958(param_1,2);
      }
    }
    *(uint *)(iVar1 + 0x48) = param_3 + 0xc + uVar6 + *(int *)(iVar1 + 0x48);
    *puVar5 = 0;
    puVar5[1] = 0;
    puVar5[2] = uVar6 + param_3;
    if (puVar3 == (undefined4 *)0x0) {
      *(undefined4 **)(iVar1 + 0x30 + param_2 * 4) = puVar5;
    }
    else {
      *puVar3 = puVar5;
    }
  }
  iVar1 = puVar5[1];
  puVar5[1] = puVar5[1] + param_3;
  puVar5[2] = puVar5[2] - param_3;
  return (int)puVar5 + iVar1 + 0xc;
}



undefined4 * FUN_00460a9c(int *param_1,int param_2,uint param_3)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  
  iVar1 = param_1[1];
  if (0x3b9ac9f4 < param_3) {
    FUN_00460958(param_1,3);
  }
  if ((param_3 & 7) != 0) {
    param_3 = param_3 + (8 - (param_3 & 7));
  }
  if ((param_2 < 0) || (1 < param_2)) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0xc;
    *(int *)(iVar2 + 0x18) = param_2;
    (**(code **)*param_1)();
  }
  puVar3 = (undefined4 *)FUN_00461584();
  if (puVar3 == (undefined4 *)0x0) {
    FUN_00460958(param_1,4);
  }
  *(uint *)(iVar1 + 0x48) = *(int *)(iVar1 + 0x48) + param_3 + 0xc;
  *puVar3 = *(undefined4 *)(iVar1 + 0x38 + param_2 * 4);
  puVar3[1] = param_3;
  puVar3[2] = 0;
  *(undefined4 **)(iVar1 + 0x38 + param_2 * 4) = puVar3;
  return puVar3 + 3;
}



int FUN_00460b3c(int *param_1,int param_2,uint param_3,uint param_4)

{
  int iVar1;
  undefined4 *puVar2;
  int *piVar3;
  uint uVar4;
  uint local_1c;
  uint local_18;
  
  iVar1 = param_1[1];
  local_18 = (uint)(0x3b9ac9f4 / (ulonglong)param_3);
  if (local_18 == 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x45;
    (**(code **)*param_1)();
  }
  if ((int)param_4 <= (int)local_18) {
    local_18 = param_4;
  }
  *(uint *)(iVar1 + 0x4c) = local_18;
  iVar1 = FUN_0046096c(param_1,param_2,param_4 << 2);
  local_1c = 0;
  if (param_4 != 0) {
    do {
      if (param_4 - local_1c <= local_18) {
        local_18 = param_4 - local_1c;
      }
      puVar2 = FUN_00460a9c(param_1,param_2,local_18 * param_3);
      piVar3 = (int *)(iVar1 + local_1c * 4);
      for (uVar4 = local_18; uVar4 != 0; uVar4 = uVar4 - 1) {
        *piVar3 = (int)puVar2;
        local_1c = local_1c + 1;
        piVar3 = piVar3 + 1;
        puVar2 = (undefined4 *)((int)puVar2 + param_3);
      }
    } while (local_1c < param_4);
  }
  return iVar1;
}



int FUN_00460c10(int *param_1,int param_2,int param_3,uint param_4)

{
  int iVar1;
  undefined4 *puVar2;
  int *piVar3;
  uint uVar4;
  uint local_1c;
  uint local_18;
  
  iVar1 = param_1[1];
  local_18 = (uint)(0x3b9ac9f4 / (ulonglong)(uint)(param_3 << 7));
  if (local_18 == 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x45;
    (**(code **)*param_1)();
  }
  if ((int)param_4 <= (int)local_18) {
    local_18 = param_4;
  }
  *(uint *)(iVar1 + 0x4c) = local_18;
  iVar1 = FUN_0046096c(param_1,param_2,param_4 << 2);
  local_1c = 0;
  if (param_4 != 0) {
    do {
      if (param_4 - local_1c <= local_18) {
        local_18 = param_4 - local_1c;
      }
      puVar2 = FUN_00460a9c(param_1,param_2,local_18 * param_3 * 0x80);
      piVar3 = (int *)(iVar1 + local_1c * 4);
      for (uVar4 = local_18; uVar4 != 0; uVar4 = uVar4 - 1) {
        *piVar3 = (int)puVar2;
        local_1c = local_1c + 1;
        piVar3 = piVar3 + 1;
        puVar2 = puVar2 + param_3 * 0x20;
      }
    } while (local_1c < param_4);
  }
  return iVar1;
}



void FUN_00460cf4(int *param_1,int param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5,
                 undefined4 param_6)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  
  iVar1 = param_1[1];
  if (param_2 != 1) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0xc;
    *(int *)(iVar2 + 0x18) = param_2;
    (**(code **)*param_1)();
  }
  puVar3 = (undefined4 *)FUN_0046096c(param_1,param_2,0x80);
  *puVar3 = 0;
  puVar3[1] = param_5;
  puVar3[2] = param_6;
  puVar3[3] = param_4;
  puVar3[8] = param_3;
  puVar3[10] = 0;
  puVar3[0xb] = *(undefined4 *)(iVar1 + 0x40);
  *(undefined4 **)(iVar1 + 0x40) = puVar3;
  return;
}



void FUN_00460d5c(int *param_1,int param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5,
                 undefined4 param_6)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  
  iVar1 = param_1[1];
  if (param_2 != 1) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0xc;
    *(int *)(iVar2 + 0x18) = param_2;
    (**(code **)*param_1)();
  }
  puVar3 = (undefined4 *)FUN_0046096c(param_1,param_2,0x80);
  *puVar3 = 0;
  puVar3[1] = param_5;
  puVar3[2] = param_6;
  puVar3[3] = param_4;
  puVar3[8] = param_3;
  puVar3[10] = 0;
  puVar3[0xb] = *(undefined4 *)(iVar1 + 0x44);
  *(undefined4 **)(iVar1 + 0x44) = puVar3;
  return;
}



void FUN_00460dc4(int *param_1)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  int local_14;
  
  iVar1 = param_1[1];
  local_14 = 0;
  iVar4 = 0;
  for (piVar2 = *(int **)(iVar1 + 0x40); piVar2 != (int *)0x0; piVar2 = (int *)piVar2[0xb]) {
    if (*piVar2 == 0) {
      iVar4 = piVar2[3] * piVar2[2] + iVar4;
      local_14 = piVar2[1] * piVar2[2] + local_14;
    }
  }
  for (piVar2 = *(int **)(iVar1 + 0x44); piVar2 != (int *)0x0; piVar2 = (int *)piVar2[0xb]) {
    if (*piVar2 == 0) {
      iVar4 = piVar2[3] * piVar2[2] * 0x80 + iVar4;
      local_14 = piVar2[1] * piVar2[2] * 0x80 + local_14;
    }
  }
  if (0 < iVar4) {
    iVar3 = FUN_00461594(param_1,iVar4,local_14);
    if (iVar3 < local_14) {
      iVar3 = iVar3 / iVar4;
      if (iVar3 < 1) {
        iVar3 = 1;
      }
    }
    else {
      iVar3 = 1000000000;
    }
    for (piVar2 = *(int **)(iVar1 + 0x40); piVar2 != (int *)0x0; piVar2 = (int *)piVar2[0xb]) {
      if (*piVar2 == 0) {
        if (iVar3 < (int)((piVar2[1] - 1U) / (uint)piVar2[3] + 1)) {
          piVar2[4] = iVar3 * piVar2[3];
          FUN_004615a0(param_1);
          piVar2[10] = 1;
        }
        else {
          piVar2[4] = piVar2[1];
        }
        iVar4 = FUN_00460b3c(param_1,1,piVar2[2],piVar2[4]);
        *piVar2 = iVar4;
        piVar2[5] = *(int *)(iVar1 + 0x4c);
        piVar2[6] = 0;
        piVar2[7] = 0;
        piVar2[9] = 0;
      }
    }
    for (piVar2 = *(int **)(iVar1 + 0x44); piVar2 != (int *)0x0; piVar2 = (int *)piVar2[0xb]) {
      if (*piVar2 == 0) {
        if (iVar3 < (int)((piVar2[1] - 1U) / (uint)piVar2[3] + 1)) {
          piVar2[4] = iVar3 * piVar2[3];
          FUN_004615a0(param_1);
          piVar2[10] = 1;
        }
        else {
          piVar2[4] = piVar2[1];
        }
        iVar4 = FUN_00460c10(param_1,1,piVar2[2],piVar2[4]);
        *piVar2 = iVar4;
        piVar2[5] = *(int *)(iVar1 + 0x4c);
        piVar2[6] = 0;
        piVar2[7] = 0;
        piVar2[9] = 0;
      }
    }
  }
  return;
}



void FUN_00460f58(undefined4 param_1,int *param_2,int param_3)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int local_10;
  
  iVar1 = param_2[2];
  local_10 = param_2[6] * iVar1;
  iVar4 = 0;
  while( true ) {
    if (param_2[4] <= iVar4) {
      return;
    }
    if (param_2[5] < param_2[4] - iVar4) {
      iVar2 = param_2[5];
    }
    else {
      iVar2 = param_2[4] - iVar4;
    }
    iVar3 = param_2[6] + iVar4;
    if (param_2[7] - iVar3 <= iVar2) {
      iVar2 = param_2[7] - iVar3;
    }
    if (param_2[1] - iVar3 <= iVar2) {
      iVar2 = param_2[1] - iVar3;
    }
    if (iVar2 < 1) break;
    iVar2 = iVar2 * iVar1;
    if (param_3 == 0) {
      (*(code *)param_2[0xc])
                (param_1,param_2 + 0xc,*(undefined4 *)(*param_2 + iVar4 * 4),iVar2,local_10);
    }
    else {
      (*(code *)param_2[0xd])
                (param_1,param_2 + 0xc,*(undefined4 *)(*param_2 + iVar4 * 4),iVar2,local_10);
    }
    local_10 = local_10 + iVar2;
    iVar4 = iVar4 + param_2[5];
  }
  return;
}



void FUN_00461004(undefined4 param_1,int *param_2,int param_3)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int local_10;
  
  iVar1 = param_2[2];
  local_10 = param_2[6] * iVar1 * 0x80;
  iVar4 = 0;
  while( true ) {
    if (param_2[4] <= iVar4) {
      return;
    }
    if (param_2[5] < param_2[4] - iVar4) {
      iVar2 = param_2[5];
    }
    else {
      iVar2 = param_2[4] - iVar4;
    }
    iVar3 = param_2[6] + iVar4;
    if (param_2[7] - iVar3 <= iVar2) {
      iVar2 = param_2[7] - iVar3;
    }
    if (param_2[1] - iVar3 <= iVar2) {
      iVar2 = param_2[1] - iVar3;
    }
    if (iVar2 < 1) break;
    iVar2 = iVar2 * iVar1 * 0x80;
    if (param_3 == 0) {
      (*(code *)param_2[0xc])
                (param_1,param_2 + 0xc,*(undefined4 *)(*param_2 + iVar4 * 4),iVar2,local_10);
    }
    else {
      (*(code *)param_2[0xd])
                (param_1,param_2 + 0xc,*(undefined4 *)(*param_2 + iVar4 * 4),iVar2,local_10);
    }
    local_10 = local_10 + iVar2;
    iVar4 = iVar4 + param_2[5];
  }
  return;
}



int FUN_004610b4(int *param_1,int *param_2,uint param_3,int param_4,uint param_5)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  
  uVar3 = param_3 + param_5;
  if ((((uint)param_2[1] < uVar3) || ((uint)param_2[3] < param_5)) || (*param_2 == 0)) {
    *(undefined4 *)(*param_1 + 0x14) = 0x14;
    (**(code **)*param_1)();
  }
  if ((param_3 < (uint)param_2[6]) || ((uint)(param_2[6] + param_2[4]) < uVar3)) {
    if (param_2[10] == 0) {
      *(undefined4 *)(*param_1 + 0x14) = 0x44;
      (**(code **)*param_1)();
    }
    if (param_2[9] != 0) {
      FUN_00460f58(param_1,param_2,1);
      param_2[9] = 0;
    }
    if ((uint)param_2[6] < param_3) {
      param_2[6] = param_3;
    }
    else {
      iVar1 = uVar3 - param_2[4];
      if (iVar1 < 0) {
        iVar1 = 0;
      }
      param_2[6] = iVar1;
    }
    FUN_00460f58(param_1,param_2,0);
  }
  if ((uint)param_2[7] < uVar3) {
    if ((uint)param_2[7] < param_3) {
      uVar2 = param_3;
      if (param_4 != 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0x14;
        (**(code **)*param_1)();
      }
    }
    else {
      uVar2 = param_2[7];
    }
    if (param_4 != 0) {
      param_2[7] = uVar3;
    }
    if (param_2[8] == 0) {
      if (param_4 == 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0x14;
        (**(code **)*param_1)();
      }
    }
    else {
      iVar1 = param_2[6];
      for (uVar2 = uVar2 - iVar1; uVar2 < uVar3 - iVar1; uVar2 = uVar2 + 1) {
        FUN_0045ef60();
      }
    }
  }
  if (param_4 != 0) {
    param_2[9] = 1;
  }
  return (param_3 - param_2[6]) * 4 + *param_2;
}



int FUN_00461200(int *param_1,int *param_2,uint param_3,int param_4,uint param_5)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  
  uVar3 = param_3 + param_5;
  if ((((uint)param_2[1] < uVar3) || ((uint)param_2[3] < param_5)) || (*param_2 == 0)) {
    *(undefined4 *)(*param_1 + 0x14) = 0x14;
    (**(code **)*param_1)();
  }
  if ((param_3 < (uint)param_2[6]) || ((uint)(param_2[6] + param_2[4]) < uVar3)) {
    if (param_2[10] == 0) {
      *(undefined4 *)(*param_1 + 0x14) = 0x44;
      (**(code **)*param_1)();
    }
    if (param_2[9] != 0) {
      FUN_00461004(param_1,param_2,1);
      param_2[9] = 0;
    }
    if ((uint)param_2[6] < param_3) {
      param_2[6] = param_3;
    }
    else {
      iVar1 = uVar3 - param_2[4];
      if (iVar1 < 0) {
        iVar1 = 0;
      }
      param_2[6] = iVar1;
    }
    FUN_00461004(param_1,param_2,0);
  }
  if ((uint)param_2[7] < uVar3) {
    if ((uint)param_2[7] < param_3) {
      uVar2 = param_3;
      if (param_4 != 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0x14;
        (**(code **)*param_1)();
      }
    }
    else {
      uVar2 = param_2[7];
    }
    if (param_4 != 0) {
      param_2[7] = uVar3;
    }
    if (param_2[8] == 0) {
      if (param_4 == 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0x14;
        (**(code **)*param_1)();
      }
    }
    else {
      iVar1 = param_2[6];
      for (uVar2 = uVar2 - iVar1; uVar2 < uVar3 - iVar1; uVar2 = uVar2 + 1) {
        FUN_0045ef60();
      }
    }
  }
  if (param_4 != 0) {
    param_2[9] = 1;
  }
  return (param_3 - param_2[6]) * 4 + *param_2;
}



void FUN_0046134c(int *param_1,int param_2)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  int iVar5;
  
  iVar1 = param_1[1];
  if ((param_2 < 0) || (1 < param_2)) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0xc;
    *(int *)(iVar2 + 0x18) = param_2;
    (**(code **)*param_1)();
  }
  if (param_2 == 1) {
    for (iVar2 = *(int *)(iVar1 + 0x40); iVar2 != 0; iVar2 = *(int *)(iVar2 + 0x2c)) {
      if (*(int *)(iVar2 + 0x28) != 0) {
        *(undefined4 *)(iVar2 + 0x28) = 0;
        (**(code **)(iVar2 + 0x38))(param_1,iVar2 + 0x30);
      }
    }
    *(undefined4 *)(iVar1 + 0x40) = 0;
    for (iVar2 = *(int *)(iVar1 + 0x44); iVar2 != 0; iVar2 = *(int *)(iVar2 + 0x2c)) {
      if (*(int *)(iVar2 + 0x28) != 0) {
        *(undefined4 *)(iVar2 + 0x28) = 0;
        (**(code **)(iVar2 + 0x38))(param_1,iVar2 + 0x30);
      }
    }
    *(undefined4 *)(iVar1 + 0x44) = 0;
  }
  puVar3 = *(undefined4 **)(iVar1 + 0x38 + param_2 * 4);
  *(undefined4 *)(iVar1 + 0x38 + param_2 * 4) = 0;
  while (puVar3 != (undefined4 *)0x0) {
    puVar4 = (undefined4 *)*puVar3;
    iVar2 = puVar3[1];
    iVar5 = puVar3[2];
    FUN_0046158c();
    *(int *)(iVar1 + 0x48) = *(int *)(iVar1 + 0x48) - (iVar2 + iVar5 + 0xc);
    puVar3 = puVar4;
  }
  puVar3 = *(undefined4 **)(iVar1 + 0x30 + param_2 * 4);
  *(undefined4 *)(iVar1 + 0x30 + param_2 * 4) = 0;
  while (puVar3 != (undefined4 *)0x0) {
    puVar4 = (undefined4 *)*puVar3;
    iVar2 = puVar3[1];
    iVar5 = puVar3[2];
    FUN_0046157c();
    *(int *)(iVar1 + 0x48) = *(int *)(iVar1 + 0x48) - (iVar2 + iVar5 + 0xc);
    puVar3 = puVar4;
  }
  return;
}



void FUN_00461450(int *param_1)

{
  int iVar1;
  
  iVar1 = 1;
  do {
    FUN_0046134c(param_1,iVar1);
    iVar1 = iVar1 + -1;
  } while (-1 < iVar1);
  FUN_0046157c();
  param_1[1] = 0;
  FUN_004615b4();
  return;
}



// WARNING: Removing unreachable block (ram,0x004614af)

void FUN_00461488(int *param_1)

{
  undefined4 uVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  int iVar4;
  
  param_1[1] = 0;
  uVar1 = FUN_004615b0();
  puVar2 = (undefined4 *)FUN_00461574();
  if (puVar2 == (undefined4 *)0x0) {
    FUN_004615b4();
    iVar4 = *param_1;
    *(undefined4 *)(iVar4 + 0x14) = 0x35;
    *(undefined4 *)(iVar4 + 0x18) = 0;
    (**(code **)*param_1)();
  }
  *puVar2 = FUN_0046096c;
  iVar4 = 1;
  puVar2[1] = FUN_00460a9c;
  puVar2[2] = FUN_00460b3c;
  puVar2[3] = FUN_00460c10;
  puVar2[4] = FUN_00460cf4;
  puVar2[5] = FUN_00460d5c;
  puVar2[6] = FUN_00460dc4;
  puVar2[7] = FUN_004610b4;
  puVar2[8] = FUN_00461200;
  puVar2[9] = FUN_0046134c;
  puVar2[10] = FUN_00461450;
  puVar2[0xb] = uVar1;
  puVar3 = puVar2 + 0xd;
  do {
    iVar4 = iVar4 + -1;
    *puVar3 = 0;
    puVar3[2] = 0;
    puVar3 = puVar3 + -1;
  } while (-1 < iVar4);
  puVar2[0x10] = 0;
  puVar2[0x11] = 0;
  puVar2[0x12] = 0x50;
  param_1[1] = (int)puVar2;
  return;
}



void FUN_00461574(void)

{
  FUN_0045ef40();
  return;
}



void FUN_0046157c(void)

{
  FUN_0045ef50();
  return;
}



void FUN_00461584(void)

{
  FUN_0045ef40();
  return;
}



void FUN_0046158c(void)

{
  FUN_0045ef50();
  return;
}



undefined4 FUN_00461594(undefined4 param_1,undefined4 param_2,undefined4 param_3)

{
  return param_3;
}



void FUN_004615a0(int *param_1)

{
  *(undefined4 *)(*param_1 + 0x14) = 0x30;
  (**(code **)*param_1)();
  return;
}



undefined4 FUN_004615b0(void)

{
  return 0;
}



void FUN_004615b4(void)

{
  return;
}



void FUN_004615b8(int *param_1)

{
  undefined4 uVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  
  if ((0xffdc < param_1[7]) || (0xffdc < param_1[6])) {
    iVar3 = *param_1;
    *(undefined4 *)(iVar3 + 0x14) = 0x28;
    *(undefined4 *)(iVar3 + 0x18) = 0xffdc;
    (**(code **)*param_1)();
  }
  if (param_1[0x34] != 8) {
    iVar3 = *param_1;
    *(undefined4 *)(iVar3 + 0x14) = 0xd;
    *(int *)(iVar3 + 0x18) = param_1[0x34];
    (**(code **)*param_1)();
  }
  if (10 < param_1[8]) {
    iVar3 = *param_1;
    *(undefined4 *)(iVar3 + 0x14) = 0x18;
    *(int *)(iVar3 + 0x18) = param_1[8];
    *(undefined4 *)(iVar3 + 0x1c) = 10;
    (**(code **)*param_1)();
  }
  *(undefined4 *)((int)param_1 + 0x126) = 1;
  *(undefined4 *)((int)param_1 + 0x12a) = 1;
  iVar3 = param_1[0x35];
  for (iVar4 = 0; iVar4 < param_1[8]; iVar4 = iVar4 + 1) {
    if ((((*(int *)(iVar3 + 8) < 1) || (4 < *(int *)(iVar3 + 8))) || (*(int *)(iVar3 + 0xc) < 1)) ||
       (4 < *(int *)(iVar3 + 0xc))) {
      *(undefined4 *)(*param_1 + 0x14) = 0x10;
      (**(code **)*param_1)();
    }
    if (*(int *)(iVar3 + 8) < *(int *)((int)param_1 + 0x126)) {
      uVar1 = *(undefined4 *)((int)param_1 + 0x126);
    }
    else {
      uVar1 = *(undefined4 *)(iVar3 + 8);
    }
    *(undefined4 *)((int)param_1 + 0x126) = uVar1;
    if (*(int *)(iVar3 + 0xc) < *(int *)((int)param_1 + 0x12a)) {
      uVar1 = *(undefined4 *)((int)param_1 + 0x12a);
    }
    else {
      uVar1 = *(undefined4 *)(iVar3 + 0xc);
    }
    *(undefined4 *)((int)param_1 + 0x12a) = uVar1;
    iVar3 = iVar3 + 0x54;
  }
  *(undefined4 *)((int)param_1 + 0x12e) = 8;
  iVar3 = param_1[0x35];
  for (iVar4 = 0; iVar4 < param_1[8]; iVar4 = iVar4 + 1) {
    *(undefined4 *)(iVar3 + 0x24) = 8;
    iVar2 = *(int *)((int)param_1 + 0x126) * 8;
    *(int *)(iVar3 + 0x1c) = (param_1[6] * *(int *)(iVar3 + 8) + iVar2 + -1) / iVar2;
    iVar2 = *(int *)((int)param_1 + 0x12a) * 8;
    *(int *)(iVar3 + 0x20) = (param_1[7] * *(int *)(iVar3 + 0xc) + iVar2 + -1) / iVar2;
    *(int *)(iVar3 + 0x28) =
         (param_1[6] * *(int *)(iVar3 + 8) + *(int *)((int)param_1 + 0x126) + -1) /
         *(int *)((int)param_1 + 0x126);
    *(int *)(iVar3 + 0x2c) =
         (param_1[7] * *(int *)(iVar3 + 0xc) + *(int *)((int)param_1 + 0x12a) + -1) /
         *(int *)((int)param_1 + 0x12a);
    *(undefined4 *)(iVar3 + 0x30) = 1;
    *(undefined4 *)(iVar3 + 0x4c) = 0;
    iVar3 = iVar3 + 0x54;
  }
  iVar3 = *(int *)((int)param_1 + 0x12a) * 8;
  *(int *)((int)param_1 + 0x132) = (iVar3 + param_1[7] + -1) / iVar3;
  if ((*(int *)((int)param_1 + 0x13a) < param_1[8]) || (param_1[0x36] != 0)) {
    *(undefined4 *)(*(int *)((int)param_1 + 0x1a6) + 0x10) = 1;
  }
  else {
    *(undefined4 *)(*(int *)((int)param_1 + 0x1a6) + 0x10) = 0;
  }
  return;
}



void FUN_00461784(int *param_1)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  int iVar4;
  int *piStack_10;
  
  if (*(int *)((int)param_1 + 0x13a) == 1) {
    iVar2 = *(int *)((int)param_1 + 0x13e);
    *(undefined4 *)((int)param_1 + 0x14e) = *(undefined4 *)(iVar2 + 0x1c);
    *(undefined4 *)((int)param_1 + 0x152) = *(undefined4 *)(iVar2 + 0x20);
    *(undefined4 *)(iVar2 + 0x34) = 1;
    *(undefined4 *)(iVar2 + 0x38) = 1;
    *(undefined4 *)(iVar2 + 0x3c) = 1;
    *(undefined4 *)(iVar2 + 0x40) = *(undefined4 *)(iVar2 + 0x24);
    *(undefined4 *)(iVar2 + 0x44) = 1;
    uVar3 = *(uint *)(iVar2 + 0x20) % *(uint *)(iVar2 + 0xc);
    if (uVar3 == 0) {
      uVar3 = *(uint *)(iVar2 + 0xc);
    }
    *(uint *)(iVar2 + 0x48) = uVar3;
    *(undefined4 *)((int)param_1 + 0x156) = 1;
    *(undefined4 *)((int)param_1 + 0x15a) = 0;
  }
  else {
    if ((*(int *)((int)param_1 + 0x13a) < 1) || (4 < *(int *)((int)param_1 + 0x13a))) {
      iVar2 = *param_1;
      *(undefined4 *)(iVar2 + 0x14) = 0x18;
      *(undefined4 *)(iVar2 + 0x18) = *(undefined4 *)((int)param_1 + 0x13a);
      *(undefined4 *)(iVar2 + 0x1c) = 4;
      (**(code **)*param_1)();
    }
    iVar2 = *(int *)((int)param_1 + 0x126) * 8;
    *(int *)((int)param_1 + 0x14e) = (iVar2 + param_1[6] + -1) / iVar2;
    iVar2 = *(int *)((int)param_1 + 0x12a) * 8;
    *(int *)((int)param_1 + 0x152) = (iVar2 + param_1[7] + -1) / iVar2;
    *(undefined4 *)((int)param_1 + 0x156) = 0;
    piStack_10 = (int *)((int)param_1 + 0x13e);
    for (iVar2 = 0; iVar2 < *(int *)((int)param_1 + 0x13a); iVar2 = iVar2 + 1) {
      iVar4 = *piStack_10;
      *(undefined4 *)(iVar4 + 0x34) = *(undefined4 *)(iVar4 + 8);
      *(int *)(iVar4 + 0x38) = *(int *)(iVar4 + 0xc);
      *(int *)(iVar4 + 0x3c) = *(int *)(iVar4 + 0x34) * *(int *)(iVar4 + 0xc);
      *(int *)(iVar4 + 0x40) = *(int *)(iVar4 + 0x34) * *(int *)(iVar4 + 0x24);
      uVar3 = *(uint *)(iVar4 + 0x1c) % *(uint *)(iVar4 + 0x34);
      if (uVar3 == 0) {
        uVar3 = *(uint *)(iVar4 + 0x34);
      }
      *(uint *)(iVar4 + 0x44) = uVar3;
      uVar3 = *(uint *)(iVar4 + 0x20) % *(uint *)(iVar4 + 0x38);
      if (uVar3 == 0) {
        uVar3 = *(uint *)(iVar4 + 0x38);
      }
      *(uint *)(iVar4 + 0x48) = uVar3;
      iVar4 = *(int *)(iVar4 + 0x3c);
      if (10 < *(int *)((int)param_1 + 0x156) + iVar4) {
        *(undefined4 *)(*param_1 + 0x14) = 0xb;
        (**(code **)*param_1)();
      }
      while( true ) {
        if (iVar4 < 1) break;
        iVar1 = *(int *)((int)param_1 + 0x156);
        *(int *)((int)param_1 + 0x156) = *(int *)((int)param_1 + 0x156) + 1;
        *(int *)((int)param_1 + iVar1 * 4 + 0x15a) = iVar2;
        iVar4 = iVar4 + -1;
      }
      piStack_10 = piStack_10 + 1;
    }
  }
  return;
}



void FUN_00461910(int *param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  undefined4 uVar4;
  int local_18;
  int *local_14;
  
  local_14 = (int *)((int)param_1 + 0x13e);
  for (local_18 = 0; local_18 < *(int *)((int)param_1 + 0x13a); local_18 = local_18 + 1) {
    iVar1 = *local_14;
    if (*(int *)(iVar1 + 0x4c) == 0) {
      iVar2 = *(int *)(iVar1 + 0x10);
      if (((iVar2 < 0) || (3 < iVar2)) || (param_1[iVar2 + 0x28] == 0)) {
        iVar3 = *param_1;
        *(undefined4 *)(iVar3 + 0x14) = 0x33;
        *(int *)(iVar3 + 0x18) = iVar2;
        (**(code **)*param_1)();
      }
      uVar4 = (**(code **)param_1[1])(param_1,1,0x84);
      FUN_0045ef78();
      *(undefined4 *)(iVar1 + 0x4c) = uVar4;
    }
    local_14 = local_14 + 1;
  }
  return;
}



void FUN_004619a8(int *param_1)

{
  FUN_00461784(param_1);
  FUN_00461910(param_1);
  (*(code *)**(undefined4 **)((int)param_1 + 0x1ae))();
  (*(code *)**(undefined4 **)((int)param_1 + 0x19e))();
  **(undefined4 **)((int)param_1 + 0x1a6) = *(undefined4 *)(*(int *)((int)param_1 + 0x19e) + 4);
  return;
}



int FUN_004619f0(int *param_1)

{
  int iVar1;
  int iVar2;
  
  iVar1 = *(int *)((int)param_1 + 0x1a6);
  if (*(int *)(iVar1 + 0x14) == 0) {
    iVar2 = (**(code **)(*(int *)((int)param_1 + 0x1aa) + 4))();
    if (iVar2 != 0) {
      if (iVar2 == 1) {
        if (*(int *)(iVar1 + 0x18) == 0) {
          if (*(int *)(iVar1 + 0x10) == 0) {
            *(undefined4 *)(*param_1 + 0x14) = 0x22;
            (**(code **)*param_1)();
          }
          FUN_004619a8(param_1);
        }
        else {
          FUN_004615b8(param_1);
          *(undefined4 *)(iVar1 + 0x18) = 0;
        }
      }
      else if (iVar2 == 2) {
        *(undefined4 *)(iVar1 + 0x14) = 1;
        if (*(int *)(iVar1 + 0x18) == 0) {
          if (param_1[0x23] < param_1[0x25]) {
            param_1[0x25] = param_1[0x23];
          }
        }
        else if (*(int *)(*(int *)((int)param_1 + 0x1aa) + 0x54) != 0) {
          *(undefined4 *)(*param_1 + 0x14) = 0x3a;
          (**(code **)*param_1)();
        }
      }
    }
  }
  else {
    iVar2 = 2;
  }
  return iVar2;
}



void FUN_00461a9c(int *param_1)

{
  undefined4 *puVar1;
  
  puVar1 = *(undefined4 **)((int)param_1 + 0x1a6);
  *puVar1 = FUN_004619f0;
  puVar1[4] = 0;
  puVar1[5] = 0;
  puVar1[6] = 1;
  (**(code **)(*param_1 + 0x10))();
  (*(code *)**(undefined4 **)((int)param_1 + 0x1aa))();
  param_1[0x27] = 0;
  return;
}



void FUN_00461ad8(int param_1)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)(*(code *)**(undefined4 **)(param_1 + 4))(param_1,0,0x1c);
  *(undefined4 **)(param_1 + 0x1a6) = puVar1;
  *puVar1 = FUN_004619f0;
  puVar1[1] = FUN_00461a9c;
  puVar1[2] = FUN_004619a8;
  puVar1[3] = &LAB_004619e0;
  puVar1[4] = 0;
  puVar1[5] = 0;
  puVar1[6] = 1;
  return;
}



undefined4 FUN_00461b2c(int *param_1)

{
  undefined4 *puVar1;
  undefined1 *puVar2;
  int iVar3;
  
  puVar1 = (undefined4 *)param_1[5];
  iVar3 = FUN_0045ef8c();
  if (iVar3 == 0) {
    if (puVar1[9] != 0) {
      *(undefined4 *)(*param_1 + 0x14) = 0x29;
      (**(code **)*param_1)();
    }
    *(undefined4 *)(*param_1 + 0x14) = 0x74;
    (**(code **)(*param_1 + 4))(param_1,0xffffffff);
    puVar2 = (undefined1 *)puVar1[8];
    *puVar2 = 0xff;
    puVar2[1] = 0xd9;
    iVar3 = 2;
  }
  *puVar1 = puVar1[8];
  puVar1[1] = iVar3;
  puVar1[9] = 0;
  return 1;
}



void FUN_00461b9c(int *param_1,int param_2)

{
  int *piVar1;
  int iVar2;
  
  piVar1 = (int *)param_1[5];
  if (0 < param_2) {
    for (; iVar2 = piVar1[1], iVar2 < param_2; param_2 = param_2 - iVar2) {
      FUN_00461b2c(param_1);
    }
    *piVar1 = *piVar1 + param_2;
    piVar1[1] = piVar1[1] - param_2;
  }
  return;
}



void FUN_00461bcc(int param_1,undefined4 param_2)

{
  undefined4 *puVar1;
  int iVar2;
  undefined4 uVar3;
  
  if (*(int *)(param_1 + 0x14) == 0) {
    iVar2 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,0,0x28);
    *(int *)(param_1 + 0x14) = iVar2;
    uVar3 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,0,0x1000);
    *(undefined4 *)(iVar2 + 0x20) = uVar3;
  }
  puVar1 = *(undefined4 **)(param_1 + 0x14);
  puVar1[2] = &LAB_00461b20;
  puVar1[3] = FUN_00461b2c;
  puVar1[4] = FUN_00461b9c;
  puVar1[5] = FUN_0046bc28;
  puVar1[6] = &DAT_00461bc8;
  puVar1[7] = param_2;
  puVar1[1] = 0;
  *puVar1 = 0;
  return;
}



undefined4 FUN_00461c38(int *param_1)

{
  int *piVar1;
  int iVar2;
  undefined4 uVar3;
  
  if (param_1[4] == 0xca) {
    FUN_004626dc(param_1);
    if (param_1[0xf] != 0) {
      param_1[4] = 0xcf;
      return 1;
    }
    param_1[4] = 0xcb;
  }
  if (param_1[4] == 0xcb) {
    if (*(int *)(*(int *)((int)param_1 + 0x1a6) + 0x10) != 0) {
      while( true ) {
        if (param_1[2] != 0) {
          (**(code **)param_1[2])();
        }
        iVar2 = (*(code *)**(undefined4 **)((int)param_1 + 0x1a6))();
        if (iVar2 == 0) {
          return 0;
        }
        if (iVar2 == 2) break;
        if ((param_1[2] != 0) && ((iVar2 == 3 || (iVar2 == 1)))) {
          iVar2 = param_1[2];
          piVar1 = (int *)(iVar2 + 4);
          *piVar1 = *piVar1 + 1;
          if (*(int *)(param_1[2] + 8) <= *(int *)(iVar2 + 4)) {
            piVar1 = (int *)(param_1[2] + 8);
            *piVar1 = *piVar1 + *(int *)((int)param_1 + 0x132);
          }
        }
      }
    }
    param_1[0x25] = param_1[0x23];
  }
  else if (param_1[4] != 0xcc) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x12;
    *(int *)(iVar2 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  uVar3 = FUN_00461d00((int)param_1);
  return uVar3;
}



undefined4 FUN_00461d00(int param_1)

{
  int iVar1;
  undefined4 uVar2;
  
  if (*(int *)(param_1 + 0x10) != 0xcc) {
    (*(code *)**(undefined4 **)(param_1 + 0x196))();
    *(undefined4 *)(param_1 + 0x88) = 0;
    *(undefined4 *)(param_1 + 0x10) = 0xcc;
  }
  do {
    if (*(int *)(*(int *)(param_1 + 0x196) + 8) == 0) {
      uVar2 = 0xce;
      if (*(int *)(param_1 + 0x40) == 0) {
        uVar2 = 0xcd;
      }
      *(undefined4 *)(param_1 + 0x10) = uVar2;
      return 1;
    }
    while (*(uint *)(param_1 + 0x88) < *(uint *)(param_1 + 0x70)) {
      iVar1 = *(int *)(param_1 + 8);
      if (iVar1 != 0) {
        *(uint *)(iVar1 + 4) = *(uint *)(param_1 + 0x88);
        *(undefined4 *)(iVar1 + 8) = *(undefined4 *)(param_1 + 0x70);
        (*(code *)**(undefined4 **)(param_1 + 8))();
      }
      iVar1 = *(int *)(param_1 + 0x88);
      (**(code **)(*(int *)(param_1 + 0x19a) + 4))(param_1,0,param_1 + 0x88,0);
      if (iVar1 == *(int *)(param_1 + 0x88)) {
        return 0;
      }
    }
    (**(code **)(*(int *)(param_1 + 0x196) + 4))();
    (*(code *)**(undefined4 **)(param_1 + 0x196))();
    *(undefined4 *)(param_1 + 0x88) = 0;
  } while( true );
}



int FUN_00461dbc(int *param_1,undefined4 param_2,int param_3)

{
  int iVar1;
  int iStack_10;
  
  iStack_10 = param_3;
  if (param_1[4] != 0xcd) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x12;
    *(int *)(iVar1 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  if ((uint)param_1[0x22] < (uint)param_1[0x1c]) {
    iVar1 = param_1[2];
    if (iVar1 != 0) {
      *(int *)(iVar1 + 4) = param_1[0x22];
      *(int *)(iVar1 + 8) = param_1[0x1c];
      (**(code **)param_1[2])();
    }
    iStack_10 = 0;
    (**(code **)(*(int *)((int)param_1 + 0x19a) + 4))(param_1,param_2,&iStack_10);
    param_1[0x22] = param_1[0x22] + param_3;
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 0x77;
    (**(code **)(*param_1 + 4))(param_1,0xffffffff);
    param_3 = 0;
  }
  return param_3;
}



uint FUN_00461e4c(int *param_1,undefined4 param_2,uint param_3)

{
  uint uVar1;
  int iVar2;
  
  if (param_1[4] != 0xce) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x12;
    *(int *)(iVar2 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  if ((uint)param_1[0x22] < (uint)param_1[0x1c]) {
    iVar2 = param_1[2];
    if (iVar2 != 0) {
      *(int *)(iVar2 + 4) = param_1[0x22];
      *(int *)(iVar2 + 8) = param_1[0x1c];
      (**(code **)param_1[2])();
    }
    uVar1 = *(int *)((int)param_1 + 0x12a) * *(int *)((int)param_1 + 0x12e);
    if (param_3 <= uVar1 && uVar1 - param_3 != 0) {
      *(undefined4 *)(*param_1 + 0x14) = 0x15;
      (**(code **)*param_1)();
    }
    iVar2 = (**(code **)(*(int *)((int)param_1 + 0x19e) + 0xc))(param_1,param_2);
    if (iVar2 == 0) {
      uVar1 = 0;
    }
    else {
      param_1[0x22] = param_1[0x22] + uVar1;
    }
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 0x77;
    (**(code **)(*param_1 + 4))(param_1,0xffffffff);
    uVar1 = 0;
  }
  return uVar1;
}



void FUN_00461ef8(int *param_1,int param_2)

{
  int iVar1;
  
  if ((param_1[4] != 0xcf) && (param_1[4] != 0xcc)) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x12;
    *(int *)(iVar1 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  if (param_2 < 1) {
    param_2 = 1;
  }
  if ((*(int *)(*(int *)((int)param_1 + 0x1a6) + 0x14) != 0) && (param_1[0x23] < param_2)) {
    param_2 = param_1[0x23];
  }
  param_1[0x25] = param_2;
  FUN_00461d00((int)param_1);
  return;
}



undefined4 FUN_00461f58(int *param_1)

{
  int iVar1;
  
  if (((param_1[4] == 0xcd) || (param_1[4] == 0xce)) && (param_1[0xf] != 0)) {
    (**(code **)(*(int *)((int)param_1 + 0x196) + 4))();
    param_1[4] = 0xd0;
  }
  else if (param_1[4] != 0xd0) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x12;
    *(int *)(iVar1 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  while ((param_1[0x23] <= param_1[0x25] && (*(int *)(*(int *)((int)param_1 + 0x1a6) + 0x14) == 0)))
  {
    iVar1 = (*(code *)**(undefined4 **)((int)param_1 + 0x1a6))();
    if (iVar1 == 0) {
      return 0;
    }
  }
  param_1[4] = 0xcf;
  return 1;
}



undefined4 FUN_00461fe0(int param_1)

{
  int iVar1;
  int iVar2;
  
  if ((*(int *)(param_1 + 0x48) != 0) || (*(int *)(param_1 + 0x122) != 0)) {
    return 0;
  }
  if ((*(int *)(param_1 + 0x24) == 3) &&
     (((*(int *)(param_1 + 0x20) == 3 && (*(int *)(param_1 + 0x28) == 2)) &&
      (*(int *)(param_1 + 0x74) == 3)))) {
    iVar1 = *(int *)(param_1 + 0xd4);
    if (((((*(int *)(iVar1 + 8) == 2) && (*(int *)(iVar1 + 0x5c) == 1)) &&
         (*(int *)(iVar1 + 0xb0) == 1)) &&
        ((*(int *)(iVar1 + 0xc) < 3 && (*(int *)(iVar1 + 0x60) == 1)))) &&
       (*(int *)(iVar1 + 0xb4) == 1)) {
      iVar1 = *(int *)(param_1 + 0xd4);
      iVar2 = *(int *)(param_1 + 0x12e);
      if (((*(int *)(iVar1 + 0x24) == iVar2) && (iVar2 == *(int *)(iVar1 + 0x78))) &&
         (iVar2 == *(int *)(iVar1 + 0xcc))) {
        return 1;
      }
      return 0;
    }
    return 0;
  }
  return 0;
}



void FUN_00462070(int *param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  if (param_1[4] != 0xca) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x12;
    *(int *)(iVar1 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  if ((uint)param_1[0xc] < (uint)(param_1[0xb] << 3)) {
    if ((uint)param_1[0xc] < (uint)(param_1[0xb] << 2)) {
      if ((uint)param_1[0xc] < (uint)(param_1[0xb] * 2)) {
        param_1[0x1b] = param_1[6];
        param_1[0x1c] = param_1[7];
        *(undefined4 *)((int)param_1 + 0x12e) = 8;
      }
      else {
        iVar1 = (int)(param_1[6] + 1U) >> 1;
        if (iVar1 < 0) {
          iVar1 = iVar1 + (uint)((param_1[6] + 1U & 1) != 0);
        }
        param_1[0x1b] = iVar1;
        iVar1 = (int)(param_1[7] + 1U) >> 1;
        if (iVar1 < 0) {
          iVar1 = iVar1 + (uint)((param_1[7] + 1U & 1) != 0);
        }
        param_1[0x1c] = iVar1;
        *(undefined4 *)((int)param_1 + 0x12e) = 4;
      }
    }
    else {
      iVar1 = param_1[6] + 3;
      if (iVar1 < 0) {
        iVar1 = param_1[6] + 6;
      }
      param_1[0x1b] = iVar1 >> 2;
      iVar1 = param_1[7] + 3;
      if (iVar1 < 0) {
        iVar1 = param_1[7] + 6;
      }
      param_1[0x1c] = iVar1 >> 2;
      *(undefined4 *)((int)param_1 + 0x12e) = 2;
    }
  }
  else {
    iVar1 = param_1[6] + 7;
    if (iVar1 < 0) {
      iVar1 = param_1[6] + 0xe;
    }
    param_1[0x1b] = iVar1 >> 3;
    iVar1 = param_1[7] + 7;
    if (iVar1 < 0) {
      iVar1 = param_1[7] + 0xe;
    }
    param_1[0x1c] = iVar1 >> 3;
    *(undefined4 *)((int)param_1 + 0x12e) = 1;
  }
  iVar1 = param_1[0x35];
  for (iVar2 = 0; iVar2 < param_1[8]; iVar2 = iVar2 + 1) {
    for (iVar3 = *(int *)((int)param_1 + 0x12e);
        ((iVar3 < 8 &&
         (*(int *)(iVar1 + 8) * iVar3 * 2 <=
          *(int *)((int)param_1 + 0x126) * *(int *)((int)param_1 + 0x12e))) &&
        (*(int *)(iVar1 + 0xc) * iVar3 * 2 <=
         *(int *)((int)param_1 + 0x12a) * *(int *)((int)param_1 + 0x12e))); iVar3 = iVar3 * 2) {
    }
    *(int *)(iVar1 + 0x24) = iVar3;
    iVar1 = iVar1 + 0x54;
  }
  iVar1 = param_1[0x35];
  for (iVar2 = 0; iVar2 < param_1[8]; iVar2 = iVar2 + 1) {
    iVar3 = *(int *)((int)param_1 + 0x126) * 8;
    *(int *)(iVar1 + 0x28) =
         (*(int *)(iVar1 + 8) * *(int *)(iVar1 + 0x24) * param_1[6] + iVar3 + -1) / iVar3;
    iVar3 = *(int *)((int)param_1 + 0x12a) * 8;
    *(int *)(iVar1 + 0x2c) =
         (*(int *)(iVar1 + 0xc) * *(int *)(iVar1 + 0x24) * param_1[7] + iVar3 + -1) / iVar3;
    iVar1 = iVar1 + 0x54;
  }
  iVar1 = param_1[10];
  if (iVar1 == 1) {
    param_1[0x1d] = 1;
  }
  else if (iVar1 - 2U < 2) {
    param_1[0x1d] = 3;
  }
  else if (iVar1 - 4U < 2) {
    param_1[0x1d] = 4;
  }
  else {
    param_1[0x1d] = param_1[8];
  }
  if (param_1[0x14] == 0) {
    iVar1 = param_1[0x1d];
  }
  else {
    iVar1 = 1;
  }
  param_1[0x1e] = iVar1;
  iVar1 = FUN_00461fe0((int)param_1);
  if (iVar1 == 0) {
    param_1[0x1f] = 1;
  }
  else {
    param_1[0x1f] = *(int *)((int)param_1 + 0x12a);
  }
  return;
}



void FUN_00462260(int param_1)

{
  int iVar1;
  int iVar2;
  undefined1 *puVar3;
  
  iVar1 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x580);
  puVar3 = (undefined1 *)(iVar1 + 0x100);
  *(undefined1 **)(param_1 + 0x136) = puVar3;
  FUN_0045ef60();
  iVar2 = 0;
  do {
    *puVar3 = (char)iVar2;
    iVar2 = iVar2 + 1;
    puVar3 = puVar3 + 1;
  } while (iVar2 < 0x100);
  iVar2 = 0x80;
  puVar3 = (undefined1 *)(iVar1 + 0x200);
  do {
    *puVar3 = 0xff;
    iVar2 = iVar2 + 1;
    puVar3 = puVar3 + 1;
  } while (iVar2 < 0x200);
  FUN_0045ef60();
  FUN_0045ef78();
  return;
}



// WARNING: Removing unreachable block (ram,0x00462320)

void FUN_004622fc(int *param_1)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  int iVar4;
  undefined4 extraout_ECX;
  undefined4 uVar5;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  
  iVar1 = *(int *)((int)param_1 + 0x196);
  FUN_00462070(param_1);
  FUN_00462260((int)param_1);
  *(undefined4 *)(iVar1 + 0xc) = 0;
  uVar3 = FUN_00461fe0((int)param_1);
  *(undefined4 *)(iVar1 + 0x10) = uVar3;
  *(undefined4 *)(iVar1 + 0x14) = 0;
  *(undefined4 *)(iVar1 + 0x18) = 0;
  if ((param_1[0x14] == 0) || (param_1[0xf] == 0)) {
    param_1[0x18] = 0;
    param_1[0x19] = 0;
    param_1[0x1a] = 0;
  }
  uVar3 = 0;
  uVar5 = 0;
  if (param_1[0x14] != 0) {
    if (param_1[0x10] != 0) {
      *(undefined4 *)(*param_1 + 0x14) = 0x2e;
      (**(code **)*param_1)();
      uVar5 = extraout_ECX;
      uVar3 = extraout_EDX;
    }
    if (param_1[0x1d] == 3) {
      if (param_1[0x21] == 0) {
        if (param_1[0x16] == 0) {
          param_1[0x18] = 1;
        }
        else {
          param_1[0x1a] = 1;
        }
      }
      else {
        param_1[0x19] = 1;
      }
    }
    else {
      param_1[0x18] = 1;
      uVar5 = 0;
      param_1[0x19] = 0;
      param_1[0x1a] = 0;
      uVar3 = 0;
      param_1[0x21] = 0;
    }
    if (param_1[0x18] != 0) {
      FUN_004656cc(param_1);
      uVar3 = *(undefined4 *)((int)param_1 + 0x1be);
      *(undefined4 *)(iVar1 + 0x14) = uVar3;
      uVar5 = extraout_ECX_00;
    }
    if ((param_1[0x1a] != 0) || (param_1[0x19] != 0)) {
      FUN_00466948(param_1);
      uVar3 = *(undefined4 *)((int)param_1 + 0x1be);
      *(undefined4 *)(iVar1 + 0x18) = uVar3;
      uVar5 = extraout_ECX_01;
    }
  }
  if (param_1[0x10] == 0) {
    if (*(int *)(iVar1 + 0x10) == 0) {
      FUN_0046493c(param_1);
      FUN_00468ca0(param_1);
    }
    else {
      FUN_004644dc((int)param_1);
    }
    FUN_0046843c((int)param_1,param_1[0x1a]);
    uVar5 = extraout_ECX_02;
    uVar3 = extraout_EDX_00;
  }
  FUN_00468740((int)param_1,uVar3,uVar5);
  if (param_1[0x37] == 0) {
    if (param_1[0x36] == 0) {
      FUN_00463f30((int)param_1);
    }
    else {
      FUN_0046346c((int)param_1);
    }
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 1;
    (**(code **)*param_1)();
  }
  if ((*(int *)(*(int *)((int)param_1 + 0x1a6) + 0x10) == 0) && (param_1[0xf] == 0)) {
    iVar4 = 0;
  }
  else {
    iVar4 = 1;
  }
  FUN_004680c8((int)param_1,iVar4);
  if (param_1[0x10] == 0) {
    FUN_00467060(param_1,0);
  }
  (**(code **)(param_1[1] + 0x18))();
  (**(code **)(*(int *)((int)param_1 + 0x1a6) + 8))();
  if (((param_1[2] != 0) && (param_1[0xf] == 0)) &&
     (*(int *)(*(int *)((int)param_1 + 0x1a6) + 0x10) != 0)) {
    if (param_1[0x36] == 0) {
      iVar4 = param_1[8];
    }
    else {
      iVar4 = param_1[8] * 3 + 2;
    }
    iVar2 = param_1[2];
    *(undefined4 *)(iVar2 + 4) = 0;
    *(int *)(iVar2 + 8) = *(int *)((int)param_1 + 0x132) * iVar4;
    *(undefined4 *)(iVar2 + 0xc) = 0;
    uVar3 = 3;
    if (param_1[0x1a] == 0) {
      uVar3 = 2;
    }
    *(undefined4 *)(param_1[2] + 0x10) = uVar3;
    *(int *)(iVar1 + 0xc) = *(int *)(iVar1 + 0xc) + 1;
  }
  return;
}



void FUN_0046250c(int *param_1)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  
  iVar2 = *(int *)((int)param_1 + 0x196);
  if (*(int *)(iVar2 + 8) == 0) {
    if ((param_1[0x14] != 0) && (param_1[0x21] == 0)) {
      if ((param_1[0x16] == 0) || (param_1[0x1a] == 0)) {
        if (param_1[0x18] == 0) {
          *(undefined4 *)(*param_1 + 0x14) = 0x2d;
          (**(code **)*param_1)();
        }
        else {
          *(undefined4 *)((int)param_1 + 0x1be) = *(undefined4 *)(iVar2 + 0x14);
        }
      }
      else {
        *(undefined4 *)((int)param_1 + 0x1be) = *(undefined4 *)(iVar2 + 0x18);
        *(undefined4 *)(iVar2 + 8) = 1;
      }
    }
    (*(code *)**(undefined4 **)((int)param_1 + 0x1b2))();
    (**(code **)(*(int *)((int)param_1 + 0x19e) + 8))();
    if (param_1[0x10] == 0) {
      if (*(int *)(iVar2 + 0x10) == 0) {
        (*(code *)**(undefined4 **)((int)param_1 + 0x1ba))();
      }
      (*(code *)**(undefined4 **)((int)param_1 + 0x1b6))();
      if (param_1[0x14] != 0) {
        (*(code *)**(undefined4 **)((int)param_1 + 0x1be))(param_1,*(undefined4 *)(iVar2 + 8));
      }
      uVar3 = 3;
      if (*(int *)(iVar2 + 8) == 0) {
        uVar3 = 0;
      }
      (*(code *)**(undefined4 **)((int)param_1 + 0x1a2))(param_1,uVar3);
      (*(code *)**(undefined4 **)((int)param_1 + 0x19a))(param_1,0);
    }
  }
  else {
    *(undefined4 *)(iVar2 + 8) = 0;
    (*(code *)**(undefined4 **)((int)param_1 + 0x1be))(param_1,0);
    (*(code *)**(undefined4 **)((int)param_1 + 0x1a2))(param_1,2);
    (*(code *)**(undefined4 **)((int)param_1 + 0x19a))(param_1,2);
  }
  if (param_1[2] != 0) {
    *(undefined4 *)(param_1[2] + 0xc) = *(undefined4 *)(iVar2 + 0xc);
    iVar1 = 2;
    if (*(int *)(iVar2 + 8) == 0) {
      iVar1 = 1;
    }
    *(int *)(param_1[2] + 0x10) = iVar1 + *(int *)(iVar2 + 0xc);
    if ((param_1[0xf] != 0) && (*(int *)(*(int *)((int)param_1 + 0x1a6) + 0x14) == 0)) {
      iVar2 = 2;
      if (param_1[0x1a] == 0) {
        iVar2 = 1;
      }
      *(int *)(param_1[2] + 0x10) = *(int *)(param_1[2] + 0x10) + iVar2;
    }
  }
  return;
}



void FUN_00462670(int *param_1)

{
  int iVar1;
  int iVar2;
  
  iVar1 = *(int *)((int)param_1 + 0x196);
  if (param_1[4] != 0xcf) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x12;
    *(int *)(iVar2 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  if (((param_1[0x14] != 0) && (param_1[0x19] != 0)) && (param_1[0x21] != 0)) {
    *(undefined4 *)((int)param_1 + 0x1be) = *(undefined4 *)(iVar1 + 0x18);
    (**(code **)(*(int *)((int)param_1 + 0x1be) + 0xc))();
    *(undefined4 *)(iVar1 + 8) = 0;
    return;
  }
  *(undefined4 *)(*param_1 + 0x14) = 0x2d;
  (**(code **)*param_1)();
  return;
}



void FUN_004626dc(int *param_1)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0x1c);
  *(undefined4 **)((int)param_1 + 0x196) = puVar1;
  *puVar1 = FUN_0046250c;
  puVar1[1] = &LAB_00462654;
  puVar1[2] = 0;
  FUN_004622fc(param_1);
  return;
}



void FUN_00462714(int *param_1)

{
  int iVar1;
  int iVar2;
  bool bVar3;
  int iVar4;
  int *piVar5;
  int iVar6;
  bool bVar7;
  int local_20;
  int *local_18;
  undefined4 *puStack_14;
  
  bVar7 = *(int *)((int)param_1 + 0x182) != 0;
  iVar1 = *(int *)((int)param_1 + 0x1ae);
  bVar3 = false;
  if (bVar7) {
    if ((*(int *)((int)param_1 + 0x186) < *(int *)((int)param_1 + 0x182)) ||
       (0x3f < *(int *)((int)param_1 + 0x186))) {
      bVar3 = true;
    }
    if (*(int *)((int)param_1 + 0x13a) != 1) {
      bVar3 = true;
    }
  }
  else if (*(int *)((int)param_1 + 0x186) != 0) {
    bVar3 = true;
  }
  if ((*(int *)((int)param_1 + 0x18a) != 0) &&
     (*(int *)((int)param_1 + 0x18a) + -1 != *(int *)((int)param_1 + 0x18e))) {
    bVar3 = true;
  }
  if (0xd < *(int *)((int)param_1 + 0x18e)) {
    bVar3 = true;
  }
  if (bVar3) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0xe;
    *(undefined4 *)(iVar2 + 0x18) = *(undefined4 *)((int)param_1 + 0x182);
    *(undefined4 *)(iVar2 + 0x1c) = *(undefined4 *)((int)param_1 + 0x186);
    *(undefined4 *)(iVar2 + 0x20) = *(undefined4 *)((int)param_1 + 0x18a);
    *(undefined4 *)(iVar2 + 0x24) = *(undefined4 *)((int)param_1 + 0x18e);
    (**(code **)*param_1)();
  }
  local_18 = (int *)((int)param_1 + 0x13e);
  for (local_20 = 0; local_20 < *(int *)((int)param_1 + 0x13a); local_20 = local_20 + 1) {
    iVar2 = *(int *)(*local_18 + 4);
    piVar5 = (int *)(iVar2 * 0x100 + param_1[0x27]);
    if ((bVar7) && (*piVar5 < 0)) {
      iVar6 = *param_1;
      *(undefined4 *)(iVar6 + 0x14) = 0x6f;
      *(int *)(iVar6 + 0x18) = iVar2;
      *(undefined4 *)(iVar6 + 0x1c) = 0;
      (**(code **)(*param_1 + 4))(param_1,0xffffffff);
    }
    iVar6 = *(int *)((int)param_1 + 0x182);
    piVar5 = piVar5 + iVar6;
    for (; iVar6 <= *(int *)((int)param_1 + 0x186); iVar6 = iVar6 + 1) {
      if (*piVar5 < 0) {
        iVar4 = 0;
      }
      else {
        iVar4 = *piVar5;
      }
      if (iVar4 != *(int *)((int)param_1 + 0x18a)) {
        iVar4 = *param_1;
        *(undefined4 *)(iVar4 + 0x14) = 0x6f;
        *(int *)(iVar4 + 0x18) = iVar2;
        *(int *)(iVar4 + 0x1c) = iVar6;
        (**(code **)(*param_1 + 4))(param_1,0xffffffff);
      }
      *piVar5 = *(int *)((int)param_1 + 0x18e);
      piVar5 = piVar5 + 1;
    }
    local_18 = local_18 + 1;
  }
  if (*(int *)((int)param_1 + 0x18a) == 0) {
    if (bVar7) {
      *(code **)(iVar1 + 4) = FUN_00462c70;
    }
    else {
      *(code **)(iVar1 + 4) = FUN_00462a24;
    }
  }
  else if (bVar7) {
    *(code **)(iVar1 + 4) = FUN_00463028;
  }
  else {
    *(code **)(iVar1 + 4) = FUN_00462f10;
  }
  puStack_14 = (undefined4 *)(iVar1 + 0x18);
  local_20 = 0;
  piVar5 = (int *)((int)param_1 + 0x13e);
  while( true ) {
    if (*(int *)((int)param_1 + 0x13a) <= local_20) break;
    if (bVar7) {
      iVar2 = *(int *)(*piVar5 + 0x18);
      if (((iVar2 < 0) || (3 < iVar2)) || (param_1[iVar2 + 0x30] == 0)) {
        iVar6 = *param_1;
        *(undefined4 *)(iVar6 + 0x14) = 0x31;
        *(int *)(iVar6 + 0x18) = iVar2;
        (**(code **)*param_1)();
      }
      FUN_00463600((int)param_1,(byte *)param_1[iVar2 + 0x30],(int *)(iVar1 + 0x2c + iVar2 * 4));
      *(undefined4 *)(iVar1 + 0x3c) = *(undefined4 *)(iVar1 + 0x2c + iVar2 * 4);
    }
    else if (*(int *)((int)param_1 + 0x18a) == 0) {
      iVar2 = *(int *)(*piVar5 + 0x14);
      if (((iVar2 < 0) || (3 < iVar2)) || (param_1[iVar2 + 0x2c] == 0)) {
        iVar6 = *param_1;
        *(undefined4 *)(iVar6 + 0x14) = 0x31;
        *(int *)(iVar6 + 0x18) = iVar2;
        (**(code **)*param_1)();
      }
      FUN_00463600((int)param_1,(byte *)param_1[iVar2 + 0x2c],(int *)(iVar1 + 0x2c + iVar2 * 4));
    }
    *puStack_14 = 0;
    local_20 = local_20 + 1;
    puStack_14 = puStack_14 + 1;
    piVar5 = piVar5 + 1;
  }
  *(undefined4 *)(iVar1 + 0xc) = 0;
  *(undefined4 *)(iVar1 + 8) = 0;
  *(undefined4 *)(iVar1 + 0x10) = 0;
  *(undefined4 *)(iVar1 + 0x14) = 0;
  *(int *)(iVar1 + 0x28) = param_1[0x44];
  return;
}



undefined4 FUN_004629b8(int param_1)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  undefined4 *puVar4;
  
  iVar2 = *(int *)(param_1 + 0x1ae);
  iVar3 = *(int *)(iVar2 + 0xc);
  if (iVar3 < 0) {
    iVar3 = iVar3 + 7;
  }
  piVar1 = (int *)(*(int *)(param_1 + 0x1aa) + 0x5c);
  *piVar1 = *piVar1 + (iVar3 >> 3);
  *(undefined4 *)(iVar2 + 0xc) = 0;
  iVar3 = (**(code **)(*(int *)(param_1 + 0x1aa) + 8))();
  if (iVar3 == 0) {
    return 0;
  }
  puVar4 = (undefined4 *)(iVar2 + 0x18);
  for (iVar3 = 0; iVar3 < *(int *)(param_1 + 0x13a); iVar3 = iVar3 + 1) {
    *puVar4 = 0;
    puVar4 = puVar4 + 1;
  }
  *(undefined4 *)(iVar2 + 0x14) = 0;
  *(undefined4 *)(iVar2 + 0x28) = *(undefined4 *)(param_1 + 0x110);
  *(undefined4 *)(iVar2 + 0x10) = 0;
  return 1;
}



undefined4 FUN_00462a24(int param_1,undefined4 *param_2)

{
  int iVar1;
  short *psVar2;
  int iVar3;
  int iVar4;
  undefined4 uVar5;
  uint uVar6;
  int iVar7;
  uint uVar8;
  int iVar9;
  undefined4 *puVar10;
  uint uVar11;
  undefined4 *puVar12;
  byte bVar13;
  int local_5c;
  int local_4c;
  undefined4 *local_48;
  int *local_44;
  undefined4 local_40;
  undefined4 local_3c;
  undefined4 local_38;
  uint local_34;
  int local_30;
  int local_2c;
  int local_28;
  undefined4 local_24;
  int aiStack_20 [4];
  
  bVar13 = 0;
  iVar1 = *(int *)(param_1 + 0x1ae);
  uVar5 = *(undefined4 *)(param_1 + 0x18e);
  if (((*(int *)(param_1 + 0x110) == 0) || (*(int *)(iVar1 + 0x28) != 0)) ||
     (iVar4 = FUN_004629b8(param_1), iVar4 != 0)) {
    local_40 = **(undefined4 **)(param_1 + 0x14);
    local_3c = (*(undefined4 **)(param_1 + 0x14))[1];
    local_38 = *(undefined4 *)(param_1 + 0x192);
    iVar4 = *(int *)(iVar1 + 0xc);
    uVar11 = *(uint *)(iVar1 + 8);
    local_28 = iVar1 + 0x10;
    local_44 = (int *)(param_1 + 0x15a);
    puVar10 = (undefined4 *)(iVar1 + 0x14);
    puVar12 = &local_24;
    for (iVar9 = 5; iVar9 != 0; iVar9 = iVar9 + -1) {
      *puVar12 = *puVar10;
      puVar10 = puVar10 + (uint)bVar13 * -2 + 1;
      puVar12 = puVar12 + (uint)bVar13 * -2 + 1;
    }
    local_48 = param_2;
    local_2c = param_1;
    for (local_5c = 0; local_5c < *(int *)(param_1 + 0x156); local_5c = local_5c + 1) {
      psVar2 = (short *)*local_48;
      iVar9 = *local_44;
      iVar7 = *(int *)(iVar1 + 0x2c + *(int *)(*(int *)(param_1 + 0x13e + iVar9 * 4) + 0x14) * 4);
      if (iVar4 < 8) {
        iVar4 = FUN_00463818(&local_40,uVar11,iVar4,0);
        if (iVar4 == 0) {
          return 0;
        }
        iVar4 = local_30;
        uVar11 = local_34;
        if (7 < local_30) goto LAB_00462b2d;
        local_4c = 1;
LAB_00462b67:
        uVar6 = FUN_00463928(&local_40,uVar11,iVar4,local_4c,iVar7);
        iVar4 = local_30;
        uVar11 = local_34;
        if ((int)uVar6 < 0) {
          return 0;
        }
      }
      else {
LAB_00462b2d:
        uVar6 = (int)uVar11 >> ((char)iVar4 - 8U & 0x1f) & 0xff;
        iVar3 = *(int *)(iVar7 + 0xd4 + uVar6 * 4);
        if (iVar3 == 0) {
          local_4c = 9;
          goto LAB_00462b67;
        }
        uVar6 = (uint)*(byte *)(iVar7 + 0x4d4 + uVar6);
        iVar4 = iVar4 - iVar3;
      }
      uVar8 = uVar6;
      if (uVar6 != 0) {
        if ((iVar4 < (int)uVar6) &&
           (iVar7 = FUN_00463818(&local_40,uVar11,iVar4,uVar6), iVar4 = local_30, uVar11 = local_34,
           iVar7 == 0)) {
          return 0;
        }
        iVar4 = iVar4 - uVar6;
        uVar8 = (int)uVar11 >> ((byte)iVar4 & 0x1f) & (1 << ((byte)uVar6 & 0x1f)) - 1U;
        if ((int)uVar8 < *(int *)(&DAT_00474ccc + uVar6 * 4)) {
          uVar8 = *(int *)(&DAT_00474d0c + uVar6 * 4) + uVar8;
        }
      }
      iVar7 = aiStack_20[iVar9];
      aiStack_20[iVar9] = uVar8 + iVar7;
      *psVar2 = (short)(uVar8 + iVar7) << ((byte)uVar5 & 0x1f);
      local_44 = local_44 + 1;
      local_48 = local_48 + 1;
    }
    puVar10 = *(undefined4 **)(param_1 + 0x14);
    *puVar10 = local_40;
    puVar10[1] = local_3c;
    *(undefined4 *)(param_1 + 0x192) = local_38;
    *(uint *)(iVar1 + 8) = uVar11;
    *(int *)(iVar1 + 0xc) = iVar4;
    puVar10 = &local_24;
    puVar12 = (undefined4 *)(iVar1 + 0x14);
    for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {
      *puVar12 = *puVar10;
      puVar10 = puVar10 + (uint)bVar13 * -2 + 1;
      puVar12 = puVar12 + (uint)bVar13 * -2 + 1;
    }
    *(int *)(iVar1 + 0x28) = *(int *)(iVar1 + 0x28) + -1;
    uVar5 = 1;
  }
  else {
    uVar5 = 0;
  }
  return uVar5;
}



undefined4 FUN_00462c70(int param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  undefined4 *puVar4;
  int iVar5;
  undefined4 uVar6;
  uint uVar7;
  int iVar8;
  uint uVar9;
  int iVar10;
  uint uVar11;
  int local_3c;
  int local_38;
  undefined4 local_2c;
  undefined4 local_28;
  undefined4 local_24;
  uint local_20;
  int local_1c;
  int local_18;
  int local_14;
  
  iVar1 = *(int *)(param_1 + 0x1ae);
  iVar8 = *(int *)(param_1 + 0x186);
  uVar6 = *(undefined4 *)(param_1 + 0x18e);
  if (((*(int *)(param_1 + 0x110) == 0) || (*(int *)(iVar1 + 0x28) != 0)) ||
     (iVar5 = FUN_004629b8(param_1), iVar5 != 0)) {
    if (*(int *)(iVar1 + 0x14) == 0) {
      local_2c = **(undefined4 **)(param_1 + 0x14);
      local_28 = (*(undefined4 **)(param_1 + 0x14))[1];
      local_24 = *(undefined4 *)(param_1 + 0x192);
      iVar5 = *(int *)(iVar1 + 0xc);
      uVar9 = *(uint *)(iVar1 + 8);
      local_14 = iVar1 + 0x10;
      iVar2 = *param_2;
      iVar3 = *(int *)(iVar1 + 0x3c);
      local_18 = param_1;
      for (local_3c = *(int *)(param_1 + 0x182); local_38 = 0, local_3c <= iVar8;
          local_3c = local_3c + 1) {
        if (iVar5 < 8) {
          iVar5 = FUN_00463818(&local_2c,uVar9,iVar5,0);
          if (iVar5 == 0) {
            return 0;
          }
          iVar5 = local_1c;
          uVar9 = local_20;
          if (7 < local_1c) goto LAB_00462d86;
          iVar10 = 1;
LAB_00462db6:
          uVar7 = FUN_00463928(&local_2c,uVar9,iVar5,iVar10,iVar3);
          iVar5 = local_1c;
          uVar9 = local_20;
          if ((int)uVar7 < 0) {
            return 0;
          }
        }
        else {
LAB_00462d86:
          uVar7 = (int)uVar9 >> ((char)iVar5 - 8U & 0x1f) & 0xff;
          iVar10 = *(int *)(iVar3 + 0xd4 + uVar7 * 4);
          if (iVar10 == 0) {
            iVar10 = 9;
            goto LAB_00462db6;
          }
          uVar7 = (uint)*(byte *)(iVar3 + 0x4d4 + uVar7);
          iVar5 = iVar5 - iVar10;
        }
        iVar10 = (int)uVar7 >> 4;
        uVar7 = uVar7 & 0xf;
        if (uVar7 == 0) {
          if (iVar10 != 0xf) {
            local_38 = 1 << ((byte)iVar10 & 0x1f);
            if (iVar10 != 0) {
              if ((iVar5 < iVar10) &&
                 (iVar8 = FUN_00463818(&local_2c,uVar9,iVar5,iVar10), iVar5 = local_1c,
                 uVar9 = local_20, iVar8 == 0)) {
                return 0;
              }
              iVar5 = iVar5 - iVar10;
              local_38 = local_38 + ((int)uVar9 >> ((byte)iVar5 & 0x1f) & local_38 - 1U);
            }
            local_38 = local_38 + -1;
            break;
          }
          local_3c = local_3c + 0xf;
        }
        else {
          local_3c = local_3c + iVar10;
          if ((iVar5 < (int)uVar7) &&
             (iVar10 = FUN_00463818(&local_2c,uVar9,iVar5,uVar7), iVar5 = local_1c, uVar9 = local_20
             , iVar10 == 0)) {
            return 0;
          }
          iVar5 = iVar5 - uVar7;
          uVar11 = (int)uVar9 >> ((byte)iVar5 & 0x1f) & (1 << (sbyte)uVar7) - 1U;
          if ((int)uVar11 < *(int *)(&DAT_00474ccc + uVar7 * 4)) {
            uVar11 = *(int *)(&DAT_00474d0c + uVar7 * 4) + uVar11;
          }
          *(short *)(iVar2 + (&DAT_00474f98)[local_3c] * 2) = (short)uVar11 << ((byte)uVar6 & 0x1f);
        }
      }
      puVar4 = *(undefined4 **)(param_1 + 0x14);
      *puVar4 = local_2c;
      puVar4[1] = local_28;
      *(undefined4 *)(param_1 + 0x192) = local_24;
      *(uint *)(iVar1 + 8) = uVar9;
      *(int *)(iVar1 + 0xc) = iVar5;
    }
    else {
      local_38 = *(int *)(iVar1 + 0x14) + -1;
    }
    *(int *)(iVar1 + 0x14) = local_38;
    *(int *)(iVar1 + 0x28) = *(int *)(iVar1 + 0x28) + -1;
    uVar6 = 1;
  }
  else {
    uVar6 = 0;
  }
  return uVar6;
}



undefined4 FUN_00462f10(int param_1,undefined4 *param_2)

{
  int iVar1;
  ushort *puVar2;
  undefined4 *puVar3;
  int iVar4;
  undefined4 uVar5;
  int iVar6;
  uint uVar7;
  ushort local_34;
  int local_30;
  undefined4 local_28;
  undefined4 local_24;
  undefined4 local_20;
  uint local_1c;
  int local_18;
  int local_14;
  int local_10;
  
  iVar1 = *(int *)(param_1 + 0x1ae);
  uVar5 = *(undefined4 *)(param_1 + 0x18e);
  if (((*(int *)(param_1 + 0x110) == 0) || (*(int *)(iVar1 + 0x28) != 0)) ||
     (iVar4 = FUN_004629b8(param_1), iVar4 != 0)) {
    local_28 = **(undefined4 **)(param_1 + 0x14);
    local_24 = (*(undefined4 **)(param_1 + 0x14))[1];
    local_20 = *(undefined4 *)(param_1 + 0x192);
    local_10 = iVar1 + 0x10;
    uVar7 = *(uint *)(iVar1 + 8);
    iVar4 = *(int *)(iVar1 + 0xc);
    local_14 = param_1;
    for (local_30 = 0; local_30 < *(int *)(param_1 + 0x156); local_30 = local_30 + 1) {
      puVar2 = (ushort *)*param_2;
      if ((iVar4 < 1) &&
         (iVar6 = FUN_00463818(&local_28,uVar7,iVar4,1), iVar4 = local_18, uVar7 = local_1c,
         iVar6 == 0)) {
        return 0;
      }
      iVar4 = iVar4 + -1;
      if (((int)uVar7 >> ((byte)iVar4 & 0x1f) & 1U) != 0) {
        local_34 = (ushort)(1 << ((byte)uVar5 & 0x1f));
        *puVar2 = *puVar2 | local_34;
      }
      param_2 = param_2 + 1;
    }
    puVar3 = *(undefined4 **)(param_1 + 0x14);
    *puVar3 = local_28;
    puVar3[1] = local_24;
    *(undefined4 *)(param_1 + 0x192) = local_20;
    *(uint *)(iVar1 + 8) = uVar7;
    *(int *)(iVar1 + 0xc) = iVar4;
    *(int *)(iVar1 + 0x28) = *(int *)(iVar1 + 0x28) + -1;
    uVar5 = 1;
  }
  else {
    uVar5 = 0;
  }
  return uVar5;
}



undefined4 FUN_00463028(int *param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  undefined4 *puVar4;
  uint uVar5;
  int iVar6;
  undefined4 uVar7;
  uint uVar8;
  int iVar9;
  short *psVar10;
  int iVar11;
  int *piVar12;
  byte bVar13;
  uint uVar14;
  int iVar15;
  uint uVar16;
  short local_154;
  short local_150;
  int local_14c;
  int local_148;
  int local_138;
  int *local_134;
  int *local_130;
  undefined4 local_12c;
  undefined4 local_128;
  undefined4 local_124;
  uint local_120;
  int local_11c;
  int *local_118;
  int local_114;
  int aiStack_110 [64];
  
  iVar1 = *(int *)((int)param_1 + 0x1ae);
  iVar2 = *(int *)((int)param_1 + 0x186);
  bVar13 = (byte)*(undefined4 *)((int)param_1 + 0x18e);
  uVar14 = 1 << (bVar13 & 0x1f);
  uVar5 = -1 << (bVar13 & 0x1f);
  if (((param_1[0x44] == 0) || (*(int *)(iVar1 + 0x28) != 0)) ||
     (iVar6 = FUN_004629b8((int)param_1), iVar6 != 0)) {
    local_12c = *(undefined4 *)param_1[5];
    local_128 = ((undefined4 *)param_1[5])[1];
    local_124 = *(undefined4 *)((int)param_1 + 0x192);
    iVar6 = *(int *)(iVar1 + 0xc);
    uVar16 = *(uint *)(iVar1 + 8);
    local_114 = iVar1 + 0x10;
    local_148 = *(int *)(iVar1 + 0x14);
    iVar3 = *param_2;
    iVar11 = *(int *)(iVar1 + 0x3c);
    local_138 = 0;
    local_14c = *(int *)((int)param_1 + 0x182);
    local_154 = (short)uVar14;
    local_150 = (short)uVar5;
    local_118 = param_1;
    if (local_148 == 0) {
      local_130 = aiStack_110;
      local_134 = &DAT_00474f98 + local_14c;
      for (; local_14c <= iVar2; local_14c = local_14c + 1) {
        if (iVar6 < 8) {
          iVar6 = FUN_00463818(&local_12c,uVar16,iVar6,0);
          if (iVar6 == 0) goto LAB_00463435;
          iVar6 = local_11c;
          uVar16 = local_120;
          if (7 < local_11c) goto LAB_0046316e;
          iVar15 = 1;
LAB_0046319e:
          uVar8 = FUN_00463928(&local_12c,uVar16,iVar6,iVar15,iVar11);
          iVar6 = local_11c;
          uVar16 = local_120;
          if ((int)uVar8 < 0) goto LAB_00463435;
        }
        else {
LAB_0046316e:
          uVar8 = (int)uVar16 >> ((char)iVar6 - 8U & 0x1f) & 0xff;
          iVar15 = *(int *)(iVar11 + 0xd4 + uVar8 * 4);
          if (iVar15 == 0) {
            iVar15 = 9;
            goto LAB_0046319e;
          }
          uVar8 = (uint)*(byte *)(iVar11 + 0x4d4 + uVar8);
          iVar6 = iVar6 - iVar15;
        }
        iVar15 = (int)uVar8 >> 4;
        if ((uVar8 & 0xf) == 0) {
          uVar8 = 0;
          if (iVar15 != 0xf) {
            local_148 = 1 << ((byte)iVar15 & 0x1f);
            if (iVar15 != 0) {
              if ((iVar6 < iVar15) &&
                 (iVar11 = FUN_00463818(&local_12c,uVar16,iVar6,iVar15), iVar6 = local_11c,
                 uVar16 = local_120, iVar11 == 0)) goto LAB_00463435;
              iVar6 = iVar6 - iVar15;
              local_148 = local_148 + ((int)uVar16 >> ((byte)iVar6 & 0x1f) & local_148 - 1U);
            }
            break;
          }
        }
        else {
          if ((uVar8 & 0xf) != 1) {
            *(undefined4 *)(*param_1 + 0x14) = 0x72;
            (**(code **)(*param_1 + 4))(param_1,0xffffffff);
          }
          if ((iVar6 < 1) &&
             (iVar9 = FUN_00463818(&local_12c,uVar16,iVar6,1), iVar6 = local_11c, uVar16 = local_120
             , iVar9 == 0)) goto LAB_00463435;
          iVar6 = iVar6 + -1;
          uVar8 = uVar5;
          if (((int)uVar16 >> ((byte)iVar6 & 0x1f) & 1U) != 0) {
            uVar8 = uVar14;
          }
        }
        do {
          psVar10 = (short *)(*local_134 * 2 + iVar3);
          if (*psVar10 == 0) {
            iVar15 = iVar15 + -1;
            if (iVar15 < 0) break;
          }
          else {
            if ((iVar6 < 1) &&
               (iVar9 = FUN_00463818(&local_12c,uVar16,iVar6,1), iVar6 = local_11c,
               uVar16 = local_120, iVar9 == 0)) goto LAB_00463435;
            iVar6 = iVar6 + -1;
            if ((((int)uVar16 >> ((byte)iVar6 & 0x1f) & 1U) != 0) && (((int)*psVar10 & uVar14) == 0)
               ) {
              if (*psVar10 < 0) {
                *psVar10 = *psVar10 + local_150;
              }
              else {
                *psVar10 = *psVar10 + local_154;
              }
            }
          }
          local_14c = local_14c + 1;
          local_134 = local_134 + 1;
        } while (local_14c <= iVar2);
        if (uVar8 != 0) {
          iVar15 = *local_134;
          *(short *)(iVar3 + iVar15 * 2) = (short)uVar8;
          *local_130 = iVar15;
          local_138 = local_138 + 1;
          local_130 = local_130 + 1;
        }
        local_134 = local_134 + 1;
      }
    }
    if (local_148 != 0) {
      for (; local_14c <= iVar2; local_14c = local_14c + 1) {
        psVar10 = (short *)((&DAT_00474f98)[local_14c] * 2 + iVar3);
        if (*psVar10 != 0) {
          if ((iVar6 < 1) &&
             (iVar11 = FUN_00463818(&local_12c,uVar16,iVar6,1), iVar6 = local_11c,
             uVar16 = local_120, iVar11 == 0)) {
LAB_00463435:
            piVar12 = aiStack_110 + local_138;
            for (; 0 < local_138; local_138 = local_138 + -1) {
              piVar12 = piVar12 + -1;
              *(undefined2 *)(iVar3 + *piVar12 * 2) = 0;
            }
            return 0;
          }
          iVar6 = iVar6 + -1;
          if ((((int)uVar16 >> ((byte)iVar6 & 0x1f) & 1U) != 0) && (((int)*psVar10 & uVar14) == 0))
          {
            if (*psVar10 < 0) {
              *psVar10 = *psVar10 + local_150;
            }
            else {
              *psVar10 = *psVar10 + local_154;
            }
          }
        }
      }
      local_148 = local_148 + -1;
    }
    puVar4 = (undefined4 *)param_1[5];
    *puVar4 = local_12c;
    puVar4[1] = local_128;
    *(undefined4 *)((int)param_1 + 0x192) = local_124;
    *(uint *)(iVar1 + 8) = uVar16;
    *(int *)(iVar1 + 0xc) = iVar6;
    *(int *)(iVar1 + 0x14) = local_148;
    *(int *)(iVar1 + 0x28) = *(int *)(iVar1 + 0x28) + -1;
    uVar7 = 1;
  }
  else {
    uVar7 = 0;
  }
  return uVar7;
}



void FUN_0046346c(int param_1)

{
  undefined4 *puVar1;
  int iVar2;
  int iVar3;
  
  puVar1 = (undefined4 *)(*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x40);
  *(undefined4 **)(param_1 + 0x1ae) = puVar1;
  *puVar1 = FUN_00462714;
  iVar2 = 0;
  puVar1 = puVar1 + 0xb;
  do {
    iVar2 = iVar2 + 1;
    *puVar1 = 0;
    puVar1 = puVar1 + 1;
  } while (iVar2 < 4);
  puVar1 = (undefined4 *)
           (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,*(int *)(param_1 + 0x20) << 8);
  *(undefined4 **)(param_1 + 0x9c) = puVar1;
  for (iVar2 = 0; iVar2 < *(int *)(param_1 + 0x20); iVar2 = iVar2 + 1) {
    iVar3 = 0;
    do {
      *puVar1 = 0xffffffff;
      puVar1 = puVar1 + 1;
      iVar3 = iVar3 + 1;
    } while (iVar3 < 0x40);
  }
  return;
}



void FUN_004634e0(int *param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int local_1c;
  int *local_18;
  undefined4 *local_14;
  
  iVar1 = *(int *)((int)param_1 + 0x1ae);
  if ((((*(int *)((int)param_1 + 0x182) != 0) || (*(int *)((int)param_1 + 0x186) != 0x3f)) ||
      (*(int *)((int)param_1 + 0x18a) != 0)) || (*(int *)((int)param_1 + 0x18e) != 0)) {
    *(undefined4 *)(*param_1 + 0x14) = 0x76;
    (**(code **)(*param_1 + 4))(param_1,0xffffffff);
  }
  local_14 = (undefined4 *)(iVar1 + 0x14);
  local_18 = (int *)((int)param_1 + 0x13e);
  for (local_1c = 0; local_1c < *(int *)((int)param_1 + 0x13a); local_1c = local_1c + 1) {
    iVar2 = *(int *)(*local_18 + 0x14);
    iVar3 = *(int *)(*local_18 + 0x18);
    if (((iVar2 < 0) || (3 < iVar2)) || (param_1[iVar2 + 0x2c] == 0)) {
      iVar4 = *param_1;
      *(undefined4 *)(iVar4 + 0x14) = 0x31;
      *(int *)(iVar4 + 0x18) = iVar2;
      (**(code **)*param_1)();
    }
    if (((iVar3 < 0) || (3 < iVar3)) || (param_1[iVar3 + 0x30] == 0)) {
      iVar4 = *param_1;
      *(undefined4 *)(iVar4 + 0x14) = 0x31;
      *(int *)(iVar4 + 0x18) = iVar3;
      (**(code **)*param_1)();
    }
    FUN_00463600((int)param_1,(byte *)param_1[iVar2 + 0x2c],(int *)(iVar1 + 0x28 + iVar2 * 4));
    FUN_00463600((int)param_1,(byte *)param_1[iVar3 + 0x30],(int *)(iVar1 + 0x38 + iVar3 * 4));
    *local_14 = 0;
    local_14 = local_14 + 1;
    local_18 = local_18 + 1;
  }
  *(undefined4 *)(iVar1 + 0xc) = 0;
  *(undefined4 *)(iVar1 + 8) = 0;
  *(undefined4 *)(iVar1 + 0x10) = 0;
  *(int *)(iVar1 + 0x24) = param_1[0x44];
  return;
}



void FUN_00463600(int param_1,byte *param_2,int *param_3)

{
  int iVar1;
  char *pcVar2;
  int *piVar3;
  byte bVar4;
  byte *pbVar5;
  int iVar6;
  int iVar7;
  int local_52c;
  int local_528;
  int *piStack_520;
  byte *pbStack_51c;
  byte *pbStack_518;
  char local_514 [256];
  int aiStack_414 [258];
  
  if (*param_3 == 0) {
    iVar1 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x5d4);
    *param_3 = iVar1;
  }
  iVar1 = *param_3;
  iVar7 = 1;
  *(byte **)(iVar1 + 0xd0) = param_2;
  local_52c = 0;
  pbVar5 = param_2;
  do {
    pbVar5 = pbVar5 + 1;
    pcVar2 = local_514 + local_52c;
    for (local_528 = 1; local_528 <= (int)(uint)*pbVar5; local_528 = local_528 + 1) {
      *pcVar2 = (char)iVar7;
      local_52c = local_52c + 1;
      pcVar2 = pcVar2 + 1;
    }
    iVar7 = iVar7 + 1;
  } while (iVar7 < 0x11);
  iVar7 = 0;
  local_514[local_52c] = '\0';
  iVar6 = (int)local_514[0];
  local_52c = 0;
  while (local_514[local_52c] != '\0') {
    piVar3 = aiStack_414 + local_52c + 1;
    for (pcVar2 = local_514 + local_52c; iVar6 == *pcVar2; pcVar2 = pcVar2 + 1) {
      *piVar3 = iVar7;
      piVar3 = piVar3 + 1;
      local_52c = local_52c + 1;
      iVar7 = iVar7 + 1;
    }
    iVar7 = iVar7 * 2;
    iVar6 = iVar6 + 1;
  }
  iVar7 = 1;
  local_52c = 0;
  piVar3 = (int *)(iVar1 + 0x90);
  pbVar5 = param_2;
  do {
    pbVar5 = pbVar5 + 1;
    if (*pbVar5 == 0) {
      piVar3[-0x12] = -1;
    }
    else {
      *piVar3 = local_52c;
      piVar3[-0x23] = aiStack_414[local_52c + 1];
      local_52c = local_52c + (uint)*pbVar5;
      piVar3[-0x12] = aiStack_414[local_52c];
    }
    iVar7 = iVar7 + 1;
    piVar3 = piVar3 + 1;
  } while (iVar7 < 0x11);
  *(undefined4 *)(iVar1 + 0x88) = 0xfffff;
  FUN_0045ef60();
  local_52c = 0;
  iVar7 = 1;
  pbStack_518 = param_2 + 1;
  do {
    pbStack_51c = param_2 + local_52c + 0x11;
    piStack_520 = aiStack_414 + local_52c + 1;
    for (local_528 = 1; local_528 <= (int)(uint)*pbStack_518; local_528 = local_528 + 1) {
      bVar4 = 8 - (char)iVar7;
      iVar6 = *piStack_520 << (bVar4 & 0x1f);
      pbVar5 = (byte *)(iVar1 + 0x4d4 + iVar6);
      piVar3 = (int *)(iVar1 + 0xd4 + iVar6 * 4);
      for (iVar6 = 1 << (bVar4 & 0x1f); 0 < iVar6; iVar6 = iVar6 + -1) {
        *piVar3 = iVar7;
        piVar3 = piVar3 + 1;
        *pbVar5 = *pbStack_51c;
        pbVar5 = pbVar5 + 1;
      }
      piStack_520 = piStack_520 + 1;
      pbStack_51c = pbStack_51c + 1;
      local_52c = local_52c + 1;
    }
    iVar7 = iVar7 + 1;
    pbStack_518 = pbStack_518 + 1;
  } while (iVar7 < 9);
  return;
}



undefined4 FUN_00463818(undefined4 *param_1,uint param_2,int param_3,int param_4)

{
  int *piVar1;
  int iVar2;
  uint uVar3;
  byte *pbVar4;
  int local_10;
  int local_c;
  uint local_8;
  
  pbVar4 = (byte *)*param_1;
  local_10 = param_1[1];
  local_c = param_3;
  local_8 = param_2;
  if (param_3 < 0x19) {
    do {
      if (param_1[2] == 0) {
        if (local_10 == 0) {
          iVar2 = (**(code **)(*(int *)(param_1[5] + 0x14) + 0xc))();
          if (iVar2 == 0) {
            return 0;
          }
          pbVar4 = (byte *)**(undefined4 **)(param_1[5] + 0x14);
          local_10 = (*(undefined4 **)(param_1[5] + 0x14))[1];
        }
        local_10 = local_10 + -1;
        uVar3 = (uint)*pbVar4;
        pbVar4 = pbVar4 + 1;
        if (uVar3 == 0xff) {
          do {
            if (local_10 == 0) {
              iVar2 = (**(code **)(*(int *)(param_1[5] + 0x14) + 0xc))();
              if (iVar2 == 0) {
                return 0;
              }
              pbVar4 = (byte *)**(undefined4 **)(param_1[5] + 0x14);
              local_10 = (*(undefined4 **)(param_1[5] + 0x14))[1];
            }
            local_10 = local_10 + -1;
            uVar3 = (uint)*pbVar4;
            pbVar4 = pbVar4 + 1;
          } while (uVar3 == 0xff);
          if (uVar3 != 0) {
            param_1[2] = uVar3;
            goto LAB_004638bc;
          }
          uVar3 = 0xff;
        }
      }
      else {
LAB_004638bc:
        if (param_4 <= local_c) break;
        if (*(int *)param_1[6] == 0) {
          piVar1 = (int *)param_1[5];
          *(undefined4 *)(*piVar1 + 0x14) = 0x71;
          (**(code **)(*piVar1 + 4))(piVar1,0xffffffff);
          *(undefined4 *)param_1[6] = 1;
        }
        uVar3 = 0;
      }
      local_8 = uVar3 | local_8 << 8;
      local_c = local_c + 8;
    } while (local_c < 0x19);
  }
  *param_1 = pbVar4;
  param_1[1] = local_10;
  param_1[3] = local_8;
  param_1[4] = local_c;
  return 1;
}



uint FUN_00463928(undefined4 *param_1,uint param_2,int param_3,int param_4,int param_5)

{
  int *piVar1;
  int iVar2;
  uint uVar3;
  int *local_10;
  uint local_c;
  
  local_c = param_2;
  if (param_3 < param_4) {
    iVar2 = FUN_00463818(param_1,param_2,param_3,param_4);
    if (iVar2 == 0) {
      return 0xffffffff;
    }
    local_c = param_1[3];
    param_3 = param_1[4];
  }
  iVar2 = param_3 - param_4;
  uVar3 = (int)local_c >> ((byte)iVar2 & 0x1f) & (1 << ((byte)param_4 & 0x1f)) - 1U;
  local_10 = (int *)(param_5 + 0x44 + param_4 * 4);
  do {
    if ((int)uVar3 <= *local_10) {
      param_1[3] = local_c;
      param_1[4] = iVar2;
      if (param_4 < 0x11) {
        uVar3 = (uint)*(byte *)(*(int *)(param_5 + 0xd0) + *(int *)(param_5 + 0x8c + param_4 * 4) +
                                0x11 + (uVar3 - *(int *)(param_5 + param_4 * 4)));
      }
      else {
        piVar1 = (int *)param_1[5];
        *(undefined4 *)(*piVar1 + 0x14) = 0x72;
        (**(code **)(*piVar1 + 4))(piVar1,0xffffffff);
        uVar3 = 0;
      }
      return uVar3;
    }
    if (iVar2 < 1) {
      iVar2 = FUN_00463818(param_1,local_c,iVar2,1);
      if (iVar2 == 0) {
        return 0xffffffff;
      }
      local_c = param_1[3];
      iVar2 = param_1[4];
    }
    iVar2 = iVar2 + -1;
    uVar3 = uVar3 * 2 | (int)local_c >> ((byte)iVar2 & 0x1f) & 1U;
    param_4 = param_4 + 1;
    local_10 = local_10 + 1;
  } while( true );
}



undefined4 FUN_00463a2c(int param_1)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  undefined4 *puVar4;
  
  iVar2 = *(int *)(param_1 + 0x1ae);
  iVar3 = *(int *)(iVar2 + 0xc);
  if (iVar3 < 0) {
    iVar3 = iVar3 + 7;
  }
  piVar1 = (int *)(*(int *)(param_1 + 0x1aa) + 0x5c);
  *piVar1 = *piVar1 + (iVar3 >> 3);
  *(undefined4 *)(iVar2 + 0xc) = 0;
  iVar3 = (**(code **)(*(int *)(param_1 + 0x1aa) + 8))();
  if (iVar3 == 0) {
    return 0;
  }
  puVar4 = (undefined4 *)(iVar2 + 0x14);
  for (iVar3 = 0; iVar3 < *(int *)(param_1 + 0x13a); iVar3 = iVar3 + 1) {
    *puVar4 = 0;
    puVar4 = puVar4 + 1;
  }
  *(undefined4 *)(iVar2 + 0x24) = *(undefined4 *)(param_1 + 0x110);
  *(undefined4 *)(iVar2 + 0x10) = 0;
  return 1;
}



undefined4 FUN_00463a94(int param_1,int *param_2)

{
  int iVar1;
  undefined2 *puVar2;
  int iVar3;
  int iVar4;
  undefined4 *puVar5;
  int iVar6;
  undefined4 uVar7;
  uint uVar8;
  int iVar9;
  uint uVar10;
  int iVar11;
  int iVar12;
  int *piVar13;
  uint uVar14;
  int *piVar15;
  byte bVar16;
  int local_64;
  int local_50;
  int local_4c;
  int local_48;
  int *local_44;
  int *local_40;
  undefined4 local_3c;
  undefined4 local_38;
  undefined4 local_34;
  uint local_30;
  int local_2c;
  int local_28;
  int local_24;
  int local_20 [4];
  
  bVar16 = 0;
  iVar1 = *(int *)(param_1 + 0x1ae);
  if (((*(int *)(param_1 + 0x110) == 0) || (*(int *)(iVar1 + 0x24) != 0)) ||
     (iVar6 = FUN_00463a2c(param_1), iVar6 != 0)) {
    local_3c = **(undefined4 **)(param_1 + 0x14);
    local_38 = (*(undefined4 **)(param_1 + 0x14))[1];
    local_34 = *(undefined4 *)(param_1 + 0x192);
    iVar6 = *(int *)(iVar1 + 0xc);
    uVar14 = *(uint *)(iVar1 + 8);
    local_24 = iVar1 + 0x10;
    piVar13 = (int *)(iVar1 + 0x14);
    piVar15 = local_20;
    for (iVar12 = 4; iVar12 != 0; iVar12 = iVar12 + -1) {
      *piVar15 = *piVar13;
      piVar13 = piVar13 + (uint)bVar16 * -2 + 1;
      piVar15 = piVar15 + (uint)bVar16 * -2 + 1;
    }
    local_40 = (int *)(param_1 + 0x15a);
    local_44 = param_2;
    local_28 = param_1;
    for (local_64 = 0; local_64 < *(int *)(param_1 + 0x156); local_64 = local_64 + 1) {
      puVar2 = (undefined2 *)*local_44;
      iVar12 = *local_40;
      iVar11 = *(int *)(param_1 + 0x13e + iVar12 * 4);
      iVar9 = *(int *)(iVar1 + 0x28 + *(int *)(iVar11 + 0x14) * 4);
      iVar3 = *(int *)(iVar1 + 0x38 + *(int *)(iVar11 + 0x18) * 4);
      if (iVar6 < 8) {
        iVar6 = FUN_00463818(&local_3c,uVar14,iVar6,0);
        if (iVar6 == 0) {
          return 0;
        }
        iVar6 = local_2c;
        uVar14 = local_30;
        if (7 < local_2c) goto LAB_00463bc0;
        local_50 = 1;
LAB_00463bf9:
        uVar8 = FUN_00463928(&local_3c,uVar14,iVar6,local_50,iVar9);
        iVar6 = local_2c;
        uVar14 = local_30;
        if ((int)uVar8 < 0) {
          return 0;
        }
      }
      else {
LAB_00463bc0:
        uVar8 = (int)uVar14 >> ((char)iVar6 - 8U & 0x1f) & 0xff;
        iVar4 = *(int *)(iVar9 + 0xd4 + uVar8 * 4);
        if (iVar4 == 0) {
          local_50 = 9;
          goto LAB_00463bf9;
        }
        uVar8 = (uint)*(byte *)(iVar9 + 0x4d4 + uVar8);
        iVar6 = iVar6 - iVar4;
      }
      uVar10 = uVar8;
      if (uVar8 != 0) {
        if ((iVar6 < (int)uVar8) &&
           (iVar9 = FUN_00463818(&local_3c,uVar14,iVar6,uVar8), iVar6 = local_2c, uVar14 = local_30,
           iVar9 == 0)) {
          return 0;
        }
        iVar6 = iVar6 - uVar8;
        uVar10 = (int)uVar14 >> ((byte)iVar6 & 0x1f) & (1 << ((byte)uVar8 & 0x1f)) - 1U;
        if ((int)uVar10 < *(int *)(&DAT_00474d4c + uVar8 * 4)) {
          uVar10 = *(int *)(&DAT_00474d8c + uVar8 * 4) + uVar10;
        }
      }
      if (*(int *)(iVar11 + 0x30) == 0) {
LAB_00463dd0:
        iVar12 = 1;
        do {
          if (iVar6 < 8) {
            iVar6 = FUN_00463818(&local_3c,uVar14,iVar6,0);
            if (iVar6 == 0) {
              return 0;
            }
            iVar6 = local_2c;
            uVar14 = local_30;
            if (7 < local_2c) goto LAB_00463e0b;
            local_48 = 1;
LAB_00463e44:
            uVar8 = FUN_00463928(&local_3c,uVar14,iVar6,local_48,iVar3);
            iVar6 = local_2c;
            uVar14 = local_30;
            if ((int)uVar8 < 0) {
              return 0;
            }
          }
          else {
LAB_00463e0b:
            uVar8 = (int)uVar14 >> ((char)iVar6 - 8U & 0x1f) & 0xff;
            iVar11 = *(int *)(iVar3 + 0xd4 + uVar8 * 4);
            if (iVar11 == 0) {
              local_48 = 9;
              goto LAB_00463e44;
            }
            uVar8 = (uint)*(byte *)(iVar3 + 0x4d4 + uVar8);
            iVar6 = iVar6 - iVar11;
          }
          uVar10 = uVar8 & 0xf;
          if (uVar10 == 0) {
            if ((int)uVar8 >> 4 != 0xf) break;
            iVar12 = iVar12 + 0xf;
          }
          else {
            iVar12 = iVar12 + ((int)uVar8 >> 4);
            if ((iVar6 < (int)uVar10) &&
               (iVar11 = FUN_00463818(&local_3c,uVar14,iVar6,uVar10), iVar6 = local_2c,
               uVar14 = local_30, iVar11 == 0)) {
              return 0;
            }
            iVar6 = iVar6 - uVar10;
          }
          iVar12 = iVar12 + 1;
        } while (iVar12 < 0x40);
      }
      else {
        iVar9 = local_20[iVar12];
        local_20[iVar12] = uVar10 + iVar9;
        *puVar2 = (short)(uVar10 + iVar9);
        if (*(int *)(iVar11 + 0x24) < 2) goto LAB_00463dd0;
        iVar12 = 1;
        do {
          if (iVar6 < 8) {
            iVar6 = FUN_00463818(&local_3c,uVar14,iVar6,0);
            if (iVar6 == 0) {
              return 0;
            }
            iVar6 = local_2c;
            uVar14 = local_30;
            if (7 < local_2c) goto LAB_00463ce0;
            local_4c = 1;
LAB_00463d19:
            uVar8 = FUN_00463928(&local_3c,uVar14,iVar6,local_4c,iVar3);
            iVar6 = local_2c;
            uVar14 = local_30;
            if ((int)uVar8 < 0) {
              return 0;
            }
          }
          else {
LAB_00463ce0:
            uVar8 = (int)uVar14 >> ((char)iVar6 - 8U & 0x1f) & 0xff;
            iVar11 = *(int *)(iVar3 + 0xd4 + uVar8 * 4);
            if (iVar11 == 0) {
              local_4c = 9;
              goto LAB_00463d19;
            }
            uVar8 = (uint)*(byte *)(iVar3 + 0x4d4 + uVar8);
            iVar6 = iVar6 - iVar11;
          }
          uVar10 = uVar8 & 0xf;
          if (uVar10 == 0) {
            if ((int)uVar8 >> 4 != 0xf) break;
            iVar12 = iVar12 + 0xf;
          }
          else {
            iVar12 = iVar12 + ((int)uVar8 >> 4);
            if ((iVar6 < (int)uVar10) &&
               (iVar11 = FUN_00463818(&local_3c,uVar14,iVar6,uVar10), iVar6 = local_2c,
               uVar14 = local_30, iVar11 == 0)) {
              return 0;
            }
            iVar6 = iVar6 - uVar10;
            uVar8 = (int)uVar14 >> ((byte)iVar6 & 0x1f) & (1 << (sbyte)uVar10) - 1U;
            if ((int)uVar8 < *(int *)(&DAT_00474d4c + uVar10 * 4)) {
              uVar8 = *(int *)(&DAT_00474d8c + uVar10 * 4) + uVar8;
            }
            puVar2[(&DAT_00474f98)[iVar12]] = (short)uVar8;
          }
          iVar12 = iVar12 + 1;
        } while (iVar12 < 0x40);
      }
      local_40 = local_40 + 1;
      local_44 = local_44 + 1;
    }
    puVar5 = *(undefined4 **)(param_1 + 0x14);
    *puVar5 = local_3c;
    puVar5[1] = local_38;
    *(undefined4 *)(param_1 + 0x192) = local_34;
    *(uint *)(iVar1 + 8) = uVar14;
    *(int *)(iVar1 + 0xc) = iVar6;
    piVar13 = local_20;
    piVar15 = (int *)(iVar1 + 0x14);
    for (iVar6 = 4; iVar6 != 0; iVar6 = iVar6 + -1) {
      *piVar15 = *piVar13;
      piVar13 = piVar13 + (uint)bVar16 * -2 + 1;
      piVar15 = piVar15 + (uint)bVar16 * -2 + 1;
    }
    *(int *)(iVar1 + 0x24) = *(int *)(iVar1 + 0x24) + -1;
    uVar7 = 1;
  }
  else {
    uVar7 = 0;
  }
  return uVar7;
}



void FUN_00463f30(int param_1)

{
  undefined4 *puVar1;
  int iVar2;
  
  puVar1 = (undefined4 *)(*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x48);
  *(undefined4 **)(param_1 + 0x1ae) = puVar1;
  *puVar1 = FUN_004634e0;
  puVar1[1] = FUN_00463a94;
  iVar2 = 0;
  puVar1 = puVar1 + 0xe;
  do {
    *puVar1 = 0;
    puVar1[-4] = 0;
    iVar2 = iVar2 + 1;
    puVar1 = puVar1 + 1;
  } while (iVar2 < 4);
  return;
}



void FUN_00463f70(int param_1)

{
  int iVar1;
  undefined4 uVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  
  iVar1 = *(int *)(param_1 + 0x1b6);
  uVar2 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x400);
  *(undefined4 *)(iVar1 + 0x10) = uVar2;
  uVar2 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x400);
  *(undefined4 *)(iVar1 + 0x14) = uVar2;
  uVar2 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x400);
  *(undefined4 *)(iVar1 + 0x18) = uVar2;
  uVar2 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x400);
  *(undefined4 *)(iVar1 + 0x1c) = uVar2;
  iVar3 = 0;
  iVar5 = -0x80;
  do {
    *(int *)(*(int *)(iVar1 + 0x10) + iVar3 * 4) = iVar5 * 0x166e9 + 0x8000 >> 0x10;
    *(int *)(*(int *)(iVar1 + 0x14) + iVar3 * 4) = iVar5 * 0x1c5a2 + 0x8000 >> 0x10;
    *(int *)(*(int *)(iVar1 + 0x18) + iVar3 * 4) = iVar5 * -0xb6d2;
    iVar4 = iVar5 * -0x581a;
    iVar5 = iVar5 + 1;
    *(int *)(*(int *)(iVar1 + 0x1c) + iVar3 * 4) = iVar4 + 0x8000;
    iVar3 = iVar3 + 1;
  } while (iVar3 < 0x100);
  return;
}



void FUN_0046403c(int param_1,undefined4 param_2,int *param_3,int param_4,int *param_5,int param_6)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  undefined4 local_18;
  undefined4 local_14;
  int *local_10;
  undefined4 local_c;
  int local_8;
  
  iVar1 = *(int *)(param_1 + 0x1b6);
  local_10 = param_3;
  local_c = param_2;
  local_8 = param_1;
  if (*(int *)(iVar1 + 0x24) == 0) {
    uVar3 = 2;
    if (*(uint *)(iVar1 + 0x2c) < 2) {
      uVar3 = *(uint *)(iVar1 + 0x2c);
    }
    iVar2 = *param_5;
    if ((uint)(param_4 - iVar2) < uVar3) {
      uVar3 = param_4 - iVar2;
    }
    local_18 = *(undefined4 *)(param_6 + iVar2 * 4);
    if (uVar3 < 2) {
      local_14 = *(undefined4 *)(iVar1 + 0x20);
      *(undefined4 *)(iVar1 + 0x24) = 1;
    }
    else {
      local_14 = *(undefined4 *)(param_6 + 4 + iVar2 * 4);
    }
    (**(code **)(iVar1 + 0xc))(param_1,param_2,*param_3,&local_18);
  }
  else {
    FUN_0046bdd8();
    uVar3 = 1;
    *(undefined4 *)(iVar1 + 0x24) = 0;
  }
  *param_5 = *param_5 + uVar3;
  *(int *)(iVar1 + 0x2c) = *(int *)(iVar1 + 0x2c) - uVar3;
  if (*(int *)(iVar1 + 0x24) == 0) {
    *local_10 = *local_10 + 1;
  }
  return;
}



void FUN_0046412c(int param_1,int *param_2,int param_3,undefined4 *param_4)

{
  byte bVar1;
  byte bVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  byte *pbVar8;
  byte *pbVar9;
  byte *pbVar10;
  int iVar11;
  int iVar12;
  uint uVar13;
  uint uVar14;
  undefined1 *puVar15;
  int iVar16;
  
  iVar3 = *(int *)(param_1 + 0x1b6);
  iVar4 = *(int *)(iVar3 + 0x10);
  iVar5 = *(int *)(param_1 + 0x136);
  iVar6 = *(int *)(iVar3 + 0x14);
  iVar7 = *(int *)(iVar3 + 0x18);
  iVar3 = *(int *)(iVar3 + 0x1c);
  pbVar8 = *(byte **)(*param_2 + param_3 * 4);
  pbVar9 = *(byte **)(param_2[1] + param_3 * 4);
  pbVar10 = *(byte **)(param_2[2] + param_3 * 4);
  puVar15 = (undefined1 *)*param_4;
  for (uVar13 = *(uint *)(param_1 + 0x6c) >> 1; uVar13 != 0; uVar13 = uVar13 - 1) {
    bVar1 = *pbVar9;
    pbVar9 = pbVar9 + 1;
    bVar2 = *pbVar10;
    pbVar10 = pbVar10 + 1;
    iVar11 = *(int *)(iVar4 + (uint)bVar2 * 4);
    iVar16 = *(int *)(iVar3 + (uint)bVar1 * 4) + *(int *)(iVar7 + (uint)bVar2 * 4) >> 0x10;
    iVar12 = *(int *)(iVar6 + (uint)bVar1 * 4);
    uVar14 = (uint)*pbVar8;
    puVar15[2] = *(undefined1 *)(iVar5 + uVar14 + iVar11);
    puVar15[1] = *(undefined1 *)(iVar5 + uVar14 + iVar16);
    *puVar15 = *(undefined1 *)(iVar5 + uVar14 + iVar12);
    uVar14 = (uint)pbVar8[1];
    pbVar8 = pbVar8 + 2;
    puVar15[5] = *(undefined1 *)(iVar5 + uVar14 + iVar11);
    puVar15[4] = *(undefined1 *)(iVar5 + uVar14 + iVar16);
    puVar15[3] = *(undefined1 *)(iVar5 + uVar14 + iVar12);
    puVar15 = puVar15 + 6;
  }
  if ((*(byte *)(param_1 + 0x6c) & 1) != 0) {
    iVar3 = *(int *)(iVar3 + (uint)*pbVar9 * 4);
    iVar7 = *(int *)(iVar7 + (uint)*pbVar10 * 4);
    iVar6 = *(int *)(iVar6 + (uint)*pbVar9 * 4);
    uVar13 = (uint)*pbVar8;
    puVar15[2] = *(undefined1 *)(iVar5 + uVar13 + *(int *)(iVar4 + (uint)*pbVar10 * 4));
    puVar15[1] = *(undefined1 *)(iVar5 + uVar13 + (iVar3 + iVar7 >> 0x10));
    *puVar15 = *(undefined1 *)(iVar5 + uVar13 + iVar6);
  }
  return;
}



void FUN_004642a4(int param_1,int *param_2,int param_3,undefined4 *param_4)

{
  byte bVar1;
  byte bVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  byte *pbVar7;
  byte *pbVar8;
  byte *pbVar9;
  byte *pbVar10;
  undefined1 *puVar11;
  int iVar12;
  int iVar13;
  undefined1 *puVar14;
  uint uVar15;
  uint uVar16;
  int iVar17;
  int iVar18;
  
  iVar3 = *(int *)(param_1 + 0x1b6);
  iVar4 = *(int *)(param_1 + 0x136);
  iVar5 = *(int *)(iVar3 + 0x10);
  iVar6 = *(int *)(iVar3 + 0x14);
  iVar18 = *(int *)(iVar3 + 0x18);
  iVar3 = *(int *)(iVar3 + 0x1c);
  pbVar7 = *(byte **)(*param_2 + param_3 * 8);
  pbVar8 = *(byte **)(*param_2 + 4 + param_3 * 8);
  pbVar9 = *(byte **)(param_2[1] + param_3 * 4);
  pbVar10 = *(byte **)(param_2[2] + param_3 * 4);
  puVar14 = (undefined1 *)*param_4;
  puVar11 = (undefined1 *)param_4[1];
  for (uVar15 = *(uint *)(param_1 + 0x6c) >> 1; uVar15 != 0; uVar15 = uVar15 - 1) {
    bVar1 = *pbVar9;
    pbVar9 = pbVar9 + 1;
    bVar2 = *pbVar10;
    pbVar10 = pbVar10 + 1;
    iVar12 = *(int *)(iVar5 + (uint)bVar2 * 4);
    iVar17 = *(int *)(iVar3 + (uint)bVar1 * 4) + *(int *)(iVar18 + (uint)bVar2 * 4) >> 0x10;
    iVar13 = *(int *)(iVar6 + (uint)bVar1 * 4);
    uVar16 = (uint)*pbVar7;
    puVar14[2] = *(undefined1 *)(iVar4 + uVar16 + iVar12);
    puVar14[1] = *(undefined1 *)(iVar4 + uVar16 + iVar17);
    *puVar14 = *(undefined1 *)(iVar4 + uVar16 + iVar13);
    uVar16 = (uint)pbVar7[1];
    pbVar7 = pbVar7 + 2;
    puVar14[5] = *(undefined1 *)(iVar4 + uVar16 + iVar12);
    puVar14[4] = *(undefined1 *)(iVar4 + uVar16 + iVar17);
    puVar14[3] = *(undefined1 *)(iVar4 + uVar16 + iVar13);
    puVar14 = puVar14 + 6;
    uVar16 = (uint)*pbVar8;
    puVar11[2] = *(undefined1 *)(iVar4 + uVar16 + iVar12);
    puVar11[1] = *(undefined1 *)(iVar4 + uVar16 + iVar17);
    *puVar11 = *(undefined1 *)(iVar4 + uVar16 + iVar13);
    uVar16 = (uint)pbVar8[1];
    pbVar8 = pbVar8 + 2;
    puVar11[5] = *(undefined1 *)(iVar4 + uVar16 + iVar12);
    puVar11[4] = *(undefined1 *)(iVar4 + uVar16 + iVar17);
    puVar11[3] = *(undefined1 *)(iVar4 + uVar16 + iVar13);
    puVar11 = puVar11 + 6;
  }
  if ((*(byte *)(param_1 + 0x6c) & 1) != 0) {
    iVar5 = *(int *)(iVar5 + (uint)*pbVar10 * 4);
    iVar18 = *(int *)(iVar3 + (uint)*pbVar9 * 4) + *(int *)(iVar18 + (uint)*pbVar10 * 4) >> 0x10;
    iVar3 = *(int *)(iVar6 + (uint)*pbVar9 * 4);
    uVar15 = (uint)*pbVar7;
    puVar14[2] = *(undefined1 *)(iVar4 + uVar15 + iVar5);
    puVar14[1] = *(undefined1 *)(iVar4 + uVar15 + iVar18);
    *puVar14 = *(undefined1 *)(iVar4 + uVar15 + iVar3);
    uVar15 = (uint)*pbVar8;
    puVar11[2] = *(undefined1 *)(iVar4 + uVar15 + iVar5);
    puVar11[1] = *(undefined1 *)(iVar4 + uVar15 + iVar18);
    *puVar11 = *(undefined1 *)(iVar4 + uVar15 + iVar3);
  }
  return;
}



void FUN_004644dc(int param_1)

{
  undefined4 *puVar1;
  undefined4 uVar2;
  
  puVar1 = (undefined4 *)(*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x30);
  *(undefined4 **)(param_1 + 0x1b6) = puVar1;
  *puVar1 = &LAB_00464028;
  puVar1[2] = 0;
  puVar1[10] = *(int *)(param_1 + 0x6c) * *(int *)(param_1 + 0x74);
  if (*(int *)(param_1 + 0x12a) == 2) {
    puVar1[1] = FUN_0046403c;
    puVar1[3] = FUN_004642a4;
    uVar2 = (**(code **)(*(int *)(param_1 + 4) + 4))(param_1,1,puVar1[10]);
    puVar1[8] = uVar2;
  }
  else {
    puVar1[1] = &LAB_004640f4;
    puVar1[3] = FUN_0046412c;
    puVar1[8] = 0;
  }
  FUN_00463f70(param_1);
  return;
}



void FUN_0046455c(int param_1)

{
  int iVar1;
  undefined4 uVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  
  iVar1 = *(int *)(param_1 + 0x1ba);
  uVar2 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x400);
  *(undefined4 *)(iVar1 + 8) = uVar2;
  uVar2 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x400);
  *(undefined4 *)(iVar1 + 0xc) = uVar2;
  uVar2 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x400);
  *(undefined4 *)(iVar1 + 0x10) = uVar2;
  uVar2 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x400);
  *(undefined4 *)(iVar1 + 0x14) = uVar2;
  iVar3 = 0;
  iVar5 = -0x80;
  do {
    *(int *)(*(int *)(iVar1 + 8) + iVar3 * 4) = iVar5 * 0x166e9 + 0x8000 >> 0x10;
    *(int *)(*(int *)(iVar1 + 0xc) + iVar3 * 4) = iVar5 * 0x1c5a2 + 0x8000 >> 0x10;
    *(int *)(*(int *)(iVar1 + 0x10) + iVar3 * 4) = iVar5 * -0xb6d2;
    iVar4 = iVar5 * -0x581a;
    iVar5 = iVar5 + 1;
    *(int *)(*(int *)(iVar1 + 0x14) + iVar3 * 4) = iVar4 + 0x8000;
    iVar3 = iVar3 + 1;
  } while (iVar3 < 0x100);
  return;
}



void FUN_00464614(int param_1,int *param_2,int param_3,int param_4,undefined4 *param_5)

{
  byte bVar1;
  byte bVar2;
  int iVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  undefined1 *puVar9;
  uint uVar10;
  byte *local_38;
  byte *local_34;
  byte *local_30;
  uint local_18;
  int local_c;
  
  iVar3 = *(int *)(param_1 + 0x1ba);
  uVar4 = *(uint *)(param_1 + 0x6c);
  iVar5 = *(int *)(param_1 + 0x136);
  iVar6 = *(int *)(iVar3 + 8);
  iVar7 = *(int *)(iVar3 + 0xc);
  iVar8 = *(int *)(iVar3 + 0x10);
  iVar3 = *(int *)(iVar3 + 0x14);
  local_c = param_3;
  while( true ) {
    param_4 = param_4 + -1;
    if (param_4 < 0) break;
    local_30 = *(byte **)(*param_2 + local_c * 4);
    local_34 = *(byte **)(param_2[1] + local_c * 4);
    local_38 = *(byte **)(param_2[2] + local_c * 4);
    local_c = local_c + 1;
    puVar9 = (undefined1 *)*param_5;
    param_5 = param_5 + 1;
    local_18 = 0;
    if (uVar4 != 0) {
      do {
        uVar10 = (uint)*local_30;
        bVar1 = *local_34;
        bVar2 = *local_38;
        puVar9[2] = *(undefined1 *)(iVar5 + uVar10 + *(int *)(iVar6 + (uint)bVar2 * 4));
        puVar9[1] = *(undefined1 *)
                     (iVar5 + uVar10 +
                     (*(int *)(iVar3 + (uint)bVar1 * 4) + *(int *)(iVar8 + (uint)bVar2 * 4) >> 0x10)
                     );
        *puVar9 = *(undefined1 *)(iVar5 + uVar10 + *(int *)(iVar7 + (uint)bVar1 * 4));
        puVar9 = puVar9 + 3;
        local_18 = local_18 + 1;
        local_38 = local_38 + 1;
        local_34 = local_34 + 1;
        local_30 = local_30 + 1;
      } while (local_18 < uVar4);
    }
  }
  return;
}



void FUN_0046471c(int param_1,int *param_2,int param_3,int param_4,int *param_5)

{
  int iVar1;
  int iVar2;
  undefined1 *puVar3;
  undefined1 *puVar4;
  int iVar5;
  int *local_14;
  int local_10;
  
  iVar1 = *(int *)(param_1 + 0x20);
  iVar2 = *(int *)(param_1 + 0x6c);
  while (param_4 = param_4 + -1, -1 < param_4) {
    local_10 = 0;
    local_14 = param_2;
    if (0 < iVar1) {
      do {
        puVar4 = (undefined1 *)(*param_5 + local_10);
        puVar3 = *(undefined1 **)(*local_14 + param_3 * 4);
        for (iVar5 = iVar2; iVar5 != 0; iVar5 = iVar5 + -1) {
          *puVar4 = *puVar3;
          puVar3 = puVar3 + 1;
          puVar4 = puVar4 + iVar1;
        }
        local_10 = local_10 + 1;
        local_14 = local_14 + 1;
      } while (local_10 < iVar1);
    }
    param_3 = param_3 + 1;
    param_5 = param_5 + 1;
  }
  return;
}



void FUN_0046478c(void)

{
  FUN_0046bdd8();
  return;
}



void FUN_004647ac(int param_1,int *param_2,int param_3,int param_4,undefined4 *param_5)

{
  undefined1 uVar1;
  uint uVar2;
  undefined1 *puVar3;
  undefined1 *puVar4;
  uint uVar5;
  
  uVar2 = *(uint *)(param_1 + 0x6c);
  while( true ) {
    param_4 = param_4 + -1;
    if (param_4 < 0) break;
    uVar5 = 0;
    puVar3 = *(undefined1 **)(*param_2 + param_3 * 4);
    puVar4 = (undefined1 *)*param_5;
    param_3 = param_3 + 1;
    param_5 = param_5 + 1;
    if (uVar2 != 0) {
      do {
        uVar5 = uVar5 + 1;
        puVar4[2] = *puVar3;
        puVar4[1] = *puVar3;
        uVar1 = *puVar3;
        puVar3 = puVar3 + 1;
        *puVar4 = uVar1;
        puVar4 = puVar4 + 3;
      } while (uVar5 < uVar2);
    }
  }
  return;
}



void FUN_004647f8(int param_1,int *param_2,int param_3,int param_4,undefined4 *param_5)

{
  byte bVar1;
  byte bVar2;
  int iVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  undefined1 *puVar9;
  uint uVar10;
  undefined1 *local_40;
  byte *local_3c;
  byte *local_38;
  byte *local_34;
  uint local_1c;
  int local_c;
  
  iVar3 = *(int *)(param_1 + 0x1ba);
  uVar4 = *(uint *)(param_1 + 0x6c);
  iVar5 = *(int *)(param_1 + 0x136);
  iVar6 = *(int *)(iVar3 + 8);
  iVar7 = *(int *)(iVar3 + 0xc);
  iVar8 = *(int *)(iVar3 + 0x10);
  iVar3 = *(int *)(iVar3 + 0x14);
  local_c = param_3;
  while( true ) {
    param_4 = param_4 + -1;
    if (param_4 < 0) break;
    local_34 = *(byte **)(*param_2 + local_c * 4);
    local_38 = *(byte **)(param_2[1] + local_c * 4);
    local_3c = *(byte **)(param_2[2] + local_c * 4);
    local_40 = *(undefined1 **)(param_2[3] + local_c * 4);
    local_c = local_c + 1;
    puVar9 = (undefined1 *)*param_5;
    param_5 = param_5 + 1;
    local_1c = 0;
    if (uVar4 != 0) {
      do {
        uVar10 = (uint)*local_34;
        bVar1 = *local_38;
        bVar2 = *local_3c;
        *puVar9 = *(undefined1 *)(iVar5 + (0xff - (*(int *)(iVar6 + (uint)bVar2 * 4) + uVar10)));
        puVar9[1] = *(undefined1 *)
                     (iVar5 + (0xff - ((*(int *)(iVar3 + (uint)bVar1 * 4) +
                                        *(int *)(iVar8 + (uint)bVar2 * 4) >> 0x10) + uVar10)));
        puVar9[2] = *(undefined1 *)(iVar5 + (0xff - (uVar10 + *(int *)(iVar7 + (uint)bVar1 * 4))));
        puVar9[3] = *local_40;
        puVar9 = puVar9 + 4;
        local_1c = local_1c + 1;
        local_40 = local_40 + 1;
        local_3c = local_3c + 1;
        local_38 = local_38 + 1;
        local_34 = local_34 + 1;
      } while (local_1c < uVar4);
    }
  }
  return;
}



uint FUN_0046493c(int *param_1)

{
  int iVar1;
  undefined4 *puVar2;
  uint uVar3;
  bool bVar4;
  
  puVar2 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0x18);
  *(undefined4 **)((int)param_1 + 0x1ba) = puVar2;
  *puVar2 = &DAT_00464938;
  iVar1 = param_1[9];
  if (iVar1 == 1) {
    uVar3 = 0;
    if (param_1[8] != 1) {
      *(undefined4 *)(*param_1 + 0x14) = 8;
      uVar3 = (**(code **)*param_1)();
    }
  }
  else {
    uVar3 = iVar1 - 4;
    if (iVar1 - 2U < 2) {
      if (param_1[8] != 3) {
        *(undefined4 *)(*param_1 + 0x14) = 8;
        uVar3 = (**(code **)*param_1)();
      }
    }
    else {
      bVar4 = uVar3 < 2;
      uVar3 = iVar1 - 6;
      if (bVar4) {
        if (param_1[8] != 4) {
          *(undefined4 *)(*param_1 + 0x14) = 8;
          uVar3 = (**(code **)*param_1)();
        }
      }
      else if (param_1[8] < 1) {
        *(undefined4 *)(*param_1 + 0x14) = 8;
        uVar3 = (**(code **)*param_1)();
      }
    }
  }
  iVar1 = param_1[10];
  if (iVar1 == 1) {
    param_1[0x1d] = 1;
    if ((param_1[9] == 1) || (param_1[9] == 3)) {
      puVar2[1] = FUN_0046478c;
      for (uVar3 = 1; (int)uVar3 < param_1[8]; uVar3 = uVar3 + 1) {
        *(undefined4 *)(param_1[0x35] + 0x30 + uVar3 * 0x54) = 0;
      }
    }
    else {
      *(undefined4 *)(*param_1 + 0x14) = 0x19;
      uVar3 = (**(code **)*param_1)();
    }
  }
  else if (iVar1 == 2) {
    param_1[0x1d] = 3;
    if (param_1[9] == 3) {
      puVar2[1] = FUN_00464614;
      uVar3 = FUN_0046455c((int)param_1);
    }
    else if (param_1[9] == 2) {
      puVar2[1] = FUN_0046471c;
    }
    else if (param_1[9] == 1) {
      puVar2[1] = FUN_004647ac;
    }
    else {
      *(undefined4 *)(*param_1 + 0x14) = 0x19;
      uVar3 = (**(code **)*param_1)();
    }
  }
  else if (iVar1 == 4) {
    param_1[0x1d] = 4;
    if (param_1[9] == 5) {
      puVar2[1] = FUN_004647f8;
      uVar3 = FUN_0046455c((int)param_1);
    }
    else if (param_1[9] == 4) {
      puVar2[1] = FUN_0046471c;
    }
    else {
      *(undefined4 *)(*param_1 + 0x14) = 0x19;
      uVar3 = (**(code **)*param_1)();
    }
  }
  else if (param_1[10] == param_1[9]) {
    uVar3 = param_1[8];
    param_1[0x1d] = uVar3;
    puVar2[1] = FUN_0046471c;
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 0x19;
    uVar3 = (**(code **)*param_1)();
  }
  if (param_1[0x14] == 0) {
    param_1[0x1e] = param_1[0x1d];
    return uVar3;
  }
  param_1[0x1e] = 1;
  return uVar3;
}



int FUN_00464b08(int *param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  bool bVar3;
  int iVar4;
  int *piVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  int *local_10;
  
  iVar1 = param_1[0x1d];
  iVar2 = param_1[0x17];
  iVar8 = 1;
  do {
    iVar6 = iVar8;
    iVar8 = iVar6 + 1;
    iVar7 = 1;
    iVar4 = iVar8;
    if (1 < iVar1) {
      do {
        iVar4 = iVar4 * iVar8;
        iVar7 = iVar7 + 1;
      } while (iVar7 < iVar1);
    }
  } while (iVar4 <= iVar2);
  if (iVar6 < 2) {
    iVar8 = *param_1;
    *(undefined4 *)(iVar8 + 0x14) = 0x37;
    *(int *)(iVar8 + 0x18) = iVar4;
    (**(code **)*param_1)();
  }
  iVar8 = 1;
  iVar4 = 0;
  piVar5 = param_2;
  if (0 < iVar1) {
    do {
      *piVar5 = iVar6;
      iVar8 = iVar8 * iVar6;
      iVar4 = iVar4 + 1;
      piVar5 = piVar5 + 1;
    } while (iVar4 < iVar1);
  }
  do {
    bVar3 = false;
    iVar4 = 0;
    local_10 = &DAT_00474ecc;
    if (0 < iVar1) {
      do {
        iVar7 = iVar4;
        if (param_1[10] == 2) {
          iVar7 = *local_10;
        }
        iVar6 = (iVar8 / param_2[iVar7]) * (param_2[iVar7] + 1);
        if (iVar6 - iVar2 != 0 && iVar2 <= iVar6) break;
        iVar4 = iVar4 + 1;
        param_2[iVar7] = param_2[iVar7] + 1;
        bVar3 = true;
        local_10 = local_10 + 1;
        iVar8 = iVar6;
      } while (iVar4 < iVar1);
    }
    if (!bVar3) {
      return iVar8;
    }
  } while( true );
}



int FUN_00464c00(undefined4 param_1,undefined4 param_2,int param_3,uint param_4)

{
  int iVar1;
  
  iVar1 = (int)param_4 >> 1;
  if (iVar1 < 0) {
    iVar1 = iVar1 + (uint)((param_4 & 1) != 0);
  }
  return (param_3 * 0xff + iVar1) / (int)param_4;
}



int FUN_00464c24(undefined4 param_1,undefined4 param_2,int param_3,int param_4)

{
  return (param_3 * 0x1fe + param_4 + 0xff) / (param_4 * 2);
}



void FUN_00464c48(int *param_1)

{
  int iVar1;
  int iVar2;
  int *piVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  undefined1 *puVar8;
  int iStack_38;
  int local_34;
  int iStack_30;
  int iStack_28;
  int *piStack_24;
  int *piStack_18;
  
  iVar1 = *(int *)((int)param_1 + 0x1be);
  iVar2 = FUN_00464b08(param_1,(int *)(iVar1 + 0x20));
  if (param_1[0x1d] == 3) {
    iVar4 = *param_1;
    *(int *)(iVar4 + 0x18) = iVar2;
    *(undefined4 *)(iVar4 + 0x1c) = *(undefined4 *)(iVar1 + 0x20);
    *(undefined4 *)(iVar4 + 0x20) = *(undefined4 *)(iVar1 + 0x24);
    *(undefined4 *)(iVar4 + 0x24) = *(undefined4 *)(iVar1 + 0x28);
    *(undefined4 *)(*param_1 + 0x14) = 0x5d;
    (**(code **)(*param_1 + 4))(param_1,1);
  }
  else {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x5e;
    *(int *)(iVar1 + 0x18) = iVar2;
    (**(code **)(*param_1 + 4))(param_1,1);
  }
  iVar1 = param_1[0x1d];
  piVar3 = (int *)(**(code **)(param_1[1] + 8))(param_1,1,iVar2);
  iStack_28 = iStack_38;
  piStack_24 = param_1 + 8;
  piStack_18 = piVar3;
  for (local_34 = 0; local_34 < *(int *)(iVar1 + 0x74); local_34 = local_34 + 1) {
    iVar2 = *piStack_24;
    iVar4 = iStack_28 / iVar2;
    iStack_30 = 0;
    if (0 < iVar2) {
      do {
        iVar5 = FUN_00464c00(iVar1,local_34,iStack_30,iVar2 - 1);
        for (iVar7 = iStack_30 * iVar4; iVar7 < iStack_38; iVar7 = iVar7 + iStack_28) {
          iVar6 = 0;
          if (0 < iVar4) {
            do {
              puVar8 = (undefined1 *)(*piStack_18 + iVar7 + iVar6);
              iVar6 = iVar6 + 1;
              *puVar8 = (char)iVar5;
            } while (iVar6 < iVar4);
          }
        }
        iStack_30 = iStack_30 + 1;
      } while (iStack_30 < iVar2);
    }
    piStack_18 = piStack_18 + 1;
    piStack_24 = piStack_24 + 1;
    iStack_28 = iVar4;
  }
  param_1[4] = (int)piVar3;
  param_1[5] = iStack_38;
  return;
}



void FUN_00464dfc(int param_1)

{
  int *piVar1;
  int iVar2;
  char *pcVar3;
  undefined4 uVar4;
  int iVar5;
  char *pcVar6;
  int iVar7;
  int iVar8;
  int iVar9;
  int iVar10;
  int iStack_20;
  int iStack_1c;
  int *local_18;
  char *pcStack_14;
  
  if (*(int *)(param_1 + 0x54) == 1) {
    local_18 = (int *)0x1fe;
    *(undefined4 *)(*(int *)(param_1 + 0x1be) + 0x1c) = 1;
  }
  else {
    local_18 = (int *)0x0;
    *(undefined4 *)(*(int *)(param_1 + 0x1be) + 0x1c) = 0;
  }
  iVar2 = *(int *)(param_1 + 0x74);
  uVar4 = (**(code **)(*(int *)(param_1 + 4) + 8))(param_1,1,(int)local_18 + 0x100);
  *(undefined4 *)(param_1 + 0x18) = uVar4;
  iStack_20 = *(int *)(param_1 + 0x14);
  local_18 = (int *)(param_1 + 0x20);
  for (iVar10 = 0; iVar10 < *(int *)(iVar2 + 0x74); iVar10 = iVar10 + 1) {
    iVar8 = *local_18;
    iStack_20 = iStack_20 / iVar8;
    if (iStack_1c != 0) {
      piVar1 = (int *)(*(int *)(param_1 + 0x18) + iVar10 * 4);
      *piVar1 = *piVar1 + 0xff;
    }
    iVar9 = 0;
    pcVar3 = *(char **)(*(int *)(param_1 + 0x18) + iVar10 * 4);
    iVar5 = FUN_00464c24(iVar2,iVar10,0,iVar8 + -1);
    iVar7 = 0;
    pcStack_14 = pcVar3;
    do {
      while (iVar5 < iVar7) {
        iVar9 = iVar9 + 1;
        iVar5 = FUN_00464c24(iVar2,iVar10,iVar9,iVar8 + -1);
      }
      *pcStack_14 = (char)iVar9 * (char)iStack_20;
      iVar7 = iVar7 + 1;
      pcStack_14 = pcStack_14 + 1;
    } while (iVar7 < 0x100);
    if (iStack_1c != 0) {
      iVar8 = 1;
      pcVar6 = pcVar3 + 0x100;
      do {
        iVar5 = -iVar8;
        iVar8 = iVar8 + 1;
        pcVar3[iVar5] = *pcVar3;
        *pcVar6 = pcVar3[0xff];
        pcVar6 = pcVar6 + 1;
      } while (iVar8 < 0x100);
    }
    local_18 = local_18 + 1;
  }
  return;
}



int * FUN_00464f6c(int param_1,int param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  byte *pbVar4;
  int iVar5;
  int *piVar6;
  int iVar7;
  int iStack_1c;
  int *piStack_18;
  byte *pbStack_14;
  
  piVar1 = (int *)(*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x400);
  iVar5 = param_2 * 0x200 + -0x200;
  iStack_1c = 0;
  pbStack_14 = &DAT_00474dcc;
  piStack_18 = piVar1;
  do {
    iVar7 = 0;
    pbVar4 = pbStack_14;
    piVar6 = piStack_18;
    do {
      iVar3 = (uint)*pbVar4 * -2 + 0xff;
      iVar2 = iVar3 * 0xff;
      if (iVar2 < 0) {
        iVar2 = -((iVar3 * -0xff) / iVar5);
      }
      else {
        iVar2 = iVar2 / iVar5;
      }
      *piVar6 = iVar2;
      iVar7 = iVar7 + 1;
      piVar6 = piVar6 + 1;
      pbVar4 = pbVar4 + 1;
    } while (iVar7 < 0x10);
    iStack_1c = iStack_1c + 1;
    pbStack_14 = pbStack_14 + 0x10;
    piStack_18 = piStack_18 + 0x10;
  } while (iStack_1c < 0x10);
  return piVar1;
}



void FUN_0046500c(int param_1)

{
  int iVar1;
  int *piVar2;
  int *piVar3;
  int iVar4;
  int iVar5;
  int *piVar6;
  
  iVar1 = *(int *)(param_1 + 0x1be);
  iVar5 = 0;
  piVar6 = (int *)(iVar1 + 0x20);
  do {
    if (*(int *)(param_1 + 0x74) <= iVar5) {
      return;
    }
    piVar3 = (int *)0x0;
    iVar4 = 0;
    piVar2 = (int *)(iVar1 + 0x20);
    if (0 < iVar5) {
      do {
        if (*piVar6 == *piVar2) {
          piVar3 = (int *)piVar2[5];
          break;
        }
        iVar4 = iVar4 + 1;
        piVar2 = piVar2 + 1;
      } while (iVar4 < iVar5);
    }
    if (piVar3 == (int *)0x0) {
      piVar3 = FUN_00464f6c(param_1,*piVar6);
    }
    piVar6[5] = (int)piVar3;
    iVar5 = iVar5 + 1;
    piVar6 = piVar6 + 1;
  } while( true );
}



void FUN_00465074(int param_1,undefined4 *param_2,int *param_3,int param_4)

{
  int iVar1;
  byte bVar2;
  int *piVar3;
  int iVar4;
  int iVar5;
  char *pcVar6;
  int iVar7;
  int *piVar8;
  byte *pbVar9;
  int iVar10;
  char cVar11;
  int *local_24;
  undefined4 *local_20;
  int local_10;
  
  piVar3 = *(int **)(*(int *)(param_1 + 0x1be) + 0x18);
  iVar4 = *(int *)(param_1 + 0x6c);
  iVar5 = *(int *)(param_1 + 0x74);
  local_10 = 0;
  local_24 = param_3;
  local_20 = param_2;
  if (0 < param_4) {
    do {
      pbVar9 = (byte *)*local_20;
      pcVar6 = (char *)*local_24;
      for (iVar1 = iVar4; iVar1 != 0; iVar1 = iVar1 + -1) {
        cVar11 = '\0';
        iVar10 = 0;
        piVar8 = piVar3;
        if (0 < iVar5) {
          do {
            iVar7 = *piVar8;
            bVar2 = *pbVar9;
            pbVar9 = pbVar9 + 1;
            piVar8 = piVar8 + 1;
            iVar10 = iVar10 + 1;
            cVar11 = cVar11 + *(char *)(iVar7 + (uint)bVar2);
          } while (iVar10 < iVar5);
        }
        *pcVar6 = cVar11;
        pcVar6 = pcVar6 + 1;
      }
      local_10 = local_10 + 1;
      local_24 = local_24 + 1;
      local_20 = local_20 + 1;
    } while (local_10 < param_4);
  }
  return;
}



void FUN_00465114(int param_1,undefined4 *param_2,int *param_3,int param_4)

{
  byte bVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  byte *pbVar7;
  byte *pbVar8;
  byte *pbVar9;
  char *pcVar10;
  int iVar11;
  int *local_20;
  undefined4 *local_1c;
  int local_14;
  
  piVar2 = *(int **)(*(int *)(param_1 + 0x1be) + 0x18);
  iVar3 = *piVar2;
  iVar4 = piVar2[1];
  iVar5 = piVar2[2];
  iVar6 = *(int *)(param_1 + 0x6c);
  local_14 = 0;
  local_20 = param_3;
  local_1c = param_2;
  if (0 < param_4) {
    do {
      pbVar9 = (byte *)*local_1c;
      pcVar10 = (char *)*local_20;
      for (iVar11 = iVar6; iVar11 != 0; iVar11 = iVar11 + -1) {
        bVar1 = *pbVar9;
        pbVar7 = pbVar9 + 1;
        pbVar8 = pbVar9 + 2;
        pbVar9 = pbVar9 + 3;
        *pcVar10 = *(char *)(iVar3 + (uint)bVar1) + *(char *)(iVar4 + (uint)*pbVar7) +
                   *(char *)(iVar5 + (uint)*pbVar8);
        pcVar10 = pcVar10 + 1;
      }
      local_14 = local_14 + 1;
      local_20 = local_20 + 1;
      local_1c = local_1c + 1;
    } while (local_14 < param_4);
  }
  return;
}



void FUN_004651b0(int param_1,int *param_2,undefined4 *param_3,int param_4)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  uint uVar8;
  char *pcVar9;
  byte *pbVar10;
  int iVar11;
  int *local_38;
  int *local_34;
  undefined4 *local_28;
  int local_20;
  int local_1c;
  
  iVar2 = *(int *)(param_1 + 0x1be);
  iVar3 = *(int *)(param_1 + 0x74);
  iVar4 = *(int *)(param_1 + 0x6c);
  local_20 = 0;
  local_38 = param_2;
  local_28 = param_3;
  if (0 < param_4) {
    do {
      FUN_0045ef60();
      iVar5 = *(int *)(iVar2 + 0x30);
      local_1c = 0;
      local_34 = (int *)(iVar2 + 0x34);
      if (0 < iVar3) {
        do {
          pcVar9 = (char *)*local_28;
          pbVar10 = (byte *)(*local_38 + local_1c);
          iVar6 = *(int *)(*(int *)(iVar2 + 0x18) + local_1c * 4);
          iVar7 = *local_34;
          uVar8 = 0;
          for (iVar11 = iVar4; iVar11 != 0; iVar11 = iVar11 + -1) {
            iVar1 = uVar8 * 4;
            uVar8 = uVar8 + 1 & 0xf;
            *pcVar9 = *pcVar9 + *(char *)(iVar6 + (uint)*pbVar10 +
                                         *(int *)(iVar7 + iVar5 * 0x40 + iVar1));
            pcVar9 = pcVar9 + 1;
            pbVar10 = pbVar10 + iVar3;
          }
          local_1c = local_1c + 1;
          local_34 = local_34 + 1;
        } while (local_1c < iVar3);
      }
      *(uint *)(iVar2 + 0x30) = iVar5 + 1U & 0xf;
      local_20 = local_20 + 1;
      local_38 = local_38 + 1;
      local_28 = local_28 + 1;
    } while (local_20 < param_4);
  }
  return;
}



void FUN_004652c4(int param_1,undefined4 *param_2,int *param_3,int param_4)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  byte bVar5;
  int iVar6;
  int *piVar7;
  int iVar8;
  int iVar9;
  int iVar10;
  int iVar11;
  int iVar12;
  int iVar13;
  int iVar14;
  int iVar15;
  byte *pbVar16;
  byte *pbVar17;
  byte *pbVar18;
  int iVar19;
  uint uVar20;
  char *pcVar21;
  int *local_38;
  undefined4 *local_34;
  int local_28;
  
  iVar6 = *(int *)(param_1 + 0x1be);
  piVar7 = *(int **)(iVar6 + 0x18);
  iVar8 = *piVar7;
  iVar9 = piVar7[1];
  iVar10 = piVar7[2];
  iVar11 = *(int *)(param_1 + 0x6c);
  local_28 = 0;
  local_38 = param_3;
  local_34 = param_2;
  if (0 < param_4) {
    do {
      iVar12 = *(int *)(iVar6 + 0x30);
      pcVar21 = (char *)*local_38;
      iVar13 = *(int *)(iVar6 + 0x34);
      iVar19 = iVar12 * 0x40;
      pbVar18 = (byte *)*local_34;
      iVar14 = *(int *)(iVar6 + 0x38);
      iVar15 = *(int *)(iVar6 + 0x3c);
      uVar20 = 0;
      for (iVar4 = iVar11; iVar4 != 0; iVar4 = iVar4 + -1) {
        bVar5 = *pbVar18;
        pbVar16 = pbVar18 + 1;
        iVar1 = uVar20 * 4;
        pbVar17 = pbVar18 + 2;
        iVar2 = uVar20 * 4;
        pbVar18 = pbVar18 + 3;
        iVar3 = uVar20 * 4;
        uVar20 = uVar20 + 1 & 0xf;
        *pcVar21 = *(char *)(iVar8 + (uint)bVar5 + *(int *)(iVar13 + iVar19 + iVar1)) +
                   *(char *)(iVar9 + (uint)*pbVar16 + *(int *)(iVar14 + iVar19 + iVar2)) +
                   *(char *)(iVar10 + (uint)*pbVar17 + *(int *)(iVar15 + iVar19 + iVar3));
        pcVar21 = pcVar21 + 1;
      }
      *(uint *)(iVar6 + 0x30) = iVar12 + 1U & 0xf;
      local_28 = local_28 + 1;
      local_38 = local_38 + 1;
      local_34 = local_34 + 1;
    } while (local_28 < param_4);
  }
  return;
}



void FUN_004653dc(int param_1,int *param_2,undefined4 *param_3,int param_4)

{
  int iVar1;
  byte bVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  int iVar9;
  uint uVar10;
  int iVar11;
  short *psVar12;
  int iVar13;
  int *local_54;
  int *local_50;
  undefined4 *local_44;
  int local_34;
  int local_30;
  int local_2c;
  char *local_1c;
  byte *local_18;
  int local_10;
  int local_c;
  
  iVar3 = *(int *)(param_1 + 0x1be);
  iVar4 = *(int *)(param_1 + 0x74);
  iVar5 = *(int *)(param_1 + 0x6c);
  iVar6 = *(int *)(param_1 + 0x136);
  local_34 = 0;
  local_54 = param_2;
  local_44 = param_3;
  if (0 < param_4) {
    do {
      FUN_0045ef60();
      local_30 = 0;
      local_50 = (int *)(iVar3 + 0x44);
      if (0 < iVar4) {
        do {
          local_18 = (byte *)(*local_54 + local_30);
          local_1c = (char *)*local_44;
          if (*(int *)(iVar3 + 0x54) == 0) {
            iVar13 = 1;
            psVar12 = (short *)*local_50;
            local_2c = iVar4;
          }
          else {
            iVar13 = -1;
            local_18 = local_18 + (iVar5 + -1) * iVar4;
            local_1c = local_1c + iVar5 + -1;
            psVar12 = (short *)(*local_50 + (iVar5 + 1) * 2);
            local_2c = -iVar4;
          }
          iVar7 = *(int *)(*(int *)(iVar3 + 0x18) + local_30 * 4);
          iVar8 = *(int *)(*(int *)(iVar3 + 0x10) + local_30 * 4);
          iVar9 = 0;
          local_10 = 0;
          local_c = 0;
          for (iVar1 = iVar5; iVar1 != 0; iVar1 = iVar1 + -1) {
            uVar10 = (uint)*(byte *)(iVar6 + (iVar9 + psVar12[iVar13] + 8 >> 4) + (uint)*local_18);
            bVar2 = *(byte *)(iVar7 + uVar10);
            *local_1c = *local_1c + bVar2;
            iVar11 = uVar10 - *(byte *)(iVar8 + (uint)bVar2);
            *psVar12 = (short)local_10 + (short)iVar11 * 3;
            local_10 = local_c + iVar11 * 5;
            iVar9 = iVar11 * 7;
            local_18 = local_18 + local_2c;
            local_1c = local_1c + iVar13;
            psVar12 = psVar12 + iVar13;
            local_c = iVar11;
          }
          *psVar12 = (short)local_10;
          local_30 = local_30 + 1;
          local_50 = local_50 + 1;
        } while (local_30 < iVar4);
      }
      *(uint *)(iVar3 + 0x54) = (uint)(*(int *)(iVar3 + 0x54) == 0);
      local_34 = local_34 + 1;
      local_54 = local_54 + 1;
      local_44 = local_44 + 1;
    } while (local_34 < param_4);
  }
  return;
}



void FUN_0046559c(int param_1)

{
  int iVar1;
  undefined4 uVar2;
  undefined4 *puVar3;
  int iVar4;
  
  iVar1 = *(int *)(param_1 + 0x6c);
  puVar3 = (undefined4 *)(*(int *)(param_1 + 0x1be) + 0x44);
  for (iVar4 = 0; iVar4 < *(int *)(param_1 + 0x74); iVar4 = iVar4 + 1) {
    uVar2 = (**(code **)(*(int *)(param_1 + 4) + 4))(param_1,1,iVar1 * 2 + 4);
    *puVar3 = uVar2;
    puVar3 = puVar3 + 1;
  }
  return;
}



void FUN_004655dc(int *param_1)

{
  int iVar1;
  int iVar2;
  
  iVar2 = *(int *)((int)param_1 + 0x1be);
  param_1[0x21] = *(int *)(iVar2 + 0x10);
  param_1[0x20] = *(int *)(iVar2 + 0x14);
  iVar1 = param_1[0x15];
  if (iVar1 == 0) {
    if (param_1[0x1d] == 3) {
      *(code **)(iVar2 + 4) = FUN_00465114;
    }
    else {
      *(code **)(iVar2 + 4) = FUN_00465074;
    }
  }
  else if (iVar1 == 1) {
    if (param_1[0x1d] == 3) {
      *(code **)(iVar2 + 4) = FUN_004652c4;
    }
    else {
      *(code **)(iVar2 + 4) = FUN_004651b0;
    }
    *(undefined4 *)(iVar2 + 0x30) = 0;
    if (*(int *)(iVar2 + 0x1c) == 0) {
      FUN_00464dfc((int)param_1);
    }
    if (*(int *)(iVar2 + 0x34) == 0) {
      FUN_0046500c((int)param_1);
    }
  }
  else if (iVar1 == 2) {
    *(code **)(iVar2 + 4) = FUN_004653dc;
    *(undefined4 *)(iVar2 + 0x54) = 0;
    if (*(int *)(iVar2 + 0x44) == 0) {
      FUN_0046559c((int)param_1);
    }
    for (iVar2 = 0; iVar2 < param_1[0x1d]; iVar2 = iVar2 + 1) {
      FUN_0045ef60();
    }
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 0x2f;
    (**(code **)*param_1)();
  }
  return;
}



void FUN_004656cc(int *param_1)

{
  int iVar1;
  undefined4 *puVar2;
  
  puVar2 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0x58);
  *(undefined4 **)((int)param_1 + 0x1be) = puVar2;
  *puVar2 = FUN_004655dc;
  puVar2[2] = &DAT_004656b8;
  puVar2[3] = &LAB_004656bc;
  puVar2[0x11] = 0;
  puVar2[0xd] = 0;
  if (4 < param_1[0x1d]) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x36;
    *(undefined4 *)(iVar1 + 0x18) = 4;
    (**(code **)*param_1)();
  }
  if (0x100 < param_1[0x17]) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x38;
    *(undefined4 *)(iVar1 + 0x18) = 0x100;
    (**(code **)*param_1)();
  }
  FUN_00464c48(param_1);
  FUN_00464dfc((int)param_1);
  if (param_1[0x15] == 2) {
    FUN_0046559c((int)param_1);
  }
  return;
}



int FUN_004657e4(int param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  iVar2 = 0;
  iVar3 = 0;
  iVar1 = 0;
  if (0 < param_2) {
    do {
      if ((iVar2 < *(int *)(param_1 + 0x1c)) && (0 < *(int *)(param_1 + 0x18))) {
        iVar2 = *(int *)(param_1 + 0x1c);
        iVar3 = param_1;
      }
      iVar1 = iVar1 + 1;
      param_1 = param_1 + 0x20;
    } while (iVar1 < param_2);
  }
  return iVar3;
}



int FUN_00465810(int param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  iVar2 = 0;
  iVar3 = 0;
  iVar1 = 0;
  if (0 < param_2) {
    do {
      if (iVar2 < *(int *)(param_1 + 0x18)) {
        iVar2 = *(int *)(param_1 + 0x18);
        iVar3 = param_1;
      }
      iVar1 = iVar1 + 1;
      param_1 = param_1 + 0x20;
    } while (iVar1 < param_2);
  }
  return iVar3;
}



void FUN_00465838(int param_1,int *param_2)

{
  int *piVar1;
  short sVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  short *psVar6;
  int iVar7;
  int iVar8;
  int local_4c;
  int local_48;
  int local_44;
  int local_40;
  int local_3c;
  int local_38;
  
  iVar3 = *(int *)(*(int *)(param_1 + 0x1be) + 0x18);
  local_4c = *param_2;
  local_48 = param_2[1];
  local_44 = param_2[2];
  local_40 = param_2[3];
  local_3c = param_2[4];
  iVar8 = param_2[5];
  if (local_4c < local_48) {
    piVar1 = (int *)(iVar3 + local_4c * 4);
    for (iVar5 = local_4c; iVar7 = local_44, iVar5 <= local_48; iVar5 = iVar5 + 1) {
      for (; iVar7 <= local_40; iVar7 = iVar7 + 1) {
        psVar6 = (short *)(*piVar1 + iVar7 * 0x40 + local_3c * 2);
        for (iVar4 = local_3c; iVar4 <= iVar8; iVar4 = iVar4 + 1) {
          sVar2 = *psVar6;
          psVar6 = psVar6 + 1;
          if (sVar2 != 0) {
            *param_2 = iVar5;
            local_4c = iVar5;
            goto LAB_00465903;
          }
        }
      }
      piVar1 = piVar1 + 1;
    }
  }
LAB_00465903:
  if (local_4c < local_48) {
    piVar1 = (int *)(iVar3 + local_48 * 4);
    for (iVar5 = local_48; iVar7 = local_44, local_4c <= iVar5; iVar5 = iVar5 + -1) {
      for (; iVar7 <= local_40; iVar7 = iVar7 + 1) {
        psVar6 = (short *)(*piVar1 + iVar7 * 0x40 + local_3c * 2);
        for (iVar4 = local_3c; iVar4 <= iVar8; iVar4 = iVar4 + 1) {
          sVar2 = *psVar6;
          psVar6 = psVar6 + 1;
          if (sVar2 != 0) {
            param_2[1] = iVar5;
            local_48 = iVar5;
            goto LAB_00465982;
          }
        }
      }
      piVar1 = piVar1 + -1;
    }
  }
LAB_00465982:
  iVar5 = local_44;
  if (local_44 < local_40) {
    for (; iVar5 <= local_40; iVar5 = iVar5 + 1) {
      piVar1 = (int *)(iVar3 + local_4c * 4);
      for (iVar7 = local_4c; iVar7 <= local_48; iVar7 = iVar7 + 1) {
        psVar6 = (short *)(*piVar1 + iVar5 * 0x40 + local_3c * 2);
        for (iVar4 = local_3c; iVar4 <= iVar8; iVar4 = iVar4 + 1) {
          sVar2 = *psVar6;
          psVar6 = psVar6 + 1;
          if (sVar2 != 0) {
            param_2[2] = iVar5;
            local_44 = iVar5;
            goto LAB_004659f7;
          }
        }
        piVar1 = piVar1 + 1;
      }
    }
  }
LAB_004659f7:
  iVar5 = local_40;
  if (local_44 < local_40) {
    for (; local_44 <= iVar5; iVar5 = iVar5 + -1) {
      piVar1 = (int *)(iVar3 + local_4c * 4);
      for (iVar7 = local_4c; iVar7 <= local_48; iVar7 = iVar7 + 1) {
        psVar6 = (short *)(*piVar1 + iVar5 * 0x40 + local_3c * 2);
        for (iVar4 = local_3c; iVar4 <= iVar8; iVar4 = iVar4 + 1) {
          sVar2 = *psVar6;
          psVar6 = psVar6 + 1;
          if (sVar2 != 0) {
            param_2[3] = iVar5;
            local_40 = iVar5;
            goto LAB_00465a6c;
          }
        }
        piVar1 = piVar1 + 1;
      }
    }
  }
LAB_00465a6c:
  iVar5 = local_3c;
  if (local_3c < iVar8) {
    for (; iVar5 <= iVar8; iVar5 = iVar5 + 1) {
      piVar1 = (int *)(iVar3 + local_4c * 4);
      for (iVar7 = local_4c; iVar7 <= local_48; iVar7 = iVar7 + 1) {
        psVar6 = (short *)(*piVar1 + local_44 * 0x40 + iVar5 * 2);
        for (iVar4 = local_44; iVar4 <= local_40; iVar4 = iVar4 + 1) {
          if (*psVar6 != 0) {
            param_2[4] = iVar5;
            local_3c = iVar5;
            goto LAB_00465adb;
          }
          psVar6 = psVar6 + 0x20;
        }
        piVar1 = piVar1 + 1;
      }
    }
  }
LAB_00465adb:
  iVar5 = iVar8;
  if (local_3c < iVar8) {
    for (; local_3c <= iVar5; iVar5 = iVar5 + -1) {
      piVar1 = (int *)(iVar3 + local_4c * 4);
      for (iVar7 = local_4c; iVar7 <= local_48; iVar7 = iVar7 + 1) {
        psVar6 = (short *)(*piVar1 + local_44 * 0x40 + iVar5 * 2);
        for (iVar4 = local_44; iVar4 <= local_40; iVar4 = iVar4 + 1) {
          if (*psVar6 != 0) {
            param_2[5] = iVar5;
            iVar8 = iVar5;
            goto LAB_00465b4a;
          }
          psVar6 = psVar6 + 0x20;
        }
        piVar1 = piVar1 + 1;
      }
    }
  }
LAB_00465b4a:
  iVar4 = (local_48 - local_4c) * 8;
  iVar5 = (iVar8 - local_3c) * 0x10;
  iVar7 = (local_40 - local_44) * 0xc;
  param_2[6] = iVar4 * iVar4 + iVar7 * iVar7 + iVar5 * iVar5;
  local_38 = 0;
  piVar1 = (int *)(iVar3 + local_4c * 4);
  for (; iVar3 = local_44, local_4c <= local_48; local_4c = local_4c + 1) {
    for (; iVar3 <= local_40; iVar3 = iVar3 + 1) {
      psVar6 = (short *)(*piVar1 + iVar3 * 0x40 + local_3c * 2);
      for (iVar5 = local_3c; iVar5 <= iVar8; iVar5 = iVar5 + 1) {
        if (*psVar6 != 0) {
          local_38 = local_38 + 1;
        }
        psVar6 = psVar6 + 1;
      }
    }
    piVar1 = piVar1 + 1;
  }
  param_2[7] = local_38;
  return;
}



int FUN_00465c08(int param_1,int param_2,int param_3,int param_4)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int *piVar5;
  
  if (param_3 < param_4) {
    do {
      if (param_4 < param_3 * 2) {
        piVar1 = (int *)FUN_00465810(param_2,param_3);
      }
      else {
        piVar1 = (int *)FUN_004657e4(param_2,param_3);
      }
      if (piVar1 == (int *)0x0) {
        return param_3;
      }
      piVar5 = (int *)(param_3 * 0x20 + param_2);
      piVar5[1] = piVar1[1];
      piVar5[3] = piVar1[3];
      piVar5[5] = piVar1[5];
      *piVar5 = *piVar1;
      piVar5[2] = piVar1[2];
      piVar5[4] = piVar1[4];
      iVar3 = (piVar1[3] - piVar1[2]) * 0xc;
      iVar4 = (piVar1[5] - piVar1[4]) * 0x10;
      iVar2 = 1;
      if (iVar3 < iVar4) {
        iVar2 = 2;
        iVar3 = iVar4;
      }
      if (iVar3 < (piVar1[1] - *piVar1) * 8) {
        iVar2 = 0;
      }
      if (iVar2 == 0) {
        iVar4 = piVar1[1] + *piVar1 >> 1;
        if (iVar4 < 0) {
          iVar4 = iVar4 + (uint)((piVar1[1] + *piVar1 & 1U) != 0);
        }
        piVar1[1] = iVar4;
        *piVar5 = iVar4 + 1;
      }
      else if (iVar2 == 1) {
        iVar4 = piVar1[3] + piVar1[2] >> 1;
        if (iVar4 < 0) {
          iVar4 = iVar4 + (uint)((piVar1[3] + piVar1[2] & 1U) != 0);
        }
        piVar1[3] = iVar4;
        piVar5[2] = iVar4 + 1;
      }
      else if (iVar2 == 2) {
        iVar4 = piVar1[5] + piVar1[4] >> 1;
        if (iVar4 < 0) {
          iVar4 = iVar4 + (uint)((piVar1[5] + piVar1[4] & 1U) != 0);
        }
        piVar1[5] = iVar4;
        piVar5[4] = iVar4 + 1;
      }
      FUN_00465838(param_1,piVar1);
      FUN_00465838(param_1,piVar5);
      param_3 = param_3 + 1;
    } while (param_3 < param_4);
  }
  return param_3;
}



void FUN_00465d24(int param_1,int *param_2,int param_3)

{
  int *piVar1;
  ushort uVar2;
  int iVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  ushort *puVar7;
  int local_28;
  int local_24;
  int local_20;
  int local_1c;
  
  local_28 = 0;
  local_24 = 0;
  local_20 = 0;
  local_1c = 0;
  iVar5 = *param_2;
  piVar1 = (int *)(*(int *)(*(int *)(param_1 + 0x1be) + 0x18) + iVar5 * 4);
  for (; iVar3 = param_2[2], iVar5 <= param_2[1]; iVar5 = iVar5 + 1) {
    for (; iVar3 <= param_2[3]; iVar3 = iVar3 + 1) {
      puVar7 = (ushort *)(*piVar1 + iVar3 * 0x40 + param_2[4] * 2);
      for (iVar6 = param_2[4]; iVar6 <= param_2[5]; iVar6 = iVar6 + 1) {
        uVar2 = *puVar7;
        puVar7 = puVar7 + 1;
        uVar4 = (uint)uVar2;
        if (uVar4 != 0) {
          local_28 = local_28 + uVar4;
          local_24 = local_24 + (iVar5 * 8 + 4) * uVar4;
          local_20 = local_20 + (iVar3 * 4 + 2) * uVar4;
          local_1c = local_1c + (iVar6 * 8 + 4) * uVar4;
        }
      }
    }
    piVar1 = piVar1 + 1;
  }
  iVar5 = local_28 >> 1;
  piVar1 = *(int **)(param_1 + 0x84);
  *(char *)(*piVar1 + param_3) = (char)((iVar5 + local_24) / local_28);
  *(char *)(piVar1[1] + param_3) = (char)((iVar5 + local_20) / local_28);
  *(char *)(piVar1[2] + param_3) = (char)((iVar5 + local_1c) / local_28);
  return;
}



void FUN_00465e68(int *param_1,int param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  piVar1 = (int *)(**(code **)param_1[1])(param_1,1,param_2 << 5);
  *piVar1 = 0;
  piVar1[1] = 0x1f;
  piVar1[2] = 0;
  piVar1[3] = 0x3f;
  piVar1[4] = 0;
  piVar1[5] = 0x1f;
  FUN_00465838((int)param_1,piVar1);
  iVar2 = FUN_00465c08((int)param_1,(int)piVar1,1,param_2);
  iVar3 = 0;
  if (0 < iVar2) {
    do {
      FUN_00465d24((int)param_1,piVar1 + iVar3 * 8,iVar3);
      iVar3 = iVar3 + 1;
    } while (iVar3 < iVar2);
  }
  param_1[0x20] = iVar2;
  iVar3 = *param_1;
  *(undefined4 *)(iVar3 + 0x14) = 0x5f;
  *(int *)(iVar3 + 0x18) = iVar2;
  (**(code **)(*param_1 + 4))(param_1,1);
  return;
}



int FUN_00465f00(int param_1,int param_2,int param_3,undefined1 *param_4,int param_5)

{
  int iVar1;
  int iVar2;
  int *piVar3;
  int iVar4;
  int iVar5;
  uint uVar6;
  int local_440 [256];
  int *local_40;
  byte *local_3c;
  byte *local_38;
  byte *local_34;
  int local_30;
  int local_2c;
  int local_28;
  int local_24;
  int local_20;
  int local_1c;
  int local_18;
  int local_14;
  int local_10;
  int local_c;
  int local_8;
  
  local_c = param_3;
  local_8 = param_2;
  local_10 = *(int *)(param_1 + 0x80);
  local_14 = param_2 + 0x18;
  local_20 = param_2 + param_2 + 0x18 >> 1;
  local_18 = param_3 + 0x1c;
  local_24 = param_3 + param_3 + 0x1c >> 1;
  local_1c = param_5 + 0x18;
  local_28 = param_5 + param_5 + 0x18 >> 1;
  local_30 = 0x7fffffff;
  local_2c = 0;
  local_40 = local_440;
  local_3c = *(byte **)(*(int *)(param_1 + 0x84) + 8);
  local_38 = *(byte **)(*(int *)(param_1 + 0x84) + 4);
  local_34 = (byte *)**(int **)(param_1 + 0x84);
  if (0 < *(int *)(param_1 + 0x80)) {
    do {
      uVar6 = (uint)*local_34;
      if ((int)uVar6 < local_8) {
        iVar5 = (uVar6 - local_8) * (uVar6 - local_8);
        iVar4 = (uVar6 - local_14) * (uVar6 - local_14);
      }
      else if (local_14 < (int)uVar6) {
        iVar5 = (uVar6 - local_14) * (uVar6 - local_14);
        iVar4 = (uVar6 - local_8) * (uVar6 - local_8);
      }
      else {
        iVar5 = 0;
        if (local_20 < (int)uVar6) {
          iVar4 = (uVar6 - local_8) * (uVar6 - local_8);
        }
        else {
          iVar4 = (uVar6 - local_14) * (uVar6 - local_14);
        }
      }
      uVar6 = (uint)*local_38;
      if ((int)uVar6 < local_c) {
        iVar1 = (uVar6 - local_c) * 3;
        iVar2 = (uVar6 - local_18) * 3;
        iVar5 = iVar5 + iVar1 * iVar1;
        iVar4 = iVar4 + iVar2 * iVar2;
      }
      else if (local_18 < (int)uVar6) {
        iVar1 = (uVar6 - local_18) * 3;
        iVar2 = (uVar6 - local_c) * 3;
        iVar5 = iVar5 + iVar1 * iVar1;
        iVar4 = iVar4 + iVar2 * iVar2;
      }
      else if (local_24 < (int)uVar6) {
        iVar1 = (uVar6 - local_c) * 3;
        iVar4 = iVar4 + iVar1 * iVar1;
      }
      else {
        iVar1 = (uVar6 - local_18) * 3;
        iVar4 = iVar4 + iVar1 * iVar1;
      }
      uVar6 = (uint)*local_3c;
      if ((int)uVar6 < param_5) {
        iVar1 = (uVar6 - param_5) * 2;
        iVar5 = iVar5 + iVar1 * iVar1;
        iVar1 = (uVar6 - local_1c) * 2;
        iVar4 = iVar4 + iVar1 * iVar1;
      }
      else if (local_1c < (int)uVar6) {
        iVar1 = (uVar6 - local_1c) * 2;
        iVar5 = iVar5 + iVar1 * iVar1;
        iVar1 = (uVar6 - param_5) * 2;
        iVar4 = iVar4 + iVar1 * iVar1;
      }
      else if (local_28 < (int)uVar6) {
        iVar1 = (uVar6 - param_5) * 2;
        iVar4 = iVar4 + iVar1 * iVar1;
      }
      else {
        iVar1 = (uVar6 - local_1c) * 2;
        iVar4 = iVar4 + iVar1 * iVar1;
      }
      *local_40 = iVar5;
      if (iVar4 < local_30) {
        local_30 = iVar4;
      }
      local_2c = local_2c + 1;
      local_40 = local_40 + 1;
      local_3c = local_3c + 1;
      local_38 = local_38 + 1;
      local_34 = local_34 + 1;
    } while (local_2c < local_10);
  }
  iVar5 = 0;
  local_2c = 0;
  piVar3 = local_440;
  if (0 < local_10) {
    do {
      if (*piVar3 <= local_30) {
        iVar5 = iVar5 + 1;
        *param_4 = (undefined1)local_2c;
        param_4 = param_4 + 1;
      }
      local_2c = local_2c + 1;
      piVar3 = piVar3 + 1;
    } while (local_2c < local_10);
  }
  return iVar5;
}



void FUN_00466140(int param_1,int param_2,int param_3,undefined1 *param_4,byte *param_5,int param_6,
                 int param_7)

{
  int iVar1;
  int iVar2;
  int *piVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int local_240 [128];
  byte *local_40;
  int local_3c;
  int local_38;
  int local_34;
  int local_30;
  int local_2c;
  int local_28;
  undefined1 *local_24;
  uint local_20;
  int local_1c;
  int local_18;
  int local_14;
  int local_10;
  int local_c;
  int local_8;
  
  local_10 = param_3;
  local_c = param_2;
  local_8 = param_1;
  local_1c = 0x7f;
  piVar3 = local_240;
  do {
    *piVar3 = 0x7fffffff;
    piVar3 = piVar3 + 1;
    local_1c = local_1c + -1;
  } while (-1 < local_1c);
  local_1c = 0;
  local_40 = param_5;
  if (0 < param_6) {
    do {
      local_20 = (uint)*local_40;
      piVar3 = *(int **)(local_8 + 0x84);
      iVar1 = local_c - (uint)*(byte *)(*piVar3 + local_20);
      iVar5 = local_10 - (uint)*(byte *)(piVar3[1] + local_20);
      iVar4 = iVar5 * 3;
      iVar2 = param_7 - (uint)*(byte *)(piVar3[2] + local_20);
      iVar6 = iVar2 * 2;
      local_28 = iVar1 * iVar1 + iVar4 * iVar4 + iVar6 * iVar6;
      local_38 = iVar5 * 0x48 + 0x90;
      local_3c = iVar2 * 0x40 + 0x100;
      piVar3 = local_240;
      local_24 = param_4;
      local_30 = iVar1 * 0x10 + 0x40;
      local_14 = 3;
      do {
        local_2c = local_28;
        local_34 = local_38;
        local_18 = 7;
        do {
          iVar1 = 3;
          iVar4 = local_3c;
          iVar6 = local_2c;
          do {
            if (iVar6 < *piVar3) {
              *piVar3 = iVar6;
              *local_24 = (undefined1)local_20;
            }
            iVar6 = iVar6 + iVar4;
            iVar4 = iVar4 + 0x200;
            piVar3 = piVar3 + 1;
            local_24 = local_24 + 1;
            iVar1 = iVar1 + -1;
          } while (-1 < iVar1);
          local_2c = local_2c + local_34;
          local_34 = local_34 + 0x120;
          local_18 = local_18 + -1;
        } while (-1 < local_18);
        local_28 = local_28 + local_30;
        local_30 = local_30 + 0x80;
        local_14 = local_14 + -1;
      } while (-1 < local_14);
      local_1c = local_1c + 1;
      local_40 = local_40 + 1;
    } while (local_1c < param_6);
  }
  return;
}



void FUN_004662b8(int param_1,int param_2,int param_3,int param_4)

{
  int iVar1;
  short *psVar2;
  byte *pbVar3;
  int iVar4;
  int iVar5;
  byte local_198 [128];
  byte local_118 [256];
  int local_18;
  int local_14;
  int local_10;
  int local_c;
  int local_8;
  
  local_10 = *(int *)(*(int *)(param_1 + 0x1be) + 0x18);
  local_8 = param_2 >> 2;
  local_c = param_3 >> 3;
  iVar5 = local_c * 0x20 + 2;
  iVar4 = local_8 * 0x20 + 4;
  local_14 = (param_4 >> 2) * 0x20 + 4;
  iVar1 = FUN_00465f00(param_1,iVar4,iVar5,local_118,local_14);
  FUN_00466140(param_1,iVar4,iVar5,local_198,local_118,iVar1,local_14);
  local_8 = local_8 * 4;
  local_c = local_c * 8;
  pbVar3 = local_198;
  local_18 = 0;
  do {
    iVar1 = 0;
    do {
      psVar2 = (short *)(*(int *)(local_10 + (local_8 + local_18) * 4) + (local_c + iVar1) * 0x40 +
                        (param_4 >> 2) * 8);
      iVar4 = 0;
      do {
        *psVar2 = *pbVar3 + 1;
        pbVar3 = pbVar3 + 1;
        psVar2 = psVar2 + 1;
        iVar4 = iVar4 + 1;
      } while (iVar4 < 4);
      iVar1 = iVar1 + 1;
    } while (iVar1 < 8);
    local_18 = local_18 + 1;
  } while (local_18 < 4);
  return;
}



void FUN_00466398(int param_1,undefined4 *param_2,int *param_3,int param_4)

{
  int iVar1;
  byte bVar2;
  int iVar3;
  int iVar4;
  char *pcVar5;
  byte *pbVar6;
  byte *pbVar7;
  byte *pbVar8;
  short *psVar9;
  int *local_28;
  undefined4 *local_24;
  int local_18;
  
  iVar3 = *(int *)(*(int *)(param_1 + 0x1be) + 0x18);
  iVar4 = *(int *)(param_1 + 0x6c);
  local_18 = 0;
  local_28 = param_3;
  local_24 = param_2;
  if (0 < param_4) {
    do {
      pbVar8 = (byte *)*local_24;
      pcVar5 = (char *)*local_28;
      for (iVar1 = iVar4; iVar1 != 0; iVar1 = iVar1 + -1) {
        bVar2 = *pbVar8;
        pbVar6 = pbVar8 + 1;
        pbVar7 = pbVar8 + 2;
        pbVar8 = pbVar8 + 3;
        psVar9 = (short *)(*(int *)(iVar3 + ((int)(uint)bVar2 >> 3) * 4) +
                           ((int)(uint)*pbVar6 >> 2) * 0x40 + ((int)(uint)*pbVar7 >> 3) * 2);
        if (*psVar9 == 0) {
          FUN_004662b8(param_1,(int)(uint)bVar2 >> 3,(int)(uint)*pbVar6 >> 2,(int)(uint)*pbVar7 >> 3
                      );
        }
        *pcVar5 = (char)*psVar9 + -1;
        pcVar5 = pcVar5 + 1;
      }
      local_18 = local_18 + 1;
      local_28 = local_28 + 1;
      local_24 = local_24 + 1;
    } while (local_18 < param_4);
  }
  return;
}



void FUN_00466464(int param_1,undefined4 *param_2,int *param_3,int param_4)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  int iVar9;
  uint uVar10;
  uint uVar11;
  ushort *puVar12;
  uint uVar13;
  int iVar14;
  int iVar15;
  int iVar16;
  int iVar17;
  int iVar18;
  int iVar19;
  int *local_74;
  undefined4 *local_70;
  int local_4c;
  int local_48;
  int local_44;
  undefined1 *local_3c;
  byte *local_38;
  short *local_34;
  int local_30;
  int local_2c;
  int local_28;
  int local_24;
  int local_20;
  int local_1c;
  
  iVar2 = *(int *)(param_1 + 0x1be);
  iVar3 = *(int *)(iVar2 + 0x18);
  iVar4 = *(int *)(param_1 + 0x6c);
  iVar5 = *(int *)(param_1 + 0x136);
  iVar6 = *(int *)(iVar2 + 0x28);
  iVar7 = **(int **)(param_1 + 0x84);
  iVar8 = *(int *)(*(int *)(param_1 + 0x84) + 4);
  iVar9 = *(int *)(*(int *)(param_1 + 0x84) + 8);
  local_4c = 0;
  local_74 = param_3;
  local_70 = param_2;
  if (0 < param_4) {
    do {
      local_38 = (byte *)*local_70;
      local_3c = (undefined1 *)*local_74;
      if (*(int *)(iVar2 + 0x24) == 0) {
        local_44 = 1;
        local_48 = 3;
        local_34 = *(short **)(iVar2 + 0x20);
        *(undefined4 *)(iVar2 + 0x24) = 1;
      }
      else {
        local_38 = local_38 + (iVar4 + -1) * 3;
        local_3c = local_3c + iVar4 + -1;
        local_44 = -1;
        local_48 = -3;
        local_34 = (short *)(*(int *)(iVar2 + 0x20) + (iVar4 * 3 + 3) * 2);
        *(undefined4 *)(iVar2 + 0x24) = 0;
      }
      local_24 = 0;
      local_20 = 0;
      local_1c = 0;
      local_30 = 0;
      local_2c = 0;
      local_28 = 0;
      iVar14 = 0;
      iVar16 = 0;
      iVar18 = 0;
      iVar1 = iVar4;
      while( true ) {
        if (iVar1 == 0) break;
        uVar10 = (uint)*(byte *)(iVar5 + *(int *)(iVar6 + (iVar18 + local_34[local_48] + 8 >> 4) * 4
                                                 ) + (uint)*local_38);
        uVar11 = (uint)*(byte *)(iVar5 + *(int *)(iVar6 + (iVar16 + local_34[local_48 + 1] + 8 >> 4)
                                                          * 4) + (uint)local_38[1]);
        uVar13 = (uint)*(byte *)(iVar5 + *(int *)(iVar6 + (iVar14 + local_34[local_48 + 2] + 8 >> 4)
                                                          * 4) + (uint)local_38[2]);
        iVar18 = (int)uVar10 >> 3;
        iVar16 = (int)uVar11 >> 2;
        iVar14 = (int)uVar13 >> 3;
        puVar12 = (ushort *)(*(int *)(iVar3 + iVar18 * 4) + iVar16 * 0x40 + iVar14 * 2);
        if (*puVar12 == 0) {
          FUN_004662b8(param_1,iVar18,iVar16,iVar14);
        }
        iVar18 = *puVar12 - 1;
        *local_3c = (char)iVar18;
        iVar19 = uVar10 - *(byte *)(iVar7 + iVar18);
        iVar17 = uVar11 - *(byte *)(iVar8 + iVar18);
        iVar15 = uVar13 - *(byte *)(iVar9 + iVar18);
        *local_34 = (short)local_28 + (short)iVar19 * 3;
        local_28 = local_1c + iVar19 * 5;
        iVar18 = iVar19 * 7;
        local_34[1] = (short)local_2c + (short)iVar17 * 3;
        local_2c = local_20 + iVar17 * 5;
        iVar16 = iVar17 * 7;
        local_34[2] = (short)local_30 + (short)iVar15 * 3;
        local_30 = local_24 + iVar15 * 5;
        iVar14 = iVar15 * 7;
        local_38 = local_38 + local_48;
        local_3c = local_3c + local_44;
        local_34 = local_34 + local_48;
        iVar1 = iVar1 + -1;
        local_24 = iVar15;
        local_20 = iVar17;
        local_1c = iVar19;
      }
      *local_34 = (short)local_28;
      local_34[1] = (short)local_2c;
      local_34[2] = (short)local_30;
      local_4c = local_4c + 1;
      local_74 = local_74 + 1;
      local_70 = local_70 + 1;
    } while (local_4c < param_4);
  }
  return;
}



void FUN_00466768(int param_1)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  int *piVar4;
  int iVar5;
  int *piVar6;
  
  iVar1 = *(int *)(param_1 + 0x1be);
  iVar2 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x7fc);
  iVar5 = 0;
  piVar4 = (int *)(iVar2 + 0x3fc);
  uVar3 = 0;
  *(int **)(iVar1 + 0x28) = piVar4;
  piVar6 = piVar4;
  do {
    *piVar6 = iVar5;
    piVar4[-uVar3] = -iVar5;
    piVar6 = piVar6 + 1;
    uVar3 = uVar3 + 1;
    iVar5 = iVar5 + 1;
  } while ((int)uVar3 < 0x10);
  piVar6 = piVar4 + uVar3;
  while ((int)uVar3 < 0x30) {
    *piVar6 = iVar5;
    piVar4[-uVar3] = -iVar5;
    piVar6 = piVar6 + 1;
    uVar3 = uVar3 + 1;
    iVar5 = iVar5 + (uint)((uVar3 & 1) == 0);
  }
  piVar6 = piVar4 + uVar3;
  for (; (int)uVar3 < 0x100; uVar3 = uVar3 + 1) {
    *piVar6 = iVar5;
    piVar6 = piVar6 + 1;
    piVar4[-uVar3] = -iVar5;
  }
  return;
}



void FUN_00466820(int *param_1,int param_2)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  int iVar4;
  
  iVar1 = *(int *)((int)param_1 + 0x1be);
  if (param_1[0x15] != 0) {
    param_1[0x15] = 2;
  }
  if (param_2 == 0) {
    if (param_1[0x15] == 2) {
      *(code **)(iVar1 + 4) = FUN_00466464;
    }
    else {
      *(code **)(iVar1 + 4) = FUN_00466398;
    }
    *(undefined **)(iVar1 + 8) = &DAT_0046681c;
    iVar4 = param_1[0x20];
    if (iVar4 < 1) {
      iVar2 = *param_1;
      *(undefined4 *)(iVar2 + 0x14) = 0x37;
      *(undefined4 *)(iVar2 + 0x18) = 1;
      (**(code **)*param_1)();
    }
    if (0x100 < iVar4) {
      iVar4 = *param_1;
      *(undefined4 *)(iVar4 + 0x14) = 0x38;
      *(undefined4 *)(iVar4 + 0x18) = 0x100;
      (**(code **)*param_1)();
    }
    if (param_1[0x15] == 2) {
      if (*(int *)(iVar1 + 0x20) == 0) {
        uVar3 = (**(code **)(param_1[1] + 4))(param_1,1,param_1[0x1b] * 6 + 0xc);
        *(undefined4 *)(iVar1 + 0x20) = uVar3;
      }
      FUN_0045ef60();
      if (*(int *)(iVar1 + 0x28) == 0) {
        FUN_00466768((int)param_1);
      }
      *(undefined4 *)(iVar1 + 0x24) = 0;
    }
  }
  else {
    *(undefined1 **)(iVar1 + 4) = &LAB_00465760;
    *(undefined1 **)(iVar1 + 8) = &LAB_004667f8;
    *(undefined4 *)(iVar1 + 0x1c) = 1;
  }
  if (*(int *)(iVar1 + 0x1c) != 0) {
    iVar4 = 0;
    do {
      FUN_0045ef60();
      iVar4 = iVar4 + 1;
    } while (iVar4 < 0x20);
    *(undefined4 *)(iVar1 + 0x1c) = 0;
  }
  return;
}



void FUN_00466948(int *param_1)

{
  int iVar1;
  undefined4 *puVar2;
  undefined4 uVar3;
  int iVar4;
  
  puVar2 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0x2c);
  *(undefined4 **)((int)param_1 + 0x1be) = puVar2;
  *puVar2 = FUN_00466820;
  puVar2[3] = &LAB_00466938;
  puVar2[8] = 0;
  puVar2[10] = 0;
  if (param_1[0x1d] != 3) {
    *(undefined4 *)(*param_1 + 0x14) = 0x2e;
    (**(code **)*param_1)();
  }
  uVar3 = (**(code **)param_1[1])(param_1,1,0x80);
  puVar2[6] = uVar3;
  iVar4 = 0;
  do {
    uVar3 = (**(code **)(param_1[1] + 4))(param_1,1,0x1000);
    *(undefined4 *)(puVar2[6] + iVar4 * 4) = uVar3;
    iVar4 = iVar4 + 1;
  } while (iVar4 < 0x20);
  puVar2[7] = 1;
  if (param_1[0x1a] == 0) {
    puVar2[4] = 0;
  }
  else {
    iVar4 = param_1[0x17];
    if (iVar4 < 8) {
      iVar1 = *param_1;
      *(undefined4 *)(iVar1 + 0x14) = 0x37;
      *(undefined4 *)(iVar1 + 0x18) = 8;
      (**(code **)*param_1)();
    }
    if (0x100 < iVar4) {
      iVar1 = *param_1;
      *(undefined4 *)(iVar1 + 0x14) = 0x38;
      *(undefined4 *)(iVar1 + 0x18) = 0x100;
      (**(code **)*param_1)();
    }
    uVar3 = (**(code **)(param_1[1] + 8))(param_1,1,iVar4,3);
    puVar2[4] = uVar3;
    puVar2[5] = iVar4;
  }
  if (param_1[0x15] != 0) {
    param_1[0x15] = 2;
  }
  if (param_1[0x15] == 2) {
    uVar3 = (**(code **)(param_1[1] + 4))(param_1,1,param_1[0x1b] * 6 + 0xc);
    puVar2[8] = uVar3;
    FUN_00466768((int)param_1);
  }
  return;
}



void FUN_00466a68(int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  undefined4 uStack_10;
  
  iVar1 = *(int *)(param_1 + 0x19a);
  iVar2 = *(int *)(param_1 + 0x12e);
  iVar3 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,*(int *)(param_1 + 0x20) << 3);
  *(int *)(iVar1 + 0x38) = iVar3;
  *(int *)(iVar1 + 0x3c) = iVar3 + *(int *)(param_1 + 0x20) * 4;
  uStack_10 = *(int *)(param_1 + 0xd4);
  for (iVar3 = 0; iVar3 < *(int *)(param_1 + 0x20); iVar3 = iVar3 + 1) {
    iVar4 = (*(int *)(uStack_10 + 0xc) * *(int *)(uStack_10 + 0x24)) / *(int *)(param_1 + 0x12e);
    iVar5 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,(iVar2 + 4) * iVar4 * 8);
    iVar5 = iVar5 + iVar4 * 4;
    *(int *)(*(int *)(iVar1 + 0x38) + iVar3 * 4) = iVar5;
    *(int *)(*(int *)(iVar1 + 0x3c) + iVar3 * 4) = iVar5 + (iVar2 + 4) * iVar4 * 4;
    uStack_10 = uStack_10 + 0x54;
  }
  return;
}



void FUN_00466b30(int param_1)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  undefined4 *puVar5;
  undefined4 uVar6;
  int iVar7;
  int iVar8;
  int local_2c;
  int local_28;
  int *local_20;
  undefined4 *local_1c;
  undefined4 *local_18;
  undefined4 *local_14;
  
  iVar1 = *(int *)(param_1 + 0x19a);
  iVar2 = *(int *)(param_1 + 0x12e);
  local_2c = 0;
  local_28 = *(int *)(param_1 + 0xd4);
  local_20 = (int *)(iVar1 + 8);
  for (; local_2c < *(int *)(param_1 + 0x20); local_2c = local_2c + 1) {
    iVar7 = (*(int *)(local_28 + 0xc) * *(int *)(local_28 + 0x24)) / *(int *)(param_1 + 0x12e);
    puVar3 = *(undefined4 **)(*(int *)(iVar1 + 0x38) + local_2c * 4);
    puVar4 = *(undefined4 **)(*(int *)(iVar1 + 0x3c) + local_2c * 4);
    puVar5 = (undefined4 *)*local_20;
    local_1c = puVar5;
    local_18 = puVar4;
    local_14 = puVar3;
    for (iVar8 = 0; iVar8 < (iVar2 + 2) * iVar7; iVar8 = iVar8 + 1) {
      uVar6 = *local_1c;
      *local_18 = uVar6;
      *local_14 = uVar6;
      local_14 = local_14 + 1;
      local_18 = local_18 + 1;
      local_1c = local_1c + 1;
    }
    for (iVar8 = 0; iVar8 < iVar7 * 2; iVar8 = iVar8 + 1) {
      puVar4[(iVar2 + -2) * iVar7 + iVar8] = puVar5[iVar7 * iVar2 + iVar8];
      puVar4[iVar7 * iVar2 + iVar8] = puVar5[(iVar2 + -2) * iVar7 + iVar8];
    }
    iVar8 = 0;
    if (0 < iVar7) {
      do {
        puVar3[iVar8 - iVar7] = *puVar3;
        iVar8 = iVar8 + 1;
      } while (iVar8 < iVar7);
    }
    local_20 = local_20 + 1;
    local_28 = local_28 + 0x54;
  }
  return;
}



void FUN_00466c78(int param_1)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  int iVar5;
  int iVar6;
  int local_20;
  int local_1c;
  undefined4 *local_18;
  undefined4 *local_14;
  
  iVar1 = *(int *)(param_1 + 0x19a);
  iVar2 = *(int *)(param_1 + 0x12e);
  local_20 = 0;
  local_1c = *(int *)(param_1 + 0xd4);
  for (; local_20 < *(int *)(param_1 + 0x20); local_20 = local_20 + 1) {
    iVar5 = (*(int *)(local_1c + 0xc) * *(int *)(local_1c + 0x24)) / *(int *)(param_1 + 0x12e);
    puVar3 = *(undefined4 **)(*(int *)(iVar1 + 0x38) + local_20 * 4);
    puVar4 = *(undefined4 **)(*(int *)(iVar1 + 0x3c) + local_20 * 4);
    iVar6 = 0;
    local_18 = puVar3;
    local_14 = puVar4;
    if (0 < iVar5) {
      do {
        puVar3[iVar6 - iVar5] = puVar3[(iVar2 + 1) * iVar5 + iVar6];
        puVar4[iVar6 - iVar5] = puVar4[(iVar2 + 1) * iVar5 + iVar6];
        puVar3[(iVar2 + 2) * iVar5 + iVar6] = *local_18;
        puVar4[(iVar2 + 2) * iVar5 + iVar6] = *local_14;
        iVar6 = iVar6 + 1;
        local_14 = local_14 + 1;
        local_18 = local_18 + 1;
      } while (iVar6 < iVar5);
    }
    local_1c = local_1c + 0x54;
  }
  return;
}



void FUN_00466d74(int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  uint uVar5;
  uint uVar6;
  undefined4 local_18;
  undefined4 local_14;
  
  iVar1 = *(int *)(param_1 + 0x19a);
  local_18 = 0;
  local_14 = *(int *)(param_1 + 0xd4);
  for (; local_18 < *(int *)(param_1 + 0x20); local_18 = local_18 + 1) {
    uVar6 = *(int *)(local_14 + 0xc) * *(int *)(local_14 + 0x24);
    iVar3 = (int)uVar6 / *(int *)(param_1 + 0x12e);
    uVar5 = *(uint *)(local_14 + 0x2c) % uVar6;
    if (uVar5 == 0) {
      uVar5 = uVar6;
    }
    if (local_18 == 0) {
      *(int *)(iVar1 + 0x48) = (int)(uVar5 - 1) / iVar3 + 1;
    }
    iVar2 = *(int *)(*(int *)(iVar1 + 0x38 + *(int *)(iVar1 + 0x40) * 4) + local_18 * 4);
    for (iVar4 = 0; iVar4 < iVar3 * 2; iVar4 = iVar4 + 1) {
      *(undefined4 *)(iVar2 + (iVar4 + uVar5) * 4) = *(undefined4 *)(iVar2 + -4 + uVar5 * 4);
    }
    local_14 = local_14 + 0x54;
  }
  return;
}



void FUN_00466ea0(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  
  iVar1 = *(int *)(param_1 + 0x19a);
  if (*(int *)(iVar1 + 0x30) == 0) {
    iVar3 = (**(code **)(*(int *)(param_1 + 0x19e) + 0xc))(param_1,iVar1 + 8);
    if (iVar3 == 0) {
      return;
    }
    *(undefined4 *)(iVar1 + 0x30) = 1;
  }
  uVar2 = *(uint *)(param_1 + 0x12e);
  (**(code **)(*(int *)(param_1 + 0x1a2) + 4))
            (param_1,iVar1 + 8,iVar1 + 0x34,param_4,param_3,param_2,uVar2);
  if (uVar2 <= *(uint *)(iVar1 + 0x34)) {
    *(undefined4 *)(iVar1 + 0x30) = 0;
    *(undefined4 *)(iVar1 + 0x34) = 0;
  }
  return;
}



void FUN_00466f18(int param_1,undefined4 param_2,uint *param_3,uint param_4)

{
  int iVar1;
  int iVar2;
  
  iVar1 = *(int *)(param_1 + 0x19a);
  if (*(int *)(iVar1 + 0x30) == 0) {
    iVar2 = (**(code **)(*(int *)(param_1 + 0x19e) + 0xc))
                      (param_1,*(undefined4 *)(iVar1 + 0x38 + *(int *)(iVar1 + 0x40) * 4));
    if (iVar2 == 0) {
      return;
    }
    *(undefined4 *)(iVar1 + 0x30) = 1;
    *(int *)(iVar1 + 0x4c) = *(int *)(iVar1 + 0x4c) + 1;
  }
  iVar2 = *(int *)(iVar1 + 0x44);
  if (iVar2 != 0) {
    if (iVar2 == 1) goto LAB_00466fd6;
    if (iVar2 != 2) {
      return;
    }
    (**(code **)(*(int *)(param_1 + 0x1a2) + 4))
              (param_1,*(undefined4 *)(iVar1 + 0x38 + *(int *)(iVar1 + 0x40) * 4),iVar1 + 0x34,
               param_4,param_3,param_2,*(undefined4 *)(iVar1 + 0x48));
    if (*(uint *)(iVar1 + 0x34) < *(uint *)(iVar1 + 0x48)) {
      return;
    }
    *(undefined4 *)(iVar1 + 0x44) = 0;
    if (param_4 <= *param_3) {
      return;
    }
  }
  *(undefined4 *)(iVar1 + 0x34) = 0;
  *(int *)(iVar1 + 0x48) = *(int *)(param_1 + 0x12e) + -1;
  if (*(int *)(iVar1 + 0x4c) == *(int *)(param_1 + 0x132)) {
    FUN_00466d74(param_1);
  }
  *(undefined4 *)(iVar1 + 0x44) = 1;
LAB_00466fd6:
  (**(code **)(*(int *)(param_1 + 0x1a2) + 4))
            (param_1,*(undefined4 *)(iVar1 + 0x38 + *(int *)(iVar1 + 0x40) * 4),iVar1 + 0x34,param_4
             ,param_3,param_2,*(undefined4 *)(iVar1 + 0x48));
  if (*(uint *)(iVar1 + 0x48) <= *(uint *)(iVar1 + 0x34)) {
    if (*(int *)(iVar1 + 0x4c) == 1) {
      FUN_00466c78(param_1);
    }
    *(uint *)(iVar1 + 0x40) = *(uint *)(iVar1 + 0x40) ^ 1;
    *(undefined4 *)(iVar1 + 0x30) = 0;
    *(int *)(iVar1 + 0x34) = *(int *)(param_1 + 0x12e) + 1;
    *(int *)(iVar1 + 0x48) = *(int *)(param_1 + 0x12e) + 2;
    *(undefined4 *)(iVar1 + 0x44) = 2;
  }
  return;
}



void FUN_00467040(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  (**(code **)(*(int *)(param_1 + 0x1a2) + 4))(param_1,0,0,param_4,param_3,param_2,0);
  return;
}



void FUN_00467060(int *param_1,int param_2)

{
  undefined4 *puVar1;
  undefined4 uVar2;
  int iVar3;
  int iStack_1c;
  int iStack_14;
  
  puVar1 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0x50);
  *(undefined4 **)((int)param_1 + 0x19a) = puVar1;
  *puVar1 = &LAB_00466e38;
  if (param_2 != 0) {
    *(undefined4 *)(*param_1 + 0x14) = 4;
    (**(code **)*param_1)();
  }
  if (*(int *)(*(int *)((int)param_1 + 0x1b6) + 8) == 0) {
    iStack_14 = *(int *)((int)param_1 + 0x12e);
  }
  else {
    if (*(int *)((int)param_1 + 0x12e) < 2) {
      *(undefined4 *)(*param_1 + 0x14) = 0x2e;
      (**(code **)*param_1)();
    }
    FUN_00466a68((int)param_1);
    iStack_14 = *(int *)((int)param_1 + 0x12e) + 2;
  }
  iStack_1c = 0;
  iVar3 = param_1[0x35];
  puVar1 = puVar1 + 2;
  for (; iStack_1c < param_1[8]; iStack_1c = iStack_1c + 1) {
    uVar2 = (**(code **)(param_1[1] + 8))
                      (param_1,1,*(int *)(iVar3 + 0x1c) * *(int *)(iVar3 + 0x24),
                       ((*(int *)(iVar3 + 0xc) * *(int *)(iVar3 + 0x24)) /
                       *(int *)((int)param_1 + 0x12e)) * iStack_14);
    *puVar1 = uVar2;
    puVar1 = puVar1 + 1;
    iVar3 = iVar3 + 0x54;
  }
  return;
}



void FUN_00467140(int param_1)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x19e);
  if (*(int *)(param_1 + 0x13a) < 2) {
    if (*(uint *)(param_1 + 0x90) < *(int *)(param_1 + 0x132) - 1U) {
      *(undefined4 *)(iVar1 + 0x1c) = *(undefined4 *)(*(int *)(param_1 + 0x13e) + 0xc);
    }
    else {
      *(undefined4 *)(iVar1 + 0x1c) = *(undefined4 *)(*(int *)(param_1 + 0x13e) + 0x48);
    }
  }
  else {
    *(undefined4 *)(iVar1 + 0x1c) = 1;
  }
  *(undefined4 *)(iVar1 + 0x14) = 0;
  *(undefined4 *)(iVar1 + 0x18) = 0;
  return;
}



void FUN_0046719c(int param_1)

{
  int iVar1;
  int iVar2;
  
  iVar1 = *(int *)(param_1 + 0x19e);
  if (*(int *)(iVar1 + 0x10) != 0) {
    if (*(int *)(param_1 + 0x4c) != 0) {
      iVar2 = FUN_004677ec(param_1);
      if (iVar2 != 0) {
        *(undefined1 **)(iVar1 + 0xc) = &LAB_004678fc;
        goto LAB_004671cd;
      }
    }
    *(code **)(iVar1 + 0xc) = FUN_0046761c;
  }
LAB_004671cd:
  *(undefined4 *)(param_1 + 0x98) = 0;
  return;
}



undefined4 FUN_004671d8(int param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  code *pcVar4;
  int iVar5;
  uint uVar6;
  int iVar7;
  int iVar8;
  undefined4 uVar9;
  int iVar10;
  int iVar11;
  int iStack_34;
  int iStack_30;
  int iStack_2c;
  int local_28;
  int iStack_20;
  int *piStack_14;
  int *piStack_10;
  
  iVar1 = *(int *)(param_1 + 0x19e);
  uVar6 = *(int *)(param_1 + 0x14e) - 1;
  iVar2 = *(int *)(param_1 + 0x132);
  local_28 = *(int *)(iVar1 + 0x18);
  do {
    if (*(int *)(iVar1 + 0x1c) <= local_28) {
      *(int *)(param_1 + 0x98) = *(int *)(param_1 + 0x98) + 1;
      *(int *)(param_1 + 0x90) = *(int *)(param_1 + 0x90) + 1;
      if (*(uint *)(param_1 + 0x90) < *(uint *)(param_1 + 0x132)) {
        FUN_00467140(param_1);
        uVar9 = 3;
      }
      else {
        (**(code **)(*(int *)(param_1 + 0x1a6) + 0xc))();
        uVar9 = 4;
      }
      return uVar9;
    }
    for (uVar3 = *(uint *)(iVar1 + 0x14); uVar3 <= uVar6; uVar3 = uVar3 + 1) {
      FUN_0045ef60();
      iVar7 = (**(code **)(*(int *)(param_1 + 0x1ae) + 4))(param_1,iVar1 + 0x20);
      if (iVar7 == 0) {
        *(int *)(iVar1 + 0x18) = local_28;
        *(uint *)(iVar1 + 0x14) = uVar3;
        return 0;
      }
      iStack_34 = 0;
      piStack_14 = (int *)(param_1 + 0x13e);
      piStack_10 = param_2;
      for (iStack_30 = 0; iStack_30 < *(int *)(param_1 + 0x13a); iStack_30 = iStack_30 + 1) {
        iVar7 = *piStack_14;
        if (*(int *)(iVar7 + 0x30) == 0) {
          iStack_34 = iStack_34 + *(int *)(iVar7 + 0x3c);
        }
        else {
          pcVar4 = *(code **)(*(int *)(param_1 + 0x1b2) + 4 + *(int *)(iVar7 + 4) * 4);
          if (uVar3 < uVar6) {
            iVar8 = *(int *)(iVar7 + 0x34);
          }
          else {
            iVar8 = *(int *)(iVar7 + 0x44);
          }
          iStack_20 = *piStack_10 + local_28 * *(int *)(iVar7 + 0x24) * 4;
          iVar5 = *(int *)(iVar7 + 0x40);
          for (iStack_2c = 0; iStack_2c < *(int *)(iVar7 + 0x38); iStack_2c = iStack_2c + 1) {
            if (((*(uint *)(param_1 + 0x90) < iVar2 - 1U) ||
                (local_28 + iStack_2c < *(int *)(iVar7 + 0x48))) &&
               (iVar10 = 0, iVar11 = uVar3 * iVar5, 0 < iVar8)) {
              do {
                (*pcVar4)(param_1,iVar7,*(undefined4 *)(iVar1 + 0x20 + (iStack_34 + iVar10) * 4),
                          iVar11,iStack_20);
                iVar11 = iVar11 + *(int *)(iVar7 + 0x24);
                iVar10 = iVar10 + 1;
              } while (iVar10 < iVar8);
            }
            iStack_34 = iStack_34 + *(int *)(iVar7 + 0x34);
            iStack_20 = iStack_20 + *(int *)(iVar7 + 0x24) * 4;
          }
        }
        piStack_10 = piStack_10 + 1;
        piStack_14 = piStack_14 + 1;
      }
    }
    *(undefined4 *)(iVar1 + 0x14) = 0;
    local_28 = local_28 + 1;
  } while( true );
}



undefined4 FUN_0046742c(int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int *piVar4;
  undefined4 uVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  int *piVar9;
  int iVar10;
  uint local_3c;
  int local_38;
  int local_34;
  int *local_28;
  int *local_20;
  int local_1c [4];
  
  piVar9 = local_1c;
  iVar1 = *(int *)(param_1 + 0x19e);
  piVar4 = (int *)(param_1 + 0x13e);
  for (local_38 = 0; local_38 < *(int *)(param_1 + 0x13a); local_38 = local_38 + 1) {
    iVar8 = *(int *)(*piVar4 + 0xc);
    iVar8 = (**(code **)(*(int *)(param_1 + 4) + 0x20))
                      (param_1,*(undefined4 *)(iVar1 + 0x48 + *(int *)(*piVar4 + 4) * 4),
                       *(int *)(param_1 + 0x90) * iVar8,1,iVar8);
    *piVar9 = iVar8;
    piVar9 = piVar9 + 1;
    piVar4 = piVar4 + 1;
  }
  local_34 = *(int *)(iVar1 + 0x18);
  do {
    if (*(int *)(iVar1 + 0x1c) <= local_34) {
      *(int *)(param_1 + 0x90) = *(int *)(param_1 + 0x90) + 1;
      if (*(uint *)(param_1 + 0x90) < *(uint *)(param_1 + 0x132)) {
        FUN_00467140(param_1);
        uVar5 = 3;
      }
      else {
        (**(code **)(*(int *)(param_1 + 0x1a6) + 0xc))();
        uVar5 = 4;
      }
      return uVar5;
    }
    for (local_3c = *(uint *)(iVar1 + 0x14); local_3c < *(uint *)(param_1 + 0x14e);
        local_3c = local_3c + 1) {
      iVar8 = 0;
      local_20 = local_1c;
      local_28 = (int *)(param_1 + 0x13e);
      for (local_38 = 0; local_38 < *(int *)(param_1 + 0x13a); local_38 = local_38 + 1) {
        iVar2 = *local_28;
        iVar3 = *(int *)(iVar2 + 0x34);
        for (iVar10 = 0; iVar10 < *(int *)(iVar2 + 0x38); iVar10 = iVar10 + 1) {
          iVar7 = *(int *)(*local_20 + (local_34 + iVar10) * 4) + iVar3 * local_3c * 0x80;
          piVar4 = (int *)(iVar1 + 0x20 + iVar8 * 4);
          for (iVar6 = 0; iVar6 < *(int *)(iVar2 + 0x34); iVar6 = iVar6 + 1) {
            *piVar4 = iVar7;
            iVar7 = iVar7 + 0x80;
            iVar8 = iVar8 + 1;
            piVar4 = piVar4 + 1;
          }
        }
        local_20 = local_20 + 1;
        local_28 = local_28 + 1;
      }
      iVar8 = (**(code **)(*(int *)(param_1 + 0x1ae) + 4))(param_1,iVar1 + 0x20);
      if (iVar8 == 0) {
        *(int *)(iVar1 + 0x18) = local_34;
        *(uint *)(iVar1 + 0x14) = local_3c;
        return 0;
      }
    }
    *(undefined4 *)(iVar1 + 0x14) = 0;
    local_34 = local_34 + 1;
  } while( true );
}



undefined4 FUN_0046761c(int param_1,int *param_2)

{
  int iVar1;
  code *pcVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  uint uStack_30;
  int local_2c;
  int iStack_28;
  uint uStack_24;
  int iStack_20;
  undefined4 *local_18;
  int *local_14;
  int *piStack_10;
  
  iVar3 = *(int *)(param_1 + 0x19e);
  iVar1 = *(int *)(param_1 + 0x132);
  while ((*(int *)(param_1 + 0x8c) < *(int *)(param_1 + 0x94) ||
         ((*(int *)(param_1 + 0x8c) == *(int *)(param_1 + 0x94) &&
          (*(uint *)(param_1 + 0x90) <= *(uint *)(param_1 + 0x98)))))) {
    iVar4 = (*(code *)**(undefined4 **)(param_1 + 0x1a6))();
    if (iVar4 == 0) {
      return 0;
    }
  }
  local_2c = 0;
  local_18 = (undefined4 *)(iVar3 + 0x48);
  iVar3 = *(int *)(param_1 + 0xd4);
  local_14 = param_2;
  for (; local_2c < *(int *)(param_1 + 0x20); local_2c = local_2c + 1) {
    if (*(int *)(iVar3 + 0x30) != 0) {
      piStack_10 = (int *)(**(code **)(*(int *)(param_1 + 4) + 0x20))
                                    (param_1,*local_18,
                                     *(int *)(param_1 + 0x98) * *(int *)(iVar3 + 0xc),0,
                                     *(int *)(iVar3 + 0xc));
      if (*(uint *)(param_1 + 0x98) < iVar1 - 1U) {
        uStack_24 = *(uint *)(iVar3 + 0xc);
      }
      else {
        uStack_24 = *(uint *)(iVar3 + 0x20) % *(uint *)(iVar3 + 0xc);
        if (uStack_24 == 0) {
          uStack_24 = *(uint *)(iVar3 + 0xc);
        }
      }
      pcVar2 = *(code **)(*(int *)(param_1 + 0x1b2) + 4 + local_2c * 4);
      iStack_20 = *local_14;
      iStack_28 = 0;
      if (0 < (int)uStack_24) {
        do {
          iVar5 = 0;
          iVar4 = *piStack_10;
          for (uStack_30 = 0; uStack_30 < *(uint *)(iVar3 + 0x1c); uStack_30 = uStack_30 + 1) {
            (*pcVar2)(param_1,iVar3,iVar4,iVar5,iStack_20);
            iVar4 = iVar4 + 0x80;
            iVar5 = iVar5 + *(int *)(iVar3 + 0x24);
          }
          iStack_20 = iStack_20 + *(int *)(iVar3 + 0x24) * 4;
          iStack_28 = iStack_28 + 1;
          piStack_10 = piStack_10 + 1;
        } while (iStack_28 < (int)uStack_24);
      }
    }
    local_18 = local_18 + 1;
    local_14 = local_14 + 1;
    iVar3 = iVar3 + 0x54;
  }
  *(int *)(param_1 + 0x98) = *(int *)(param_1 + 0x98) + 1;
  if (*(uint *)(param_1 + 0x98) < *(uint *)(param_1 + 0x132)) {
    return 3;
  }
  return 4;
}



undefined4 FUN_004677ec(int param_1)

{
  short *psVar1;
  undefined4 uVar2;
  int *piVar3;
  int iVar4;
  int *piVar5;
  int iVar6;
  int *piVar7;
  undefined4 local_14;
  int local_10;
  
  iVar6 = *(int *)(param_1 + 0x19e);
  local_14 = 0;
  if ((*(int *)(param_1 + 0xd8) == 0) || (*(int *)(param_1 + 0x9c) == 0)) {
    local_14 = 0;
  }
  else {
    if (*(int *)(iVar6 + 0x70) == 0) {
      uVar2 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,*(int *)(param_1 + 0x20) * 0x18);
      *(undefined4 *)(iVar6 + 0x70) = uVar2;
    }
    piVar7 = *(int **)(iVar6 + 0x70);
    local_10 = *(int *)(param_1 + 0xd4);
    for (iVar6 = 0; iVar6 < *(int *)(param_1 + 0x20); iVar6 = iVar6 + 1) {
      psVar1 = *(short **)(local_10 + 0x4c);
      if (psVar1 == (short *)0x0) {
        return 0;
      }
      if ((((*psVar1 == 0) || (psVar1[1] == 0)) || (psVar1[8] == 0)) ||
         (((psVar1[0x10] == 0 || (psVar1[9] == 0)) || (psVar1[2] == 0)))) {
        return 0;
      }
      piVar3 = (int *)(*(int *)(param_1 + 0x9c) + iVar6 * 0x100);
      if (*piVar3 < 0) {
        return 0;
      }
      iVar4 = 1;
      piVar5 = piVar7;
      do {
        piVar5 = piVar5 + 1;
        piVar3 = piVar3 + 1;
        *piVar5 = *piVar3;
        if (*piVar3 != 0) {
          local_14 = 1;
        }
        iVar4 = iVar4 + 1;
      } while (iVar4 < 6);
      piVar7 = piVar7 + 6;
      local_10 = local_10 + 0x54;
    }
  }
  return local_14;
}



void FUN_004680c8(int param_1,int param_2)

{
  undefined4 *puVar1;
  int iVar2;
  int iVar3;
  undefined4 uVar4;
  int *piVar5;
  int iVar6;
  int iStack_1c;
  int iStack_18;
  undefined4 *puStack_14;
  
  puVar1 = (undefined4 *)(*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x74);
  *(undefined4 **)(param_1 + 0x19e) = puVar1;
  *puVar1 = &LAB_0046718c;
  puVar1[2] = FUN_0046719c;
  puVar1[0x1c] = 0;
  if (param_2 == 0) {
    iVar2 = (**(code **)(*(int *)(param_1 + 4) + 4))(param_1,1,0x500);
    piVar5 = puVar1 + 8;
    iVar6 = 0;
    do {
      iVar3 = iVar6 + 1;
      *piVar5 = iVar6 * 0x80 + iVar2;
      piVar5 = piVar5 + 1;
      iVar6 = iVar3;
    } while (iVar3 < 10);
    puVar1[1] = &LAB_00467428;
    puVar1[3] = FUN_004671d8;
    puVar1[4] = 0;
  }
  else {
    iStack_1c = 0;
    iVar6 = *(int *)(param_1 + 0xd4);
    puStack_14 = puVar1 + 0x12;
    for (; iStack_1c < *(int *)(param_1 + 0x20); iStack_1c = iStack_1c + 1) {
      iStack_18 = *(int *)(iVar6 + 0xc);
      if (*(int *)(param_1 + 0xd8) != 0) {
        iStack_18 = iStack_18 * 3;
      }
      iVar2 = FUN_0046bdc0(*(int *)(iVar6 + 0x1c),*(int *)(iVar6 + 8));
      iVar3 = FUN_0046bdc0(*(int *)(iVar6 + 0x20),*(int *)(iVar6 + 0xc));
      uVar4 = (**(code **)(*(int *)(param_1 + 4) + 0x14))(param_1,1,1,iStack_18,iVar3,iVar2);
      *puStack_14 = uVar4;
      puStack_14 = puStack_14 + 1;
      iVar6 = iVar6 + 0x54;
    }
    puVar1[1] = FUN_0046742c;
    puVar1[3] = FUN_0046761c;
    puVar1[4] = puVar1 + 0x12;
  }
  return;
}



void FUN_00468284(int param_1,undefined4 param_2,undefined4 param_3,int param_4,int *param_5,
                 int param_6,undefined4 param_7)

{
  int iVar1;
  uint uVar2;
  int local_10;
  undefined4 local_c;
  int local_8;
  
  iVar1 = *(int *)(param_1 + 0x1a2);
  uVar2 = param_4 - *param_5;
  if (*(uint *)(iVar1 + 0x10) < (uint)(param_4 - *param_5)) {
    uVar2 = *(uint *)(iVar1 + 0x10);
  }
  local_10 = 0;
  local_c = param_3;
  local_8 = param_1;
  (**(code **)(*(int *)(param_1 + 0x1b6) + 4))
            (param_1,param_2,param_3,uVar2,&local_10,*(undefined4 *)(iVar1 + 0xc),param_7);
  (**(code **)(*(int *)(local_8 + 0x1be) + 4))
            (local_8,*(undefined4 *)(iVar1 + 0xc),*param_5 * 4 + param_6,local_10);
  *param_5 = *param_5 + local_10;
  return;
}



void FUN_00468300(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,int *param_5,
                 undefined4 param_6,undefined4 param_7)

{
  int iVar1;
  uint uVar2;
  undefined4 uVar3;
  int iVar4;
  
  iVar1 = *(int *)(param_1 + 0x1a2);
  if (*(int *)(iVar1 + 0x18) == 0) {
    uVar3 = (**(code **)(*(int *)(param_1 + 4) + 0x1c))
                      (param_1,*(undefined4 *)(iVar1 + 8),*(undefined4 *)(iVar1 + 0x14),1,
                       *(undefined4 *)(iVar1 + 0x10));
    *(undefined4 *)(iVar1 + 0xc) = uVar3;
  }
  uVar2 = *(uint *)(iVar1 + 0x18);
  (**(code **)(*(int *)(param_1 + 0x1b6) + 4))
            (param_1,param_2,param_3,*(undefined4 *)(iVar1 + 0x10),iVar1 + 0x18,
             *(undefined4 *)(iVar1 + 0xc),param_7);
  if (uVar2 < *(uint *)(iVar1 + 0x18)) {
    iVar4 = *(uint *)(iVar1 + 0x18) - uVar2;
    (**(code **)(*(int *)(param_1 + 0x1be) + 4))(param_1,uVar2 * 4 + *(int *)(iVar1 + 0xc),0,iVar4);
    *param_5 = *param_5 + iVar4;
  }
  if (*(uint *)(iVar1 + 0x10) <= *(uint *)(iVar1 + 0x18)) {
    *(int *)(iVar1 + 0x14) = *(int *)(iVar1 + 0x14) + *(uint *)(iVar1 + 0x10);
    *(undefined4 *)(iVar1 + 0x18) = 0;
  }
  return;
}



void FUN_004683a4(int param_1,undefined4 param_2,undefined4 param_3,int param_4,int *param_5,
                 int param_6)

{
  int iVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  
  iVar1 = *(int *)(param_1 + 0x1a2);
  if (*(int *)(iVar1 + 0x18) == 0) {
    uVar2 = (**(code **)(*(int *)(param_1 + 4) + 0x1c))
                      (param_1,*(undefined4 *)(iVar1 + 8),*(undefined4 *)(iVar1 + 0x14),0,
                       *(undefined4 *)(iVar1 + 0x10));
    *(undefined4 *)(iVar1 + 0xc) = uVar2;
  }
  uVar4 = *(int *)(iVar1 + 0x10) - *(int *)(iVar1 + 0x18);
  if ((uint)(param_4 - *param_5) < uVar4) {
    uVar4 = param_4 - *param_5;
  }
  uVar3 = *(int *)(param_1 + 0x70) - *(int *)(iVar1 + 0x14);
  if (uVar3 < uVar4) {
    uVar4 = uVar3;
  }
  (**(code **)(*(int *)(param_1 + 0x1be) + 4))
            (param_1,*(int *)(iVar1 + 0x18) * 4 + *(int *)(iVar1 + 0xc),*param_5 * 4 + param_6,uVar4
            );
  *param_5 = *param_5 + uVar4;
  *(int *)(iVar1 + 0x18) = *(int *)(iVar1 + 0x18) + uVar4;
  if (*(uint *)(iVar1 + 0x10) <= *(uint *)(iVar1 + 0x18)) {
    *(int *)(iVar1 + 0x14) = *(int *)(iVar1 + 0x14) + *(uint *)(iVar1 + 0x10);
    *(undefined4 *)(iVar1 + 0x18) = 0;
  }
  return;
}



void FUN_0046843c(int param_1,int param_2)

{
  undefined4 *puVar1;
  int iVar2;
  int iVar3;
  undefined4 uVar4;
  
  puVar1 = (undefined4 *)(*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x1c);
  *(undefined4 **)(param_1 + 0x1a2) = puVar1;
  *puVar1 = &LAB_004681dc;
  puVar1[2] = 0;
  puVar1[3] = 0;
  if (*(int *)(param_1 + 0x50) != 0) {
    iVar3 = *(int *)(param_1 + 0x12a);
    puVar1[4] = iVar3;
    if (param_2 == 0) {
      uVar4 = (**(code **)(*(int *)(param_1 + 4) + 8))
                        (param_1,1,*(int *)(param_1 + 0x6c) * *(int *)(param_1 + 0x74),puVar1[4]);
      puVar1[3] = uVar4;
    }
    else {
      iVar2 = *(int *)(param_1 + 0x6c) * *(int *)(param_1 + 0x74);
      iVar3 = FUN_0046bdc0(*(int *)(param_1 + 0x70),iVar3);
      uVar4 = (**(code **)(*(int *)(param_1 + 4) + 0x10))(param_1,1,0,puVar1[4],iVar3,iVar2);
      puVar1[2] = uVar4;
    }
  }
  return;
}



void FUN_00468740(int param_1,undefined4 param_2,undefined4 param_3)

{
  undefined4 *puVar1;
  undefined4 uVar2;
  int iVar3;
  int iVar4;
  
  puVar1 = (undefined4 *)(*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x54,param_3);
  *(undefined4 **)(param_1 + 0x1b2) = puVar1;
  *puVar1 = &LAB_004684d0;
  puVar1 = puVar1 + 0xb;
  iVar3 = *(int *)(param_1 + 0xd4);
  for (iVar4 = 0; iVar4 < *(int *)(param_1 + 0x20); iVar4 = iVar4 + 1) {
    uVar2 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x100);
    *(undefined4 *)(iVar3 + 0x50) = uVar2;
    FUN_0045ef60();
    *puVar1 = 0xffffffff;
    puVar1 = puVar1 + 1;
    iVar3 = iVar3 + 0x54;
  }
  return;
}



void FUN_004687d4(int param_1,int *param_2,int *param_3,int param_4,int *param_5,int param_6)

{
  uint uVar1;
  int iVar2;
  int iVar3;
  int *local_20;
  undefined4 *local_1c;
  uint local_18;
  int local_14;
  int local_10;
  
  iVar2 = *(int *)(param_1 + 0x1b6);
  if (*(int *)(param_1 + 0x12a) <= *(int *)(iVar2 + 0x5c)) {
    local_10 = 0;
    local_14 = *(int *)(param_1 + 0xd4);
    local_1c = (undefined4 *)(iVar2 + 0x34);
    local_20 = param_2;
    for (; local_10 < *(int *)(param_1 + 0x20); local_10 = local_10 + 1) {
      (*(code *)*local_1c)
                (param_1,local_14,*param_3 * local_1c[0xc] * 4 + *local_20,
                 local_10 * 4 + iVar2 + 0xc);
      local_1c = local_1c + 1;
      local_20 = local_20 + 1;
      local_14 = local_14 + 0x54;
    }
    *(undefined4 *)(iVar2 + 0x5c) = 0;
  }
  local_18 = *(int *)(param_1 + 0x12a) - *(int *)(iVar2 + 0x5c);
  if (*(uint *)(iVar2 + 0x60) < local_18) {
    local_18 = *(uint *)(iVar2 + 0x60);
  }
  uVar1 = param_4 - *param_5;
  if (uVar1 < local_18) {
    local_18 = uVar1;
  }
  (**(code **)(*(int *)(param_1 + 0x1ba) + 4))
            (param_1,iVar2 + 0xc,*(int *)(iVar2 + 0x5c),local_18,*param_5 * 4 + param_6);
  *param_5 = *param_5 + local_18;
  *(int *)(iVar2 + 0x60) = *(int *)(iVar2 + 0x60) - local_18;
  iVar3 = *(int *)(iVar2 + 0x5c) + local_18;
  *(int *)(iVar2 + 0x5c) = iVar3;
  if (*(int *)(param_1 + 0x12a) <= iVar3) {
    *param_3 = *param_3 + 1;
  }
  return;
}



void FUN_004688d4(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 *param_4)

{
  *param_4 = param_3;
  return;
}



void FUN_004688e0(void)

{
  undefined4 *in_stack_00000004;
  
  *in_stack_00000004 = 0;
  return;
}



void FUN_004688f0(int param_1,int param_2,undefined4 *param_3,int *param_4)

{
  undefined1 uVar1;
  int iVar2;
  uint uVar3;
  undefined1 *puVar4;
  uint uVar5;
  uint uVar6;
  undefined1 *puVar7;
  undefined1 *puVar8;
  undefined4 *local_1c;
  int local_18;
  
  iVar2 = *param_4;
  uVar6 = (uint)*(byte *)(*(int *)(param_1 + 0x1b6) + 0x8c + *(int *)(param_2 + 4));
  uVar3 = (uint)*(byte *)(*(int *)(param_1 + 0x1b6) + 0x96 + *(int *)(param_2 + 4));
  local_1c = param_3;
  for (local_18 = 0; local_18 < *(int *)(param_1 + 0x12a); local_18 = local_18 + uVar3) {
    puVar7 = (undefined1 *)*local_1c;
    puVar4 = *(undefined1 **)(iVar2 + local_18 * 4);
    puVar8 = puVar4 + *(int *)(param_1 + 0x6c);
    while (puVar4 < puVar8) {
      uVar1 = *puVar7;
      puVar7 = puVar7 + 1;
      uVar5 = uVar6;
      if (uVar6 != 0) {
        do {
          *puVar4 = uVar1;
          puVar4 = puVar4 + 1;
          uVar5 = uVar5 - 1;
        } while (0 < (int)uVar5);
      }
    }
    if (1 < uVar3) {
      FUN_0046bdd8();
    }
    local_1c = local_1c + 1;
  }
  return;
}



void FUN_004689ac(int param_1,undefined4 param_2,undefined4 *param_3,undefined4 *param_4)

{
  undefined1 uVar1;
  undefined1 *puVar2;
  undefined1 *puVar3;
  undefined1 *puVar4;
  undefined4 *local_10;
  int local_c;
  
  local_10 = (undefined4 *)*param_4;
  for (local_c = 0; local_c < *(int *)(param_1 + 0x12a); local_c = local_c + 1) {
    puVar3 = (undefined1 *)*param_3;
    puVar2 = (undefined1 *)*local_10;
    puVar4 = puVar2 + *(int *)(param_1 + 0x6c);
    for (; puVar2 < puVar4; puVar2 = puVar2 + 2) {
      uVar1 = *puVar3;
      puVar3 = puVar3 + 1;
      *puVar2 = uVar1;
      puVar2[1] = uVar1;
    }
    local_10 = local_10 + 1;
    param_3 = param_3 + 1;
  }
  return;
}



void FUN_00468a08(int param_1,undefined4 param_2,undefined4 *param_3,undefined4 *param_4)

{
  undefined1 uVar1;
  undefined1 *puVar2;
  undefined1 *puVar3;
  undefined1 *puVar4;
  undefined4 *local_18;
  undefined4 *local_14;
  int local_10;
  
  local_18 = (undefined4 *)*param_4;
  local_14 = param_3;
  for (local_10 = 0; local_10 < *(int *)(param_1 + 0x12a); local_10 = local_10 + 2) {
    puVar2 = (undefined1 *)*local_18;
    puVar4 = puVar2 + *(int *)(param_1 + 0x6c);
    puVar3 = (undefined1 *)*local_14;
    for (; puVar2 < puVar4; puVar2 = puVar2 + 2) {
      uVar1 = *puVar3;
      puVar3 = puVar3 + 1;
      *puVar2 = uVar1;
      puVar2[1] = uVar1;
    }
    FUN_0046bdd8();
    local_14 = local_14 + 1;
    local_18 = local_18 + 2;
  }
  return;
}



void FUN_00468a98(int param_1,int param_2,undefined4 *param_3,undefined4 *param_4)

{
  byte bVar1;
  byte *pbVar2;
  byte *pbVar3;
  byte *pbVar4;
  int iVar5;
  undefined4 *local_14;
  int local_10;
  
  local_14 = (undefined4 *)*param_4;
  for (local_10 = 0; local_10 < *(int *)(param_1 + 0x12a); local_10 = local_10 + 1) {
    pbVar2 = (byte *)*local_14;
    bVar1 = *(byte *)*param_3;
    pbVar4 = (byte *)*param_3 + 1;
    *pbVar2 = bVar1;
    pbVar2[1] = (byte)((int)((uint)bVar1 * 3 + (uint)*pbVar4 + 2) >> 2);
    for (iVar5 = *(int *)(param_2 + 0x28) + -2; pbVar3 = pbVar2 + 2, iVar5 != 0; iVar5 = iVar5 + -1)
    {
      bVar1 = *pbVar4;
      *pbVar3 = (byte)((int)((uint)pbVar4[-1] + (uint)bVar1 * 3 + 1) >> 2);
      pbVar2[3] = (byte)((int)((uint)bVar1 * 3 + (uint)pbVar4[1] + 2) >> 2);
      pbVar4 = pbVar4 + 1;
      pbVar2 = pbVar3;
    }
    bVar1 = *pbVar4;
    *pbVar3 = (byte)((int)((uint)bVar1 * 3 + (uint)pbVar4[-1] + 1) >> 2);
    pbVar2[3] = bVar1;
    local_14 = local_14 + 1;
    param_3 = param_3 + 1;
  }
  return;
}



void FUN_00468b4c(int param_1,int param_2,undefined4 *param_3,int *param_4)

{
  byte bVar1;
  int iVar2;
  byte *pbVar3;
  undefined1 *puVar4;
  undefined1 *puVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  int iVar9;
  undefined4 *local_30;
  int *local_2c;
  int local_24;
  int local_20;
  byte *local_14;
  
  iVar2 = *param_4;
  local_20 = 0;
  local_30 = param_3;
  while (local_20 < *(int *)(param_1 + 0x12a)) {
    local_24 = 0;
    local_2c = (int *)(iVar2 + local_20 * 4);
    do {
      pbVar3 = (byte *)*local_30;
      if (local_24 == 0) {
        local_14 = (byte *)local_30[-1];
      }
      else {
        local_14 = (byte *)local_30[1];
      }
      puVar4 = (undefined1 *)*local_2c;
      local_20 = local_20 + 1;
      local_2c = local_2c + 1;
      iVar7 = (uint)*pbVar3 * 3 + (uint)*local_14;
      iVar8 = (uint)pbVar3[1] * 3 + (uint)local_14[1];
      local_14 = local_14 + 2;
      pbVar3 = pbVar3 + 2;
      *puVar4 = (char)(iVar7 * 4 + 8 >> 4);
      puVar4[1] = (char)(iVar7 * 3 + iVar8 + 7 >> 4);
      for (iVar6 = *(int *)(param_2 + 0x28) + -2; puVar5 = puVar4 + 2, iVar6 != 0;
          iVar6 = iVar6 + -1) {
        bVar1 = *local_14;
        local_14 = local_14 + 1;
        iVar9 = (uint)*pbVar3 * 3 + (uint)bVar1;
        pbVar3 = pbVar3 + 1;
        *puVar5 = (char)(iVar8 * 3 + iVar7 + 8 >> 4);
        puVar4[3] = (char)(iVar8 * 3 + iVar9 + 7 >> 4);
        iVar7 = iVar8;
        iVar8 = iVar9;
        puVar4 = puVar5;
      }
      *puVar5 = (char)(iVar8 * 3 + iVar7 + 8 >> 4);
      puVar4[3] = (char)(iVar8 * 4 + 7 >> 4);
      local_24 = local_24 + 1;
    } while (local_24 < 2);
    local_30 = local_30 + 1;
  }
  return;
}



void FUN_00468ca0(int *param_1)

{
  int iVar1;
  bool bVar2;
  bool bVar3;
  undefined4 *puVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  int *piVar8;
  int iVar9;
  undefined4 uVar10;
  int iStack_28;
  undefined4 *puStack_14;
  
  puVar4 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0xa0);
  *(undefined4 **)((int)param_1 + 0x1b6) = puVar4;
  *puVar4 = &LAB_004687bc;
  puVar4[1] = FUN_004687d4;
  puVar4[2] = 0;
  if (*(int *)((int)param_1 + 0x122) != 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x17;
    (**(code **)*param_1)();
  }
  if ((param_1[0x12] == 0) || (*(int *)((int)param_1 + 0x12e) < 2)) {
    bVar2 = false;
  }
  else {
    bVar2 = true;
  }
  iStack_28 = 0;
  iVar9 = param_1[0x35];
  puStack_14 = puVar4 + 0x23;
  piVar8 = puVar4 + 0x19;
  for (; iStack_28 < param_1[8]; iStack_28 = iStack_28 + 1) {
    iVar5 = (*(int *)(iVar9 + 8) * *(int *)(iVar9 + 0x24)) / *(int *)((int)param_1 + 0x12e);
    iVar6 = (*(int *)(iVar9 + 0xc) * *(int *)(iVar9 + 0x24)) / *(int *)((int)param_1 + 0x12e);
    iVar7 = *(int *)((int)param_1 + 0x126);
    iVar1 = *(int *)((int)param_1 + 0x12a);
    *piVar8 = iVar6;
    bVar3 = true;
    if (*(int *)(iVar9 + 0x30) == 0) {
      piVar8[-0xc] = (int)FUN_004688e0;
      bVar3 = false;
    }
    else if ((iVar5 == iVar7) && (iVar6 == iVar1)) {
      piVar8[-0xc] = (int)FUN_004688d4;
      bVar3 = false;
    }
    else if ((iVar5 * 2 == iVar7) && (iVar6 == iVar1)) {
      if ((bVar2) && (2 < *(uint *)(iVar9 + 0x28))) {
        piVar8[-0xc] = (int)FUN_00468a98;
      }
      else {
        piVar8[-0xc] = (int)FUN_004689ac;
      }
    }
    else if ((iVar5 * 2 == iVar7) && (iVar6 * 2 == iVar1)) {
      if ((bVar2) && (2 < *(uint *)(iVar9 + 0x28))) {
        piVar8[-0xc] = (int)FUN_00468b4c;
        puVar4[2] = 1;
      }
      else {
        piVar8[-0xc] = (int)FUN_00468a08;
      }
    }
    else if ((iVar7 % iVar5 == 0) && (iVar1 % iVar6 == 0)) {
      piVar8[-0xc] = (int)FUN_004688f0;
      *(char *)puStack_14 = (char)(iVar7 / iVar5);
      *(char *)((int)puStack_14 + 10) = (char)(iVar1 / iVar6);
    }
    else {
      *(undefined4 *)(*param_1 + 0x14) = 0x25;
      (**(code **)*param_1)();
    }
    if (bVar3) {
      uVar10 = *(undefined4 *)((int)param_1 + 0x12a);
      iVar7 = FUN_0046bdc0(param_1[0x1b],*(int *)((int)param_1 + 0x126));
      iVar7 = (**(code **)(param_1[1] + 8))(param_1,1,iVar7,uVar10);
      piVar8[-0x16] = iVar7;
    }
    piVar8 = piVar8 + 1;
    puStack_14 = (undefined4 *)((int)puStack_14 + 1);
    iVar9 = iVar9 + 0x54;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00468eb8(int param_1,int param_2,short *param_3,int param_4,int *param_5)

{
  float fVar1;
  float fVar2;
  float fVar3;
  int iVar4;
  float *pfVar5;
  float *pfVar6;
  undefined1 *puVar7;
  int iVar8;
  float local_154 [16];
  float local_114 [8];
  float local_f4 [8];
  float local_d4 [8];
  float local_b4 [8];
  float local_94 [8];
  float local_74 [8];
  int *local_54;
  float local_50;
  int local_4c;
  float local_48;
  float local_44;
  float local_40;
  float local_3c;
  float local_38;
  float local_34;
  float local_30;
  float local_2c;
  float local_28;
  float local_24;
  float local_20;
  float local_1c;
  float local_18;
  float local_14;
  float local_10;
  float local_c;
  float local_8;
  
  iVar8 = 8;
  pfVar6 = local_154;
  local_4c = *(int *)(param_1 + 0x136) + 0x80;
  pfVar5 = *(float **)(param_2 + 0x50);
  do {
    if ((((((param_3[8] == 0 && param_3[0x10] == 0) && param_3[0x18] == 0) && param_3[0x20] == 0) &&
         param_3[0x28] == 0) && param_3[0x30] == 0) && param_3[0x38] == 0) {
      local_50 = (float)*param_3 * *pfVar5;
      *pfVar6 = (float)*param_3 * *pfVar5;
      pfVar6[8] = local_50;
      pfVar6[0x10] = local_50;
      pfVar6[0x18] = local_50;
      pfVar6[0x20] = local_50;
      pfVar6[0x28] = local_50;
      pfVar6[0x30] = local_50;
      pfVar6[0x38] = local_50;
    }
    else {
      fVar1 = (float)*param_3 * *pfVar5 + (float)param_3[0x20] * pfVar5[0x20];
      fVar2 = (float)*param_3 * *pfVar5 - (float)param_3[0x20] * pfVar5[0x20];
      local_34 = (float)param_3[0x10] * pfVar5[0x10] + (float)param_3[0x30] * pfVar5[0x30];
      fVar3 = ((float)param_3[0x10] * pfVar5[0x10] - (float)param_3[0x30] * pfVar5[0x30]) *
              _DAT_004692d8 - local_34;
      local_8 = fVar1 + local_34;
      local_14 = fVar1 - local_34;
      local_c = fVar2 + fVar3;
      local_10 = fVar2 - fVar3;
      local_48 = (float)param_3[0x28] * pfVar5[0x28] + (float)param_3[0x18] * pfVar5[0x18];
      local_3c = (float)param_3[0x28] * pfVar5[0x28] - (float)param_3[0x18] * pfVar5[0x18];
      local_40 = (float)param_3[8] * pfVar5[8] + (float)param_3[0x38] * pfVar5[0x38];
      local_44 = (float)param_3[8] * pfVar5[8] - (float)param_3[0x38] * pfVar5[0x38];
      local_24 = local_40 + local_48;
      local_2c = (local_40 - local_48) * _DAT_004692d8;
      local_38 = (local_3c + local_44) * _DAT_004692dc;
      local_28 = _DAT_004692e0 * local_44 - local_38;
      local_30 = _DAT_004692e4 * local_3c + local_38;
      local_20 = local_30 - local_24;
      local_1c = local_2c - local_20;
      local_18 = local_28 + local_1c;
      *pfVar6 = local_8 + local_24;
      pfVar6[0x38] = local_8 - local_24;
      pfVar6[8] = local_c + local_20;
      pfVar6[0x30] = local_c - local_20;
      pfVar6[0x10] = local_10 + local_1c;
      pfVar6[0x28] = local_10 - local_1c;
      pfVar6[0x20] = local_14 + local_18;
      pfVar6[0x18] = local_14 - local_18;
    }
    pfVar6 = pfVar6 + 1;
    pfVar5 = pfVar5 + 1;
    param_3 = param_3 + 1;
    iVar8 = iVar8 + -1;
  } while (0 < iVar8);
  pfVar6 = local_154;
  iVar8 = 0;
  local_54 = param_5;
  do {
    local_28 = *pfVar6 + pfVar6[4];
    puVar7 = (undefined1 *)(*local_54 + param_4);
    local_2c = *pfVar6 - pfVar6[4];
    local_34 = pfVar6[2] + pfVar6[6];
    local_30 = (pfVar6[2] - pfVar6[6]) * _DAT_004692d8 - local_34;
    local_8 = local_28 + local_34;
    local_14 = local_28 - local_34;
    local_c = local_2c + local_30;
    local_10 = local_2c - local_30;
    local_48 = pfVar6[5] + pfVar6[3];
    local_3c = pfVar6[5] - pfVar6[3];
    local_40 = pfVar6[1] + pfVar6[7];
    local_44 = pfVar6[1] - pfVar6[7];
    local_24 = local_40 + local_48;
    local_2c = (local_40 - local_48) * _DAT_004692d8;
    local_38 = (local_3c + local_44) * _DAT_004692dc;
    local_28 = _DAT_004692e0 * local_44 - local_38;
    local_30 = _DAT_004692e4 * local_3c + local_38;
    local_20 = local_30 - local_24;
    local_1c = local_2c - local_20;
    local_18 = local_28 + local_1c;
    iVar4 = FUN_0045efcc();
    *puVar7 = *(undefined1 *)(local_4c + (iVar4 + 4 >> 3 & 0x3ffU));
    iVar4 = FUN_0045efcc();
    puVar7[7] = *(undefined1 *)(local_4c + (iVar4 + 4 >> 3 & 0x3ffU));
    iVar4 = FUN_0045efcc();
    puVar7[1] = *(undefined1 *)(local_4c + (iVar4 + 4 >> 3 & 0x3ffU));
    iVar4 = FUN_0045efcc();
    puVar7[6] = *(undefined1 *)(local_4c + (iVar4 + 4 >> 3 & 0x3ffU));
    iVar4 = FUN_0045efcc();
    puVar7[2] = *(undefined1 *)(local_4c + (iVar4 + 4 >> 3 & 0x3ffU));
    iVar4 = FUN_0045efcc();
    puVar7[5] = *(undefined1 *)(local_4c + (iVar4 + 4 >> 3 & 0x3ffU));
    iVar4 = FUN_0045efcc();
    puVar7[4] = *(undefined1 *)(local_4c + (iVar4 + 4 >> 3 & 0x3ffU));
    iVar4 = FUN_0045efcc();
    pfVar6 = pfVar6 + 8;
    iVar8 = iVar8 + 1;
    puVar7[3] = *(undefined1 *)(local_4c + (iVar4 + 4 >> 3 & 0x3ffU));
    local_54 = local_54 + 1;
  } while (iVar8 < 8);
  return;
}



void FUN_004696f4(int param_1,int param_2,short *param_3,int param_4,int *param_5)

{
  undefined1 uVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  int local_140 [16];
  int local_100 [8];
  int local_e0 [8];
  int local_c0 [8];
  int local_a0 [8];
  int local_80 [8];
  int local_60 [8];
  int *local_40;
  int local_3c;
  int local_38;
  undefined1 *local_34;
  int *local_30;
  short *local_2c;
  int local_28;
  int local_24;
  int local_20;
  int local_1c;
  int local_18;
  int local_14;
  int local_10;
  int local_c;
  int local_8;
  
  local_38 = *(int *)(param_1 + 0x136) + 0x80;
  local_30 = *(int **)(param_2 + 0x50);
  piVar2 = local_140;
  local_3c = 8;
  local_2c = param_3;
  do {
    if ((((((local_2c[8] == 0 && local_2c[0x10] == 0) && local_2c[0x18] == 0) && local_2c[0x20] == 0
          ) && local_2c[0x28] == 0) && local_2c[0x30] == 0) && local_2c[0x38] == 0) {
      iVar3 = (int)*local_2c * *local_30 * 4;
      *piVar2 = iVar3;
      piVar2[8] = iVar3;
      piVar2[0x10] = iVar3;
      piVar2[0x18] = iVar3;
      piVar2[0x20] = iVar3;
      piVar2[0x28] = iVar3;
      piVar2[0x30] = iVar3;
      piVar2[0x38] = iVar3;
      local_2c = local_2c + 1;
      local_30 = local_30 + 1;
    }
    else {
      iVar3 = ((int)local_2c[0x10] * local_30[0x10] + (int)local_2c[0x30] * local_30[0x30]) * 0x1151
      ;
      iVar8 = (int)local_2c[0x30] * local_30[0x30] * -0x3b21 + iVar3;
      iVar3 = (int)local_2c[0x10] * local_30[0x10] * 0x187e + iVar3;
      iVar4 = ((int)*local_2c * *local_30 + (int)local_2c[0x20] * local_30[0x20]) * 0x2000;
      iVar6 = ((int)*local_2c * *local_30 - (int)local_2c[0x20] * local_30[0x20]) * 0x2000;
      local_10 = iVar4 + iVar3;
      local_1c = iVar4 - iVar3;
      local_14 = iVar6 + iVar8;
      local_18 = iVar6 - iVar8;
      iVar4 = (int)local_2c[0x38] * local_30[0x38];
      iVar3 = (int)local_2c[0x28] * local_30[0x28];
      iVar8 = (int)local_2c[0x18] * local_30[0x18];
      iVar7 = (int)local_2c[8] * local_30[8];
      iVar5 = (iVar4 + iVar7) * -0x1ccd;
      local_28 = (iVar3 + iVar7 + iVar4 + iVar8) * 0x25a1;
      local_20 = (iVar3 + iVar8) * -0x5203;
      iVar6 = (iVar4 + iVar8) * -0x3ec5 + local_28;
      local_24 = (iVar3 + iVar7) * -0xc7c + local_28;
      local_8 = iVar4 * 0x98e + iVar6 + iVar5;
      local_c = iVar3 * 0x41b3 + local_20 + local_24;
      iVar3 = iVar8 * 0x6254 + iVar6 + local_20;
      iVar8 = iVar7 * 0x300b + iVar5 + local_24;
      *piVar2 = local_10 + iVar8 + 0x400 >> 0xb;
      piVar2[0x38] = (local_10 - iVar8) + 0x400 >> 0xb;
      piVar2[8] = local_14 + iVar3 + 0x400 >> 0xb;
      piVar2[0x30] = (local_14 - iVar3) + 0x400 >> 0xb;
      piVar2[0x10] = local_18 + local_c + 0x400 >> 0xb;
      piVar2[0x28] = (local_18 - local_c) + 0x400 >> 0xb;
      piVar2[0x18] = local_1c + local_8 + 0x400 >> 0xb;
      piVar2[0x20] = (local_1c - local_8) + 0x400 >> 0xb;
      local_2c = local_2c + 1;
      local_30 = local_30 + 1;
    }
    piVar2 = piVar2 + 1;
    local_3c = local_3c + -1;
  } while (0 < local_3c);
  piVar2 = local_140;
  local_3c = 0;
  local_40 = param_5;
  do {
    local_34 = (undefined1 *)(*local_40 + param_4);
    if ((((((piVar2[1] == 0 && piVar2[2] == 0) && piVar2[3] == 0) && piVar2[4] == 0) &&
         piVar2[5] == 0) && piVar2[6] == 0) && piVar2[7] == 0) {
      uVar1 = *(undefined1 *)(local_38 + (*piVar2 + 0x10 >> 5 & 0x3ffU));
      *local_34 = uVar1;
      local_34[1] = uVar1;
      local_34[2] = uVar1;
      local_34[3] = uVar1;
      local_34[4] = uVar1;
      local_34[5] = uVar1;
      local_34[6] = uVar1;
      local_34[7] = uVar1;
    }
    else {
      local_20 = piVar2[2];
      local_1c = (local_20 + piVar2[6]) * 0x1151;
      local_18 = piVar2[6] * -0x3b21 + local_1c;
      local_1c = local_20 * 0x187e + local_1c;
      local_8 = (*piVar2 + piVar2[4]) * 0x2000;
      local_c = (*piVar2 - piVar2[4]) * 0x2000;
      local_10 = local_8 + local_1c;
      local_1c = local_8 - local_1c;
      local_14 = local_c + local_18;
      local_18 = local_c - local_18;
      local_8 = piVar2[7];
      local_c = piVar2[5];
      iVar3 = piVar2[3];
      iVar8 = piVar2[1];
      iVar6 = (local_8 + iVar8) * -0x1ccd;
      local_28 = (local_c + iVar8 + local_8 + iVar3) * 0x25a1;
      local_20 = (local_c + iVar3) * -0x5203;
      iVar4 = (local_8 + iVar3) * -0x3ec5 + local_28;
      local_24 = (local_c + iVar8) * -0xc7c + local_28;
      local_8 = local_8 * 0x98e + iVar4 + iVar6;
      local_c = local_c * 0x41b3 + local_20 + local_24;
      iVar3 = iVar3 * 0x6254 + iVar4 + local_20;
      iVar8 = iVar8 * 0x300b + iVar6 + local_24;
      *local_34 = *(undefined1 *)(local_38 + (local_10 + iVar8 + 0x20000 >> 0x12 & 0x3ffU));
      local_34[7] = *(undefined1 *)(local_38 + ((local_10 - iVar8) + 0x20000 >> 0x12 & 0x3ffU));
      local_34[1] = *(undefined1 *)(local_38 + (local_14 + iVar3 + 0x20000 >> 0x12 & 0x3ffU));
      local_34[6] = *(undefined1 *)(local_38 + ((local_14 - iVar3) + 0x20000 >> 0x12 & 0x3ffU));
      local_34[2] = *(undefined1 *)(local_38 + (local_18 + local_c + 0x20000 >> 0x12 & 0x3ffU));
      local_34[5] = *(undefined1 *)(local_38 + ((local_18 - local_c) + 0x20000 >> 0x12 & 0x3ffU));
      local_34[3] = *(undefined1 *)(local_38 + (local_1c + local_8 + 0x20000 >> 0x12 & 0x3ffU));
      local_34[4] = *(undefined1 *)(local_38 + ((local_1c - local_8) + 0x20000 >> 0x12 & 0x3ffU));
    }
    piVar2 = piVar2 + 8;
    local_3c = local_3c + 1;
    local_40 = local_40 + 1;
  } while (local_3c < 8);
  return;
}



void FUN_00469cc8(int param_1,int param_2,short *param_3,int param_4,int *param_5)

{
  undefined1 uVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  undefined1 *puVar5;
  int local_ac [16];
  int local_6c [8];
  int local_4c [8];
  int *local_2c;
  int local_28;
  int local_24;
  int *local_20;
  int local_1c;
  int local_18;
  int local_14;
  int local_10;
  int local_c;
  int local_8;
  
  local_24 = *(int *)(param_1 + 0x136) + 0x80;
  local_20 = *(int **)(param_2 + 0x50);
  piVar2 = local_ac;
  local_28 = 8;
  do {
    if (local_28 != 4) {
      if (((((param_3[8] == 0 && param_3[0x10] == 0) && param_3[0x18] == 0) && param_3[0x28] == 0)
          && param_3[0x30] == 0) && param_3[0x38] == 0) {
        iVar3 = (int)*param_3 * *local_20 * 4;
        *piVar2 = iVar3;
        piVar2[8] = iVar3;
        piVar2[0x10] = iVar3;
        piVar2[0x18] = iVar3;
      }
      else {
        iVar4 = (int)*param_3 * *local_20 * 0x4000;
        iVar3 = (int)param_3[0x10] * local_20[0x10] * 0x3b21 +
                (int)param_3[0x30] * local_20[0x30] * -0x187e;
        local_8 = iVar3 + iVar4;
        local_c = iVar4 - iVar3;
        local_10 = (int)param_3[0x38] * local_20[0x38];
        local_14 = (int)param_3[0x28] * local_20[0x28];
        local_18 = (int)param_3[0x18] * local_20[0x18];
        local_1c = (int)param_3[8] * local_20[8];
        iVar4 = local_10 * -0x6c2 + local_14 * 0x2e75 + local_18 * -0x4587 + local_1c * 0x21f9;
        iVar3 = local_10 * -0x1050 + local_14 * -0x133e + local_18 * 0x1ccd + local_1c * 0x5203;
        *piVar2 = local_8 + iVar3 + 0x800 >> 0xc;
        piVar2[0x18] = (local_8 - iVar3) + 0x800 >> 0xc;
        piVar2[8] = local_c + iVar4 + 0x800 >> 0xc;
        piVar2[0x10] = (local_c - iVar4) + 0x800 >> 0xc;
      }
    }
    param_3 = param_3 + 1;
    local_20 = local_20 + 1;
    piVar2 = piVar2 + 1;
    local_28 = local_28 + -1;
  } while (0 < local_28);
  piVar2 = local_ac;
  local_28 = 0;
  local_2c = param_5;
  do {
    puVar5 = (undefined1 *)(*local_2c + param_4);
    if (((((piVar2[1] == 0 && piVar2[2] == 0) && piVar2[3] == 0) && piVar2[5] == 0) &&
        piVar2[6] == 0) && piVar2[7] == 0) {
      uVar1 = *(undefined1 *)(local_24 + (*piVar2 + 0x10 >> 5 & 0x3ffU));
      *puVar5 = uVar1;
      puVar5[1] = uVar1;
      puVar5[2] = uVar1;
      puVar5[3] = uVar1;
    }
    else {
      local_c = piVar2[2] * 0x3b21 + piVar2[6] * -0x187e;
      local_8 = local_c + *piVar2 * 0x4000;
      local_c = *piVar2 * 0x4000 - local_c;
      local_10 = piVar2[7];
      local_14 = piVar2[5];
      local_18 = piVar2[3];
      local_1c = piVar2[1];
      iVar4 = local_10 * -0x6c2 + local_14 * 0x2e75 + local_18 * -0x4587 + local_1c * 0x21f9;
      iVar3 = local_10 * -0x1050 + local_14 * -0x133e + local_18 * 0x1ccd + local_1c * 0x5203;
      *puVar5 = *(undefined1 *)(local_24 + (local_8 + iVar3 + 0x40000 >> 0x13 & 0x3ffU));
      puVar5[3] = *(undefined1 *)(local_24 + ((local_8 - iVar3) + 0x40000 >> 0x13 & 0x3ffU));
      puVar5[1] = *(undefined1 *)(local_24 + (local_c + iVar4 + 0x40000 >> 0x13 & 0x3ffU));
      puVar5[2] = *(undefined1 *)(local_24 + ((local_c - iVar4) + 0x40000 >> 0x13 & 0x3ffU));
    }
    piVar2 = piVar2 + 8;
    local_28 = local_28 + 1;
    local_2c = local_2c + 1;
  } while (local_28 < 4);
  return;
}



void FUN_0046a05c(int param_1,int param_2,short *param_3,int param_4,int *param_5)

{
  int *piVar1;
  undefined1 *puVar2;
  int iVar3;
  int iVar4;
  int local_58 [16];
  int *local_18;
  undefined1 local_11;
  int local_10;
  int *local_c;
  int local_8;
  
  local_10 = *(int *)(param_1 + 0x136) + 0x80;
  piVar1 = local_58;
  local_c = *(int **)(param_2 + 0x50);
  iVar3 = 8;
  do {
    if (((iVar3 != 6) && (iVar3 != 4)) && (iVar3 != 2)) {
      if (((param_3[8] == 0 && param_3[0x18] == 0) && param_3[0x28] == 0) && param_3[0x38] == 0) {
        iVar4 = (int)*param_3 * *local_c * 4;
        *piVar1 = iVar4;
        piVar1[8] = iVar4;
      }
      else {
        local_8 = (int)*param_3 * *local_c * 0x8000;
        iVar4 = (int)param_3[0x38] * local_c[0x38] * -0x1712 +
                (int)param_3[0x28] * local_c[0x28] * 0x1b37 +
                (int)param_3[0x18] * local_c[0x18] * -0x28ba + (int)param_3[8] * local_c[8] * 0x73fc
        ;
        *piVar1 = local_8 + iVar4 + 0x1000 >> 0xd;
        piVar1[8] = (local_8 - iVar4) + 0x1000 >> 0xd;
      }
    }
    param_3 = param_3 + 1;
    local_c = local_c + 1;
    piVar1 = piVar1 + 1;
    iVar3 = iVar3 + -1;
  } while (0 < iVar3);
  piVar1 = local_58;
  local_18 = param_5;
  iVar3 = 0;
  do {
    puVar2 = (undefined1 *)(*local_18 + param_4);
    if (((piVar1[1] == 0 && piVar1[3] == 0) && piVar1[5] == 0) && piVar1[7] == 0) {
      local_11 = *(undefined1 *)(local_10 + (*piVar1 + 0x10 >> 5 & 0x3ffU));
      *puVar2 = local_11;
      puVar2[1] = local_11;
    }
    else {
      local_8 = *piVar1 * 0x8000;
      iVar4 = piVar1[7] * -0x1712 + piVar1[5] * 0x1b37 + piVar1[3] * -0x28ba + piVar1[1] * 0x73fc;
      *puVar2 = *(undefined1 *)(local_10 + (local_8 + iVar4 + 0x80000 >> 0x14 & 0x3ffU));
      puVar2[1] = *(undefined1 *)(local_10 + ((local_8 - iVar4) + 0x80000 >> 0x14 & 0x3ffU));
    }
    piVar1 = piVar1 + 8;
    iVar3 = iVar3 + 1;
    local_18 = local_18 + 1;
  } while (iVar3 < 2);
  return;
}



void FUN_0046a238(int param_1,int param_2,short *param_3,int param_4,int *param_5)

{
  *(undefined1 *)(*param_5 + param_4) =
       *(undefined1 *)
        (*(int *)(param_1 + 0x136) + 0x80 +
        ((int)*param_3 * **(int **)(param_2 + 0x50) + 4 >> 3 & 0x3ffU));
  return;
}



undefined4 FUN_0046a274(int *param_1)

{
  int *piVar1;
  int iVar2;
  
  *(undefined4 *)(*param_1 + 0x14) = 0x65;
  (**(code **)(*param_1 + 4))(param_1,1);
  if (*(int *)(*(int *)((int)param_1 + 0x1aa) + 0x50) != 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x3c;
    (**(code **)*param_1)();
  }
  iVar2 = 0;
  piVar1 = param_1 + 0x38;
  do {
    *(undefined1 *)piVar1 = 0;
    *(undefined1 *)(piVar1 + 4) = 1;
    *(undefined1 *)(piVar1 + 8) = 5;
    iVar2 = iVar2 + 1;
    piVar1 = (int *)((int)piVar1 + 1);
  } while (iVar2 < 0x10);
  param_1[0x44] = 0;
  param_1[9] = 0;
  *(undefined4 *)((int)param_1 + 0x122) = 0;
  param_1[0x45] = 0;
  *(undefined1 *)(param_1 + 0x46) = 0;
  *(undefined2 *)((int)param_1 + 0x119) = 1;
  *(undefined2 *)((int)param_1 + 0x11b) = 1;
  *(undefined4 *)((int)param_1 + 0x11d) = 0;
  *(undefined1 *)((int)param_1 + 0x121) = 0;
  *(undefined4 *)(*(int *)((int)param_1 + 0x1aa) + 0x50) = 1;
  return 1;
}



undefined4 FUN_0046a31c(int *param_1,int param_2,int param_3)

{
  byte bVar1;
  byte bVar2;
  undefined4 *puVar3;
  int iVar4;
  int iVar5;
  uint *puVar6;
  byte *pbVar7;
  byte *pbVar8;
  uint uStack_18;
  
  puVar3 = (undefined4 *)param_1[5];
  iVar4 = puVar3[1];
  pbVar7 = (byte *)*puVar3;
  param_1[0x36] = param_2;
  param_1[0x37] = param_3;
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    iVar4 = puVar3[1];
    pbVar7 = (byte *)*puVar3;
  }
  iVar4 = iVar4 + -1;
  bVar1 = *pbVar7;
  pbVar7 = pbVar7 + 1;
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    iVar4 = puVar3[1];
    pbVar7 = (byte *)*puVar3;
  }
  iVar4 = iVar4 + -1;
  bVar2 = *pbVar7;
  pbVar7 = pbVar7 + 1;
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    iVar4 = puVar3[1];
    pbVar7 = (byte *)*puVar3;
  }
  iVar4 = iVar4 + -1;
  param_1[0x34] = (uint)*pbVar7;
  pbVar7 = pbVar7 + 1;
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    iVar4 = puVar3[1];
    pbVar7 = (byte *)*puVar3;
  }
  iVar4 = iVar4 + -1;
  pbVar8 = pbVar7 + 1;
  param_1[7] = (uint)*pbVar7 << 8;
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    iVar4 = puVar3[1];
    pbVar8 = (byte *)*puVar3;
  }
  iVar4 = iVar4 + -1;
  param_1[7] = param_1[7] + (uint)*pbVar8;
  pbVar8 = pbVar8 + 1;
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    iVar4 = puVar3[1];
    pbVar8 = (byte *)*puVar3;
  }
  iVar4 = iVar4 + -1;
  pbVar7 = pbVar8 + 1;
  param_1[6] = (uint)*pbVar8 << 8;
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    iVar4 = puVar3[1];
    pbVar7 = (byte *)*puVar3;
  }
  iVar4 = iVar4 + -1;
  param_1[6] = param_1[6] + (uint)*pbVar7;
  pbVar7 = pbVar7 + 1;
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    iVar4 = puVar3[1];
    pbVar7 = (byte *)*puVar3;
  }
  param_1[8] = (uint)*pbVar7;
  iVar5 = *param_1;
  *(undefined4 *)(iVar5 + 0x18) = *(undefined4 *)((int)param_1 + 0x192);
  *(int *)(iVar5 + 0x1c) = param_1[6];
  *(int *)(iVar5 + 0x20) = param_1[7];
  *(int *)(iVar5 + 0x24) = param_1[8];
  *(undefined4 *)(*param_1 + 0x14) = 99;
  (**(code **)(*param_1 + 4))(param_1,1);
  if (*(int *)(*(int *)((int)param_1 + 0x1aa) + 0x54) != 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x39;
    (**(code **)*param_1)();
  }
  if (((param_1[7] == 0) || (param_1[6] == 0)) || (param_1[8] < 1)) {
    *(undefined4 *)(*param_1 + 0x14) = 0x1f;
    (**(code **)*param_1)();
  }
  if ((uint)bVar1 * 0x100 + (uint)bVar2 + -8 != param_1[8] * 3) {
    *(undefined4 *)(*param_1 + 0x14) = 9;
    (**(code **)*param_1)();
  }
  if (param_1[0x35] == 0) {
    iVar5 = (**(code **)param_1[1])(param_1,1,param_1[8] * 0x54);
    param_1[0x35] = iVar5;
  }
  uStack_18 = 0;
  puVar6 = (uint *)param_1[0x35];
  do {
    iVar4 = iVar4 + -1;
    pbVar7 = pbVar7 + 1;
    if (param_1[8] <= (int)uStack_18) {
      *(undefined4 *)(*(int *)((int)param_1 + 0x1aa) + 0x54) = 1;
      *puVar3 = pbVar7;
      puVar3[1] = iVar4;
      return 1;
    }
    puVar6[1] = uStack_18;
    if (iVar4 == 0) {
      iVar4 = (*(code *)puVar3[3])(param_1);
      if (iVar4 == 0) {
        return 0;
      }
      iVar4 = puVar3[1];
      pbVar7 = (byte *)*puVar3;
    }
    iVar4 = iVar4 + -1;
    *puVar6 = (uint)*pbVar7;
    pbVar7 = pbVar7 + 1;
    if (iVar4 == 0) {
      iVar4 = (*(code *)puVar3[3])(param_1);
      if (iVar4 == 0) {
        return 0;
      }
      iVar4 = puVar3[1];
      pbVar7 = (byte *)*puVar3;
    }
    iVar4 = iVar4 + -1;
    bVar1 = *pbVar7;
    pbVar7 = pbVar7 + 1;
    puVar6[2] = (int)(uint)bVar1 >> 4;
    puVar6[3] = bVar1 & 0xf;
    if (iVar4 == 0) {
      iVar4 = (*(code *)puVar3[3])(param_1);
      if (iVar4 == 0) {
        return 0;
      }
      iVar4 = puVar3[1];
      pbVar7 = (byte *)*puVar3;
    }
    puVar6[4] = (uint)*pbVar7;
    iVar5 = *param_1;
    *(uint *)(iVar5 + 0x18) = *puVar6;
    *(uint *)(iVar5 + 0x1c) = puVar6[2];
    *(uint *)(iVar5 + 0x20) = puVar6[3];
    *(uint *)(iVar5 + 0x24) = puVar6[4];
    *(undefined4 *)(*param_1 + 0x14) = 100;
    (**(code **)(*param_1 + 4))(param_1,1);
    uStack_18 = uStack_18 + 1;
    puVar6 = puVar6 + 0x15;
  } while( true );
}



undefined4 FUN_0046a69c(int *param_1)

{
  byte bVar1;
  byte bVar2;
  undefined4 *puVar3;
  int iVar4;
  uint uVar5;
  uint uVar6;
  int iVar7;
  uint *puVar8;
  byte *pbVar9;
  byte *pbVar10;
  int iStack_28;
  undefined4 *puStack_14;
  
  puVar3 = (undefined4 *)param_1[5];
  iVar4 = puVar3[1];
  pbVar9 = (byte *)*puVar3;
  if (*(int *)(*(int *)((int)param_1 + 0x1aa) + 0x54) == 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x3d;
    (**(code **)*param_1)();
  }
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    iVar4 = puVar3[1];
    pbVar9 = (byte *)*puVar3;
  }
  iVar4 = iVar4 + -1;
  bVar1 = *pbVar9;
  pbVar9 = pbVar9 + 1;
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    iVar4 = puVar3[1];
    pbVar9 = (byte *)*puVar3;
  }
  iVar4 = iVar4 + -1;
  bVar2 = *pbVar9;
  pbVar9 = pbVar9 + 1;
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    iVar4 = puVar3[1];
    pbVar9 = (byte *)*puVar3;
  }
  iVar4 = iVar4 + -1;
  uVar5 = (uint)*pbVar9;
  pbVar9 = pbVar9 + 1;
  if ((((uint)bVar1 * 0x100 + (uint)bVar2 != uVar5 * 2 + 6) || (uVar5 == 0)) || (4 < uVar5)) {
    *(undefined4 *)(*param_1 + 0x14) = 9;
    (**(code **)*param_1)();
  }
  iVar7 = *param_1;
  *(undefined4 *)(iVar7 + 0x14) = 0x66;
  *(uint *)(iVar7 + 0x18) = uVar5;
  (**(code **)(*param_1 + 4))(param_1,1);
  *(uint *)((int)param_1 + 0x13a) = uVar5;
  iStack_28 = 0;
  puStack_14 = (undefined4 *)((int)param_1 + 0x13e);
  if (uVar5 != 0) {
    do {
      if (iVar4 == 0) {
        iVar4 = (*(code *)puVar3[3])(param_1);
        if (iVar4 == 0) {
          return 0;
        }
        iVar4 = puVar3[1];
        pbVar9 = (byte *)*puVar3;
      }
      iVar4 = iVar4 + -1;
      uVar6 = (uint)*pbVar9;
      pbVar9 = pbVar9 + 1;
      if (iVar4 == 0) {
        iVar4 = (*(code *)puVar3[3])(param_1);
        if (iVar4 == 0) {
          return 0;
        }
        iVar4 = puVar3[1];
        pbVar9 = (byte *)*puVar3;
      }
      iVar4 = iVar4 + -1;
      bVar1 = *pbVar9;
      pbVar9 = pbVar9 + 1;
      puVar8 = (uint *)param_1[0x35];
      for (iVar7 = 0; iVar7 < param_1[8]; iVar7 = iVar7 + 1) {
        if (uVar6 == *puVar8) goto LAB_0046a858;
        puVar8 = puVar8 + 0x15;
      }
      iVar7 = *param_1;
      *(undefined4 *)(iVar7 + 0x14) = 5;
      *(uint *)(iVar7 + 0x18) = uVar6;
      (**(code **)*param_1)();
LAB_0046a858:
      *puStack_14 = puVar8;
      puVar8[5] = (int)(uint)bVar1 >> 4;
      puVar8[6] = bVar1 & 0xf;
      iVar7 = *param_1;
      *(uint *)(iVar7 + 0x18) = uVar6;
      *(uint *)(iVar7 + 0x1c) = puVar8[5];
      *(uint *)(iVar7 + 0x20) = puVar8[6];
      *(undefined4 *)(*param_1 + 0x14) = 0x67;
      (**(code **)(*param_1 + 4))(param_1,1);
      iStack_28 = iStack_28 + 1;
      puStack_14 = puStack_14 + 1;
    } while (iStack_28 < (int)uVar5);
  }
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    iVar4 = puVar3[1];
    pbVar9 = (byte *)*puVar3;
  }
  iVar4 = iVar4 + -1;
  pbVar10 = pbVar9 + 1;
  *(uint *)((int)param_1 + 0x182) = (uint)*pbVar9;
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    iVar4 = puVar3[1];
    pbVar10 = (byte *)*puVar3;
  }
  iVar4 = iVar4 + -1;
  pbVar9 = pbVar10 + 1;
  *(uint *)((int)param_1 + 0x186) = (uint)*pbVar10;
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    iVar4 = puVar3[1];
    pbVar9 = (byte *)*puVar3;
  }
  bVar1 = *pbVar9;
  *(int *)((int)param_1 + 0x18a) = (int)(uint)bVar1 >> 4;
  *(uint *)((int)param_1 + 0x18e) = bVar1 & 0xf;
  iVar7 = *param_1;
  *(undefined4 *)(iVar7 + 0x18) = *(undefined4 *)((int)param_1 + 0x182);
  *(undefined4 *)(iVar7 + 0x1c) = *(undefined4 *)((int)param_1 + 0x186);
  *(undefined4 *)(iVar7 + 0x20) = *(undefined4 *)((int)param_1 + 0x18a);
  *(undefined4 *)(iVar7 + 0x24) = *(undefined4 *)((int)param_1 + 0x18e);
  *(undefined4 *)(*param_1 + 0x14) = 0x68;
  (**(code **)(*param_1 + 4))(param_1,1);
  *(undefined4 *)(*(int *)((int)param_1 + 0x1aa) + 0x58) = 0;
  param_1[0x23] = param_1[0x23] + 1;
  *puVar3 = pbVar9 + 1;
  puVar3[1] = iVar4 + -1;
  return 1;
}



undefined4 FUN_0046a9dc(int *param_1)

{
  int iVar1;
  byte bVar2;
  undefined4 *puVar3;
  int iVar4;
  int iVar5;
  byte *pbVar6;
  int local_2c;
  int iStack_28;
  byte *pbStack_24;
  byte bStack_20;
  char cStack_1f;
  char cStack_1e;
  char cStack_1d;
  char cStack_1c;
  byte bStack_1b;
  byte bStack_1a;
  undefined1 uStack_19;
  byte bStack_18;
  byte bStack_17;
  byte bStack_16;
  byte bStack_15;
  byte bStack_14;
  byte bStack_13;
  
  puVar3 = (undefined4 *)param_1[5];
  iVar5 = puVar3[1];
  pbVar6 = (byte *)*puVar3;
  if (iVar5 == 0) {
    iVar5 = (*(code *)puVar3[3])(param_1);
    if (iVar5 == 0) {
      return 0;
    }
    pbVar6 = (byte *)*puVar3;
    iVar5 = puVar3[1];
  }
  iVar5 = iVar5 + -1;
  bVar2 = *pbVar6;
  pbVar6 = pbVar6 + 1;
  if (iVar5 == 0) {
    iVar5 = (*(code *)puVar3[3])(param_1);
    if (iVar5 == 0) {
      return 0;
    }
    pbVar6 = (byte *)*puVar3;
    iVar5 = puVar3[1];
  }
  iVar5 = iVar5 + -1;
  iVar1 = (uint)bVar2 * 0x100 + (uint)*pbVar6;
  pbVar6 = pbVar6 + 1;
  local_2c = iVar1 + -2;
  if (local_2c < 0xe) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x4c;
    *(int *)(iVar1 + 0x18) = local_2c;
    (**(code **)(*param_1 + 4))(param_1,1);
  }
  else {
    pbStack_24 = &bStack_20;
    iStack_28 = 0;
    do {
      if (iVar5 == 0) {
        iVar5 = (*(code *)puVar3[3])(param_1);
        if (iVar5 == 0) {
          return 0;
        }
        pbVar6 = (byte *)*puVar3;
        iVar5 = puVar3[1];
      }
      iVar5 = iVar5 + -1;
      *pbStack_24 = *pbVar6;
      pbVar6 = pbVar6 + 1;
      iStack_28 = iStack_28 + 1;
      pbStack_24 = pbStack_24 + 1;
    } while (iStack_28 < 0xe);
    local_2c = iVar1 + -0x10;
    if ((((bStack_20 == 0x4a) && (cStack_1f == 'F')) && (cStack_1e == 'I')) &&
       ((cStack_1d == 'F' && (cStack_1c == '\0')))) {
      if (bStack_1b == 1) {
        if (2 < bStack_1a) {
          iVar1 = *param_1;
          *(undefined4 *)(iVar1 + 0x14) = 0x58;
          *(undefined4 *)(iVar1 + 0x18) = 1;
          *(uint *)(iVar1 + 0x1c) = (uint)bStack_1a;
          (**(code **)(*param_1 + 4))(param_1,1);
        }
      }
      else {
        iVar1 = *param_1;
        *(undefined4 *)(iVar1 + 0x14) = 0x73;
        *(uint *)(iVar1 + 0x18) = (uint)bStack_1b;
        *(uint *)(iVar1 + 0x1c) = (uint)bStack_1a;
        (**(code **)(*param_1 + 4))(param_1,0xffffffff);
      }
      param_1[0x45] = 1;
      *(undefined1 *)(param_1 + 0x46) = uStack_19;
      *(ushort *)((int)param_1 + 0x119) = (ushort)bStack_18 * 0x100 + (ushort)bStack_17;
      *(ushort *)((int)param_1 + 0x11b) = (ushort)bStack_16 * 0x100 + (ushort)bStack_15;
      iVar1 = *param_1;
      *(uint *)(iVar1 + 0x18) = (uint)*(ushort *)((int)param_1 + 0x119);
      *(uint *)(iVar1 + 0x1c) = (uint)*(ushort *)((int)param_1 + 0x11b);
      *(uint *)(iVar1 + 0x20) = (uint)*(byte *)(param_1 + 0x46);
      *(undefined4 *)(*param_1 + 0x14) = 0x56;
      (**(code **)(*param_1 + 4))(param_1,1);
      if (bStack_14 != 0 || bStack_13 != 0) {
        iVar1 = *param_1;
        *(undefined4 *)(iVar1 + 0x14) = 0x59;
        *(uint *)(iVar1 + 0x18) = (uint)bStack_14;
        *(uint *)(iVar1 + 0x1c) = (uint)bStack_13;
        (**(code **)(*param_1 + 4))(param_1,1);
      }
      if ((uint)bStack_14 * (uint)bStack_13 * 3 != local_2c) {
        iVar1 = *param_1;
        *(undefined4 *)(iVar1 + 0x14) = 0x57;
        *(int *)(iVar1 + 0x18) = local_2c;
        (**(code **)(*param_1 + 4))(param_1,1);
      }
    }
    else {
      iVar4 = *param_1;
      *(undefined4 *)(iVar4 + 0x14) = 0x4c;
      *(int *)(iVar4 + 0x18) = iVar1 + -2;
      (**(code **)(*param_1 + 4))(param_1,1);
    }
  }
  *puVar3 = pbVar6;
  puVar3[1] = iVar5;
  if (0 < local_2c) {
    (**(code **)(param_1[5] + 0x10))(param_1,local_2c);
  }
  return 1;
}



undefined4 FUN_0046ac60(int *param_1)

{
  int iVar1;
  byte bVar2;
  undefined4 *puVar3;
  int iVar4;
  int iVar5;
  byte *pbVar6;
  int local_38;
  int iStack_34;
  byte *pbStack_20;
  byte bStack_1c;
  char cStack_1b;
  char cStack_1a;
  char cStack_19;
  char cStack_18;
  byte bStack_17;
  byte bStack_16;
  byte bStack_15;
  byte bStack_14;
  byte bStack_13;
  byte bStack_12;
  byte bStack_11;
  
  puVar3 = (undefined4 *)param_1[5];
  pbVar6 = (byte *)*puVar3;
  iVar5 = puVar3[1];
  if (iVar5 == 0) {
    iVar5 = (*(code *)puVar3[3])(param_1);
    if (iVar5 == 0) {
      return 0;
    }
    pbVar6 = (byte *)*puVar3;
    iVar5 = puVar3[1];
  }
  iVar5 = iVar5 + -1;
  bVar2 = *pbVar6;
  pbVar6 = pbVar6 + 1;
  if (iVar5 == 0) {
    iVar5 = (*(code *)puVar3[3])(param_1);
    if (iVar5 == 0) {
      return 0;
    }
    pbVar6 = (byte *)*puVar3;
    iVar5 = puVar3[1];
  }
  iVar5 = iVar5 + -1;
  iVar1 = (uint)bVar2 * 0x100 + (uint)*pbVar6;
  pbVar6 = pbVar6 + 1;
  local_38 = iVar1 + -2;
  if (local_38 < 0xc) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x4d;
    *(int *)(iVar1 + 0x18) = local_38;
    (**(code **)(*param_1 + 4))(param_1,1);
  }
  else {
    pbStack_20 = &bStack_1c;
    iStack_34 = 0;
    do {
      if (iVar5 == 0) {
        iVar5 = (*(code *)puVar3[3])(param_1);
        if (iVar5 == 0) {
          return 0;
        }
        pbVar6 = (byte *)*puVar3;
        iVar5 = puVar3[1];
      }
      iVar5 = iVar5 + -1;
      *pbStack_20 = *pbVar6;
      pbVar6 = pbVar6 + 1;
      iStack_34 = iStack_34 + 1;
      pbStack_20 = pbStack_20 + 1;
    } while (iStack_34 < 0xc);
    local_38 = iVar1 + -0xe;
    if ((((bStack_1c == 0x41) && (cStack_1b == 'd')) && (cStack_1a == 'o')) &&
       ((cStack_19 == 'b' && (cStack_18 == 'e')))) {
      iVar1 = *param_1;
      *(uint *)(iVar1 + 0x18) = (uint)bStack_17 * 0x100 + (uint)bStack_16;
      *(uint *)(iVar1 + 0x1c) = (uint)bStack_15 * 0x100 + (uint)bStack_14;
      *(uint *)(iVar1 + 0x20) = (uint)bStack_13 * 0x100 + (uint)bStack_12;
      *(uint *)(iVar1 + 0x24) = (uint)bStack_11;
      *(undefined4 *)(*param_1 + 0x14) = 0x4b;
      (**(code **)(*param_1 + 4))(param_1,1);
      *(undefined4 *)((int)param_1 + 0x11d) = 1;
      *(byte *)((int)param_1 + 0x121) = bStack_11;
    }
    else {
      iVar4 = *param_1;
      *(undefined4 *)(iVar4 + 0x14) = 0x4d;
      *(int *)(iVar4 + 0x18) = iVar1 + -2;
      (**(code **)(*param_1 + 4))(param_1,1);
    }
  }
  *puVar3 = pbVar6;
  puVar3[1] = iVar5;
  if (0 < local_38) {
    (**(code **)(param_1[5] + 0x10))(param_1,local_38);
  }
  return 1;
}



undefined4 FUN_0046ae38(int *param_1)

{
  int iVar1;
  undefined4 *puVar2;
  int iVar3;
  byte bVar4;
  int iVar5;
  uint uVar6;
  uint uVar7;
  byte *pbVar8;
  
  puVar2 = (undefined4 *)param_1[5];
  iVar5 = puVar2[1];
  pbVar8 = (byte *)*puVar2;
  if (iVar5 == 0) {
    iVar5 = (*(code *)puVar2[3])(param_1);
    if (iVar5 == 0) {
      return 0;
    }
    iVar5 = puVar2[1];
    pbVar8 = (byte *)*puVar2;
  }
  iVar5 = iVar5 + -1;
  bVar4 = *pbVar8;
  pbVar8 = pbVar8 + 1;
  if (iVar5 == 0) {
    iVar5 = (*(code *)puVar2[3])(param_1);
    if (iVar5 == 0) {
      return 0;
    }
    iVar5 = puVar2[1];
    pbVar8 = (byte *)*puVar2;
  }
  iVar1 = (uint)bVar4 * 0x100 + (uint)*pbVar8;
  do {
    iVar1 = iVar1 + -2;
    pbVar8 = pbVar8 + 1;
    iVar5 = iVar5 + -1;
    if (iVar1 < 1) {
      *puVar2 = pbVar8;
      puVar2[1] = iVar5;
      return 1;
    }
    if (iVar5 == 0) {
      iVar5 = (*(code *)puVar2[3])(param_1);
      if (iVar5 == 0) {
        return 0;
      }
      iVar5 = puVar2[1];
      pbVar8 = (byte *)*puVar2;
    }
    uVar7 = (uint)*pbVar8;
    pbVar8 = pbVar8 + 1;
    iVar5 = iVar5 + -1;
    if (iVar5 == 0) {
      iVar5 = (*(code *)puVar2[3])(param_1);
      if (iVar5 == 0) {
        return 0;
      }
      iVar5 = puVar2[1];
      pbVar8 = (byte *)*puVar2;
    }
    bVar4 = *pbVar8;
    uVar6 = (uint)bVar4;
    iVar3 = *param_1;
    *(undefined4 *)(iVar3 + 0x14) = 0x4e;
    *(uint *)(iVar3 + 0x18) = uVar7;
    *(uint *)(iVar3 + 0x1c) = uVar6;
    (**(code **)(*param_1 + 4))(param_1,1);
    if (0x1f < uVar7) {
      iVar3 = *param_1;
      *(undefined4 *)(iVar3 + 0x14) = 0x1a;
      *(uint *)(iVar3 + 0x18) = uVar7;
      (**(code **)*param_1)();
    }
    if (uVar7 < 0x10) {
      *(byte *)((int)param_1 + uVar7 + 0xe0) = bVar4 & 0xf;
      bVar4 = (byte)((int)uVar6 >> 4);
      *(byte *)((int)param_1 + uVar7 + 0xf0) = bVar4;
      if (bVar4 < *(byte *)((int)param_1 + uVar7 + 0xe0)) {
        iVar3 = *param_1;
        *(undefined4 *)(iVar3 + 0x14) = 0x1b;
        *(uint *)(iVar3 + 0x18) = uVar6;
        (**(code **)*param_1)();
      }
    }
    else {
      *(byte *)((int)param_1 + uVar7 + 0xf0) = bVar4;
    }
  } while( true );
}



undefined4 FUN_0046afcc(int *param_1)

{
  int iVar1;
  byte bVar2;
  byte bVar3;
  undefined4 *puVar4;
  int iVar5;
  int iVar6;
  byte *pbVar7;
  byte *pbVar8;
  int iVar9;
  uint uStack_138;
  int iStack_134;
  byte *pbStack_12c;
  byte *pbStack_128;
  byte bStack_123;
  byte bStack_122;
  byte bStack_121;
  byte bStack_120;
  byte bStack_11f;
  byte bStack_11e;
  byte bStack_11d;
  byte bStack_11c;
  byte bStack_11b;
  byte bStack_11a;
  byte bStack_119;
  byte bStack_118;
  byte bStack_117;
  byte bStack_116;
  byte bStack_115;
  byte bStack_114;
  byte abStack_110 [256];
  
  puVar4 = (undefined4 *)param_1[5];
  iVar5 = puVar4[1];
  pbVar7 = (byte *)*puVar4;
  if (iVar5 == 0) {
    iVar5 = (*(code *)puVar4[3])(param_1);
    if (iVar5 == 0) {
      return 0;
    }
    iVar5 = puVar4[1];
    pbVar7 = (byte *)*puVar4;
  }
  iVar5 = iVar5 + -1;
  bVar2 = *pbVar7;
  pbVar7 = pbVar7 + 1;
  if (iVar5 == 0) {
    iVar5 = (*(code *)puVar4[3])(param_1);
    if (iVar5 == 0) {
      return 0;
    }
    iVar5 = puVar4[1];
    pbVar7 = (byte *)*puVar4;
  }
  iVar5 = iVar5 + -1;
  pbVar8 = pbVar7 + 1;
  iVar1 = (uint)bVar2 * 0x100 + (uint)*pbVar7 + -2;
  do {
    if (iVar1 < 1) {
      *puVar4 = pbVar8;
      puVar4[1] = iVar5;
      return 1;
    }
    if (iVar5 == 0) {
      iVar5 = (*(code *)puVar4[3])(param_1);
      if (iVar5 == 0) {
        return 0;
      }
      iVar5 = puVar4[1];
      pbVar8 = (byte *)*puVar4;
    }
    iVar5 = iVar5 + -1;
    bVar2 = *pbVar8;
    uStack_138 = (uint)bVar2;
    pbVar8 = pbVar8 + 1;
    iVar9 = *param_1;
    *(undefined4 *)(iVar9 + 0x14) = 0x4f;
    *(uint *)(iVar9 + 0x18) = uStack_138;
    (**(code **)(*param_1 + 4))(param_1,1);
    iVar9 = 1;
    iStack_134 = 0;
    pbStack_12c = &bStack_123;
    do {
      if (iVar5 == 0) {
        iVar5 = (*(code *)puVar4[3])(param_1);
        if (iVar5 == 0) {
          return 0;
        }
        iVar5 = puVar4[1];
        pbVar8 = (byte *)*puVar4;
      }
      bVar3 = *pbVar8;
      pbVar8 = pbVar8 + 1;
      *pbStack_12c = bVar3;
      iStack_134 = iStack_134 + (uint)bVar3;
      pbStack_12c = pbStack_12c + 1;
      iVar5 = iVar5 + -1;
      iVar9 = iVar9 + 1;
    } while (iVar9 < 0x11);
    iVar9 = *param_1;
    *(uint *)(iVar9 + 0x18) = (uint)bStack_123;
    *(uint *)(iVar9 + 0x1c) = (uint)bStack_122;
    *(uint *)(iVar9 + 0x20) = (uint)bStack_121;
    *(uint *)(iVar9 + 0x24) = (uint)bStack_120;
    *(uint *)(iVar9 + 0x28) = (uint)bStack_11f;
    *(uint *)(iVar9 + 0x2c) = (uint)bStack_11e;
    *(uint *)(iVar9 + 0x30) = (uint)bStack_11d;
    *(uint *)(iVar9 + 0x34) = (uint)bStack_11c;
    *(undefined4 *)(*param_1 + 0x14) = 0x55;
    (**(code **)(*param_1 + 4))(param_1,2);
    iVar9 = *param_1;
    *(uint *)(iVar9 + 0x18) = (uint)bStack_11b;
    *(uint *)(iVar9 + 0x1c) = (uint)bStack_11a;
    *(uint *)(iVar9 + 0x20) = (uint)bStack_119;
    *(uint *)(iVar9 + 0x24) = (uint)bStack_118;
    *(uint *)(iVar9 + 0x28) = (uint)bStack_117;
    *(uint *)(iVar9 + 0x2c) = (uint)bStack_116;
    *(uint *)(iVar9 + 0x30) = (uint)bStack_115;
    *(uint *)(iVar9 + 0x34) = (uint)bStack_114;
    *(undefined4 *)(*param_1 + 0x14) = 0x55;
    (**(code **)(*param_1 + 4))(param_1,2);
    if ((0x100 < iStack_134) || (iVar1 + -0x11 < iStack_134)) {
      *(undefined4 *)(*param_1 + 0x14) = 0x1c;
      (**(code **)*param_1)();
    }
    iVar9 = 0;
    pbStack_128 = abStack_110;
    if (0 < iStack_134) {
      do {
        if (iVar5 == 0) {
          iVar5 = (*(code *)puVar4[3])(param_1);
          if (iVar5 == 0) {
            return 0;
          }
          iVar5 = puVar4[1];
          pbVar8 = (byte *)*puVar4;
        }
        iVar5 = iVar5 + -1;
        *pbStack_128 = *pbVar8;
        pbVar8 = pbVar8 + 1;
        iVar9 = iVar9 + 1;
        pbStack_128 = pbStack_128 + 1;
      } while (iVar9 < iStack_134);
    }
    iVar1 = (iVar1 + -0x11) - iStack_134;
    if ((bVar2 & 0x10) == 0) {
      iVar9 = uStack_138 + 0x2c;
    }
    else {
      iVar9 = uStack_138 + 0x20;
      uStack_138 = uStack_138 - 0x10;
    }
    if (((int)uStack_138 < 0) || (3 < (int)uStack_138)) {
      iVar6 = *param_1;
      *(undefined4 *)(iVar6 + 0x14) = 0x1d;
      *(uint *)(iVar6 + 0x18) = uStack_138;
      (**(code **)*param_1)();
    }
    if (param_1[iVar9] == 0) {
      iVar6 = FUN_0046be98((int)param_1);
      param_1[iVar9] = iVar6;
    }
    FUN_0045ef78();
    FUN_0045ef78();
  } while( true );
}



undefined4 FUN_0046b2ec(int *param_1)

{
  byte bVar1;
  undefined4 *puVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  ushort uVar7;
  uint uVar8;
  ushort *puVar9;
  byte *pbVar10;
  byte *pbVar11;
  int iStack_24;
  int *piStack_14;
  
  puVar2 = (undefined4 *)param_1[5];
  iVar4 = puVar2[1];
  pbVar10 = (byte *)*puVar2;
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar2[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    iVar4 = puVar2[1];
    pbVar10 = (byte *)*puVar2;
  }
  iVar4 = iVar4 + -1;
  bVar1 = *pbVar10;
  pbVar10 = pbVar10 + 1;
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar2[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    iVar4 = puVar2[1];
    pbVar10 = (byte *)*puVar2;
  }
  iVar4 = iVar4 + -1;
  pbVar11 = pbVar10 + 1;
  iVar6 = (uint)bVar1 * 0x100 + (uint)*pbVar10 + -2;
  do {
    iVar3 = iVar6;
    if (iVar3 < 1) {
      *puVar2 = pbVar11;
      puVar2[1] = iVar4;
      return 1;
    }
    if (iVar4 == 0) {
      iVar4 = (*(code *)puVar2[3])(param_1);
      if (iVar4 == 0) {
        return 0;
      }
      iVar4 = puVar2[1];
      pbVar11 = (byte *)*puVar2;
    }
    iVar4 = iVar4 + -1;
    bVar1 = *pbVar11;
    pbVar11 = pbVar11 + 1;
    iVar5 = (int)(uint)bVar1 >> 4;
    uVar8 = bVar1 & 0xf;
    iVar6 = *param_1;
    *(undefined4 *)(iVar6 + 0x14) = 0x50;
    *(uint *)(iVar6 + 0x18) = uVar8;
    *(int *)(iVar6 + 0x1c) = iVar5;
    (**(code **)(*param_1 + 4))(param_1,1);
    if (3 < uVar8) {
      iVar6 = *param_1;
      *(undefined4 *)(iVar6 + 0x14) = 0x1e;
      *(uint *)(iVar6 + 0x18) = uVar8;
      (**(code **)*param_1)();
    }
    if (param_1[uVar8 + 0x28] == 0) {
      iVar6 = FUN_0046be80((int)param_1);
      param_1[uVar8 + 0x28] = iVar6;
    }
    puVar9 = (ushort *)param_1[uVar8 + 0x28];
    iStack_24 = 0;
    piStack_14 = &DAT_00474f98;
    do {
      if (iVar5 == 0) {
        if (iVar4 == 0) {
          iVar4 = (*(code *)puVar2[3])(param_1);
          if (iVar4 == 0) {
            return 0;
          }
          iVar4 = puVar2[1];
          pbVar11 = (byte *)*puVar2;
        }
        uVar7 = (ushort)*pbVar11;
      }
      else {
        if (iVar4 == 0) {
          iVar4 = (*(code *)puVar2[3])(param_1);
          if (iVar4 == 0) {
            return 0;
          }
          iVar4 = puVar2[1];
          pbVar11 = (byte *)*puVar2;
        }
        iVar4 = iVar4 + -1;
        bVar1 = *pbVar11;
        pbVar11 = pbVar11 + 1;
        if (iVar4 == 0) {
          iVar4 = (*(code *)puVar2[3])(param_1);
          if (iVar4 == 0) {
            return 0;
          }
          iVar4 = puVar2[1];
          pbVar11 = (byte *)*puVar2;
        }
        uVar7 = (ushort)bVar1 * 0x100 + (ushort)*pbVar11;
      }
      iVar4 = iVar4 + -1;
      pbVar11 = pbVar11 + 1;
      puVar9[*piStack_14] = uVar7;
      iStack_24 = iStack_24 + 1;
      piStack_14 = piStack_14 + 1;
    } while (iStack_24 < 0x40);
    if (1 < *(int *)(*param_1 + 0x68)) {
      iStack_24 = 0;
      do {
        iVar6 = *param_1;
        *(uint *)(iVar6 + 0x18) = (uint)*puVar9;
        *(uint *)(iVar6 + 0x1c) = (uint)puVar9[1];
        *(uint *)(iVar6 + 0x20) = (uint)puVar9[2];
        *(uint *)(iVar6 + 0x24) = (uint)puVar9[3];
        *(uint *)(iVar6 + 0x28) = (uint)puVar9[4];
        *(uint *)(iVar6 + 0x2c) = (uint)puVar9[5];
        *(uint *)(iVar6 + 0x30) = (uint)puVar9[6];
        *(uint *)(iVar6 + 0x34) = (uint)puVar9[7];
        *(undefined4 *)(*param_1 + 0x14) = 0x5c;
        (**(code **)(*param_1 + 4))(param_1,2);
        iStack_24 = iStack_24 + 8;
        puVar9 = puVar9 + 8;
      } while (iStack_24 < 0x40);
    }
    iVar6 = iVar3 + -0x41;
    if (iVar5 != 0) {
      iVar6 = iVar3 + -0x81;
    }
  } while( true );
}



undefined4 FUN_0046b570(int *param_1)

{
  int iVar1;
  byte bVar2;
  undefined4 *puVar3;
  int iVar4;
  int iVar5;
  byte *pbVar6;
  byte *pbVar7;
  
  puVar3 = (undefined4 *)param_1[5];
  pbVar6 = (byte *)*puVar3;
  iVar5 = puVar3[1];
  if (iVar5 == 0) {
    iVar5 = (*(code *)puVar3[3])(param_1);
    if (iVar5 == 0) {
      return 0;
    }
    pbVar6 = (byte *)*puVar3;
    iVar5 = puVar3[1];
  }
  iVar5 = iVar5 + -1;
  bVar2 = *pbVar6;
  pbVar6 = pbVar6 + 1;
  if (iVar5 == 0) {
    iVar5 = (*(code *)puVar3[3])(param_1);
    if (iVar5 == 0) {
      return 0;
    }
    pbVar6 = (byte *)*puVar3;
    iVar5 = puVar3[1];
  }
  iVar5 = iVar5 + -1;
  pbVar7 = pbVar6 + 1;
  if ((uint)bVar2 * 0x100 + (uint)*pbVar6 != 4) {
    *(undefined4 *)(*param_1 + 0x14) = 9;
    (**(code **)*param_1)();
  }
  if (iVar5 == 0) {
    iVar5 = (*(code *)puVar3[3])(param_1);
    if (iVar5 == 0) {
      return 0;
    }
    pbVar7 = (byte *)*puVar3;
    iVar5 = puVar3[1];
  }
  iVar5 = iVar5 + -1;
  bVar2 = *pbVar7;
  pbVar7 = pbVar7 + 1;
  if (iVar5 == 0) {
    iVar5 = (*(code *)puVar3[3])(param_1);
    if (iVar5 == 0) {
      return 0;
    }
    pbVar7 = (byte *)*puVar3;
    iVar5 = puVar3[1];
  }
  iVar1 = (uint)bVar2 * 0x100 + (uint)*pbVar7;
  iVar4 = *param_1;
  *(undefined4 *)(iVar4 + 0x14) = 0x51;
  *(int *)(iVar4 + 0x18) = iVar1;
  (**(code **)(*param_1 + 4))(param_1,1);
  param_1[0x44] = iVar1;
  *puVar3 = pbVar7 + 1;
  puVar3[1] = iVar5 + -1;
  return 1;
}



undefined4 FUN_0046b65c(int *param_1,undefined4 param_2,undefined4 param_3)

{
  undefined4 *puVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  byte *pbVar5;
  byte *pbVar6;
  
  puVar1 = (undefined4 *)param_1[5];
  iVar3 = puVar1[1];
  pbVar5 = (byte *)*puVar1;
  if (iVar3 == 0) {
    iVar3 = (*(code *)puVar1[3])(param_1,param_2,param_3,param_3);
    if (iVar3 == 0) {
      return 0;
    }
    pbVar5 = (byte *)*puVar1;
    iVar3 = puVar1[1];
  }
  iVar3 = iVar3 + -1;
  pbVar6 = pbVar5 + 1;
  iVar4 = (uint)*pbVar5 << 8;
  if (iVar3 == 0) {
    iVar3 = (*(code *)puVar1[3])(param_1);
    if (iVar3 == 0) {
      return 0;
    }
    pbVar6 = (byte *)*puVar1;
    iVar3 = puVar1[1];
  }
  iVar4 = iVar4 + (uint)*pbVar6;
  iVar2 = *param_1;
  *(undefined4 *)(iVar2 + 0x14) = 0x5a;
  *(undefined4 *)(iVar2 + 0x18) = *(undefined4 *)((int)param_1 + 0x192);
  *(int *)(iVar2 + 0x1c) = iVar4;
  (**(code **)(*param_1 + 4))(param_1,1);
  *puVar1 = pbVar6 + 1;
  puVar1[1] = iVar3 + -1;
  (**(code **)(param_1[5] + 0x10))(param_1,iVar4 + -2);
  return 1;
}



undefined4 FUN_0046b6f0(int *param_1)

{
  int *piVar1;
  byte bVar2;
  undefined4 *puVar3;
  int iVar4;
  int iVar5;
  byte *pbVar6;
  uint uVar7;
  
  puVar3 = (undefined4 *)param_1[5];
  pbVar6 = (byte *)*puVar3;
  iVar5 = puVar3[1];
  while( true ) {
    if (iVar5 == 0) {
      iVar5 = (*(code *)puVar3[3])(param_1);
      if (iVar5 == 0) {
        return 0;
      }
      pbVar6 = (byte *)*puVar3;
      iVar5 = puVar3[1];
    }
    bVar2 = *pbVar6;
    while( true ) {
      iVar5 = iVar5 + -1;
      pbVar6 = pbVar6 + 1;
      if (bVar2 == 0xff) break;
      piVar1 = (int *)(*(int *)((int)param_1 + 0x1aa) + 0x5c);
      *piVar1 = *piVar1 + 1;
      *puVar3 = pbVar6;
      puVar3[1] = iVar5;
      if (iVar5 == 0) {
        iVar5 = (*(code *)puVar3[3])(param_1);
        if (iVar5 == 0) {
          return 0;
        }
        pbVar6 = (byte *)*puVar3;
        iVar5 = puVar3[1];
      }
      bVar2 = *pbVar6;
    }
    do {
      if (iVar5 == 0) {
        iVar5 = (*(code *)puVar3[3])(param_1);
        if (iVar5 == 0) {
          return 0;
        }
        pbVar6 = (byte *)*puVar3;
        iVar5 = puVar3[1];
      }
      uVar7 = (uint)*pbVar6;
      pbVar6 = pbVar6 + 1;
      iVar5 = iVar5 + -1;
    } while (uVar7 == 0xff);
    if (uVar7 != 0) break;
    piVar1 = (int *)(*(int *)((int)param_1 + 0x1aa) + 0x5c);
    *piVar1 = *piVar1 + 2;
    *puVar3 = pbVar6;
    puVar3[1] = iVar5;
  }
  if (*(int *)(*(int *)((int)param_1 + 0x1aa) + 0x5c) != 0) {
    iVar4 = *param_1;
    *(undefined4 *)(iVar4 + 0x14) = 0x70;
    *(undefined4 *)(iVar4 + 0x18) = *(undefined4 *)(*(int *)((int)param_1 + 0x1aa) + 0x5c);
    *(uint *)(iVar4 + 0x1c) = uVar7;
    (**(code **)(*param_1 + 4))(param_1,0xffffffff);
    *(undefined4 *)(*(int *)((int)param_1 + 0x1aa) + 0x5c) = 0;
  }
  *(uint *)((int)param_1 + 0x192) = uVar7;
  *puVar3 = pbVar6;
  puVar3[1] = iVar5;
  return 1;
}



undefined4 FUN_0046b804(int *param_1)

{
  byte bVar1;
  undefined4 *puVar2;
  int iVar3;
  int iVar4;
  uint uVar5;
  byte *pbVar6;
  
  puVar2 = (undefined4 *)param_1[5];
  pbVar6 = (byte *)*puVar2;
  iVar4 = puVar2[1];
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar2[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar6 = (byte *)*puVar2;
    iVar4 = puVar2[1];
  }
  iVar4 = iVar4 + -1;
  bVar1 = *pbVar6;
  pbVar6 = pbVar6 + 1;
  if (iVar4 == 0) {
    iVar4 = (*(code *)puVar2[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar6 = (byte *)*puVar2;
    iVar4 = puVar2[1];
  }
  uVar5 = (uint)*pbVar6;
  if ((bVar1 != 0xff) || (uVar5 != 0xd8)) {
    iVar3 = *param_1;
    *(undefined4 *)(iVar3 + 0x14) = 0x34;
    *(uint *)(iVar3 + 0x18) = (uint)bVar1;
    *(uint *)(iVar3 + 0x1c) = uVar5;
    (**(code **)*param_1)();
  }
  *(uint *)((int)param_1 + 0x192) = uVar5;
  *puVar2 = pbVar6 + 1;
  puVar2[1] = iVar4 + -1;
  return 1;
}



undefined4 FUN_0046b8a0(int *param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  
  do {
    if (*(int *)((int)param_1 + 0x192) == 0) {
      if (*(int *)(*(int *)((int)param_1 + 0x1aa) + 0x50) == 0) {
        iVar1 = FUN_0046b804(param_1);
        param_3 = extraout_ECX;
        if (iVar1 == 0) {
          return 0;
        }
      }
      else {
        iVar1 = FUN_0046b6f0(param_1);
        param_3 = extraout_ECX_00;
        if (iVar1 == 0) {
          return 0;
        }
      }
    }
    iVar1 = *(int *)((int)param_1 + 0x192);
    if (iVar1 < 0xcd) {
      if (iVar1 < 0xc5) {
        if (iVar1 < 0xc3) {
          if (iVar1 == 0xc2) {
            iVar1 = FUN_0046a31c(param_1,1,0);
            if (iVar1 == 0) {
              return 0;
            }
          }
          else {
            if (iVar1 == 1) goto switchD_0046b980_caseD_d0;
            if (1 < iVar1 - 0xc0U) goto switchD_0046b93c_default;
            iVar1 = FUN_0046a31c(param_1,0,0);
            if (iVar1 == 0) {
              return 0;
            }
          }
        }
        else {
          if (iVar1 == 0xc3) goto switchD_0046b93c_caseD_c5;
          if (iVar1 != 0xc4) goto switchD_0046b93c_default;
          iVar1 = FUN_0046afcc(param_1);
          if (iVar1 == 0) {
            return 0;
          }
        }
      }
      else {
        switch(iVar1) {
        case 0xc5:
        case 0xc6:
        case 199:
        case 200:
        case 0xcb:
switchD_0046b93c_caseD_c5:
          iVar1 = *param_1;
          *(undefined4 *)(iVar1 + 0x14) = 0x3b;
          *(undefined4 *)(iVar1 + 0x18) = *(undefined4 *)((int)param_1 + 0x192);
          (**(code **)*param_1)();
          break;
        case 0xc9:
          iVar1 = FUN_0046a31c(param_1,0,1);
          if (iVar1 == 0) {
            return 0;
          }
          break;
        case 0xca:
          iVar1 = FUN_0046a31c(param_1,1,1);
          if (iVar1 == 0) {
            return 0;
          }
          break;
        case 0xcc:
          iVar1 = FUN_0046ae38(param_1);
          if (iVar1 == 0) {
            return 0;
          }
          break;
        default:
switchD_0046b93c_default:
          iVar1 = *param_1;
          *(undefined4 *)(iVar1 + 0x14) = 0x43;
          *(undefined4 *)(iVar1 + 0x18) = *(undefined4 *)((int)param_1 + 0x192);
          (**(code **)*param_1)();
        }
      }
    }
    else if (iVar1 < 0xdc) {
      if (iVar1 == 0xdb) {
        iVar1 = FUN_0046b2ec(param_1);
        if (iVar1 == 0) {
          return 0;
        }
      }
      else {
        switch(iVar1) {
        case 0xcd:
        case 0xce:
        case 0xcf:
          goto switchD_0046b93c_caseD_c5;
        case 0xd0:
        case 0xd1:
        case 0xd2:
        case 0xd3:
        case 0xd4:
        case 0xd5:
        case 0xd6:
        case 0xd7:
switchD_0046b980_caseD_d0:
          iVar1 = *param_1;
          *(undefined4 *)(iVar1 + 0x14) = 0x5b;
          *(undefined4 *)(iVar1 + 0x18) = *(undefined4 *)((int)param_1 + 0x192);
          (**(code **)(*param_1 + 4))(param_1,1);
          break;
        case 0xd8:
          iVar1 = FUN_0046a274(param_1);
          if (iVar1 == 0) {
            return 0;
          }
          break;
        case 0xd9:
          *(undefined4 *)(*param_1 + 0x14) = 0x54;
          (**(code **)(*param_1 + 4))(param_1,1);
          *(undefined4 *)((int)param_1 + 0x192) = 0;
          return 2;
        case 0xda:
          iVar1 = FUN_0046a69c(param_1);
          if (iVar1 != 0) {
            *(undefined4 *)((int)param_1 + 0x192) = 0;
            return 1;
          }
          return 0;
        default:
          goto switchD_0046b93c_default;
        }
      }
    }
    else if (iVar1 == 0xdc) {
      iVar1 = FUN_0046b65c(param_1,0,param_3);
      if (iVar1 == 0) {
        return 0;
      }
    }
    else if (iVar1 == 0xdd) {
      iVar1 = FUN_0046b570(param_1);
      if (iVar1 == 0) {
        return 0;
      }
    }
    else if (iVar1 - 0xe0U < 0x10) {
      iVar1 = (**(code **)(*(int *)((int)param_1 + 0x1aa) + -0x370 +
                          *(int *)((int)param_1 + 0x192) * 4))(param_1);
      if (iVar1 == 0) {
        return 0;
      }
    }
    else {
      if (iVar1 - 0xe0U != 0x1e) goto switchD_0046b93c_default;
      iVar1 = (**(code **)(*(int *)((int)param_1 + 0x1aa) + 0xc))();
      if (iVar1 == 0) {
        return 0;
      }
    }
    param_3 = 0;
    *(undefined4 *)((int)param_1 + 0x192) = 0;
  } while( true );
}



undefined4 FUN_0046bb98(int *param_1)

{
  int iVar1;
  
  if (*(int *)((int)param_1 + 0x192) == 0) {
    iVar1 = FUN_0046b6f0(param_1);
    if (iVar1 == 0) {
      return 0;
    }
  }
  if (*(int *)(*(int *)((int)param_1 + 0x1aa) + 0x58) + 0xd0 == *(int *)((int)param_1 + 0x192)) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x61;
    *(undefined4 *)(iVar1 + 0x18) = *(undefined4 *)(*(int *)((int)param_1 + 0x1aa) + 0x58);
    (**(code **)(*param_1 + 4))(param_1,3);
    *(undefined4 *)((int)param_1 + 0x192) = 0;
  }
  else {
    iVar1 = (**(code **)(param_1[5] + 0x14))
                      (param_1,*(undefined4 *)(*(int *)((int)param_1 + 0x1aa) + 0x58));
    if (iVar1 == 0) {
      return 0;
    }
  }
  *(uint *)(*(int *)((int)param_1 + 0x1aa) + 0x58) =
       *(int *)(*(int *)((int)param_1 + 0x1aa) + 0x58) + 1U & 7;
  return 1;
}



undefined4 FUN_0046bc28(int *param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  iVar3 = *param_1;
  iVar2 = *(int *)((int)param_1 + 0x192);
  *(undefined4 *)(iVar3 + 0x14) = 0x75;
  *(int *)(iVar3 + 0x18) = iVar2;
  *(int *)(iVar3 + 0x1c) = param_2;
  (**(code **)(*param_1 + 4))(param_1,0xffffffff);
  while( true ) {
    if (iVar2 < 0xc0) {
      iVar3 = 2;
    }
    else if ((iVar2 < 0xd0) || (0xd7 < iVar2)) {
      iVar3 = 3;
    }
    else if ((iVar2 == (param_2 + 1U & 7) + 0xd0) || (iVar2 == (param_2 + 2U & 7) + 0xd0)) {
      iVar3 = 3;
    }
    else if ((iVar2 == (param_2 - 1U & 7) + 0xd0) || (iVar2 == (param_2 - 2U & 7) + 0xd0)) {
      iVar3 = 2;
    }
    else {
      iVar3 = 1;
    }
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x60;
    *(int *)(iVar1 + 0x18) = iVar2;
    *(int *)(iVar1 + 0x1c) = iVar3;
    (**(code **)(*param_1 + 4))(param_1,4);
    if (iVar3 == 1) break;
    if (iVar3 == 2) {
      iVar3 = FUN_0046b6f0(param_1);
      if (iVar3 == 0) {
        return 0;
      }
      iVar2 = *(int *)((int)param_1 + 0x192);
    }
    else if (iVar3 == 3) {
      return 1;
    }
  }
  *(undefined4 *)((int)param_1 + 0x192) = 0;
  return 1;
}



void FUN_0046bd24(int param_1)

{
  int iVar1;
  
  *(undefined4 *)(param_1 + 0xd4) = 0;
  *(undefined4 *)(param_1 + 0x8c) = 0;
  *(undefined4 *)(param_1 + 0x192) = 0;
  iVar1 = *(int *)(param_1 + 0x1aa);
  *(undefined4 *)(iVar1 + 0x50) = 0;
  *(undefined4 *)(iVar1 + 0x54) = 0;
  *(undefined4 *)(iVar1 + 0x5c) = 0;
  return;
}



void FUN_0046bd54(int param_1)

{
  undefined4 *puVar1;
  int iVar2;
  
  puVar1 = (undefined4 *)(*(code *)**(undefined4 **)(param_1 + 4))(param_1,0,0x60);
  iVar2 = 0;
  *(undefined4 **)(param_1 + 0x1aa) = puVar1;
  *puVar1 = FUN_0046bd24;
  puVar1[1] = FUN_0046b8a0;
  puVar1[2] = FUN_0046bb98;
  puVar1[3] = FUN_0046b65c;
  do {
    *(code **)(*(int *)(param_1 + 0x1aa) + 0x10 + iVar2 * 4) = FUN_0046b65c;
    iVar2 = iVar2 + 1;
  } while (iVar2 < 0x10);
  iVar2 = *(int *)(param_1 + 0x1aa);
  *(code **)(iVar2 + 0x10) = FUN_0046a9dc;
  *(code **)(iVar2 + 0x48) = FUN_0046ac60;
  FUN_0046bd24(param_1);
  return;
}



int FUN_0046bdc0(int param_1,int param_2)

{
  int iVar1;
  
  iVar1 = param_1 + param_2 + -1;
  return iVar1 - iVar1 % param_2;
}



void FUN_0046bdd8(void)

{
  int in_stack_00000008;
  
  if (0 < in_stack_00000008) {
    do {
      FUN_0045ef78();
      in_stack_00000008 = in_stack_00000008 + -1;
    } while (0 < in_stack_00000008);
  }
  return;
}



void FUN_0046be24(void)

{
  FUN_0045ef78();
  return;
}



void FUN_0046be34(int param_1)

{
  undefined4 uVar1;
  int iVar2;
  
  iVar2 = 1;
  do {
    (**(code **)(*(int *)(param_1 + 4) + 0x24))(param_1,iVar2);
    iVar2 = iVar2 + -1;
  } while (0 < iVar2);
  uVar1 = 200;
  if (*(int *)(param_1 + 0xc) == 0) {
    uVar1 = 100;
  }
  *(undefined4 *)(param_1 + 0x10) = uVar1;
  return;
}



void FUN_0046be60(int param_1)

{
  if (*(int *)(param_1 + 4) != 0) {
    (**(code **)(*(int *)(param_1 + 4) + 0x28))();
  }
  *(undefined4 *)(param_1 + 4) = 0;
  *(undefined4 *)(param_1 + 0x10) = 0;
  return;
}



void FUN_0046be80(int param_1)

{
  int iVar1;
  
  iVar1 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,0,0x84);
  *(undefined4 *)(iVar1 + 0x80) = 0;
  return;
}



void FUN_0046be98(int param_1)

{
  int iVar1;
  
  iVar1 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,0,0x115);
  *(undefined4 *)(iVar1 + 0x111) = 0;
  return;
}



void FUN_0046beb0(int param_1)

{
  undefined4 *puVar1;
  undefined4 uVar2;
  
  puVar1 = *(undefined4 **)(param_1 + 0x14);
  uVar2 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x1000);
  puVar1[6] = uVar2;
  *puVar1 = uVar2;
  puVar1[1] = 0x1000;
  return;
}



undefined4 FUN_0046bedc(int *param_1)

{
  undefined4 *puVar1;
  int iVar2;
  
  puVar1 = (undefined4 *)param_1[5];
  iVar2 = FUN_0045efa8();
  if (iVar2 != 0x1000) {
    *(undefined4 *)(*param_1 + 0x14) = 0x24;
    (**(code **)*param_1)();
  }
  *puVar1 = puVar1[6];
  puVar1[1] = 0x1000;
  return 1;
}



void FUN_0046bf24(int *param_1)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  int iVar4;
  
  iVar1 = param_1[5];
  iVar2 = *(int *)(iVar1 + 4);
  if (-iVar2 != -0x1000) {
    iVar4 = FUN_0045efa8();
    if (-iVar2 + 0x1000 != iVar4) {
      *(undefined4 *)(*param_1 + 0x14) = 0x24;
      (**(code **)*param_1)();
    }
  }
  uVar3 = *(undefined4 *)(iVar1 + 0x14);
  FUN_0045efc4();
  if ((*(byte *)(*(int *)(iVar1 + 0x14) + 0x12) & 0x10) != 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x24;
    (**(code **)*param_1)(param_1,(undefined4 *)*param_1,uVar3);
  }
  return;
}



void FUN_0046bf84(int param_1,undefined4 param_2)

{
  int iVar1;
  undefined4 uVar2;
  
  if (*(int *)(param_1 + 0x14) == 0) {
    uVar2 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,0,0x1c);
    *(undefined4 *)(param_1 + 0x14) = uVar2;
  }
  iVar1 = *(int *)(param_1 + 0x14);
  *(code **)(iVar1 + 8) = FUN_0046beb0;
  *(code **)(iVar1 + 0xc) = FUN_0046bedc;
  *(code **)(iVar1 + 0x10) = FUN_0046bf24;
  *(undefined4 *)(iVar1 + 0x14) = param_2;
  return;
}



void FUN_0046bfc4(int *param_1,int param_2,int *param_3,int param_4,int param_5)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  piVar1 = param_1 + param_2 + 0x10;
  if (param_1[4] != 100) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x12;
    *(int *)(iVar2 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  if (*piVar1 == 0) {
    iVar2 = FUN_0046be80((int)param_1);
    *piVar1 = iVar2;
  }
  iVar2 = 0;
  do {
    iVar3 = (*param_3 * param_5 + 0x32) / 100;
    if (iVar3 < 1) {
      iVar3 = 1;
    }
    if (0x7fff < iVar3) {
      iVar3 = 0x7fff;
    }
    if ((param_4 != 0) && (0xff < iVar3)) {
      iVar3 = 0xff;
    }
    param_3 = param_3 + 1;
    *(short *)(*piVar1 + iVar2 * 2) = (short)iVar3;
    iVar2 = iVar2 + 1;
  } while (iVar2 < 0x40);
  *(undefined4 *)(*piVar1 + 0x80) = 0;
  return;
}



void FUN_0046c05c(int *param_1,int param_2,int param_3)

{
  FUN_0046bfc4(param_1,0,(int *)&DAT_004750d8,param_3,param_2);
  FUN_0046bfc4(param_1,1,(int *)&DAT_004751d8,param_3,param_2);
  return;
}



int FUN_0046c08c(int param_1)

{
  int iVar1;
  
  if (param_1 < 1) {
    param_1 = 1;
  }
  if (100 < param_1) {
    param_1 = 100;
  }
  if (param_1 < 0x32) {
    iVar1 = (int)(5000 / (longlong)param_1);
  }
  else {
    iVar1 = param_1 * -2 + 200;
  }
  return iVar1;
}



void FUN_0046c0c0(int *param_1,int param_2,int param_3)

{
  int iVar1;
  
  iVar1 = FUN_0046c08c(param_2);
  FUN_0046c05c(param_1,iVar1,param_3);
  return;
}



void FUN_0046c0dc(int param_1,int *param_2)

{
  int iVar1;
  
  if (*param_2 == 0) {
    iVar1 = FUN_0046be98(param_1);
    *param_2 = iVar1;
  }
  FUN_0045ef78();
  FUN_0045ef78();
  *(undefined4 *)(*param_2 + 0x111) = 0;
  return;
}



void FUN_0046c12c(int param_1)

{
  FUN_0046c0dc(param_1,(int *)(param_1 + 0x50));
  FUN_0046c0dc(param_1,(int *)(param_1 + 0x60));
  FUN_0046c0dc(param_1,(int *)(param_1 + 0x54));
  FUN_0046c0dc(param_1,(int *)(param_1 + 100));
  return;
}



void FUN_0046c184(int *param_1)

{
  int iVar1;
  int *piVar2;
  
  if (param_1[4] != 100) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x12;
    *(int *)(iVar1 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  if (param_1[0xf] == 0) {
    iVar1 = (**(code **)param_1[1])(param_1,0,0x348);
    param_1[0xf] = iVar1;
  }
  param_1[0xc] = 8;
  FUN_0046c0c0(param_1,0x4b,1);
  FUN_0046c12c((int)param_1);
  iVar1 = 0;
  piVar2 = param_1 + 0x1c;
  do {
    *(undefined1 *)piVar2 = 0;
    *(undefined1 *)(piVar2 + 4) = 1;
    *(undefined1 *)(piVar2 + 8) = 5;
    iVar1 = iVar1 + 1;
    piVar2 = (int *)((int)piVar2 + 1);
  } while (iVar1 < 0x10);
  param_1[0x29] = 0;
  param_1[0x28] = 0;
  param_1[0x2a] = 0;
  param_1[0x2b] = 0;
  param_1[0x2c] = 0;
  if (8 < param_1[0xc]) {
    param_1[0x2c] = 1;
  }
  param_1[0x2d] = 0;
  param_1[0x2e] = 0;
  param_1[0x2f] = 0;
  param_1[0x30] = 0;
  param_1[0x31] = 0;
  *(undefined1 *)(param_1 + 0x33) = 0;
  *(undefined2 *)((int)param_1 + 0xcd) = 1;
  *(undefined2 *)((int)param_1 + 0xcf) = 1;
  FUN_0046c274(param_1);
  return;
}



void FUN_0046c274(int *param_1)

{
  switch(param_1[9]) {
  case 0:
    FUN_0046c2e8(param_1,0);
    return;
  case 1:
    FUN_0046c2e8(param_1,1);
    return;
  case 2:
    FUN_0046c2e8(param_1,3);
    return;
  case 3:
    FUN_0046c2e8(param_1,3);
    return;
  case 4:
    FUN_0046c2e8(param_1,4);
    return;
  case 5:
    FUN_0046c2e8(param_1,5);
    return;
  default:
    *(undefined4 *)(*param_1 + 0x14) = 7;
    (**(code **)*param_1)();
    return;
  }
}



void FUN_0046c2e8(int *param_1,int param_2)

{
  undefined4 *puVar1;
  int *piVar2;
  int iVar3;
  
  if (param_1[4] != 100) {
    iVar3 = *param_1;
    *(undefined4 *)(iVar3 + 0x14) = 0x12;
    *(int *)(iVar3 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  param_1[0xe] = param_2;
  param_1[0x32] = 0;
  *(undefined4 *)((int)param_1 + 0xd1) = 0;
  switch(param_2) {
  case 0:
    param_1[0xd] = param_1[8];
    if ((param_1[0xd] < 1) || (10 < param_1[0xd])) {
      iVar3 = *param_1;
      *(undefined4 *)(iVar3 + 0x14) = 0x18;
      *(int *)(iVar3 + 0x18) = param_1[0xd];
      *(undefined4 *)(iVar3 + 0x1c) = 10;
      (**(code **)*param_1)();
    }
    for (iVar3 = 0; iVar3 < param_1[0xd]; iVar3 = iVar3 + 1) {
      piVar2 = (int *)(iVar3 * 0x54 + param_1[0xf]);
      *piVar2 = iVar3;
      piVar2[2] = 1;
      piVar2[3] = 1;
      piVar2[4] = 0;
      piVar2[5] = 0;
      piVar2[6] = 0;
    }
    return;
  case 1:
    param_1[0x32] = 1;
    param_1[0xd] = 1;
    puVar1 = (undefined4 *)param_1[0xf];
    *puVar1 = 1;
    puVar1[2] = 1;
    puVar1[3] = 1;
    puVar1[4] = 0;
    puVar1[5] = 0;
    puVar1[6] = 0;
    return;
  case 2:
    *(undefined4 *)((int)param_1 + 0xd1) = 1;
    param_1[0xd] = 3;
    puVar1 = (undefined4 *)param_1[0xf];
    *puVar1 = 0x52;
    puVar1[2] = 1;
    puVar1[3] = 1;
    puVar1[4] = 0;
    puVar1[5] = 0;
    puVar1[6] = 0;
    iVar3 = param_1[0xf];
    *(undefined4 *)(iVar3 + 0x54) = 0x47;
    *(undefined4 *)(iVar3 + 0x5c) = 1;
    *(undefined4 *)(iVar3 + 0x60) = 1;
    *(undefined4 *)(iVar3 + 100) = 0;
    *(undefined4 *)(iVar3 + 0x68) = 0;
    *(undefined4 *)(iVar3 + 0x6c) = 0;
    iVar3 = param_1[0xf];
    *(undefined4 *)(iVar3 + 0xa8) = 0x42;
    *(undefined4 *)(iVar3 + 0xb0) = 1;
    *(undefined4 *)(iVar3 + 0xb4) = 1;
    *(undefined4 *)(iVar3 + 0xb8) = 0;
    *(undefined4 *)(iVar3 + 0xbc) = 0;
    *(undefined4 *)(iVar3 + 0xc0) = 0;
    return;
  case 3:
    param_1[0x32] = 1;
    param_1[0xd] = 3;
    puVar1 = (undefined4 *)param_1[0xf];
    *puVar1 = 1;
    puVar1[2] = 2;
    puVar1[3] = 2;
    puVar1[4] = 0;
    puVar1[5] = 0;
    puVar1[6] = 0;
    iVar3 = param_1[0xf];
    *(undefined4 *)(iVar3 + 0x54) = 2;
    *(undefined4 *)(iVar3 + 0x5c) = 1;
    *(undefined4 *)(iVar3 + 0x60) = 1;
    *(undefined4 *)(iVar3 + 100) = 1;
    *(undefined4 *)(iVar3 + 0x68) = 1;
    *(undefined4 *)(iVar3 + 0x6c) = 1;
    iVar3 = param_1[0xf];
    *(undefined4 *)(iVar3 + 0xa8) = 3;
    *(undefined4 *)(iVar3 + 0xb0) = 1;
    *(undefined4 *)(iVar3 + 0xb4) = 1;
    *(undefined4 *)(iVar3 + 0xb8) = 1;
    *(undefined4 *)(iVar3 + 0xbc) = 1;
    *(undefined4 *)(iVar3 + 0xc0) = 1;
    return;
  case 4:
    *(undefined4 *)((int)param_1 + 0xd1) = 1;
    param_1[0xd] = 4;
    puVar1 = (undefined4 *)param_1[0xf];
    *puVar1 = 0x43;
    puVar1[2] = 1;
    puVar1[3] = 1;
    puVar1[4] = 0;
    puVar1[5] = 0;
    puVar1[6] = 0;
    iVar3 = param_1[0xf];
    *(undefined4 *)(iVar3 + 0x54) = 0x4d;
    *(undefined4 *)(iVar3 + 0x5c) = 1;
    *(undefined4 *)(iVar3 + 0x60) = 1;
    *(undefined4 *)(iVar3 + 100) = 0;
    *(undefined4 *)(iVar3 + 0x68) = 0;
    *(undefined4 *)(iVar3 + 0x6c) = 0;
    iVar3 = param_1[0xf];
    *(undefined4 *)(iVar3 + 0xa8) = 0x59;
    *(undefined4 *)(iVar3 + 0xb0) = 1;
    *(undefined4 *)(iVar3 + 0xb4) = 1;
    *(undefined4 *)(iVar3 + 0xb8) = 0;
    *(undefined4 *)(iVar3 + 0xbc) = 0;
    *(undefined4 *)(iVar3 + 0xc0) = 0;
    iVar3 = param_1[0xf];
    *(undefined4 *)(iVar3 + 0xfc) = 0x4b;
    *(undefined4 *)(iVar3 + 0x104) = 1;
    *(undefined4 *)(iVar3 + 0x108) = 1;
    *(undefined4 *)(iVar3 + 0x10c) = 0;
    *(undefined4 *)(iVar3 + 0x110) = 0;
    *(undefined4 *)(iVar3 + 0x114) = 0;
    return;
  case 5:
    *(undefined4 *)((int)param_1 + 0xd1) = 1;
    param_1[0xd] = 4;
    puVar1 = (undefined4 *)param_1[0xf];
    *puVar1 = 1;
    puVar1[2] = 2;
    puVar1[3] = 2;
    puVar1[4] = 0;
    puVar1[5] = 0;
    puVar1[6] = 0;
    iVar3 = param_1[0xf];
    *(undefined4 *)(iVar3 + 0x54) = 2;
    *(undefined4 *)(iVar3 + 0x5c) = 1;
    *(undefined4 *)(iVar3 + 0x60) = 1;
    *(undefined4 *)(iVar3 + 100) = 1;
    *(undefined4 *)(iVar3 + 0x68) = 1;
    *(undefined4 *)(iVar3 + 0x6c) = 1;
    iVar3 = param_1[0xf];
    *(undefined4 *)(iVar3 + 0xa8) = 3;
    *(undefined4 *)(iVar3 + 0xb0) = 1;
    *(undefined4 *)(iVar3 + 0xb4) = 1;
    *(undefined4 *)(iVar3 + 0xb8) = 1;
    *(undefined4 *)(iVar3 + 0xbc) = 1;
    *(undefined4 *)(iVar3 + 0xc0) = 1;
    iVar3 = param_1[0xf];
    *(undefined4 *)(iVar3 + 0xfc) = 4;
    *(undefined4 *)(iVar3 + 0x104) = 2;
    *(undefined4 *)(iVar3 + 0x108) = 2;
    *(undefined4 *)(iVar3 + 0x10c) = 0;
    *(undefined4 *)(iVar3 + 0x110) = 0;
    *(undefined4 *)(iVar3 + 0x114) = 0;
    return;
  default:
    *(undefined4 *)(*param_1 + 0x14) = 8;
    (**(code **)*param_1)();
    return;
  }
}



undefined4 *
FUN_0046c6a0(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
            undefined4 param_5,undefined4 param_6)

{
  *param_1 = 1;
  param_1[1] = param_2;
  param_1[5] = param_3;
  param_1[6] = param_6;
  param_1[7] = param_5;
  param_1[8] = param_4;
  return param_1 + 9;
}



void FUN_0046c6c8(undefined4 *param_1,int param_2,undefined4 param_3,undefined4 param_4,
                 undefined4 param_5,undefined4 param_6)

{
  int iVar1;
  
  iVar1 = 0;
  if (0 < param_2) {
    do {
      *param_1 = 1;
      param_1[1] = iVar1;
      param_1[5] = param_3;
      param_1[6] = param_6;
      iVar1 = iVar1 + 1;
      param_1[7] = param_5;
      param_1[8] = param_4;
      param_1 = param_1 + 9;
    } while (iVar1 < param_2);
  }
  return;
}



int * FUN_0046c704(int *param_1,int param_2,int param_3,int param_4)

{
  int *piVar1;
  int iVar2;
  
  if (param_2 < 5) {
    *param_1 = param_2;
    iVar2 = 0;
    piVar1 = param_1 + 1;
    if (0 < param_2) {
      do {
        *piVar1 = iVar2;
        iVar2 = iVar2 + 1;
        piVar1 = piVar1 + 1;
      } while (iVar2 < param_2);
    }
    param_1[6] = 0;
    param_1[5] = 0;
    param_1[7] = param_3;
    param_1[8] = param_4;
    piVar1 = param_1 + 9;
  }
  else {
    piVar1 = (int *)FUN_0046c6c8(param_1,param_2,0,param_4,param_3,0);
  }
  return piVar1;
}



void FUN_0046c750(int *param_1)

{
  int iVar1;
  int iVar2;
  int *piVar3;
  undefined4 *puVar4;
  int local_10;
  
  iVar1 = param_1[0xd];
  if (param_1[4] != 100) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x12;
    *(int *)(iVar2 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  if ((iVar1 == 3) && (param_1[0xe] == 3)) {
    local_10 = 10;
  }
  else if (iVar1 < 5) {
    local_10 = iVar1 * 4 + 2;
  }
  else {
    local_10 = iVar1 * 6;
  }
  piVar3 = (int *)(**(code **)param_1[1])(param_1,0,local_10 * 0x24);
  param_1[0x29] = (int)piVar3;
  param_1[0x28] = local_10;
  if ((iVar1 == 3) && (param_1[0xe] == 3)) {
    piVar3 = FUN_0046c704(piVar3,3,0,1);
    puVar4 = FUN_0046c6a0(piVar3,0,1,2,0,5);
    puVar4 = FUN_0046c6a0(puVar4,2,1,1,0,0x3f);
    puVar4 = FUN_0046c6a0(puVar4,1,1,1,0,0x3f);
    puVar4 = FUN_0046c6a0(puVar4,0,6,2,0,0x3f);
    piVar3 = FUN_0046c6a0(puVar4,0,1,1,2,0x3f);
    piVar3 = FUN_0046c704(piVar3,3,1,0);
    puVar4 = FUN_0046c6a0(piVar3,2,1,0,1,0x3f);
    puVar4 = FUN_0046c6a0(puVar4,1,1,0,1,0x3f);
    FUN_0046c6a0(puVar4,0,1,0,1,0x3f);
  }
  else {
    piVar3 = FUN_0046c704(piVar3,iVar1,0,1);
    puVar4 = (undefined4 *)FUN_0046c6c8(piVar3,iVar1,1,2,0,5);
    puVar4 = (undefined4 *)FUN_0046c6c8(puVar4,iVar1,6,2,0,0x3f);
    piVar3 = (int *)FUN_0046c6c8(puVar4,iVar1,1,1,2,0x3f);
    piVar3 = FUN_0046c704(piVar3,iVar1,1,0);
    FUN_0046c6c8(piVar3,iVar1,1,0,1,0x3f);
  }
  return;
}



void FUN_0046c934(int *param_1,int param_2)

{
  int iVar1;
  
  if (param_1[4] != 100) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x12;
    *(int *)(iVar1 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  if (param_2 != 0) {
    FUN_0046cbd4((int)param_1,0);
  }
  (**(code **)(*param_1 + 0x10))();
  (**(code **)(param_1[5] + 8))();
  FUN_0046cda0(param_1);
  (*(code *)**(undefined4 **)((int)param_1 + 0x141))();
  *(undefined4 *)((int)param_1 + 0xd5) = 0;
  iVar1 = 0x66;
  if (param_1[0x2a] == 0) {
    iVar1 = 0x65;
  }
  param_1[4] = iVar1;
  return;
}



uint FUN_0046c9a0(int *param_1,undefined4 param_2,uint param_3)

{
  int iVar1;
  uint uVar2;
  uint uStack_10;
  
  uStack_10 = param_3;
  if (param_1[4] != 0x65) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x12;
    *(int *)(iVar1 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  if ((uint)param_1[7] <= *(uint *)((int)param_1 + 0xd5)) {
    *(undefined4 *)(*param_1 + 0x14) = 0x77;
    (**(code **)(*param_1 + 4))(param_1,0xffffffff);
  }
  iVar1 = param_1[2];
  if (iVar1 != 0) {
    *(undefined4 *)(iVar1 + 4) = *(undefined4 *)((int)param_1 + 0xd5);
    *(int *)(iVar1 + 8) = param_1[7];
    (**(code **)param_1[2])();
  }
  if (*(int *)(*(int *)((int)param_1 + 0x141) + 0xc) != 0) {
    (**(code **)(*(int *)((int)param_1 + 0x141) + 4))();
  }
  uVar2 = param_1[7] - *(int *)((int)param_1 + 0xd5);
  if (uVar2 < param_3) {
    param_3 = uVar2;
  }
  uStack_10 = 0;
  (**(code **)(*(int *)((int)param_1 + 0x145) + 4))(param_1,param_2,&uStack_10);
  *(int *)((int)param_1 + 0xd5) = *(int *)((int)param_1 + 0xd5) + param_3;
  return param_3;
}



uint FUN_0046ca50(int *param_1,undefined4 param_2,uint param_3)

{
  uint uVar1;
  int iVar2;
  
  if (param_1[4] != 0x66) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x12;
    *(int *)(iVar2 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  if (*(uint *)((int)param_1 + 0xd5) < (uint)param_1[7]) {
    iVar2 = param_1[2];
    if (iVar2 != 0) {
      *(undefined4 *)(iVar2 + 4) = *(undefined4 *)((int)param_1 + 0xd5);
      *(int *)(iVar2 + 8) = param_1[7];
      (**(code **)param_1[2])();
    }
    if (*(int *)(*(int *)((int)param_1 + 0x141) + 0xc) != 0) {
      (**(code **)(*(int *)((int)param_1 + 0x141) + 4))();
    }
    uVar1 = *(int *)((int)param_1 + 0xe1) * 8;
    if (param_3 < uVar1) {
      *(undefined4 *)(*param_1 + 0x14) = 0x15;
      (**(code **)*param_1)();
    }
    iVar2 = (**(code **)(*(int *)((int)param_1 + 0x14d) + 4))(param_1,param_2);
    if (iVar2 == 0) {
      uVar1 = 0;
    }
    else {
      *(int *)((int)param_1 + 0xd5) = *(int *)((int)param_1 + 0xd5) + uVar1;
    }
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 0x77;
    (**(code **)(*param_1 + 4))(param_1,0xffffffff);
    uVar1 = 0;
  }
  return uVar1;
}



void FUN_0046cb0c(int *param_1,int param_2,int param_3)

{
  int iVar1;
  int *piVar2;
  
  param_1[1] = 0;
  if (param_2 != 0x3d) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 10;
    *(undefined4 *)(iVar1 + 0x18) = 0x3d;
    *(int *)(iVar1 + 0x1c) = param_2;
    (**(code **)*param_1)();
  }
  if (param_3 != 0x165) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x13;
    *(undefined4 *)(iVar1 + 0x18) = 0x165;
    *(int *)(iVar1 + 0x1c) = param_3;
    (**(code **)*param_1)();
  }
  iVar1 = *param_1;
  FUN_0045ef60();
  *param_1 = iVar1;
  param_1[3] = 0;
  FUN_00461488(param_1);
  param_1[2] = 0;
  param_1[5] = 0;
  piVar2 = param_1 + 0x10;
  param_1[0xf] = 0;
  iVar1 = 0;
  do {
    iVar1 = iVar1 + 1;
    *piVar2 = 0;
    piVar2 = piVar2 + 1;
  } while (iVar1 < 4);
  iVar1 = 0;
  piVar2 = param_1 + 0x14;
  do {
    iVar1 = iVar1 + 1;
    *piVar2 = 0;
    piVar2[4] = 0;
    piVar2 = piVar2 + 1;
  } while (iVar1 < 4);
  param_1[10] = 0;
  param_1[0xb] = 0x3ff00000;
  param_1[4] = 100;
  return;
}



void FUN_0046cbd4(int param_1,undefined4 param_2)

{
  int *piVar1;
  int iVar2;
  
  iVar2 = 0;
  piVar1 = (int *)(param_1 + 0x40);
  do {
    if (*piVar1 != 0) {
      *(undefined4 *)(*piVar1 + 0x80) = param_2;
    }
    iVar2 = iVar2 + 1;
    piVar1 = piVar1 + 1;
  } while (iVar2 < 4);
  iVar2 = 0;
  piVar1 = (int *)(param_1 + 0x50);
  do {
    if (*piVar1 != 0) {
      *(undefined4 *)(*piVar1 + 0x111) = param_2;
    }
    if (piVar1[4] != 0) {
      *(undefined4 *)(piVar1[4] + 0x111) = param_2;
    }
    iVar2 = iVar2 + 1;
    piVar1 = piVar1 + 1;
  } while (iVar2 < 4);
  return;
}



void FUN_0046cc1c(int *param_1)

{
  int iVar1;
  uint uVar2;
  
  if ((param_1[4] == 0x65) || (param_1[4] == 0x66)) {
    if (*(uint *)((int)param_1 + 0xd5) < (uint)param_1[7]) {
      *(undefined4 *)(*param_1 + 0x14) = 0x42;
      (**(code **)*param_1)();
    }
    (**(code **)(*(int *)((int)param_1 + 0x141) + 8))();
  }
  else if (param_1[4] != 0x67) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x12;
    *(int *)(iVar1 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  while (*(int *)(*(int *)((int)param_1 + 0x141) + 0x10) == 0) {
    (*(code *)**(undefined4 **)((int)param_1 + 0x141))();
    for (uVar2 = 0; uVar2 < *(uint *)((int)param_1 + 0xe5); uVar2 = uVar2 + 1) {
      iVar1 = param_1[2];
      if (iVar1 != 0) {
        *(uint *)(iVar1 + 4) = uVar2;
        *(undefined4 *)(iVar1 + 8) = *(undefined4 *)((int)param_1 + 0xe5);
        (**(code **)param_1[2])();
      }
      iVar1 = (**(code **)(*(int *)((int)param_1 + 0x14d) + 4))(param_1,0);
      if (iVar1 == 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0x16;
        (**(code **)*param_1)();
      }
    }
    (**(code **)(*(int *)((int)param_1 + 0x141) + 8))();
  }
  (**(code **)(*(int *)((int)param_1 + 0x151) + 0x10))();
  (**(code **)(param_1[5] + 0x10))();
  FUN_0046be34((int)param_1);
  return;
}



void FUN_0046ccf8(int *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  int iVar1;
  
  if ((*(int *)((int)param_1 + 0xd5) != 0) ||
     (((iVar1 = param_1[4], iVar1 != 0x65 && (iVar1 != 0x66)) && (iVar1 != 0x67)))) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x12;
    *(int *)(iVar1 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  (*(code *)**(undefined4 **)((int)param_1 + 0x151))(param_1,param_2,param_3,param_4);
  return;
}



void FUN_0046cd50(int *param_1)

{
  int iVar1;
  
  if (param_1[4] != 100) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x12;
    *(int *)(iVar1 + 0x18) = param_1[4];
    (**(code **)*param_1)();
  }
  (**(code **)(*param_1 + 0x10))();
  (**(code **)(param_1[5] + 8))();
  FUN_0046d5f0((int)param_1);
  (**(code **)(*(int *)((int)param_1 + 0x151) + 0x14))();
  (**(code **)(param_1[5] + 0x10))();
  FUN_0046be34((int)param_1);
  return;
}



void FUN_0046cda0(int *param_1)

{
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  int iVar1;
  
  FUN_0046e0ac(param_1,0);
  if (param_1[0x2a] == 0) {
    FUN_0046f478(param_1);
    FUN_0046fe64(param_1);
    FUN_0046e764(param_1,0,extraout_ECX);
  }
  FUN_004704dc(param_1);
  if (param_1[0x2b] == 0) {
    if (*(int *)((int)param_1 + 0xd9) == 0) {
      FUN_00472514((int)param_1);
    }
    else {
      FUN_00471014((int)param_1);
    }
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 1;
    (**(code **)*param_1)();
  }
  if ((param_1[0x28] < 2) && (param_1[0x2c] == 0)) {
    iVar1 = 0;
  }
  else {
    iVar1 = 1;
  }
  FUN_0046ef74((int)param_1,iVar1);
  FUN_0046e24c(param_1,0,extraout_ECX_00);
  FUN_0046d5f0((int)param_1);
  (**(code **)(param_1[1] + 0x18))();
  (**(code **)(*(int *)((int)param_1 + 0x151) + 4))();
  return;
}



void FUN_0046ce50(int *param_1,undefined1 param_2)

{
  int *piVar1;
  int *piVar2;
  undefined1 *puVar3;
  int iVar4;
  
  piVar2 = (int *)param_1[5];
  puVar3 = (undefined1 *)*piVar2;
  *piVar2 = *piVar2 + 1;
  *puVar3 = param_2;
  piVar1 = piVar2 + 1;
  *piVar1 = *piVar1 + -1;
  if (*piVar1 == 0) {
    iVar4 = (*(code *)piVar2[3])(param_1);
    if (iVar4 == 0) {
      *(undefined4 *)(*param_1 + 0x14) = 0x16;
      (**(code **)*param_1)();
    }
  }
  return;
}



void FUN_0046ce80(int *param_1,undefined1 param_2)

{
  FUN_0046ce50(param_1,0xff);
  FUN_0046ce50(param_1,param_2);
  return;
}



void FUN_0046cea0(int *param_1,undefined4 param_2)

{
  FUN_0046ce50(param_1,(char)((uint)param_2 >> 8));
  FUN_0046ce50(param_1,(char)param_2);
  return;
}



char FUN_0046cecc(int *param_1,int param_2)

{
  ushort uVar1;
  ushort *puVar2;
  ushort *puVar3;
  undefined4 uVar4;
  int iVar5;
  char cVar6;
  int *piStack_14;
  
  puVar2 = (ushort *)param_1[param_2 + 0x10];
  if (puVar2 == (ushort *)0x0) {
    iVar5 = *param_1;
    *(undefined4 *)(iVar5 + 0x14) = 0x33;
    *(int *)(iVar5 + 0x18) = param_2;
    (**(code **)*param_1)();
  }
  cVar6 = '\0';
  iVar5 = 0;
  puVar3 = puVar2;
  do {
    if (0xff < *puVar3) {
      cVar6 = '\x01';
    }
    iVar5 = iVar5 + 1;
    puVar3 = puVar3 + 1;
  } while (iVar5 < 0x40);
  if (*(int *)(puVar2 + 0x40) == 0) {
    FUN_0046ce80(param_1,0xdb);
    uVar4 = 0x83;
    if (cVar6 == '\0') {
      uVar4 = 0x43;
    }
    FUN_0046cea0(param_1,uVar4);
    FUN_0046ce50(param_1,cVar6 * '\x10' + (char)param_2);
    piStack_14 = &DAT_00474f98;
    iVar5 = 0;
    do {
      uVar1 = puVar2[*piStack_14];
      if (cVar6 != '\0') {
        FUN_0046ce50(param_1,(char)(uVar1 >> 8));
      }
      FUN_0046ce50(param_1,(char)uVar1);
      iVar5 = iVar5 + 1;
      piStack_14 = piStack_14 + 1;
    } while (iVar5 < 0x40);
    puVar2[0x40] = 1;
    puVar2[0x41] = 0;
  }
  return cVar6;
}



void FUN_0046cfa8(int *param_1,int param_2,int param_3)

{
  byte *pbVar1;
  int iVar2;
  int iVar3;
  byte *pbVar4;
  int local_1c;
  byte *pbStack_18;
  byte *pbStack_14;
  
  if (param_3 == 0) {
    pbVar4 = (byte *)param_1[param_2 + 0x14];
    local_1c = param_2;
  }
  else {
    pbVar4 = (byte *)param_1[param_2 + 0x18];
    local_1c = param_2 + 0x10;
  }
  if (pbVar4 == (byte *)0x0) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x31;
    *(int *)(iVar2 + 0x18) = local_1c;
    (**(code **)*param_1)();
  }
  if (*(int *)(pbVar4 + 0x111) == 0) {
    FUN_0046ce80(param_1,0xc4);
    iVar3 = 0;
    iVar2 = 1;
    pbVar1 = pbVar4;
    do {
      pbVar1 = pbVar1 + 1;
      iVar2 = iVar2 + 1;
      iVar3 = iVar3 + (uint)*pbVar1;
    } while (iVar2 < 0x11);
    FUN_0046cea0(param_1,iVar3 + 0x13);
    FUN_0046ce50(param_1,(char)local_1c);
    iVar2 = 1;
    pbStack_18 = pbVar4;
    do {
      pbStack_18 = pbStack_18 + 1;
      FUN_0046ce50(param_1,*pbStack_18);
      iVar2 = iVar2 + 1;
    } while (iVar2 < 0x11);
    iVar2 = 0;
    pbStack_14 = pbVar4 + 0x11;
    if (0 < iVar3) {
      do {
        FUN_0046ce50(param_1,*pbStack_14);
        iVar2 = iVar2 + 1;
        pbStack_14 = pbStack_14 + 1;
      } while (iVar2 < iVar3);
    }
    pbVar4[0x111] = 1;
    pbVar4[0x112] = 0;
    pbVar4[0x113] = 0;
    pbVar4[0x114] = 0;
  }
  return;
}



void FUN_0046d084(void)

{
  return;
}



void FUN_0046d088(int *param_1)

{
  FUN_0046ce80(param_1,0xdd);
  FUN_0046cea0(param_1,4);
  FUN_0046cea0(param_1,param_1[0x30]);
  return;
}



void FUN_0046d0b4(int *param_1,undefined1 param_2)

{
  undefined4 *puVar1;
  int iVar2;
  
  FUN_0046ce80(param_1,param_2);
  FUN_0046cea0(param_1,param_1[0xd] * 3 + 8);
  if ((0xffff < param_1[7]) || (0xffff < param_1[6])) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x28;
    *(undefined4 *)(iVar2 + 0x18) = 0xffff;
    (**(code **)*param_1)();
  }
  FUN_0046ce50(param_1,(char)param_1[0xc]);
  FUN_0046cea0(param_1,param_1[7]);
  FUN_0046cea0(param_1,param_1[6]);
  FUN_0046ce50(param_1,(char)param_1[0xd]);
  puVar1 = (undefined4 *)param_1[0xf];
  for (iVar2 = 0; iVar2 < param_1[0xd]; iVar2 = iVar2 + 1) {
    FUN_0046ce50(param_1,(char)*puVar1);
    FUN_0046ce50(param_1,(char)(puVar1[2] << 4) + (char)puVar1[3]);
    FUN_0046ce50(param_1,(char)puVar1[4]);
    puVar1 = puVar1 + 0x15;
  }
  return;
}



void FUN_0046d158(int *param_1)

{
  undefined4 *puVar1;
  int iVar2;
  char cVar3;
  int iVar4;
  int *piVar5;
  
  FUN_0046ce80(param_1,0xda);
  FUN_0046cea0(param_1,*(int *)((int)param_1 + 0xe9) * 2 + 6);
  FUN_0046ce50(param_1,(char)*(undefined4 *)((int)param_1 + 0xe9));
  piVar5 = (int *)((int)param_1 + 0xed);
  for (iVar4 = 0; iVar4 < *(int *)((int)param_1 + 0xe9); iVar4 = iVar4 + 1) {
    puVar1 = (undefined4 *)*piVar5;
    FUN_0046ce50(param_1,(char)*puVar1);
    iVar2 = puVar1[5];
    cVar3 = (char)puVar1[6];
    if (*(int *)((int)param_1 + 0xd9) != 0) {
      if (*(int *)((int)param_1 + 0x131) == 0) {
        cVar3 = '\0';
        if ((*(int *)((int)param_1 + 0x139) != 0) && (param_1[0x2b] == 0)) {
          iVar2 = 0;
        }
      }
      else {
        iVar2 = 0;
      }
    }
    FUN_0046ce50(param_1,cVar3 + (char)(iVar2 << 4));
    piVar5 = piVar5 + 1;
  }
  FUN_0046ce50(param_1,(char)*(undefined4 *)((int)param_1 + 0x131));
  FUN_0046ce50(param_1,(char)*(undefined4 *)((int)param_1 + 0x135));
  FUN_0046ce50(param_1,(char)(*(int *)((int)param_1 + 0x139) << 4) +
                       (char)*(undefined4 *)((int)param_1 + 0x13d));
  return;
}



void FUN_0046d220(int *param_1)

{
  FUN_0046ce80(param_1,0xe0);
  FUN_0046cea0(param_1,0x10);
  FUN_0046ce50(param_1,0x4a);
  FUN_0046ce50(param_1,0x46);
  FUN_0046ce50(param_1,0x49);
  FUN_0046ce50(param_1,0x46);
  FUN_0046ce50(param_1,0);
  FUN_0046ce50(param_1,1);
  FUN_0046ce50(param_1,1);
  FUN_0046ce50(param_1,(char)param_1[0x33]);
  FUN_0046cea0(param_1,(uint)*(ushort *)((int)param_1 + 0xcd));
  FUN_0046cea0(param_1,(uint)*(ushort *)((int)param_1 + 0xcf));
  FUN_0046ce50(param_1,0);
  FUN_0046ce50(param_1,0);
  return;
}



void FUN_0046d2cc(int *param_1)

{
  FUN_0046ce80(param_1,0xee);
  FUN_0046cea0(param_1,0xe);
  FUN_0046ce50(param_1,0x41);
  FUN_0046ce50(param_1,100);
  FUN_0046ce50(param_1,0x6f);
  FUN_0046ce50(param_1,0x62);
  FUN_0046ce50(param_1,0x65);
  FUN_0046cea0(param_1,100);
  FUN_0046cea0(param_1,0);
  FUN_0046cea0(param_1,0);
  if (param_1[0xe] == 3) {
    FUN_0046ce50(param_1,1);
    return;
  }
  if (param_1[0xe] != 5) {
    FUN_0046ce50(param_1,0);
    return;
  }
  FUN_0046ce50(param_1,2);
  return;
}



void FUN_0046d378(int *param_1,undefined1 param_2,undefined1 *param_3,uint param_4)

{
  if (param_4 < 0xfffe) {
    FUN_0046ce80(param_1,param_2);
    FUN_0046cea0(param_1,param_4 + 2);
    while (param_4 != 0) {
      FUN_0046ce50(param_1,*param_3);
      param_3 = param_3 + 1;
      param_4 = param_4 - 1;
    }
  }
  return;
}



void FUN_0046d3bc(int *param_1)

{
  FUN_0046ce80(param_1,0xd8);
  if (param_1[0x32] != 0) {
    FUN_0046d220(param_1);
  }
  if (*(int *)((int)param_1 + 0xd1) != 0) {
    FUN_0046d2cc(param_1);
  }
  return;
}



void FUN_0046d3f0(int *param_1)

{
  bool bVar1;
  char cVar2;
  undefined3 extraout_var;
  int iVar3;
  int iVar4;
  int local_14;
  
  local_14 = 0;
  iVar3 = param_1[0xf];
  for (iVar4 = 0; iVar4 < param_1[0xd]; iVar4 = iVar4 + 1) {
    cVar2 = FUN_0046cecc(param_1,*(int *)(iVar3 + 0x10));
    local_14 = local_14 + CONCAT31(extraout_var,cVar2);
    iVar3 = iVar3 + 0x54;
  }
  if (((param_1[0x2b] == 0) && (*(int *)((int)param_1 + 0xd9) == 0)) && (param_1[0xc] == 8)) {
    bVar1 = true;
    iVar3 = param_1[0xf];
    for (iVar4 = 0; iVar4 < param_1[0xd]; iVar4 = iVar4 + 1) {
      if ((1 < *(int *)(iVar3 + 0x14)) || (1 < *(int *)(iVar3 + 0x18))) {
        bVar1 = false;
      }
      iVar3 = iVar3 + 0x54;
    }
    if ((local_14 != 0) && (bVar1)) {
      bVar1 = false;
      *(undefined4 *)(*param_1 + 0x14) = 0x4a;
      (**(code **)(*param_1 + 4))(param_1,0);
    }
  }
  else {
    bVar1 = false;
  }
  if (param_1[0x2b] == 0) {
    if (*(int *)((int)param_1 + 0xd9) == 0) {
      if (bVar1) {
        FUN_0046d0b4(param_1,0xc0);
      }
      else {
        FUN_0046d0b4(param_1,0xc1);
      }
    }
    else {
      FUN_0046d0b4(param_1,0xc2);
    }
  }
  else {
    FUN_0046d0b4(param_1,0xc9);
  }
  return;
}



void FUN_0046d4c8(int *param_1)

{
  int iVar1;
  int iVar2;
  int *piVar3;
  
  if (param_1[0x2b] == 0) {
    piVar3 = (int *)((int)param_1 + 0xed);
    for (iVar2 = 0; iVar2 < *(int *)((int)param_1 + 0xe9); iVar2 = iVar2 + 1) {
      iVar1 = *piVar3;
      if (*(int *)((int)param_1 + 0xd9) == 0) {
        FUN_0046cfa8(param_1,*(int *)(iVar1 + 0x14),0);
        FUN_0046cfa8(param_1,*(int *)(iVar1 + 0x18),1);
      }
      else if (*(int *)((int)param_1 + 0x131) == 0) {
        if (*(int *)((int)param_1 + 0x139) == 0) {
          FUN_0046cfa8(param_1,*(int *)(iVar1 + 0x14),0);
        }
      }
      else {
        FUN_0046cfa8(param_1,*(int *)(iVar1 + 0x18),1);
      }
      piVar3 = piVar3 + 1;
    }
  }
  else {
    FUN_0046d084();
  }
  if (param_1[0x30] != 0) {
    FUN_0046d088(param_1);
  }
  FUN_0046d158(param_1);
  return;
}



void FUN_0046d578(int *param_1)

{
  int iVar1;
  int *piVar2;
  
  FUN_0046ce80(param_1,0xd8);
  iVar1 = 0;
  piVar2 = param_1 + 0x10;
  do {
    if (*piVar2 != 0) {
      FUN_0046cecc(param_1,iVar1);
    }
    iVar1 = iVar1 + 1;
    piVar2 = piVar2 + 1;
  } while (iVar1 < 4);
  if (param_1[0x2b] == 0) {
    iVar1 = 0;
    piVar2 = param_1 + 0x14;
    do {
      if (*piVar2 != 0) {
        FUN_0046cfa8(param_1,iVar1,0);
      }
      if (piVar2[4] != 0) {
        FUN_0046cfa8(param_1,iVar1,1);
      }
      iVar1 = iVar1 + 1;
      piVar2 = piVar2 + 1;
    } while (iVar1 < 4);
  }
  FUN_0046ce80(param_1,0xd9);
  return;
}



void FUN_0046d5f0(int param_1)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)(*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x18);
  *(undefined4 **)(param_1 + 0x151) = puVar1;
  *puVar1 = FUN_0046d378;
  puVar1[1] = FUN_0046d3bc;
  puVar1[2] = FUN_0046d3f0;
  puVar1[3] = FUN_0046d4c8;
  puVar1[4] = &LAB_0046d56c;
  puVar1[5] = FUN_0046d578;
  return;
}



// WARNING: Removing unreachable block (ram,0x0046d69c)

void FUN_0046d63c(int *param_1)

{
  undefined4 uVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  
  if ((((param_1[7] == 0) || (param_1[6] == 0)) || (param_1[0xd] < 1)) || (param_1[8] < 1)) {
    *(undefined4 *)(*param_1 + 0x14) = 0x1f;
    (**(code **)*param_1)();
  }
  if ((0xffdc < param_1[7]) || (0xffdc < param_1[6])) {
    iVar3 = *param_1;
    *(undefined4 *)(iVar3 + 0x14) = 0x28;
    *(undefined4 *)(iVar3 + 0x18) = 0xffdc;
    (**(code **)*param_1)();
  }
  if (param_1[0xc] != 8) {
    iVar3 = *param_1;
    *(undefined4 *)(iVar3 + 0x14) = 0xd;
    *(int *)(iVar3 + 0x18) = param_1[0xc];
    (**(code **)*param_1)();
  }
  if (10 < param_1[0xd]) {
    iVar3 = *param_1;
    *(undefined4 *)(iVar3 + 0x14) = 0x18;
    *(int *)(iVar3 + 0x18) = param_1[0xd];
    *(undefined4 *)(iVar3 + 0x1c) = 10;
    (**(code **)*param_1)();
  }
  *(undefined4 *)((int)param_1 + 0xdd) = 1;
  *(undefined4 *)((int)param_1 + 0xe1) = 1;
  iVar3 = param_1[0xf];
  for (iVar4 = 0; iVar4 < param_1[0xd]; iVar4 = iVar4 + 1) {
    if (((*(int *)(iVar3 + 8) < 1) || (4 < *(int *)(iVar3 + 8))) ||
       ((*(int *)(iVar3 + 0xc) < 1 || (4 < *(int *)(iVar3 + 0xc))))) {
      *(undefined4 *)(*param_1 + 0x14) = 0x10;
      (**(code **)*param_1)();
    }
    if (*(int *)(iVar3 + 8) < *(int *)((int)param_1 + 0xdd)) {
      uVar1 = *(undefined4 *)((int)param_1 + 0xdd);
    }
    else {
      uVar1 = *(undefined4 *)(iVar3 + 8);
    }
    *(undefined4 *)((int)param_1 + 0xdd) = uVar1;
    if (*(int *)(iVar3 + 0xc) < *(int *)((int)param_1 + 0xe1)) {
      uVar1 = *(undefined4 *)((int)param_1 + 0xe1);
    }
    else {
      uVar1 = *(undefined4 *)(iVar3 + 0xc);
    }
    *(undefined4 *)((int)param_1 + 0xe1) = uVar1;
    iVar3 = iVar3 + 0x54;
  }
  iVar3 = param_1[0xf];
  for (iVar4 = 0; iVar4 < param_1[0xd]; iVar4 = iVar4 + 1) {
    *(int *)(iVar3 + 4) = iVar4;
    *(undefined4 *)(iVar3 + 0x24) = 8;
    iVar2 = *(int *)((int)param_1 + 0xdd) * 8;
    *(int *)(iVar3 + 0x1c) = (param_1[6] * *(int *)(iVar3 + 8) + iVar2 + -1) / iVar2;
    iVar2 = *(int *)((int)param_1 + 0xe1) * 8;
    *(int *)(iVar3 + 0x20) = (param_1[7] * *(int *)(iVar3 + 0xc) + iVar2 + -1) / iVar2;
    *(int *)(iVar3 + 0x28) =
         (param_1[6] * *(int *)(iVar3 + 8) + *(int *)((int)param_1 + 0xdd) + -1) /
         *(int *)((int)param_1 + 0xdd);
    *(int *)(iVar3 + 0x2c) =
         (param_1[7] * *(int *)(iVar3 + 0xc) + *(int *)((int)param_1 + 0xe1) + -1) /
         *(int *)((int)param_1 + 0xe1);
    *(undefined4 *)(iVar3 + 0x30) = 1;
    iVar3 = iVar3 + 0x54;
  }
  iVar3 = *(int *)((int)param_1 + 0xe1) * 8;
  *(int *)((int)param_1 + 0xe5) = (iVar3 + param_1[7] + -1) / iVar3;
  return;
}



void FUN_0046d804(int *param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int *piVar6;
  int iVar7;
  int iVar8;
  int *local_a58;
  int iStack_a54;
  int local_a4c;
  int *piStack_a3c;
  int aiStack_a38 [10];
  int local_a10 [640];
  
  if (param_1[0x28] < 1) {
    *(undefined4 *)(*param_1 + 0x14) = 0x11;
    *(undefined4 *)(*param_1 + 0x18) = 0;
    (**(code **)*param_1)();
  }
  local_a58 = (int *)param_1[0x29];
  if ((local_a58[5] == 0) && (local_a58[6] == 0x3f)) {
    *(undefined4 *)((int)param_1 + 0xd9) = 0;
    piVar6 = aiStack_a38;
    for (local_a4c = 0; local_a4c < param_1[0xd]; local_a4c = local_a4c + 1) {
      *piVar6 = 0;
      piVar6 = piVar6 + 1;
    }
  }
  else {
    *(undefined4 *)((int)param_1 + 0xd9) = 1;
    piVar6 = local_a10;
    for (local_a4c = 0; local_a4c < param_1[0xd]; local_a4c = local_a4c + 1) {
      iVar7 = 0;
      do {
        *piVar6 = -1;
        piVar6 = piVar6 + 1;
        iVar7 = iVar7 + 1;
      } while (iVar7 < 0x40);
    }
  }
  for (iStack_a54 = 1; iStack_a54 <= param_1[0x28]; iStack_a54 = iStack_a54 + 1) {
    iVar7 = *local_a58;
    if ((iVar7 < 1) || (4 < iVar7)) {
      iVar1 = *param_1;
      *(undefined4 *)(iVar1 + 0x14) = 0x18;
      *(int *)(iVar1 + 0x18) = iVar7;
      *(undefined4 *)(iVar1 + 0x1c) = 4;
      (**(code **)*param_1)();
    }
    local_a4c = 0;
    piVar6 = local_a58;
    if (0 < iVar7) {
      do {
        iVar1 = piVar6[1];
        if ((iVar1 < 0) || (param_1[0xd] <= iVar1)) {
          iVar2 = *param_1;
          *(undefined4 *)(iVar2 + 0x14) = 0x11;
          *(int *)(iVar2 + 0x18) = iStack_a54;
          (**(code **)*param_1)();
        }
        if ((0 < local_a4c) && (iVar1 <= *piVar6)) {
          iVar1 = *param_1;
          *(undefined4 *)(iVar1 + 0x14) = 0x11;
          *(int *)(iVar1 + 0x18) = iStack_a54;
          (**(code **)*param_1)();
        }
        local_a4c = local_a4c + 1;
        piVar6 = piVar6 + 1;
      } while (local_a4c < iVar7);
    }
    iVar1 = local_a58[5];
    iVar2 = local_a58[6];
    iVar3 = local_a58[7];
    iVar4 = local_a58[8];
    if (*(int *)((int)param_1 + 0xd9) == 0) {
      if ((((iVar1 != 0) || (iVar2 != 0x3f)) || (iVar3 != 0)) || (iVar4 != 0)) {
        iVar1 = *param_1;
        *(undefined4 *)(iVar1 + 0x14) = 0xf;
        *(int *)(iVar1 + 0x18) = iStack_a54;
        (**(code **)*param_1)();
      }
      local_a4c = 0;
      piVar6 = local_a58;
      if (0 < iVar7) {
        do {
          piVar6 = piVar6 + 1;
          iVar1 = *piVar6;
          if (aiStack_a38[iVar1] != 0) {
            iVar2 = *param_1;
            *(undefined4 *)(iVar2 + 0x14) = 0x11;
            *(int *)(iVar2 + 0x18) = iStack_a54;
            (**(code **)*param_1)();
          }
          aiStack_a38[iVar1] = 1;
          local_a4c = local_a4c + 1;
        } while (local_a4c < iVar7);
      }
    }
    else {
      if (((((iVar1 < 0) || (0x3f < iVar1)) || ((iVar2 < iVar1 || ((0x3f < iVar2 || (iVar3 < 0))))))
          || (0xd < iVar3)) || ((iVar4 < 0 || (0xd < iVar4)))) {
        iVar8 = *param_1;
        *(undefined4 *)(iVar8 + 0x14) = 0xf;
        *(int *)(iVar8 + 0x18) = iStack_a54;
        (**(code **)*param_1)();
      }
      if (iVar1 == 0) {
        if (iVar2 != 0) {
          iVar8 = *param_1;
          *(undefined4 *)(iVar8 + 0x14) = 0xf;
          *(int *)(iVar8 + 0x18) = iStack_a54;
          (**(code **)*param_1)();
        }
      }
      else if (iVar7 != 1) {
        iVar8 = *param_1;
        *(undefined4 *)(iVar8 + 0x14) = 0xf;
        *(int *)(iVar8 + 0x18) = iStack_a54;
        (**(code **)*param_1)();
      }
      local_a4c = 0;
      piStack_a3c = local_a58;
      if (0 < iVar7) {
        do {
          piStack_a3c = piStack_a3c + 1;
          iVar8 = *piStack_a3c;
          if ((iVar1 != 0) && (local_a10[iVar8 * 0x40] < 0)) {
            iVar5 = *param_1;
            *(undefined4 *)(iVar5 + 0x14) = 0xf;
            *(int *)(iVar5 + 0x18) = iStack_a54;
            (**(code **)*param_1)();
          }
          piVar6 = local_a10 + iVar8 * 0x40 + iVar1;
          for (iVar8 = iVar1; iVar8 <= iVar2; iVar8 = iVar8 + 1) {
            if (*piVar6 < 0) {
              if (iVar3 != 0) {
                iVar5 = *param_1;
                *(undefined4 *)(iVar5 + 0x14) = 0xf;
                *(int *)(iVar5 + 0x18) = iStack_a54;
                (**(code **)*param_1)();
              }
            }
            else if ((iVar3 != *piVar6) || (iVar3 + -1 != iVar4)) {
              iVar5 = *param_1;
              *(undefined4 *)(iVar5 + 0x14) = 0xf;
              *(int *)(iVar5 + 0x18) = iStack_a54;
              (**(code **)*param_1)();
            }
            *piVar6 = iVar4;
            piVar6 = piVar6 + 1;
          }
          local_a4c = local_a4c + 1;
        } while (local_a4c < iVar7);
      }
    }
    local_a58 = local_a58 + 9;
  }
  if (*(int *)((int)param_1 + 0xd9) == 0) {
    piVar6 = aiStack_a38;
    for (local_a4c = 0; local_a4c < param_1[0xd]; local_a4c = local_a4c + 1) {
      if (*piVar6 == 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0x2c;
        (**(code **)*param_1)();
      }
      piVar6 = piVar6 + 1;
    }
  }
  else {
    piVar6 = local_a10;
    for (local_a4c = 0; local_a4c < param_1[0xd]; local_a4c = local_a4c + 1) {
      if (*piVar6 < 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0x2c;
        (**(code **)*param_1)();
      }
      piVar6 = piVar6 + 0x40;
    }
  }
  return;
}



void FUN_0046dbec(int *param_1)

{
  int iVar1;
  int *piVar2;
  int *piVar3;
  int *piVar4;
  
  if (param_1[0x29] == 0) {
    if (4 < param_1[0xd]) {
      iVar1 = *param_1;
      *(undefined4 *)(iVar1 + 0x14) = 0x18;
      *(int *)(iVar1 + 0x18) = param_1[0xd];
      *(undefined4 *)(iVar1 + 0x1c) = 4;
      (**(code **)*param_1)();
    }
    *(int *)((int)param_1 + 0xe9) = param_1[0xd];
    piVar4 = (int *)((int)param_1 + 0xed);
    for (iVar1 = 0; iVar1 < param_1[0xd]; iVar1 = iVar1 + 1) {
      *piVar4 = iVar1 * 0x54 + param_1[0xf];
      piVar4 = piVar4 + 1;
    }
    *(undefined4 *)((int)param_1 + 0x131) = 0;
    *(undefined4 *)((int)param_1 + 0x135) = 0x3f;
    *(undefined4 *)((int)param_1 + 0x139) = 0;
    *(undefined4 *)((int)param_1 + 0x13d) = 0;
  }
  else {
    piVar4 = (int *)((int)param_1 + 0xed);
    piVar2 = (int *)(*(int *)(*(int *)((int)param_1 + 0x141) + 0x20) * 0x24 + param_1[0x29]);
    *(int *)((int)param_1 + 0xe9) = *piVar2;
    piVar3 = piVar2;
    for (iVar1 = 0; piVar3 = piVar3 + 1, iVar1 < *piVar2; iVar1 = iVar1 + 1) {
      *piVar4 = *piVar3 * 0x54 + param_1[0xf];
      piVar4 = piVar4 + 1;
    }
    *(int *)((int)param_1 + 0x131) = piVar2[5];
    *(int *)((int)param_1 + 0x135) = piVar2[6];
    *(int *)((int)param_1 + 0x139) = piVar2[7];
    *(int *)((int)param_1 + 0x13d) = piVar2[8];
  }
  return;
}



void FUN_0046dcdc(int *param_1)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  int iVar4;
  int *piStack_10;
  
  if (*(int *)((int)param_1 + 0xe9) == 1) {
    iVar2 = *(int *)((int)param_1 + 0xed);
    *(undefined4 *)((int)param_1 + 0xfd) = *(undefined4 *)(iVar2 + 0x1c);
    *(undefined4 *)((int)param_1 + 0x101) = *(undefined4 *)(iVar2 + 0x20);
    *(undefined4 *)(iVar2 + 0x34) = 1;
    *(undefined4 *)(iVar2 + 0x38) = 1;
    *(undefined4 *)(iVar2 + 0x3c) = 1;
    *(undefined4 *)(iVar2 + 0x40) = 8;
    *(undefined4 *)(iVar2 + 0x44) = 1;
    uVar3 = *(uint *)(iVar2 + 0x20) % *(uint *)(iVar2 + 0xc);
    if (uVar3 == 0) {
      uVar3 = *(uint *)(iVar2 + 0xc);
    }
    *(uint *)(iVar2 + 0x48) = uVar3;
    *(undefined4 *)((int)param_1 + 0x105) = 1;
    *(undefined4 *)((int)param_1 + 0x109) = 0;
  }
  else {
    if ((*(int *)((int)param_1 + 0xe9) < 1) || (4 < *(int *)((int)param_1 + 0xe9))) {
      iVar2 = *param_1;
      *(undefined4 *)(iVar2 + 0x14) = 0x18;
      *(undefined4 *)(iVar2 + 0x18) = *(undefined4 *)((int)param_1 + 0xe9);
      *(undefined4 *)(iVar2 + 0x1c) = 4;
      (**(code **)*param_1)();
    }
    iVar2 = *(int *)((int)param_1 + 0xdd) * 8;
    *(int *)((int)param_1 + 0xfd) = (iVar2 + param_1[6] + -1) / iVar2;
    iVar2 = *(int *)((int)param_1 + 0xe1) * 8;
    *(int *)((int)param_1 + 0x101) = (iVar2 + param_1[7] + -1) / iVar2;
    *(undefined4 *)((int)param_1 + 0x105) = 0;
    piStack_10 = (int *)((int)param_1 + 0xed);
    for (iVar2 = 0; iVar2 < *(int *)((int)param_1 + 0xe9); iVar2 = iVar2 + 1) {
      iVar4 = *piStack_10;
      *(undefined4 *)(iVar4 + 0x34) = *(undefined4 *)(iVar4 + 8);
      *(int *)(iVar4 + 0x38) = *(int *)(iVar4 + 0xc);
      *(int *)(iVar4 + 0x3c) = *(int *)(iVar4 + 0x34) * *(int *)(iVar4 + 0xc);
      *(int *)(iVar4 + 0x40) = *(int *)(iVar4 + 0x34) << 3;
      uVar3 = *(uint *)(iVar4 + 0x1c) % *(uint *)(iVar4 + 0x34);
      if (uVar3 == 0) {
        uVar3 = *(uint *)(iVar4 + 0x34);
      }
      *(uint *)(iVar4 + 0x44) = uVar3;
      uVar3 = *(uint *)(iVar4 + 0x20) % *(uint *)(iVar4 + 0x38);
      if (uVar3 == 0) {
        uVar3 = *(uint *)(iVar4 + 0x38);
      }
      *(uint *)(iVar4 + 0x48) = uVar3;
      iVar4 = *(int *)(iVar4 + 0x3c);
      if (10 < *(int *)((int)param_1 + 0x105) + iVar4) {
        *(undefined4 *)(*param_1 + 0x14) = 0xb;
        (**(code **)*param_1)();
      }
      while( true ) {
        if (iVar4 < 1) break;
        iVar1 = *(int *)((int)param_1 + 0x105);
        *(int *)((int)param_1 + 0x105) = *(int *)((int)param_1 + 0x105) + 1;
        *(int *)((int)param_1 + iVar1 * 4 + 0x109) = iVar2;
        iVar4 = iVar4 + -1;
      }
      piStack_10 = piStack_10 + 1;
    }
  }
  if (0 < param_1[0x31]) {
    iVar2 = param_1[0x31] * *(int *)((int)param_1 + 0xfd);
    if (0xfffe < iVar2) {
      iVar2 = 0xffff;
    }
    param_1[0x30] = iVar2;
  }
  return;
}



void FUN_0046de8c(int *param_1)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  
  iVar1 = *(int *)((int)param_1 + 0x141);
  iVar2 = *(int *)(iVar1 + 0x14);
  if (iVar2 == 0) {
    FUN_0046dbec(param_1);
    FUN_0046dcdc(param_1);
    if (param_1[0x2a] == 0) {
      (*(code *)**(undefined4 **)((int)param_1 + 0x155))();
      (*(code *)**(undefined4 **)((int)param_1 + 0x159))();
      (*(code *)**(undefined4 **)((int)param_1 + 0x149))(param_1,0);
    }
    (*(code *)**(undefined4 **)((int)param_1 + 0x15d))();
    (*(code *)**(undefined4 **)((int)param_1 + 0x161))(param_1,param_1[0x2c]);
    uVar3 = 3;
    if (*(int *)(iVar1 + 0x1c) < 2) {
      uVar3 = 0;
    }
    (*(code *)**(undefined4 **)((int)param_1 + 0x14d))(param_1,uVar3);
    (*(code *)**(undefined4 **)((int)param_1 + 0x145))(param_1,0);
    if (param_1[0x2c] == 0) {
      *(undefined4 *)(iVar1 + 0xc) = 1;
    }
    else {
      *(undefined4 *)(iVar1 + 0xc) = 0;
    }
  }
  else {
    if (iVar2 == 1) {
      FUN_0046dbec(param_1);
      FUN_0046dcdc(param_1);
      if (((*(int *)((int)param_1 + 0x131) != 0) || (*(int *)((int)param_1 + 0x139) == 0)) ||
         (param_1[0x2b] != 0)) {
        (*(code *)**(undefined4 **)((int)param_1 + 0x161))(param_1,1);
        (*(code *)**(undefined4 **)((int)param_1 + 0x14d))(param_1,2);
        *(undefined4 *)(iVar1 + 0xc) = 0;
        goto LAB_0046e000;
      }
      *(undefined4 *)(iVar1 + 0x14) = 2;
      *(int *)(iVar1 + 0x18) = *(int *)(iVar1 + 0x18) + 1;
    }
    else if (iVar2 != 2) {
      *(undefined4 *)(*param_1 + 0x14) = 0x2f;
      (**(code **)*param_1)();
      goto LAB_0046e000;
    }
    if (param_1[0x2c] == 0) {
      FUN_0046dbec(param_1);
      FUN_0046dcdc(param_1);
    }
    (*(code *)**(undefined4 **)((int)param_1 + 0x161))(param_1,0);
    (*(code *)**(undefined4 **)((int)param_1 + 0x14d))(param_1,2);
    if (*(int *)(iVar1 + 0x20) == 0) {
      (**(code **)(*(int *)((int)param_1 + 0x151) + 8))();
    }
    (**(code **)(*(int *)((int)param_1 + 0x151) + 0xc))();
    *(undefined4 *)(iVar1 + 0xc) = 0;
  }
LAB_0046e000:
  *(uint *)(iVar1 + 0x10) = (uint)(*(int *)(iVar1 + 0x1c) + -1 == *(int *)(iVar1 + 0x18));
  iVar2 = param_1[2];
  if (iVar2 != 0) {
    *(undefined4 *)(iVar2 + 0xc) = *(undefined4 *)(iVar1 + 0x18);
    *(undefined4 *)(iVar2 + 0x10) = *(undefined4 *)(iVar1 + 0x1c);
  }
  return;
}



void FUN_0046e028(int param_1)

{
  *(undefined4 *)(*(int *)(param_1 + 0x141) + 0xc) = 0;
  (**(code **)(*(int *)(param_1 + 0x151) + 8))();
  (**(code **)(*(int *)(param_1 + 0x151) + 0xc))();
  return;
}



void FUN_0046e050(int param_1)

{
  int iVar1;
  int iVar2;
  
  iVar1 = *(int *)(param_1 + 0x141);
  (**(code **)(*(int *)(param_1 + 0x161) + 8))();
  iVar2 = *(int *)(iVar1 + 0x14);
  if (iVar2 == 0) {
    *(undefined4 *)(iVar1 + 0x14) = 2;
    if (*(int *)(param_1 + 0xb0) == 0) {
      *(int *)(iVar1 + 0x20) = *(int *)(iVar1 + 0x20) + 1;
    }
  }
  else if (iVar2 == 1) {
    *(undefined4 *)(iVar1 + 0x14) = 2;
  }
  else if (iVar2 == 2) {
    if (*(int *)(param_1 + 0xb0) != 0) {
      *(undefined4 *)(iVar1 + 0x14) = 1;
    }
    *(int *)(iVar1 + 0x20) = *(int *)(iVar1 + 0x20) + 1;
  }
  *(int *)(iVar1 + 0x18) = *(int *)(iVar1 + 0x18) + 1;
  return;
}



void FUN_0046e0ac(int *param_1,int param_2)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0x24);
  *(undefined4 **)((int)param_1 + 0x141) = puVar1;
  *puVar1 = FUN_0046de8c;
  puVar1[1] = FUN_0046e028;
  puVar1[2] = FUN_0046e050;
  puVar1[4] = 0;
  FUN_0046d63c(param_1);
  if (param_1[0x29] == 0) {
    *(undefined4 *)((int)param_1 + 0xd9) = 0;
    param_1[0x28] = 1;
  }
  else {
    FUN_0046d804(param_1);
  }
  if (*(int *)((int)param_1 + 0xd9) != 0) {
    param_1[0x2c] = 1;
  }
  if (param_2 == 0) {
    puVar1[5] = 0;
  }
  else if (param_1[0x2c] == 0) {
    puVar1[5] = 2;
  }
  else {
    puVar1[5] = 1;
  }
  puVar1[8] = 0;
  puVar1[6] = 0;
  if (param_1[0x2c] == 0) {
    puVar1[7] = param_1[0x28];
  }
  else {
    puVar1[7] = param_1[0x28] * 2;
  }
  return;
}



void FUN_0046e1b4(int param_1,undefined4 param_2,int *param_3,undefined4 param_4)

{
  int iVar1;
  int iVar2;
  
  iVar1 = *(int *)(param_1 + 0x145);
  while( true ) {
    if (*(uint *)(param_1 + 0xe5) <= *(uint *)(iVar1 + 8)) {
      return;
    }
    if (*(uint *)(iVar1 + 0xc) < 8) {
      (**(code **)(*(int *)(param_1 + 0x149) + 4))
                (param_1,param_2,param_3,8,iVar1 + 0xc,iVar1 + 0x18,param_4);
    }
    if (*(int *)(iVar1 + 0xc) != 8) break;
    iVar2 = (**(code **)(*(int *)(param_1 + 0x14d) + 4))(param_1,iVar1 + 0x18);
    if (iVar2 == 0) {
      if (*(int *)(iVar1 + 0x10) != 0) {
        return;
      }
      *param_3 = *param_3 + -1;
      *(undefined4 *)(iVar1 + 0x10) = 1;
      return;
    }
    if (*(int *)(iVar1 + 0x10) != 0) {
      *param_3 = *param_3 + 1;
      *(undefined4 *)(iVar1 + 0x10) = 0;
    }
    *(undefined4 *)(iVar1 + 0xc) = 0;
    *(int *)(iVar1 + 8) = *(int *)(iVar1 + 8) + 1;
  }
  return;
}



void FUN_0046e24c(int *param_1,int param_2,undefined4 param_3)

{
  undefined4 *puVar1;
  undefined4 uVar2;
  int iVar3;
  int iVar4;
  
  puVar1 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0x40,param_3);
  *(undefined4 **)((int)param_1 + 0x145) = puVar1;
  *puVar1 = &LAB_0046e174;
  if (param_1[0x2a] == 0) {
    if (param_2 == 0) {
      puVar1 = puVar1 + 6;
      iVar3 = param_1[0xf];
      for (iVar4 = 0; iVar4 < param_1[0xd]; iVar4 = iVar4 + 1) {
        uVar2 = (**(code **)(param_1[1] + 8))
                          (param_1,1,*(int *)(iVar3 + 0x1c) << 3,*(int *)(iVar3 + 0xc) << 3);
        *puVar1 = uVar2;
        puVar1 = puVar1 + 1;
        iVar3 = iVar3 + 0x54;
      }
    }
    else {
      *(undefined4 *)(*param_1 + 0x14) = 4;
      (**(code **)*param_1)();
    }
  }
  return;
}



void FUN_0046e2d0(int *param_1,int param_2)

{
  int iVar1;
  
  iVar1 = *(int *)((int)param_1 + 0x149);
  if (param_2 != 0) {
    *(undefined4 *)(*param_1 + 0x14) = 4;
    (**(code **)*param_1)();
  }
  *(int *)(iVar1 + 0x30) = param_1[7];
  *(undefined4 *)(iVar1 + 0x34) = 0;
  *(undefined4 *)(iVar1 + 0x38) = 0;
  *(int *)(iVar1 + 0x3c) = *(int *)((int)param_1 + 0xe1) * 2;
  return;
}



void FUN_0046e30c(undefined4 param_1,undefined4 param_2,int param_3,int param_4)

{
  if (param_3 < param_4) {
    do {
      FUN_0046bdd8();
      param_3 = param_3 + 1;
    } while (param_3 < param_4);
  }
  return;
}



void FUN_0046e344(int param_1,int param_2,uint *param_3,uint param_4,uint *param_5,
                 undefined4 *param_6,uint param_7)

{
  uint uVar1;
  uint uVar2;
  int iVar3;
  int iVar4;
  undefined4 *local_18;
  undefined4 *local_14;
  
  iVar3 = *(int *)(param_1 + 0x149);
  while( true ) {
    if (param_7 <= *param_3) {
      return;
    }
    if (param_4 <= *param_5) break;
    uVar1 = *(int *)(param_1 + 0xe1) - *(int *)(iVar3 + 0x34);
    uVar2 = param_7 - *param_3;
    if (uVar1 < uVar2) {
      uVar2 = uVar1;
    }
    (**(code **)(*(int *)(param_1 + 0x155) + 4))
              (param_1,*param_3 * 4 + param_2,iVar3 + 8,uVar2,*(undefined4 *)(iVar3 + 0x34));
    *param_3 = *param_3 + uVar2;
    *(int *)(iVar3 + 0x34) = *(int *)(iVar3 + 0x34) + uVar2;
    *(int *)(iVar3 + 0x30) = *(int *)(iVar3 + 0x30) - uVar2;
    if ((*(int *)(iVar3 + 0x30) == 0) && (*(int *)(iVar3 + 0x34) < *(int *)(param_1 + 0xe1))) {
      local_14 = (undefined4 *)(iVar3 + 8);
      for (iVar4 = 0; iVar4 < *(int *)(param_1 + 0x34); iVar4 = iVar4 + 1) {
        FUN_0046e30c(*local_14,*(undefined4 *)(param_1 + 0x18),*(int *)(iVar3 + 0x34),
                     *(int *)(param_1 + 0xe1));
        local_14 = local_14 + 1;
      }
      *(undefined4 *)(iVar3 + 0x34) = *(undefined4 *)(param_1 + 0xe1);
    }
    if (*(int *)(iVar3 + 0x34) == *(int *)(param_1 + 0xe1)) {
      (**(code **)(*(int *)(param_1 + 0x159) + 4))(param_1,iVar3 + 8,0,*param_5,param_6);
      *(undefined4 *)(iVar3 + 0x34) = 0;
      *param_5 = *param_5 + 1;
    }
    if ((*(int *)(iVar3 + 0x30) == 0) && (*param_5 < param_4)) {
      iVar3 = *(int *)(param_1 + 0x3c);
      local_18 = param_6;
      for (iVar4 = 0; iVar4 < *(int *)(param_1 + 0x34); iVar4 = iVar4 + 1) {
        FUN_0046e30c(*local_18,*(int *)(iVar3 + 0x1c) << 3,*param_5 * *(int *)(iVar3 + 0xc),
                     *(int *)(iVar3 + 0xc) * param_4);
        local_18 = local_18 + 1;
        iVar3 = iVar3 + 0x54;
      }
      *param_5 = param_4;
      return;
    }
  }
  return;
}



void FUN_0046e4a4(int param_1,int param_2,uint *param_3,uint param_4,uint *param_5,
                 undefined4 param_6,uint param_7)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  uint uVar4;
  undefined4 *puVar5;
  int iVar6;
  int local_18;
  
  iVar1 = *(int *)(param_1 + 0x149);
  iVar2 = *(int *)(param_1 + 0xe1) * 3;
  do {
    if (param_4 <= *param_5) {
      return;
    }
    if (*param_3 < param_7) {
      uVar3 = *(int *)(iVar1 + 0x3c) - *(int *)(iVar1 + 0x34);
      uVar4 = param_7 - *param_3;
      if (uVar3 < uVar4) {
        uVar4 = uVar3;
      }
      (**(code **)(*(int *)(param_1 + 0x155) + 4))
                (param_1,*param_3 * 4 + param_2,iVar1 + 8,uVar4,*(undefined4 *)(iVar1 + 0x34));
      if (*(int *)(param_1 + 0x1c) == *(int *)(iVar1 + 0x30)) {
        for (local_18 = 0; local_18 < *(int *)(param_1 + 0x34); local_18 = local_18 + 1) {
          for (iVar6 = 1; iVar6 <= *(int *)(param_1 + 0xe1); iVar6 = iVar6 + 1) {
            FUN_0046bdd8();
          }
        }
      }
      *param_3 = *param_3 + uVar4;
      *(int *)(iVar1 + 0x34) = *(int *)(iVar1 + 0x34) + uVar4;
      *(int *)(iVar1 + 0x30) = *(int *)(iVar1 + 0x30) - uVar4;
    }
    else {
      if (*(int *)(iVar1 + 0x30) != 0) {
        return;
      }
      if (*(int *)(iVar1 + 0x34) < *(int *)(iVar1 + 0x3c)) {
        puVar5 = (undefined4 *)(iVar1 + 8);
        for (local_18 = 0; local_18 < *(int *)(param_1 + 0x34); local_18 = local_18 + 1) {
          FUN_0046e30c(*puVar5,*(undefined4 *)(param_1 + 0x18),*(int *)(iVar1 + 0x34),
                       *(int *)(iVar1 + 0x3c));
          puVar5 = puVar5 + 1;
        }
        *(undefined4 *)(iVar1 + 0x34) = *(undefined4 *)(iVar1 + 0x3c);
      }
    }
    if (*(int *)(iVar1 + 0x34) == *(int *)(iVar1 + 0x3c)) {
      (**(code **)(*(int *)(param_1 + 0x159) + 4))
                (param_1,iVar1 + 8,*(undefined4 *)(iVar1 + 0x38),*param_5,param_6);
      *param_5 = *param_5 + 1;
      *(int *)(iVar1 + 0x38) = *(int *)(iVar1 + 0x38) + *(int *)(param_1 + 0xe1);
      if (iVar2 <= *(int *)(iVar1 + 0x38)) {
        *(undefined4 *)(iVar1 + 0x38) = 0;
      }
      if (iVar2 <= *(int *)(iVar1 + 0x34)) {
        *(undefined4 *)(iVar1 + 0x34) = 0;
      }
      *(int *)(iVar1 + 0x3c) = *(int *)(param_1 + 0xe1) + *(int *)(iVar1 + 0x34);
    }
  } while( true );
}



void FUN_0046e64c(int param_1)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  undefined4 *puVar4;
  int iVar5;
  undefined4 *puVar6;
  undefined4 *puVar7;
  int iStack_20;
  int iStack_1c;
  undefined4 *puStack_18;
  undefined4 *puStack_14;
  
  iVar5 = *(int *)(param_1 + 0x149);
  iVar2 = *(int *)(param_1 + 0xe1);
  puStack_18 = (undefined4 *)
               (*(code *)**(undefined4 **)(param_1 + 4))
                         (param_1,1,*(int *)(param_1 + 0x34) * iVar2 * 0x14);
  iStack_20 = 0;
  iStack_1c = *(int *)(param_1 + 0x3c);
  puStack_14 = (undefined4 *)(iVar5 + 8);
  for (; iStack_20 < *(int *)(param_1 + 0x34); iStack_20 = iStack_20 + 1) {
    puVar4 = (undefined4 *)
             (**(code **)(*(int *)(param_1 + 4) + 8))
                       (param_1,1,
                        (*(int *)(iStack_1c + 0x1c) * 8 * *(int *)(param_1 + 0xdd)) /
                        *(int *)(iStack_1c + 8),iVar2 * 3);
    FUN_0045ef78();
    iVar5 = 0;
    puVar6 = puVar4;
    puVar7 = puStack_18;
    if (0 < iVar2) {
      do {
        *puVar7 = puVar4[iVar5 + iVar2 * 2];
        iVar1 = iVar5 + iVar2 * 4;
        iVar5 = iVar5 + 1;
        puVar7 = puVar7 + 1;
        uVar3 = *puVar6;
        puVar6 = puVar6 + 1;
        puStack_18[iVar1] = uVar3;
      } while (iVar5 < iVar2);
    }
    *puStack_14 = puStack_18 + iVar2;
    puStack_18 = puStack_18 + iVar2 * 5;
    puStack_14 = puStack_14 + 1;
    iStack_1c = iStack_1c + 0x54;
  }
  return;
}



void FUN_0046e764(int *param_1,int param_2,undefined4 param_3)

{
  undefined4 *puVar1;
  undefined4 uVar2;
  int iVar3;
  int iVar4;
  
  if (param_2 != 0) {
    *(undefined4 *)(*param_1 + 0x14) = 4;
    (**(code **)*param_1)();
  }
  puVar1 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0x40,param_3);
  *(undefined4 **)((int)param_1 + 0x149) = puVar1;
  *puVar1 = FUN_0046e2d0;
  if (*(int *)(*(int *)((int)param_1 + 0x159) + 8) == 0) {
    puVar1[1] = FUN_0046e344;
    puVar1 = puVar1 + 2;
    iVar3 = param_1[0xf];
    for (iVar4 = 0; iVar4 < param_1[0xd]; iVar4 = iVar4 + 1) {
      uVar2 = (**(code **)(param_1[1] + 8))
                        (param_1,1,
                         (*(int *)(iVar3 + 0x1c) * 8 * *(int *)((int)param_1 + 0xdd)) /
                         *(int *)(iVar3 + 8),*(undefined4 *)((int)param_1 + 0xe1));
      *puVar1 = uVar2;
      puVar1 = puVar1 + 1;
      iVar3 = iVar3 + 0x54;
    }
  }
  else {
    puVar1[1] = FUN_0046e4a4;
    FUN_0046e64c((int)param_1);
  }
  return;
}



void FUN_0046e80c(int param_1)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x14d);
  if (*(int *)(param_1 + 0xe9) < 2) {
    if (*(uint *)(iVar1 + 8) < *(int *)(param_1 + 0xe5) - 1U) {
      *(undefined4 *)(iVar1 + 0x14) = *(undefined4 *)(*(int *)(param_1 + 0xed) + 0xc);
    }
    else {
      *(undefined4 *)(iVar1 + 0x14) = *(undefined4 *)(*(int *)(param_1 + 0xed) + 0x48);
    }
  }
  else {
    *(undefined4 *)(iVar1 + 0x14) = 1;
  }
  *(undefined4 *)(iVar1 + 0xc) = 0;
  *(undefined4 *)(iVar1 + 0x10) = 0;
  return;
}



void FUN_0046e858(int *param_1,int param_2)

{
  int iVar1;
  
  iVar1 = *(int *)((int)param_1 + 0x14d);
  *(undefined4 *)(iVar1 + 8) = 0;
  FUN_0046e80c((int)param_1);
  if (param_2 == 0) {
    if (*(int *)(iVar1 + 0x40) != 0) {
      *(undefined4 *)(*param_1 + 0x14) = 4;
      (**(code **)*param_1)();
    }
    *(code **)(iVar1 + 4) = FUN_0046e8ec;
  }
  else if (param_2 == 2) {
    if (*(int *)(iVar1 + 0x40) == 0) {
      *(undefined4 *)(*param_1 + 0x14) = 4;
      (**(code **)*param_1)();
    }
    *(code **)(iVar1 + 4) = FUN_0046edac;
  }
  else if (param_2 == 3) {
    if (*(int *)(iVar1 + 0x40) == 0) {
      *(undefined4 *)(*param_1 + 0x14) = 4;
      (**(code **)*param_1)();
    }
    *(code **)(iVar1 + 4) = FUN_0046eb1c;
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 4;
    (**(code **)*param_1)();
  }
  return;
}



undefined4 FUN_0046e8ec(int param_1,undefined4 *param_2)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  uint uVar7;
  int iVar8;
  int local_34;
  int local_30;
  int local_2c;
  int local_28;
  int local_20;
  int *local_18;
  undefined4 *local_10;
  
  iVar1 = *(int *)(param_1 + 0x14d);
  uVar7 = *(int *)(param_1 + 0xfd) - 1;
  iVar2 = *(int *)(param_1 + 0xe5);
  local_28 = *(int *)(iVar1 + 0x10);
  do {
    if (*(int *)(iVar1 + 0x14) <= local_28) {
      *(int *)(iVar1 + 8) = *(int *)(iVar1 + 8) + 1;
      FUN_0046e80c(param_1);
      return 1;
    }
    for (uVar3 = *(uint *)(iVar1 + 0xc); uVar3 <= uVar7; uVar3 = uVar3 + 1) {
      local_34 = 0;
      local_18 = (int *)(param_1 + 0xed);
      local_10 = param_2;
      for (local_30 = 0; local_30 < *(int *)(param_1 + 0xe9); local_30 = local_30 + 1) {
        iVar6 = *local_18;
        if (uVar3 < uVar7) {
          iVar8 = *(int *)(iVar6 + 0x34);
        }
        else {
          iVar8 = *(int *)(iVar6 + 0x44);
        }
        iVar4 = *(int *)(iVar6 + 0x40);
        local_20 = local_28 << 3;
        for (local_2c = 0; local_2c < *(int *)(iVar6 + 0x38); local_2c = local_2c + 1) {
          if ((*(uint *)(iVar1 + 8) < iVar2 - 1U) || (local_28 + local_2c < *(int *)(iVar6 + 0x48)))
          {
            (**(code **)(*(int *)(param_1 + 0x15d) + 4))
                      (param_1,iVar6,*local_10,iVar8,uVar3 * iVar4,local_20,
                       *(undefined4 *)(iVar1 + 0x18 + local_34 * 4));
            if (iVar8 < *(int *)(iVar6 + 0x34)) {
              FUN_0045ef60();
              for (iVar5 = iVar8; iVar5 < *(int *)(iVar6 + 0x34); iVar5 = iVar5 + 1) {
                **(undefined2 **)(iVar1 + 0x18 + (local_34 + iVar5) * 4) =
                     **(undefined2 **)(iVar1 + 0x14 + (local_34 + iVar5) * 4);
              }
            }
          }
          else {
            FUN_0045ef60();
            for (iVar5 = 0; iVar5 < *(int *)(iVar6 + 0x34); iVar5 = iVar5 + 1) {
              **(undefined2 **)(iVar1 + 0x18 + (local_34 + iVar5) * 4) =
                   **(undefined2 **)(iVar1 + 0x14 + local_34 * 4);
            }
          }
          local_34 = local_34 + *(int *)(iVar6 + 0x34);
          local_20 = local_20 + 8;
        }
        local_10 = local_10 + 1;
        local_18 = local_18 + 1;
      }
      iVar6 = (**(code **)(*(int *)(param_1 + 0x161) + 4))(param_1,iVar1 + 0x18);
      if (iVar6 == 0) {
        *(int *)(iVar1 + 0x10) = local_28;
        *(uint *)(iVar1 + 0xc) = uVar3;
        return 0;
      }
    }
    *(undefined4 *)(iVar1 + 0xc) = 0;
    local_28 = local_28 + 1;
  } while( true );
}



void FUN_0046eb1c(int param_1,undefined4 *param_2)

{
  undefined2 uVar1;
  int iVar2;
  uint uVar3;
  uint uVar4;
  int iVar5;
  uint uVar6;
  int iVar7;
  uint uVar8;
  undefined2 *puVar9;
  uint uStack_3c;
  int local_38;
  uint uStack_34;
  uint uStack_30;
  int local_2c;
  undefined2 *puStack_24;
  undefined4 *local_20;
  int *piStack_1c;
  undefined4 *local_14;
  int *piStack_10;
  
  iVar2 = *(int *)(param_1 + 0x14d);
  uVar4 = *(int *)(param_1 + 0xe5) - 1;
  local_38 = 0;
  local_2c = *(int *)(param_1 + 0x3c);
  local_20 = (undefined4 *)(iVar2 + 0x40);
  local_14 = param_2;
  for (; local_38 < *(int *)(param_1 + 0x34); local_38 = local_38 + 1) {
    piStack_10 = (int *)(**(code **)(*(int *)(param_1 + 4) + 0x20))
                                  (param_1,*local_20,*(int *)(iVar2 + 8) * *(int *)(local_2c + 0xc),
                                   1,*(int *)(local_2c + 0xc));
    if (*(uint *)(iVar2 + 8) < uVar4) {
      uStack_30 = *(uint *)(local_2c + 0xc);
    }
    else {
      uStack_30 = *(uint *)(local_2c + 0x20) % *(uint *)(local_2c + 0xc);
      if (uStack_30 == 0) {
        uStack_30 = *(uint *)(local_2c + 0xc);
      }
    }
    uVar6 = *(uint *)(local_2c + 0x1c);
    uVar3 = *(uint *)(local_2c + 8);
    uVar8 = uVar6 % uVar3;
    if (0 < (int)uVar8) {
      uVar8 = uVar3 - uVar8;
    }
    uStack_34 = 0;
    piStack_1c = piStack_10;
    if (0 < (int)uStack_30) {
      do {
        iVar5 = *piStack_1c;
        (**(code **)(*(int *)(param_1 + 0x15d) + 4))
                  (param_1,local_2c,*local_14,uVar6,0,uStack_34 << 3,iVar5);
        if (0 < (int)uVar8) {
          puVar9 = (undefined2 *)(iVar5 + uVar6 * 0x80);
          FUN_0045ef60();
          uVar1 = puVar9[-0x40];
          iVar5 = 0;
          if (0 < (int)uVar8) {
            do {
              *puVar9 = uVar1;
              iVar5 = iVar5 + 1;
              puVar9 = puVar9 + 0x40;
            } while (iVar5 < (int)uVar8);
          }
        }
        uStack_34 = uStack_34 + 1;
        piStack_1c = piStack_1c + 1;
      } while ((int)uStack_34 < (int)uStack_30);
    }
    if (*(uint *)(iVar2 + 8) == uVar4) {
      uVar6 = (uVar6 + uVar8) / uVar3;
      piStack_10 = piStack_10 + uStack_30;
      for (uStack_34 = uStack_30; (int)uStack_34 < *(int *)(local_2c + 0xc);
          uStack_34 = uStack_34 + 1) {
        puStack_24 = (undefined2 *)*piStack_10;
        iVar5 = piStack_10[-1];
        FUN_0045ef60();
        uStack_3c = 0;
        if (uVar6 != 0) {
          do {
            iVar7 = 0;
            uVar1 = *(undefined2 *)(iVar5 + -0x80 + uVar3 * 0x80);
            puVar9 = puStack_24;
            if (0 < (int)uVar3) {
              do {
                *puVar9 = uVar1;
                iVar7 = iVar7 + 1;
                puVar9 = puVar9 + 0x40;
              } while (iVar7 < (int)uVar3);
            }
            puStack_24 = puStack_24 + uVar3 * 0x40;
            iVar5 = iVar5 + uVar3 * 0x80;
            uStack_3c = uStack_3c + 1;
          } while (uStack_3c < uVar6);
        }
        piStack_10 = piStack_10 + 1;
      }
    }
    local_20 = local_20 + 1;
    local_14 = local_14 + 1;
    local_2c = local_2c + 0x54;
  }
  FUN_0046edac(param_1);
  return;
}



undefined4 FUN_0046edac(int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int *piVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  int *piVar8;
  int iVar9;
  uint local_3c;
  int local_38;
  int local_34;
  int *local_28;
  int *local_20;
  int local_1c [4];
  
  piVar8 = local_1c;
  iVar1 = *(int *)(param_1 + 0x14d);
  piVar4 = (int *)(param_1 + 0xed);
  for (local_38 = 0; local_38 < *(int *)(param_1 + 0xe9); local_38 = local_38 + 1) {
    iVar7 = *(int *)(*piVar4 + 0xc);
    iVar7 = (**(code **)(*(int *)(param_1 + 4) + 0x20))
                      (param_1,*(undefined4 *)(iVar1 + 0x40 + *(int *)(*piVar4 + 4) * 4),
                       *(int *)(iVar1 + 8) * iVar7,0,iVar7);
    *piVar8 = iVar7;
    piVar8 = piVar8 + 1;
    piVar4 = piVar4 + 1;
  }
  local_34 = *(int *)(iVar1 + 0x10);
  do {
    if (*(int *)(iVar1 + 0x14) <= local_34) {
      *(int *)(iVar1 + 8) = *(int *)(iVar1 + 8) + 1;
      FUN_0046e80c(param_1);
      return 1;
    }
    for (local_3c = *(uint *)(iVar1 + 0xc); local_3c < *(uint *)(param_1 + 0xfd);
        local_3c = local_3c + 1) {
      iVar7 = 0;
      local_20 = local_1c;
      local_28 = (int *)(param_1 + 0xed);
      for (local_38 = 0; local_38 < *(int *)(param_1 + 0xe9); local_38 = local_38 + 1) {
        iVar2 = *local_28;
        iVar3 = *(int *)(iVar2 + 0x34);
        for (iVar9 = 0; iVar9 < *(int *)(iVar2 + 0x38); iVar9 = iVar9 + 1) {
          iVar6 = *(int *)(*local_20 + (local_34 + iVar9) * 4) + iVar3 * local_3c * 0x80;
          piVar4 = (int *)(iVar1 + 0x18 + iVar7 * 4);
          for (iVar5 = 0; iVar5 < *(int *)(iVar2 + 0x34); iVar5 = iVar5 + 1) {
            *piVar4 = iVar6;
            iVar6 = iVar6 + 0x80;
            iVar7 = iVar7 + 1;
            piVar4 = piVar4 + 1;
          }
        }
        local_20 = local_20 + 1;
        local_28 = local_28 + 1;
      }
      iVar7 = (**(code **)(*(int *)(param_1 + 0x161) + 4))(param_1,iVar1 + 0x18);
      if (iVar7 == 0) {
        *(int *)(iVar1 + 0x10) = local_34;
        *(uint *)(iVar1 + 0xc) = local_3c;
        return 0;
      }
    }
    *(undefined4 *)(iVar1 + 0xc) = 0;
    local_34 = local_34 + 1;
  } while( true );
}



void FUN_0046ef74(int param_1,int param_2)

{
  undefined4 *puVar1;
  int iVar2;
  int iVar3;
  undefined4 uVar4;
  int *piVar5;
  int iVar6;
  int iStack_14;
  
  puVar1 = (undefined4 *)(*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x68);
  *(undefined4 **)(param_1 + 0x14d) = puVar1;
  *puVar1 = FUN_0046e858;
  if (param_2 == 0) {
    iVar2 = (**(code **)(*(int *)(param_1 + 4) + 4))(param_1,1,0x500);
    piVar5 = puVar1 + 6;
    iVar6 = 0;
    do {
      iVar3 = iVar6 + 1;
      *piVar5 = iVar6 * 0x80 + iVar2;
      piVar5 = piVar5 + 1;
      iVar6 = iVar3;
    } while (iVar3 < 10);
    puVar1[0x10] = 0;
  }
  else {
    iStack_14 = 0;
    iVar6 = *(int *)(param_1 + 0x3c);
    puVar1 = puVar1 + 0x10;
    for (; iStack_14 < *(int *)(param_1 + 0x34); iStack_14 = iStack_14 + 1) {
      iVar2 = FUN_0046bdc0(*(int *)(iVar6 + 0x1c),*(int *)(iVar6 + 8));
      iVar3 = FUN_0046bdc0(*(int *)(iVar6 + 0x20),*(int *)(iVar6 + 0xc));
      uVar4 = (**(code **)(*(int *)(param_1 + 4) + 0x14))
                        (param_1,1,0,*(undefined4 *)(iVar6 + 0xc),iVar3,iVar2);
      *puVar1 = uVar4;
      puVar1 = puVar1 + 1;
      iVar6 = iVar6 + 0x54;
    }
  }
  return;
}



void FUN_0046f0dc(int param_1,undefined4 *param_2,int *param_3,int param_4,int param_5)

{
  int iVar1;
  uint uVar2;
  byte *pbVar3;
  uint uVar4;
  uint uVar5;
  uint uVar6;
  undefined1 *local_24;
  undefined1 *local_20;
  undefined1 *local_1c;
  uint local_14;
  undefined4 *local_8;
  
  iVar1 = *(int *)(*(int *)(param_1 + 0x155) + 8);
  uVar2 = *(uint *)(param_1 + 0x18);
  local_8 = param_2;
  while( true ) {
    param_4 = param_4 + -1;
    if (param_4 < 0) break;
    pbVar3 = (byte *)*local_8;
    local_8 = local_8 + 1;
    local_1c = *(undefined1 **)(*param_3 + param_5 * 4);
    local_20 = *(undefined1 **)(param_3[1] + param_5 * 4);
    local_24 = *(undefined1 **)(param_3[2] + param_5 * 4);
    param_5 = param_5 + 1;
    local_14 = 0;
    if (uVar2 != 0) {
      do {
        uVar5 = (uint)pbVar3[2];
        uVar4 = (uint)pbVar3[1];
        uVar6 = (uint)*pbVar3;
        pbVar3 = pbVar3 + 3;
        *local_1c = (char)((uint)(*(int *)(iVar1 + uVar5 * 4) + *(int *)(iVar1 + 0x400 + uVar4 * 4)
                                 + *(int *)(iVar1 + 0x800 + uVar6 * 4)) >> 0x10);
        *local_20 = (char)((uint)(*(int *)(iVar1 + 0xc00 + uVar5 * 4) +
                                  *(int *)(iVar1 + 0x1000 + uVar4 * 4) +
                                 *(int *)(iVar1 + 0x1400 + uVar6 * 4)) >> 0x10);
        *local_24 = (char)((uint)(*(int *)(iVar1 + 0x1400 + uVar5 * 4) +
                                  *(int *)(iVar1 + 0x1800 + uVar4 * 4) +
                                 *(int *)(iVar1 + 0x1c00 + uVar6 * 4)) >> 0x10);
        local_14 = local_14 + 1;
        local_24 = local_24 + 1;
        local_20 = local_20 + 1;
        local_1c = local_1c + 1;
      } while (local_14 < uVar2);
    }
  }
  return;
}



void FUN_0046f1e4(int param_1,undefined4 *param_2,int *param_3,int param_4,int param_5)

{
  byte *pbVar1;
  byte *pbVar2;
  byte bVar3;
  int iVar4;
  uint uVar5;
  byte *pbVar6;
  undefined1 *puVar7;
  uint uVar8;
  undefined4 *local_8;
  
  iVar4 = *(int *)(*(int *)(param_1 + 0x155) + 8);
  uVar5 = *(uint *)(param_1 + 0x18);
  local_8 = param_2;
  while( true ) {
    param_4 = param_4 + -1;
    if (param_4 < 0) break;
    pbVar6 = (byte *)*local_8;
    local_8 = local_8 + 1;
    puVar7 = *(undefined1 **)(*param_3 + param_5 * 4);
    param_5 = param_5 + 1;
    uVar8 = 0;
    if (uVar5 != 0) {
      do {
        uVar8 = uVar8 + 1;
        pbVar1 = pbVar6 + 2;
        pbVar2 = pbVar6 + 1;
        bVar3 = *pbVar6;
        pbVar6 = pbVar6 + 3;
        *puVar7 = (char)((uint)(*(int *)(iVar4 + (uint)*pbVar1 * 4) +
                                *(int *)(iVar4 + 0x400 + (uint)*pbVar2 * 4) +
                               *(int *)(iVar4 + 0x800 + (uint)bVar3 * 4)) >> 0x10);
        puVar7 = puVar7 + 1;
      } while (uVar8 < uVar5);
    }
  }
  return;
}



void FUN_0046f270(int param_1,undefined4 *param_2,int *param_3,int param_4,int param_5)

{
  byte *pbVar1;
  int iVar2;
  uint uVar3;
  byte *pbVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  undefined1 *local_2c;
  undefined1 *local_28;
  undefined1 *local_24;
  byte *local_20;
  uint local_18;
  undefined4 *local_8;
  
  iVar2 = *(int *)(*(int *)(param_1 + 0x155) + 8);
  uVar3 = *(uint *)(param_1 + 0x18);
  local_8 = param_2;
  while( true ) {
    param_4 = param_4 + -1;
    if (param_4 < 0) break;
    pbVar4 = (byte *)*local_8;
    local_8 = local_8 + 1;
    local_24 = *(undefined1 **)(*param_3 + param_5 * 4);
    local_28 = *(undefined1 **)(param_3[1] + param_5 * 4);
    local_2c = *(undefined1 **)(param_3[2] + param_5 * 4);
    local_20 = *(byte **)(param_3[3] + param_5 * 4);
    param_5 = param_5 + 1;
    local_18 = 0;
    if (uVar3 != 0) {
      do {
        iVar6 = 0xff - (uint)*pbVar4;
        iVar5 = 0xff - (uint)pbVar4[1];
        iVar7 = 0xff - (uint)pbVar4[2];
        pbVar1 = pbVar4 + 3;
        pbVar4 = pbVar4 + 4;
        *local_20 = *pbVar1;
        *local_24 = (char)((uint)(*(int *)(iVar2 + iVar6 * 4) + *(int *)(iVar2 + 0x400 + iVar5 * 4)
                                 + *(int *)(iVar2 + 0x800 + iVar7 * 4)) >> 0x10);
        *local_28 = (char)((uint)(*(int *)(iVar2 + 0xc00 + iVar6 * 4) +
                                  *(int *)(iVar2 + 0x1000 + iVar5 * 4) +
                                 *(int *)(iVar2 + 0x1400 + iVar7 * 4)) >> 0x10);
        *local_2c = (char)((uint)(*(int *)(iVar2 + 0x1400 + iVar6 * 4) +
                                  *(int *)(iVar2 + 0x1800 + iVar5 * 4) +
                                 *(int *)(iVar2 + 0x1c00 + iVar7 * 4)) >> 0x10);
        local_18 = local_18 + 1;
        local_2c = local_2c + 1;
        local_28 = local_28 + 1;
        local_24 = local_24 + 1;
        local_20 = local_20 + 1;
      } while (local_18 < uVar3);
    }
  }
  return;
}



void FUN_0046f3b4(int param_1,undefined4 *param_2,int *param_3,int param_4,int param_5)

{
  uint uVar1;
  int iVar2;
  undefined1 *puVar3;
  undefined1 *puVar4;
  uint uVar5;
  
  uVar1 = *(uint *)(param_1 + 0x18);
  iVar2 = *(int *)(param_1 + 0x20);
  while( true ) {
    param_4 = param_4 + -1;
    if (param_4 < 0) break;
    puVar4 = (undefined1 *)*param_2;
    param_2 = param_2 + 1;
    puVar3 = *(undefined1 **)(*param_3 + param_5 * 4);
    uVar5 = 0;
    param_5 = param_5 + 1;
    if (uVar1 != 0) {
      do {
        uVar5 = uVar5 + 1;
        *puVar3 = *puVar4;
        puVar3 = puVar3 + 1;
        puVar4 = puVar4 + iVar2;
      } while (uVar5 < uVar1);
    }
  }
  return;
}



void FUN_0046f400(int param_1,int *param_2,int *param_3,int param_4,int param_5)

{
  int iVar1;
  uint uVar2;
  undefined1 *puVar3;
  int iVar4;
  uint uVar5;
  int *local_14;
  int local_8;
  
  iVar1 = *(int *)(param_1 + 0x34);
  uVar2 = *(uint *)(param_1 + 0x18);
  while( true ) {
    param_4 = param_4 + -1;
    if (param_4 < 0) break;
    local_8 = 0;
    local_14 = param_3;
    if (0 < iVar1) {
      do {
        uVar5 = 0;
        iVar4 = *param_2;
        puVar3 = *(undefined1 **)(*local_14 + param_5 * 4);
        if (uVar2 != 0) {
          do {
            uVar5 = uVar5 + 1;
            *puVar3 = *(undefined1 *)(iVar4 + local_8);
            puVar3 = puVar3 + 1;
            iVar4 = iVar4 + iVar1;
          } while (uVar5 < uVar2);
        }
        local_8 = local_8 + 1;
        local_14 = local_14 + 1;
      } while (local_8 < iVar1);
    }
    param_2 = param_2 + 1;
    param_5 = param_5 + 1;
  }
  return;
}



uint FUN_0046f478(int *param_1)

{
  int iVar1;
  undefined4 *puVar2;
  uint uVar3;
  bool bVar4;
  
  puVar2 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0xc);
  *(undefined4 **)((int)param_1 + 0x155) = puVar2;
  *puVar2 = &DAT_0046f474;
  iVar1 = param_1[9];
  if (iVar1 == 1) {
    uVar3 = 0;
    if (param_1[8] != 1) {
      *(undefined4 *)(*param_1 + 0x14) = 7;
      uVar3 = (**(code **)*param_1)();
    }
  }
  else {
    uVar3 = iVar1 - 4;
    if (iVar1 - 2U < 2) {
      if (param_1[8] != 3) {
        *(undefined4 *)(*param_1 + 0x14) = 7;
        uVar3 = (**(code **)*param_1)();
      }
    }
    else {
      bVar4 = uVar3 < 2;
      uVar3 = iVar1 - 6;
      if (bVar4) {
        if (param_1[8] != 4) {
          *(undefined4 *)(*param_1 + 0x14) = 7;
          uVar3 = (**(code **)*param_1)();
        }
      }
      else if (param_1[8] < 1) {
        *(undefined4 *)(*param_1 + 0x14) = 7;
        uVar3 = (**(code **)*param_1)();
      }
    }
  }
  switch(param_1[0xe]) {
  default:
    if ((param_1[0xe] != param_1[9]) || (uVar3 = param_1[0xd], uVar3 != param_1[8])) {
      *(undefined4 *)(*param_1 + 0x14) = 0x19;
      uVar3 = (**(code **)*param_1)();
    }
    puVar2[1] = FUN_0046f400;
    return uVar3;
  case 1:
    break;
  case 2:
    if (param_1[0xd] != 3) {
      *(undefined4 *)(*param_1 + 0x14) = 8;
      uVar3 = (**(code **)*param_1)();
    }
    if (param_1[9] == 2) {
      puVar2[1] = FUN_0046f400;
      return uVar3;
    }
    *(undefined4 *)(*param_1 + 0x14) = 0x19;
    uVar3 = (**(code **)*param_1)();
    return uVar3;
  case 3:
    if (param_1[0xd] != 3) {
      *(undefined4 *)(*param_1 + 0x14) = 8;
      uVar3 = (**(code **)*param_1)();
    }
    if (param_1[9] == 2) {
      *puVar2 = &LAB_0046f03c;
      puVar2[1] = FUN_0046f0dc;
      return uVar3;
    }
    if (param_1[9] == 3) {
      puVar2[1] = FUN_0046f400;
      return uVar3;
    }
    *(undefined4 *)(*param_1 + 0x14) = 0x19;
    uVar3 = (**(code **)*param_1)();
    return uVar3;
  case 4:
    if (param_1[0xd] != 4) {
      *(undefined4 *)(*param_1 + 0x14) = 8;
      uVar3 = (**(code **)*param_1)();
    }
    if (param_1[9] == 4) {
      puVar2[1] = FUN_0046f400;
      return uVar3;
    }
    *(undefined4 *)(*param_1 + 0x14) = 0x19;
    uVar3 = (**(code **)*param_1)();
    return uVar3;
  case 5:
    if (param_1[0xd] != 4) {
      *(undefined4 *)(*param_1 + 0x14) = 8;
      uVar3 = (**(code **)*param_1)();
    }
    if (param_1[9] == 4) {
      *puVar2 = &LAB_0046f03c;
      puVar2[1] = FUN_0046f270;
      return uVar3;
    }
    if (param_1[9] == 5) {
      puVar2[1] = FUN_0046f400;
      return uVar3;
    }
    *(undefined4 *)(*param_1 + 0x14) = 0x19;
    uVar3 = (**(code **)*param_1)();
    return uVar3;
  }
  if (param_1[0xd] != 1) {
    *(undefined4 *)(*param_1 + 0x14) = 8;
    uVar3 = (**(code **)*param_1)();
  }
  if (param_1[9] == 1) {
    puVar2[1] = FUN_0046f3b4;
    return uVar3;
  }
  if (param_1[9] == 2) {
    *puVar2 = &LAB_0046f03c;
    puVar2[1] = FUN_0046f1e4;
    return uVar3;
  }
  if (param_1[9] == 3) {
    puVar2[1] = FUN_0046f3b4;
    return uVar3;
  }
  *(undefined4 *)(*param_1 + 0x14) = 0x19;
  uVar3 = (**(code **)*param_1)();
  return uVar3;
}



void FUN_0046f6c8(int *param_1,int param_2,int param_3,int param_4)

{
  undefined1 uVar1;
  undefined1 *puVar2;
  int iVar3;
  int iVar4;
  
  if ((0 < param_4 - param_3) && (iVar3 = 0, 0 < param_2)) {
    do {
      puVar2 = (undefined1 *)(*param_1 + param_3);
      uVar1 = puVar2[-1];
      for (iVar4 = param_4 - param_3; 0 < iVar4; iVar4 = iVar4 + -1) {
        *puVar2 = uVar1;
        puVar2 = puVar2 + 1;
      }
      iVar3 = iVar3 + 1;
      param_1 = param_1 + 1;
    } while (iVar3 < param_2);
  }
  return;
}



void FUN_0046f718(int param_1,int *param_2,int param_3,int param_4,int *param_5)

{
  int iVar1;
  undefined4 *local_1c;
  int *local_18;
  int *local_14;
  int local_10;
  
  local_10 = 0;
  local_1c = (undefined4 *)(*(int *)(param_1 + 0x159) + 0xc);
  iVar1 = *(int *)(param_1 + 0x3c);
  local_18 = param_5;
  local_14 = param_2;
  for (; local_10 < *(int *)(param_1 + 0x34); local_10 = local_10 + 1) {
    (*(code *)*local_1c)
              (param_1,iVar1,*local_14 + param_3 * 4,*local_18 + param_4 * *(int *)(iVar1 + 0xc) * 4
              );
    local_14 = local_14 + 1;
    local_18 = local_18 + 1;
    local_1c = local_1c + 1;
    iVar1 = iVar1 + 0x54;
  }
  return;
}



void FUN_0046f79c(int param_1,int param_2,int *param_3,undefined4 *param_4)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  byte *pbVar4;
  int iVar5;
  uint uVar6;
  int iVar7;
  int iVar8;
  int iVar9;
  undefined4 *local_38;
  undefined1 *local_34;
  int local_2c;
  uint local_28;
  int local_14;
  int local_10;
  
  uVar6 = *(int *)(param_2 + 0x1c) * 8;
  iVar1 = *(int *)(param_1 + 0xdd) / *(int *)(param_2 + 8);
  iVar2 = *(int *)(param_1 + 0xe1) / *(int *)(param_2 + 0xc);
  uVar3 = iVar1 * iVar2;
  iVar7 = (int)uVar3 >> 1;
  if (iVar7 < 0) {
    iVar7 = iVar7 + (uint)((uVar3 & 1) != 0);
  }
  FUN_0046f6c8(param_3,*(int *)(param_1 + 0xe1),*(int *)(param_1 + 0x18),uVar6 * iVar1);
  local_10 = 0;
  local_38 = param_4;
  for (local_14 = 0; local_14 < *(int *)(param_2 + 0xc); local_14 = local_14 + 1) {
    local_34 = (undefined1 *)*local_38;
    local_28 = 0;
    local_2c = 0;
    if (uVar6 != 0) {
      do {
        iVar5 = 0;
        iVar9 = 0;
        if (0 < iVar2) {
          do {
            iVar8 = 0;
            pbVar4 = (byte *)(param_3[local_10 + iVar9] + local_2c);
            if (0 < iVar1) {
              do {
                iVar5 = iVar5 + (uint)*pbVar4;
                pbVar4 = pbVar4 + 1;
                iVar8 = iVar8 + 1;
              } while (iVar8 < iVar1);
            }
            iVar9 = iVar9 + 1;
          } while (iVar9 < iVar2);
        }
        *local_34 = (char)((iVar7 + iVar5) / (int)uVar3);
        local_34 = local_34 + 1;
        local_28 = local_28 + 1;
        local_2c = local_2c + iVar1;
      } while (local_28 < uVar6);
    }
    local_10 = local_10 + iVar2;
    local_38 = local_38 + 1;
  }
  return;
}



void FUN_0046f8ac(int param_1,int param_2,undefined4 param_3,int *param_4)

{
  FUN_0046bdd8();
  FUN_0046f6c8(param_4,*(int *)(param_1 + 0xe1),*(int *)(param_1 + 0x18),
               *(int *)(param_2 + 0x1c) << 3);
  return;
}



void FUN_0046f8f8(int param_1,int param_2,int *param_3,int *param_4)

{
  byte *pbVar1;
  byte bVar2;
  byte *pbVar3;
  uint uVar4;
  uint uVar5;
  undefined1 *puVar6;
  int iVar7;
  uint uVar8;
  int *local_18;
  int *local_14;
  int local_c;
  
  uVar4 = *(int *)(param_2 + 0x1c) * 8;
  FUN_0046f6c8(param_3,*(int *)(param_1 + 0xe1),*(int *)(param_1 + 0x18),
               *(int *)(param_2 + 0x1c) << 4);
  local_14 = param_4;
  local_18 = param_3;
  for (local_c = 0; local_c < *(int *)(param_2 + 0xc); local_c = local_c + 1) {
    uVar8 = 0;
    puVar6 = (undefined1 *)*local_14;
    pbVar3 = (byte *)*local_18;
    uVar5 = 0;
    if (uVar4 != 0) {
      do {
        pbVar1 = pbVar3 + 1;
        uVar8 = uVar8 + 1;
        bVar2 = *pbVar3;
        pbVar3 = pbVar3 + 2;
        iVar7 = (uint)bVar2 + (uint)*pbVar1 + uVar5;
        uVar5 = uVar5 ^ 1;
        *puVar6 = (char)(iVar7 >> 1);
        puVar6 = puVar6 + 1;
      } while (uVar8 < uVar4);
    }
    local_18 = local_18 + 1;
    local_14 = local_14 + 1;
  }
  return;
}



void FUN_0046f98c(int param_1,int param_2,int *param_3,int *param_4)

{
  byte *pbVar1;
  byte *pbVar2;
  byte bVar3;
  byte bVar4;
  byte *pbVar5;
  uint uVar6;
  undefined1 *puVar7;
  byte *pbVar8;
  int iVar9;
  uint uVar10;
  int *local_1c;
  int *local_18;
  uint local_10;
  int local_c;
  
  uVar6 = *(int *)(param_2 + 0x1c) * 8;
  FUN_0046f6c8(param_3,*(int *)(param_1 + 0xe1),*(int *)(param_1 + 0x18),
               *(int *)(param_2 + 0x1c) << 4);
  local_18 = param_4;
  local_1c = param_3;
  for (local_c = 0; local_c < *(int *)(param_2 + 0xc); local_c = local_c + 1) {
    uVar10 = 1;
    puVar7 = (undefined1 *)*local_18;
    pbVar5 = (byte *)*local_1c;
    pbVar8 = (byte *)local_1c[1];
    local_10 = 0;
    if (uVar6 != 0) {
      do {
        pbVar1 = pbVar5 + 1;
        bVar3 = *pbVar5;
        pbVar5 = pbVar5 + 2;
        bVar4 = *pbVar8;
        pbVar2 = pbVar8 + 1;
        pbVar8 = pbVar8 + 2;
        iVar9 = (uint)bVar3 + (uint)*pbVar1 + (uint)bVar4 + (uint)*pbVar2 + uVar10;
        uVar10 = uVar10 ^ 3;
        *puVar7 = (char)(iVar9 >> 2);
        puVar7 = puVar7 + 1;
        local_10 = local_10 + 1;
      } while (local_10 < uVar6);
    }
    local_1c = local_1c + 2;
    local_18 = local_18 + 1;
  }
  return;
}



void FUN_0046fa44(int param_1,int param_2,undefined4 *param_3,int *param_4)

{
  int iVar1;
  undefined1 *puVar2;
  byte *pbVar3;
  byte *pbVar4;
  byte *pbVar5;
  byte *pbVar6;
  byte *pbVar7;
  byte *pbVar8;
  byte *pbVar9;
  byte *pbVar10;
  int iVar11;
  int iVar12;
  int iVar13;
  undefined4 *local_30;
  int *local_2c;
  int local_c;
  
  iVar1 = *(int *)(param_2 + 0x1c);
  FUN_0046f6c8(param_3 + -1,*(int *)(param_1 + 0xe1) + 2,*(int *)(param_1 + 0x18),iVar1 << 4);
  iVar11 = *(int *)(param_1 + 0xb8) * 0x10;
  iVar12 = *(int *)(param_1 + 0xb8) * -0x50 + 0x4000;
  local_2c = param_4;
  local_30 = param_3;
  for (local_c = 0; local_c < *(int *)(param_2 + 0xc); local_c = local_c + 1) {
    puVar2 = (undefined1 *)*local_2c;
    pbVar3 = (byte *)*local_30;
    pbVar4 = (byte *)local_30[2];
    pbVar5 = (byte *)local_30[1];
    pbVar6 = (byte *)local_30[-1];
    *puVar2 = (char)(((uint)*pbVar3 + (uint)pbVar3[1] + (uint)*pbVar5 + (uint)pbVar5[1]) * iVar12 +
                     (((uint)*pbVar6 + (uint)pbVar6[1] + (uint)*pbVar4 + (uint)pbVar4[1] +
                       (uint)*pbVar3 + (uint)pbVar3[2] + (uint)*pbVar5 + (uint)pbVar5[2]) * 2 +
                     (uint)*pbVar6 + (uint)pbVar6[2] + (uint)*pbVar4 + (uint)pbVar4[2]) * iVar11 +
                     0x8000 >> 0x10);
    iVar13 = iVar1 * 8 + -2;
    while( true ) {
      puVar2 = puVar2 + 1;
      pbVar10 = pbVar4 + 2;
      pbVar9 = pbVar6 + 2;
      pbVar8 = pbVar5 + 2;
      pbVar7 = pbVar3 + 2;
      if (iVar13 == 0) break;
      *puVar2 = (char)(((uint)*pbVar7 + (uint)pbVar3[3] + (uint)*pbVar8 + (uint)pbVar5[3]) * iVar12
                       + (((uint)*pbVar9 + (uint)pbVar6[3] + (uint)*pbVar10 + (uint)pbVar4[3] +
                           (uint)pbVar3[1] + (uint)pbVar3[4] + (uint)pbVar5[1] + (uint)pbVar5[4]) *
                          2 + (uint)pbVar6[1] + (uint)pbVar6[4] + (uint)pbVar4[1] + (uint)pbVar4[4])
                         * iVar11 + 0x8000 >> 0x10);
      iVar13 = iVar13 + -1;
      pbVar3 = pbVar7;
      pbVar5 = pbVar8;
      pbVar6 = pbVar9;
      pbVar4 = pbVar10;
    }
    *puVar2 = (char)(((uint)*pbVar7 + (uint)pbVar3[3] + (uint)*pbVar8 + (uint)pbVar5[3]) * iVar12 +
                     (((uint)*pbVar9 + (uint)pbVar6[3] + (uint)*pbVar10 + (uint)pbVar4[3] +
                       (uint)pbVar3[1] + (uint)pbVar3[3] + (uint)pbVar5[1] + (uint)pbVar5[3]) * 2 +
                     (uint)pbVar6[1] + (uint)pbVar6[3] + (uint)pbVar4[1] + (uint)pbVar4[3]) * iVar11
                     + 0x8000 >> 0x10);
    local_30 = local_30 + 2;
    local_2c = local_2c + 1;
  }
  return;
}



void FUN_0046fcd4(int param_1,int param_2,undefined4 *param_3,int *param_4)

{
  byte *pbVar1;
  byte *pbVar2;
  byte bVar3;
  undefined1 *puVar4;
  int iVar5;
  uint uVar6;
  int iVar7;
  int iVar8;
  byte *pbVar9;
  int iVar10;
  int iVar11;
  int iVar12;
  int iVar13;
  undefined4 *local_38;
  int *local_34;
  int local_c;
  
  iVar10 = *(int *)(param_2 + 0x1c) * 8;
  FUN_0046f6c8(param_3 + -1,*(int *)(param_1 + 0xe1) + 2,*(int *)(param_1 + 0x18),iVar10);
  iVar8 = *(int *)(param_1 + 0xb8) * -0x200 + 0x10000;
  iVar5 = *(int *)(param_1 + 0xb8) * 0x40;
  local_34 = param_4;
  local_38 = param_3;
  for (local_c = 0; local_c < *(int *)(param_2 + 0xc); local_c = local_c + 1) {
    puVar4 = (undefined1 *)*local_34;
    uVar6 = (uint)*(byte *)*local_38;
    pbVar9 = (byte *)*local_38 + 1;
    pbVar1 = (byte *)local_38[1] + 1;
    pbVar2 = (byte *)local_38[-1] + 1;
    iVar11 = (uint)*(byte *)local_38[-1] + (uint)*(byte *)local_38[1] + uVar6;
    iVar12 = (uint)*pbVar2 + (uint)*pbVar1 + (uint)*pbVar9;
    *puVar4 = (char)(uVar6 * iVar8 + ((iVar11 * 2 - uVar6) + iVar12) * iVar5 + 0x8000 >> 0x10);
    for (iVar7 = iVar10 + -2; puVar4 = puVar4 + 1, iVar7 != 0; iVar7 = iVar7 + -1) {
      bVar3 = *pbVar9;
      pbVar9 = pbVar9 + 1;
      pbVar2 = pbVar2 + 1;
      pbVar1 = pbVar1 + 1;
      iVar13 = (uint)*pbVar2 + (uint)*pbVar1 + (uint)*pbVar9;
      *puVar4 = (char)((uint)bVar3 * iVar8 + ((iVar12 - (uint)bVar3) + iVar11 + iVar13) * iVar5 +
                       0x8000 >> 0x10);
      iVar11 = iVar12;
      iVar12 = iVar13;
    }
    *puVar4 = (char)((uint)*pbVar9 * iVar8 + ((iVar12 * 2 - (uint)*pbVar9) + iVar11) * iVar5 +
                     0x8000 >> 0x10);
    local_38 = local_38 + 1;
    local_34 = local_34 + 1;
  }
  return;
}



undefined4 * FUN_0046fe64(int *param_1)

{
  bool bVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  int iVar4;
  int iVar5;
  undefined4 *puVar6;
  
  bVar1 = true;
  puVar2 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0x34);
  *(undefined4 **)((int)param_1 + 0x159) = puVar2;
  *puVar2 = &DAT_0046f6c4;
  puVar2[1] = FUN_0046f718;
  puVar2[2] = 0;
  if (param_1[0x2d] != 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x17;
    (**(code **)*param_1)();
  }
  iVar5 = param_1[0xf];
  puVar6 = puVar2 + 3;
  puVar3 = puVar2;
  for (iVar4 = 0; iVar4 < param_1[0xd]; iVar4 = iVar4 + 1) {
    puVar3 = *(undefined4 **)(iVar5 + 8);
    if ((puVar3 == *(undefined4 **)((int)param_1 + 0xdd)) &&
       (*(int *)(iVar5 + 0xc) == *(int *)((int)param_1 + 0xe1))) {
      if (param_1[0x2e] == 0) {
        *puVar6 = FUN_0046f8ac;
      }
      else {
        *puVar6 = FUN_0046fcd4;
        puVar2[2] = 1;
      }
    }
    else {
      puVar3 = (undefined4 *)(*(int *)(iVar5 + 8) * 2);
      if ((puVar3 == *(undefined4 **)((int)param_1 + 0xdd)) &&
         (*(int *)(iVar5 + 0xc) == *(int *)((int)param_1 + 0xe1))) {
        bVar1 = false;
        *puVar6 = FUN_0046f8f8;
      }
      else {
        puVar3 = (undefined4 *)(*(int *)(iVar5 + 8) * 2);
        if ((puVar3 == *(undefined4 **)((int)param_1 + 0xdd)) &&
           (*(int *)(iVar5 + 0xc) * 2 == *(int *)((int)param_1 + 0xe1))) {
          if (param_1[0x2e] == 0) {
            *puVar6 = FUN_0046f98c;
          }
          else {
            *puVar6 = FUN_0046fa44;
            puVar2[2] = 1;
          }
        }
        else if ((*(int *)((int)param_1 + 0xdd) % *(int *)(iVar5 + 8) == 0) &&
                (puVar3 = (undefined4 *)(*(int *)((int)param_1 + 0xe1) / *(int *)(iVar5 + 0xc)),
                *(int *)((int)param_1 + 0xe1) % *(int *)(iVar5 + 0xc) == 0)) {
          bVar1 = false;
          *puVar6 = FUN_0046f79c;
        }
        else {
          *(undefined4 *)(*param_1 + 0x14) = 0x25;
          puVar3 = (undefined4 *)(**(code **)*param_1)();
        }
      }
    }
    puVar6 = puVar6 + 1;
    iVar5 = iVar5 + 0x54;
  }
  if ((param_1[0x2e] != 0) && (!bVar1)) {
    *(undefined4 *)(*param_1 + 0x14) = 0x62;
    puVar3 = (undefined4 *)(**(code **)(*param_1 + 4))(param_1,0);
  }
  return puVar3;
}



void FUN_004704dc(int *param_1)

{
  undefined4 *puVar1;
  int iVar2;
  
  puVar1 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0x30);
  *(undefined4 **)((int)param_1 + 0x15d) = puVar1;
  *puVar1 = &LAB_0046ffec;
  iVar2 = param_1[0x2f];
  if (iVar2 == 0) {
    puVar1[1] = &LAB_004701f8;
    puVar1[2] = &LAB_00471058;
  }
  else if (iVar2 == 1) {
    puVar1[1] = &LAB_004701f8;
    puVar1[2] = &LAB_0047143c;
  }
  else if (iVar2 == 2) {
    puVar1[1] = &LAB_0047034c;
    puVar1[7] = &LAB_004716a8;
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 0x2f;
    (**(code **)*param_1)();
  }
  iVar2 = 0;
  puVar1 = puVar1 + 3;
  do {
    iVar2 = iVar2 + 1;
    *puVar1 = 0;
    puVar1[5] = 0;
    puVar1 = puVar1 + 1;
  } while (iVar2 < 4);
  return;
}



void FUN_00470744(int param_1)

{
  undefined4 *puVar1;
  int *piVar2;
  int iVar3;
  
  puVar1 = *(undefined4 **)(*(int *)(param_1 + 0x20) + 0x14);
  iVar3 = (*(code *)puVar1[3])();
  if (iVar3 == 0) {
    piVar2 = *(int **)(param_1 + 0x20);
    *(undefined4 *)(*piVar2 + 0x14) = 0x16;
    (**(code **)*piVar2)();
  }
  *(undefined4 *)(param_1 + 0x10) = *puVar1;
  *(undefined4 *)(param_1 + 0x14) = puVar1[1];
  return;
}



void FUN_00470774(int param_1,uint param_2,int param_3)

{
  int *piVar1;
  undefined1 *puVar2;
  int iVar3;
  uint uVar4;
  
  iVar3 = *(int *)(param_1 + 0x1c);
  if (param_3 == 0) {
    piVar1 = *(int **)(param_1 + 0x20);
    *(undefined4 *)(*piVar1 + 0x14) = 0x27;
    (**(code **)*piVar1)();
  }
  if (*(int *)(param_1 + 0xc) == 0) {
    iVar3 = iVar3 + param_3;
    uVar4 = (param_2 & (1 << ((byte)param_3 & 0x1f)) - 1U) << (0x18U - (char)iVar3 & 0x1f) |
            *(uint *)(param_1 + 0x18);
    for (; 7 < iVar3; iVar3 = iVar3 + -8) {
      puVar2 = *(undefined1 **)(param_1 + 0x10);
      *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + 1;
      *puVar2 = (char)(uVar4 >> 0x10);
      piVar1 = (int *)(param_1 + 0x14);
      *piVar1 = *piVar1 + -1;
      if (*piVar1 == 0) {
        FUN_00470744(param_1);
      }
      if (((int)uVar4 >> 0x10 & 0xffU) == 0xff) {
        puVar2 = *(undefined1 **)(param_1 + 0x10);
        *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + 1;
        *puVar2 = 0;
        piVar1 = (int *)(param_1 + 0x14);
        *piVar1 = *piVar1 + -1;
        if (*piVar1 == 0) {
          FUN_00470744(param_1);
        }
      }
      uVar4 = uVar4 << 8;
    }
    *(uint *)(param_1 + 0x18) = uVar4;
    *(int *)(param_1 + 0x1c) = iVar3;
  }
  return;
}



void FUN_00470810(int param_1)

{
  FUN_00470774(param_1,0x7f,7);
  *(undefined4 *)(param_1 + 0x18) = 0;
  *(undefined4 *)(param_1 + 0x1c) = 0;
  return;
}



void FUN_00470830(int param_1,int param_2,int param_3)

{
  int *piVar1;
  int iVar2;
  
  if (*(int *)(param_1 + 0xc) != 0) {
    piVar1 = (int *)(*(int *)(param_1 + 0x5c + param_2 * 4) + param_3 * 4);
    *piVar1 = *piVar1 + 1;
    return;
  }
  iVar2 = *(int *)(param_1 + 0x4c + param_2 * 4);
  FUN_00470774(param_1,*(uint *)(iVar2 + param_3 * 4),(int)*(char *)(iVar2 + 0x400 + param_3));
  return;
}



void FUN_0047085c(int param_1,char *param_2,int param_3)

{
  if ((*(int *)(param_1 + 0xc) == 0) && (param_3 != 0)) {
    do {
      FUN_00470774(param_1,(int)*param_2,1);
      param_2 = param_2 + 1;
      param_3 = param_3 + -1;
    } while (param_3 != 0);
  }
  return;
}



void FUN_00470888(int param_1)

{
  int iVar1;
  int iVar2;
  
  iVar1 = *(int *)(param_1 + 0x38);
  if (iVar1 != 0) {
    iVar2 = 0;
    while (iVar1 = iVar1 >> 1, iVar1 != 0) {
      iVar2 = iVar2 + 1;
    }
    FUN_00470830(param_1,*(int *)(param_1 + 0x34),iVar2 << 4);
    if (iVar2 != 0) {
      FUN_00470774(param_1,*(uint *)(param_1 + 0x38),iVar2);
    }
    *(undefined4 *)(param_1 + 0x38) = 0;
    FUN_0047085c(param_1,*(char **)(param_1 + 0x40),*(int *)(param_1 + 0x3c));
    *(undefined4 *)(param_1 + 0x3c) = 0;
  }
  return;
}



void FUN_004708d8(int param_1,char param_2)

{
  int *piVar1;
  undefined1 *puVar2;
  char *pcVar3;
  undefined4 *puVar4;
  int iVar5;
  
  FUN_00470888(param_1);
  if (*(int *)(param_1 + 0xc) == 0) {
    FUN_00470810(param_1);
    puVar2 = *(undefined1 **)(param_1 + 0x10);
    *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + 1;
    *puVar2 = 0xff;
    piVar1 = (int *)(param_1 + 0x14);
    *piVar1 = *piVar1 + -1;
    if (*piVar1 == 0) {
      FUN_00470744(param_1);
    }
    pcVar3 = *(char **)(param_1 + 0x10);
    *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + 1;
    *pcVar3 = param_2 + -0x30;
    piVar1 = (int *)(param_1 + 0x14);
    *piVar1 = *piVar1 + -1;
    if (*piVar1 == 0) {
      FUN_00470744(param_1);
    }
  }
  if (*(int *)(*(int *)(param_1 + 0x20) + 0x131) == 0) {
    puVar4 = (undefined4 *)(param_1 + 0x24);
    for (iVar5 = 0; iVar5 < *(int *)(*(int *)(param_1 + 0x20) + 0xe9); iVar5 = iVar5 + 1) {
      *puVar4 = 0;
      puVar4 = puVar4 + 1;
    }
    return;
  }
  *(undefined4 *)(param_1 + 0x38) = 0;
  *(undefined4 *)(param_1 + 0x3c) = 0;
  return;
}



undefined4 FUN_00470958(int param_1,undefined4 *param_2)

{
  int iVar1;
  undefined4 uVar2;
  int iVar3;
  undefined4 *puVar4;
  uint uVar5;
  uint uVar6;
  int iVar7;
  int iVar8;
  int local_20;
  undefined4 *local_14;
  int *local_10;
  
  iVar1 = *(int *)(param_1 + 0x161);
  uVar2 = *(undefined4 *)(param_1 + 0x13d);
  *(undefined4 *)(iVar1 + 0x10) = **(undefined4 **)(param_1 + 0x14);
  *(undefined4 *)(iVar1 + 0x14) = *(undefined4 *)(*(int *)(param_1 + 0x14) + 4);
  if ((*(int *)(param_1 + 0xc0) != 0) && (*(int *)(iVar1 + 0x44) == 0)) {
    FUN_004708d8(iVar1,(char)*(undefined4 *)(iVar1 + 0x48));
  }
  local_10 = (int *)(param_1 + 0x109);
  local_14 = param_2;
  for (local_20 = 0; local_20 < *(int *)(param_1 + 0x105); local_20 = local_20 + 1) {
    iVar7 = *local_10;
    iVar3 = *(int *)(param_1 + 0xed + iVar7 * 4);
    iVar8 = (int)*(short *)*local_14 >> ((byte)uVar2 & 0x1f);
    uVar5 = iVar8 - *(int *)(iVar1 + 0x24 + iVar7 * 4);
    *(int *)(iVar1 + 0x24 + iVar7 * 4) = iVar8;
    uVar6 = uVar5;
    if ((int)uVar5 < 0) {
      uVar6 = -uVar5;
      uVar5 = uVar5 - 1;
    }
    iVar7 = 0;
    for (; uVar6 != 0; uVar6 = (int)uVar6 >> 1) {
      iVar7 = iVar7 + 1;
    }
    FUN_00470830(iVar1,*(int *)(iVar3 + 0x14),iVar7);
    if (iVar7 != 0) {
      FUN_00470774(iVar1,uVar5,iVar7);
    }
    local_10 = local_10 + 1;
    local_14 = local_14 + 1;
  }
  puVar4 = *(undefined4 **)(param_1 + 0x14);
  *puVar4 = *(undefined4 *)(iVar1 + 0x10);
  puVar4[1] = *(undefined4 *)(iVar1 + 0x14);
  if (*(int *)(param_1 + 0xc0) != 0) {
    if (*(int *)(iVar1 + 0x44) == 0) {
      *(int *)(iVar1 + 0x44) = *(int *)(param_1 + 0xc0);
      *(int *)(iVar1 + 0x48) = *(int *)(iVar1 + 0x48) + 1;
      *(uint *)(iVar1 + 0x48) = *(uint *)(iVar1 + 0x48) & 7;
    }
    *(int *)(iVar1 + 0x44) = *(int *)(iVar1 + 0x44) + -1;
  }
  return 1;
}



undefined4 FUN_00470a84(int param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  int iVar4;
  int iVar5;
  undefined4 *puVar6;
  int *piVar7;
  byte bVar8;
  int iVar9;
  int iVar10;
  uint uVar11;
  uint local_28;
  
  iVar1 = *(int *)(param_1 + 0x161);
  iVar2 = *(int *)(param_1 + 0x135);
  uVar3 = *(undefined4 *)(param_1 + 0x13d);
  *(undefined4 *)(iVar1 + 0x10) = **(undefined4 **)(param_1 + 0x14);
  *(undefined4 *)(iVar1 + 0x14) = *(undefined4 *)(*(int *)(param_1 + 0x14) + 4);
  if ((*(int *)(param_1 + 0xc0) != 0) && (*(int *)(iVar1 + 0x44) == 0)) {
    FUN_004708d8(iVar1,(char)*(undefined4 *)(iVar1 + 0x48));
  }
  iVar4 = *param_2;
  iVar9 = 0;
  iVar5 = *(int *)(param_1 + 0x131);
  piVar7 = &DAT_00474f98 + iVar5;
  for (; iVar5 <= iVar2; iVar5 = iVar5 + 1) {
    iVar10 = (int)*(short *)(iVar4 + *piVar7 * 2);
    if (iVar10 == 0) {
      iVar9 = iVar9 + 1;
    }
    else {
      bVar8 = (byte)uVar3;
      if (iVar10 < 0) {
        uVar11 = -iVar10 >> (bVar8 & 0x1f);
        local_28 = ~uVar11;
      }
      else {
        uVar11 = iVar10 >> (bVar8 & 0x1f);
        local_28 = uVar11;
      }
      if (uVar11 == 0) {
        iVar9 = iVar9 + 1;
      }
      else {
        if (*(int *)(iVar1 + 0x38) != 0) {
          FUN_00470888(iVar1);
        }
        for (; 0xf < iVar9; iVar9 = iVar9 + -0x10) {
          FUN_00470830(iVar1,*(int *)(iVar1 + 0x34),0xf0);
        }
        iVar10 = 1;
        while (uVar11 = (int)uVar11 >> 1, uVar11 != 0) {
          iVar10 = iVar10 + 1;
        }
        FUN_00470830(iVar1,*(int *)(iVar1 + 0x34),iVar9 * 0x10 + iVar10);
        FUN_00470774(iVar1,local_28,iVar10);
        iVar9 = 0;
      }
    }
    piVar7 = piVar7 + 1;
  }
  if ((0 < iVar9) &&
     (*(int *)(iVar1 + 0x38) = *(int *)(iVar1 + 0x38) + 1, *(int *)(iVar1 + 0x38) == 0x7fff)) {
    FUN_00470888(iVar1);
  }
  puVar6 = *(undefined4 **)(param_1 + 0x14);
  *puVar6 = *(undefined4 *)(iVar1 + 0x10);
  puVar6[1] = *(undefined4 *)(iVar1 + 0x14);
  if (*(int *)(param_1 + 0xc0) != 0) {
    if (*(int *)(iVar1 + 0x44) == 0) {
      *(int *)(iVar1 + 0x44) = *(int *)(param_1 + 0xc0);
      *(int *)(iVar1 + 0x48) = *(int *)(iVar1 + 0x48) + 1;
      *(uint *)(iVar1 + 0x48) = *(uint *)(iVar1 + 0x48) & 7;
    }
    *(int *)(iVar1 + 0x44) = *(int *)(iVar1 + 0x44) + -1;
  }
  return 1;
}



undefined4 FUN_00470c18(int param_1,undefined4 *param_2)

{
  int iVar1;
  undefined4 uVar2;
  undefined4 *puVar3;
  int iVar4;
  
  iVar1 = *(int *)(param_1 + 0x161);
  uVar2 = *(undefined4 *)(param_1 + 0x13d);
  *(undefined4 *)(iVar1 + 0x10) = **(undefined4 **)(param_1 + 0x14);
  *(undefined4 *)(iVar1 + 0x14) = *(undefined4 *)(*(int *)(param_1 + 0x14) + 4);
  if ((*(int *)(param_1 + 0xc0) != 0) && (*(int *)(iVar1 + 0x44) == 0)) {
    FUN_004708d8(iVar1,(char)*(undefined4 *)(iVar1 + 0x48));
  }
  for (iVar4 = 0; iVar4 < *(int *)(param_1 + 0x105); iVar4 = iVar4 + 1) {
    FUN_00470774(iVar1,(int)*(short *)*param_2 >> ((byte)uVar2 & 0x1f),1);
    param_2 = param_2 + 1;
  }
  puVar3 = *(undefined4 **)(param_1 + 0x14);
  *puVar3 = *(undefined4 *)(iVar1 + 0x10);
  puVar3[1] = *(undefined4 *)(iVar1 + 0x14);
  if (*(int *)(param_1 + 0xc0) != 0) {
    if (*(int *)(iVar1 + 0x44) == 0) {
      *(int *)(iVar1 + 0x44) = *(int *)(param_1 + 0xc0);
      *(int *)(iVar1 + 0x48) = *(int *)(iVar1 + 0x48) + 1;
      *(uint *)(iVar1 + 0x48) = *(uint *)(iVar1 + 0x48) & 7;
    }
    *(int *)(iVar1 + 0x44) = *(int *)(iVar1 + 0x44) + -1;
  }
  return 1;
}



undefined4 FUN_00470cc0(int param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  undefined4 *puVar7;
  int *piVar8;
  int *piVar9;
  char *pcVar10;
  int iVar11;
  int iVar12;
  int local_12c;
  int local_124;
  int aiStack_110 [64];
  
  iVar1 = *(int *)(param_1 + 0x161);
  iVar2 = *(int *)(param_1 + 0x135);
  uVar3 = *(undefined4 *)(param_1 + 0x13d);
  *(undefined4 *)(iVar1 + 0x10) = **(undefined4 **)(param_1 + 0x14);
  *(undefined4 *)(iVar1 + 0x14) = *(undefined4 *)(*(int *)(param_1 + 0x14) + 4);
  if ((*(int *)(param_1 + 0xc0) != 0) && (*(int *)(iVar1 + 0x44) == 0)) {
    FUN_004708d8(iVar1,(char)*(undefined4 *)(iVar1 + 0x48));
  }
  iVar4 = *param_2;
  local_124 = 0;
  iVar5 = *(int *)(param_1 + 0x131);
  piVar9 = aiStack_110 + iVar5;
  piVar8 = &DAT_00474f98 + iVar5;
  for (; iVar5 <= iVar2; iVar5 = iVar5 + 1) {
    local_12c = (int)*(short *)(iVar4 + *piVar8 * 2);
    if (local_12c < 0) {
      local_12c = -local_12c;
    }
    local_12c = local_12c >> ((byte)uVar3 & 0x1f);
    *piVar9 = local_12c;
    if (local_12c == 1) {
      local_124 = iVar5;
    }
    piVar9 = piVar9 + 1;
    piVar8 = piVar8 + 1;
  }
  pcVar10 = (char *)(*(int *)(iVar1 + 0x40) + *(int *)(iVar1 + 0x3c));
  iVar12 = 0;
  iVar5 = *(int *)(param_1 + 0x131);
  iVar11 = 0;
  piVar8 = &DAT_00474f98 + iVar5;
  piVar9 = aiStack_110 + iVar5;
  for (; iVar5 <= iVar2; iVar5 = iVar5 + 1) {
    iVar6 = *piVar9;
    if (iVar6 == 0) {
      iVar12 = iVar12 + 1;
    }
    else {
      while ((0xf < iVar12 && (iVar5 <= local_124))) {
        FUN_00470888(iVar1);
        FUN_00470830(iVar1,*(int *)(iVar1 + 0x34),0xf0);
        iVar12 = iVar12 + -0x10;
        FUN_0047085c(iVar1,pcVar10,iVar11);
        pcVar10 = *(char **)(iVar1 + 0x40);
        iVar11 = 0;
      }
      if (iVar6 < 2) {
        FUN_00470888(iVar1);
        FUN_00470830(iVar1,*(int *)(iVar1 + 0x34),iVar12 * 0x10 + 1);
        FUN_00470774(iVar1,(uint)(-1 < *(short *)(iVar4 + *piVar8 * 2)),1);
        FUN_0047085c(iVar1,pcVar10,iVar11);
        pcVar10 = *(char **)(iVar1 + 0x40);
        iVar11 = 0;
        iVar12 = 0;
      }
      else {
        local_12c._0_1_ = (byte)iVar6;
        pcVar10[iVar11] = (byte)local_12c & 1;
        iVar11 = iVar11 + 1;
      }
    }
    piVar8 = piVar8 + 1;
    piVar9 = piVar9 + 1;
  }
  if ((0 < iVar12) || (iVar11 != 0)) {
    *(int *)(iVar1 + 0x38) = *(int *)(iVar1 + 0x38) + 1;
    *(int *)(iVar1 + 0x3c) = *(int *)(iVar1 + 0x3c) + iVar11;
    if ((*(int *)(iVar1 + 0x38) == 0x7fff) || (0x3a9 < *(uint *)(iVar1 + 0x3c))) {
      FUN_00470888(iVar1);
    }
  }
  puVar7 = *(undefined4 **)(param_1 + 0x14);
  *puVar7 = *(undefined4 *)(iVar1 + 0x10);
  puVar7[1] = *(undefined4 *)(iVar1 + 0x14);
  if (*(int *)(param_1 + 0xc0) != 0) {
    if (*(int *)(iVar1 + 0x44) == 0) {
      *(int *)(iVar1 + 0x44) = *(int *)(param_1 + 0xc0);
      *(int *)(iVar1 + 0x48) = *(int *)(iVar1 + 0x48) + 1;
      *(uint *)(iVar1 + 0x48) = *(uint *)(iVar1 + 0x48) & 7;
    }
    *(int *)(iVar1 + 0x44) = *(int *)(iVar1 + 0x44) + -1;
  }
  return 1;
}



void FUN_00470f18(int param_1)

{
  int iVar1;
  undefined4 *puVar2;
  
  iVar1 = *(int *)(param_1 + 0x161);
  *(undefined4 *)(iVar1 + 0x10) = **(undefined4 **)(param_1 + 0x14);
  *(undefined4 *)(iVar1 + 0x14) = *(undefined4 *)(*(int *)(param_1 + 0x14) + 4);
  FUN_00470888(iVar1);
  FUN_00470810(iVar1);
  puVar2 = *(undefined4 **)(param_1 + 0x14);
  *puVar2 = *(undefined4 *)(iVar1 + 0x10);
  puVar2[1] = *(undefined4 *)(iVar1 + 0x14);
  return;
}



void FUN_00470f54(int *param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int *piVar4;
  int *piVar5;
  bool bVar6;
  int local_24;
  int local_20 [4];
  
  iVar1 = *(int *)((int)param_1 + 0x161);
  FUN_00470888(iVar1);
  bVar6 = *(int *)((int)param_1 + 0x131) != 0;
  FUN_0045ef60();
  local_24 = 0;
  piVar4 = (int *)((int)param_1 + 0xed);
  do {
    if (*(int *)((int)param_1 + 0xe9) <= local_24) {
      return;
    }
    if (bVar6) {
      iVar3 = *(int *)(*piVar4 + 0x18);
LAB_00470fb9:
      if (local_20[iVar3] == 0) {
        if (bVar6) {
          iVar2 = iVar3 + 0x18;
        }
        else {
          iVar2 = iVar3 + 0x14;
        }
        piVar5 = param_1 + iVar2;
        if (*piVar5 == 0) {
          iVar2 = FUN_0046be98((int)param_1);
          *piVar5 = iVar2;
        }
        FUN_00472258(param_1,*piVar5,*(int **)(iVar1 + 0x5c + iVar3 * 4));
        local_20[iVar3] = 1;
      }
    }
    else if (*(int *)((int)param_1 + 0x139) == 0) {
      iVar3 = *(int *)(*piVar4 + 0x14);
      goto LAB_00470fb9;
    }
    local_24 = local_24 + 1;
    piVar4 = piVar4 + 1;
  } while( true );
}



void FUN_00471014(int param_1)

{
  undefined4 *puVar1;
  undefined4 *puVar2;
  int iVar3;
  
  puVar1 = (undefined4 *)(*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x6c);
  iVar3 = 0;
  *(undefined4 **)(param_1 + 0x161) = puVar1;
  *puVar1 = &LAB_0047056c;
  puVar2 = puVar1 + 0x13;
  do {
    iVar3 = iVar3 + 1;
    *puVar2 = 0;
    puVar2[4] = 0;
    puVar2 = puVar2 + 1;
  } while (iVar3 < 4);
  puVar1[0x10] = 0;
  return;
}



void FUN_00471ba0(int param_1,byte *param_2,int *param_3)

{
  byte bVar1;
  char cVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int *piVar6;
  byte *pbVar7;
  int iVar8;
  char *pcVar9;
  int iVar10;
  char local_518 [260];
  int aiStack_414 [257];
  
  if (*param_3 == 0) {
    iVar3 = (*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x500);
    *param_3 = iVar3;
  }
  iVar3 = *param_3;
  iVar4 = 0;
  iVar10 = 1;
  pbVar7 = param_2;
  do {
    pbVar7 = pbVar7 + 1;
    pcVar9 = local_518 + iVar4;
    for (iVar5 = 1; iVar5 <= (int)(uint)*pbVar7; iVar5 = iVar5 + 1) {
      iVar4 = iVar4 + 1;
      *pcVar9 = (char)iVar10;
      pcVar9 = pcVar9 + 1;
    }
    iVar10 = iVar10 + 1;
  } while (iVar10 < 0x11);
  local_518[iVar4] = '\0';
  iVar10 = 0;
  iVar8 = (int)local_518[0];
  iVar5 = 0;
  while (local_518[iVar5] != '\0') {
    piVar6 = aiStack_414 + iVar5;
    for (pcVar9 = local_518 + iVar5; iVar8 == *pcVar9; pcVar9 = pcVar9 + 1) {
      *piVar6 = iVar10;
      iVar5 = iVar5 + 1;
      piVar6 = piVar6 + 1;
      iVar10 = iVar10 + 1;
    }
    iVar10 = iVar10 * 2;
    iVar8 = iVar8 + 1;
  }
  FUN_0045ef60();
  iVar10 = 0;
  pcVar9 = local_518;
  pbVar7 = param_2 + 0x11;
  piVar6 = aiStack_414;
  if (0 < iVar4) {
    do {
      iVar5 = *piVar6;
      piVar6 = piVar6 + 1;
      iVar10 = iVar10 + 1;
      *(int *)(iVar3 + (uint)*pbVar7 * 4) = iVar5;
      bVar1 = *pbVar7;
      pbVar7 = pbVar7 + 1;
      cVar2 = *pcVar9;
      pcVar9 = pcVar9 + 1;
      *(char *)(iVar3 + 0x400 + (uint)bVar1) = cVar2;
    } while (iVar10 < iVar4);
  }
  return;
}



undefined4 FUN_00471ca4(undefined4 *param_1)

{
  undefined4 *puVar1;
  int iVar2;
  
  puVar1 = *(undefined4 **)(param_1[8] + 0x14);
  iVar2 = (*(code *)puVar1[3])();
  if (iVar2 == 0) {
    return 0;
  }
  *param_1 = *puVar1;
  param_1[1] = puVar1[1];
  return 1;
}



undefined4 FUN_00471ccc(int *param_1,uint param_2,int param_3)

{
  int *piVar1;
  undefined1 *puVar2;
  int iVar3;
  int iVar4;
  uint uVar5;
  
  iVar4 = param_1[3];
  if (param_3 == 0) {
    piVar1 = (int *)param_1[8];
    *(undefined4 *)(*piVar1 + 0x14) = 0x27;
    (**(code **)*piVar1)();
  }
  iVar4 = iVar4 + param_3;
  uVar5 = (param_2 & (1 << ((byte)param_3 & 0x1f)) - 1U) << (0x18U - (char)iVar4 & 0x1f) |
          param_1[2];
  while( true ) {
    if (iVar4 < 8) {
      param_1[2] = uVar5;
      param_1[3] = iVar4;
      return 1;
    }
    puVar2 = (undefined1 *)*param_1;
    *param_1 = *param_1 + 1;
    *puVar2 = (char)(uVar5 >> 0x10);
    piVar1 = param_1 + 1;
    *piVar1 = *piVar1 + -1;
    if ((*piVar1 == 0) && (iVar3 = FUN_00471ca4(param_1), iVar3 == 0)) break;
    if (((int)uVar5 >> 0x10 & 0xffU) == 0xff) {
      puVar2 = (undefined1 *)*param_1;
      *param_1 = *param_1 + 1;
      *puVar2 = 0;
      piVar1 = param_1 + 1;
      *piVar1 = *piVar1 + -1;
      if ((*piVar1 == 0) && (iVar3 = FUN_00471ca4(param_1), iVar3 == 0)) {
        return 0;
      }
    }
    uVar5 = uVar5 << 8;
    iVar4 = iVar4 + -8;
  }
  return 0;
}



undefined4 FUN_00471d74(int *param_1)

{
  int iVar1;
  
  iVar1 = FUN_00471ccc(param_1,0x7f,7);
  if (iVar1 == 0) {
    return 0;
  }
  param_1[2] = 0;
  param_1[3] = 0;
  return 1;
}



undefined4 FUN_00471da4(int *param_1,short *param_2,int param_3,uint *param_4,int param_5)

{
  int iVar1;
  undefined4 uVar2;
  int iVar3;
  uint uVar4;
  int *local_20;
  int local_1c;
  int local_18;
  uint local_14;
  
  local_14 = *param_2 - param_3;
  uVar4 = local_14;
  if ((int)local_14 < 0) {
    uVar4 = -local_14;
    local_14 = local_14 - 1;
  }
  local_18 = 0;
  for (; uVar4 != 0; uVar4 = (int)uVar4 >> 1) {
    local_18 = local_18 + 1;
  }
  iVar1 = FUN_00471ccc(param_1,*(uint *)(param_5 + local_18 * 4),
                       (int)*(char *)(param_5 + 0x400 + local_18));
  if (iVar1 == 0) {
    uVar2 = 0;
  }
  else if ((local_18 == 0) || (iVar1 = FUN_00471ccc(param_1,local_14,local_18), iVar1 != 0)) {
    local_1c = 1;
    local_20 = &DAT_00474f9c;
    iVar1 = 0;
    do {
      local_14 = (uint)param_2[*local_20];
      if (local_14 == 0) {
        iVar1 = iVar1 + 1;
      }
      else {
        for (; 0xf < iVar1; iVar1 = iVar1 + -0x10) {
          iVar3 = FUN_00471ccc(param_1,param_4[0xf0],(int)(char)param_4[0x13c]);
          if (iVar3 == 0) {
            return 0;
          }
        }
        uVar4 = local_14;
        if ((int)local_14 < 0) {
          uVar4 = -local_14;
          local_14 = local_14 - 1;
        }
        local_18 = 1;
        while (uVar4 = (int)uVar4 >> 1, uVar4 != 0) {
          local_18 = local_18 + 1;
        }
        iVar1 = iVar1 * 0x10 + local_18;
        iVar1 = FUN_00471ccc(param_1,param_4[iVar1],(int)*(char *)((int)param_4 + iVar1 + 0x400));
        if (iVar1 == 0) {
          return 0;
        }
        iVar1 = FUN_00471ccc(param_1,local_14,local_18);
        if (iVar1 == 0) {
          return 0;
        }
        iVar1 = 0;
      }
      local_1c = local_1c + 1;
      local_20 = local_20 + 1;
    } while (local_1c < 0x40);
    if ((iVar1 < 1) ||
       (iVar1 = FUN_00471ccc(param_1,*param_4,(int)(char)param_4[0x100]), iVar1 != 0)) {
      uVar2 = 1;
    }
    else {
      uVar2 = 0;
    }
  }
  else {
    uVar2 = 0;
  }
  return uVar2;
}



undefined4 FUN_00471f10(int *param_1,char param_2)

{
  undefined1 *puVar1;
  char *pcVar2;
  int iVar3;
  int *piVar4;
  
  iVar3 = FUN_00471d74(param_1);
  if (iVar3 == 0) {
    return 0;
  }
  puVar1 = (undefined1 *)*param_1;
  *param_1 = *param_1 + 1;
  *puVar1 = 0xff;
  piVar4 = param_1 + 1;
  *piVar4 = *piVar4 + -1;
  if (*piVar4 == 0) {
    iVar3 = FUN_00471ca4(param_1);
    if (iVar3 == 0) {
      return 0;
    }
  }
  pcVar2 = (char *)*param_1;
  *param_1 = *param_1 + 1;
  *pcVar2 = param_2 + -0x30;
  piVar4 = param_1 + 1;
  *piVar4 = *piVar4 + -1;
  if (*piVar4 == 0) {
    iVar3 = FUN_00471ca4(param_1);
    if (iVar3 == 0) {
      return 0;
    }
  }
  piVar4 = param_1 + 4;
  for (iVar3 = 0; iVar3 < *(int *)(param_1[8] + 0xe9); iVar3 = iVar3 + 1) {
    *piVar4 = 0;
    piVar4 = piVar4 + 1;
  }
  return 1;
}



undefined4 FUN_00471f84(int param_1,undefined4 *param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int *piVar4;
  int *piVar5;
  byte bVar6;
  int local_3c;
  int *local_38;
  int local_34;
  int local_30;
  int local_2c [6];
  int local_14;
  
  bVar6 = 0;
  iVar1 = *(int *)(param_1 + 0x161);
  local_34 = **(int **)(param_1 + 0x14);
  local_30 = (*(int **)(param_1 + 0x14))[1];
  piVar4 = (int *)(iVar1 + 0xc);
  piVar5 = local_2c;
  for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {
    *piVar5 = *piVar4;
    piVar4 = piVar4 + 1;
    piVar5 = piVar5 + 1;
  }
  local_14 = param_1;
  if (((*(int *)(param_1 + 0xc0) != 0) && (*(int *)(iVar1 + 0x24) == 0)) &&
     (iVar3 = FUN_00471f10(&local_34,(char)*(undefined4 *)(iVar1 + 0x28)), iVar3 == 0)) {
    return 0;
  }
  local_3c = 0;
  local_38 = (int *)(param_1 + 0x109);
  while( true ) {
    if (*(int *)(param_1 + 0x105) <= local_3c) {
      piVar4 = *(int **)(param_1 + 0x14);
      *piVar4 = local_34;
      piVar4[1] = local_30;
      piVar4 = local_2c;
      piVar5 = (int *)(iVar1 + 0xc);
      for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {
        *piVar5 = *piVar4;
        piVar4 = piVar4 + (uint)bVar6 * -2 + 1;
        piVar5 = piVar5 + (uint)bVar6 * -2 + 1;
      }
      if (*(int *)(param_1 + 0xc0) != 0) {
        if (*(int *)(iVar1 + 0x24) == 0) {
          *(int *)(iVar1 + 0x24) = *(int *)(param_1 + 0xc0);
          *(int *)(iVar1 + 0x28) = *(int *)(iVar1 + 0x28) + 1;
          *(uint *)(iVar1 + 0x28) = *(uint *)(iVar1 + 0x28) & 7;
        }
        *(int *)(iVar1 + 0x24) = *(int *)(iVar1 + 0x24) + -1;
      }
      return 1;
    }
    iVar3 = *local_38;
    iVar2 = *(int *)(param_1 + 0xed + iVar3 * 4);
    iVar2 = FUN_00471da4(&local_34,(short *)*param_2,local_2c[iVar3 + 2],
                         *(uint **)(iVar1 + 0x3c + *(int *)(iVar2 + 0x18) * 4),
                         *(int *)(iVar1 + 0x2c + *(int *)(iVar2 + 0x14) * 4));
    if (iVar2 == 0) break;
    local_2c[iVar3 + 2] = (int)*(short *)*param_2;
    local_3c = local_3c + 1;
    param_2 = param_2 + 1;
    local_38 = local_38 + 1;
  }
  return 0;
}



void FUN_00472094(int *param_1)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  undefined4 *puVar4;
  undefined4 *puVar5;
  byte bVar6;
  int local_30;
  int local_2c;
  undefined4 local_28 [6];
  int *local_10;
  
  bVar6 = 0;
  iVar1 = *(int *)((int)param_1 + 0x161);
  local_30 = *(int *)param_1[5];
  local_2c = ((int *)param_1[5])[1];
  puVar4 = (undefined4 *)(iVar1 + 0xc);
  puVar5 = local_28;
  for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {
    *puVar5 = *puVar4;
    puVar4 = puVar4 + 1;
    puVar5 = puVar5 + 1;
  }
  local_10 = param_1;
  iVar3 = FUN_00471d74(&local_30);
  if (iVar3 == 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x16;
    (**(code **)*param_1)();
  }
  piVar2 = (int *)param_1[5];
  *piVar2 = local_30;
  piVar2[1] = local_2c;
  puVar4 = local_28;
  puVar5 = (undefined4 *)(iVar1 + 0xc);
  for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {
    *puVar5 = *puVar4;
    puVar4 = puVar4 + (uint)bVar6 * -2 + 1;
    puVar5 = puVar5 + (uint)bVar6 * -2 + 1;
  }
  return;
}



void FUN_00472108(short *param_1,int param_2,int param_3,int *param_4)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int *local_14;
  int local_10;
  
  iVar4 = *param_1 - param_2;
  if (iVar4 < 0) {
    iVar4 = -iVar4;
  }
  iVar2 = 0;
  for (; iVar4 != 0; iVar4 = iVar4 >> 1) {
    iVar2 = iVar2 + 1;
  }
  piVar1 = (int *)(param_3 + iVar2 * 4);
  *piVar1 = *piVar1 + 1;
  iVar4 = 0;
  local_10 = 1;
  local_14 = &DAT_00474f9c;
  do {
    iVar2 = (int)param_1[*local_14];
    if (iVar2 == 0) {
      iVar4 = iVar4 + 1;
    }
    else {
      for (; 0xf < iVar4; iVar4 = iVar4 + -0x10) {
        param_4[0xf0] = param_4[0xf0] + 1;
      }
      if (iVar2 < 0) {
        iVar2 = -iVar2;
      }
      iVar3 = 1;
      while (iVar2 = iVar2 >> 1, iVar2 != 0) {
        iVar3 = iVar3 + 1;
      }
      param_4[iVar3 + iVar4 * 0x10] = param_4[iVar3 + iVar4 * 0x10] + 1;
      iVar4 = 0;
    }
    local_10 = local_10 + 1;
    local_14 = local_14 + 1;
  } while (local_10 < 0x40);
  if (0 < iVar4) {
    *param_4 = *param_4 + 1;
  }
  return;
}



undefined4 FUN_004721a8(int param_1,undefined4 *param_2)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  int iVar4;
  int local_18;
  int *local_14;
  
  iVar1 = *(int *)(param_1 + 0x161);
  if (*(int *)(param_1 + 0xc0) != 0) {
    if (*(int *)(iVar1 + 0x24) == 0) {
      puVar3 = (undefined4 *)(iVar1 + 0x14);
      for (iVar4 = 0; iVar4 < *(int *)(param_1 + 0xe9); iVar4 = iVar4 + 1) {
        *puVar3 = 0;
        puVar3 = puVar3 + 1;
      }
      *(undefined4 *)(iVar1 + 0x24) = *(undefined4 *)(param_1 + 0xc0);
    }
    *(int *)(iVar1 + 0x24) = *(int *)(iVar1 + 0x24) + -1;
  }
  local_14 = (int *)(param_1 + 0x109);
  for (local_18 = 0; local_18 < *(int *)(param_1 + 0x105); local_18 = local_18 + 1) {
    iVar4 = *local_14;
    iVar2 = *(int *)(param_1 + 0xed + iVar4 * 4);
    FUN_00472108((short *)*param_2,*(int *)(iVar1 + 0x14 + iVar4 * 4),
                 *(int *)(iVar1 + 0x4c + *(int *)(iVar2 + 0x14) * 4),
                 *(int **)(iVar1 + 0x5c + *(int *)(iVar2 + 0x18) * 4));
    *(int *)(iVar1 + 0x14 + iVar4 * 4) = (int)*(short *)*param_2;
    param_2 = param_2 + 1;
    local_14 = local_14 + 1;
  }
  return 1;
}



void FUN_00472258(int *param_1,int param_2,int *param_3)

{
  int iVar1;
  int *piVar2;
  char *pcVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  char *pcVar7;
  undefined1 *puVar8;
  int iVar9;
  undefined4 local_83c;
  char local_838 [31];
  char acStack_819 [5];
  int local_814 [257];
  int local_410 [257];
  
  local_83c = param_3;
  FUN_0045ef60();
  FUN_0045ef60();
  iVar4 = 0;
  piVar2 = local_410;
  do {
    *piVar2 = -1;
    iVar4 = iVar4 + 1;
    piVar2 = piVar2 + 1;
  } while (iVar4 < 0x101);
  local_83c[0x100] = 1;
  while( true ) {
    iVar4 = -1;
    iVar9 = 1000000000;
    iVar5 = 0;
    piVar2 = local_83c;
    do {
      iVar6 = *piVar2;
      if ((iVar6 != 0) && (iVar6 <= iVar9)) {
        iVar4 = iVar5;
        iVar9 = iVar6;
      }
      iVar5 = iVar5 + 1;
      piVar2 = piVar2 + 1;
    } while (iVar5 < 0x101);
    iVar9 = -1;
    iVar5 = 1000000000;
    iVar6 = 0;
    piVar2 = local_83c;
    do {
      iVar1 = *piVar2;
      if (((iVar1 != 0) && (iVar1 <= iVar5)) && (iVar4 != iVar6)) {
        iVar9 = iVar6;
        iVar5 = iVar1;
      }
      iVar6 = iVar6 + 1;
      piVar2 = piVar2 + 1;
    } while (iVar6 < 0x101);
    if (iVar9 < 0) break;
    local_83c[iVar4] = local_83c[iVar4] + local_83c[iVar9];
    local_83c[iVar9] = 0;
    local_814[iVar4] = local_814[iVar4] + 1;
    while (iVar5 = local_410[iVar4], -1 < iVar5) {
      local_814[iVar5] = local_814[iVar5] + 1;
      iVar4 = iVar5;
    }
    local_410[iVar4] = iVar9;
    local_814[iVar9] = local_814[iVar9] + 1;
    while (iVar9 = local_410[iVar9], -1 < iVar9) {
      local_814[iVar9] = local_814[iVar9] + 1;
    }
  }
  iVar4 = 0;
  piVar2 = local_814;
  do {
    if (*piVar2 != 0) {
      if (0x20 < *piVar2) {
        *(undefined4 *)(*param_1 + 0x14) = 0x26;
        (**(code **)*param_1)();
      }
      local_838[*piVar2] = local_838[*piVar2] + '\x01';
    }
    iVar4 = iVar4 + 1;
    piVar2 = piVar2 + 1;
  } while (iVar4 < 0x101);
  pcVar7 = acStack_819 + 1;
  iVar4 = 0x20;
  do {
    while (iVar9 = iVar4, *pcVar7 != '\0') {
      iVar4 = iVar9 + -2;
      for (pcVar3 = local_838 + iVar9 + -2; *pcVar3 == '\0'; pcVar3 = pcVar3 + -1) {
        iVar4 = iVar4 + -1;
      }
      *pcVar7 = *pcVar7 + -2;
      pcVar7[-1] = pcVar7[-1] + '\x01';
      local_838[iVar4 + 1] = local_838[iVar4 + 1] + '\x02';
      local_838[iVar4] = local_838[iVar4] + -1;
      iVar4 = iVar9;
    }
    iVar4 = iVar9 + -1;
    pcVar7 = pcVar7 + -1;
  } while (0x10 < iVar4);
  for (pcVar7 = local_838 + iVar9 + -1; *pcVar7 == '\0'; pcVar7 = pcVar7 + -1) {
    iVar4 = iVar4 + -1;
  }
  local_838[iVar4] = local_838[iVar4] + -1;
  FUN_0045ef78();
  iVar9 = 0;
  iVar4 = 1;
  do {
    iVar5 = 0;
    puVar8 = (undefined1 *)(param_2 + 0x11 + iVar9);
    piVar2 = local_814;
    do {
      if (iVar4 == *piVar2) {
        *puVar8 = (char)iVar5;
        iVar9 = iVar9 + 1;
        puVar8 = puVar8 + 1;
      }
      iVar5 = iVar5 + 1;
      piVar2 = piVar2 + 1;
    } while (iVar5 < 0x100);
    iVar4 = iVar4 + 1;
  } while (iVar4 < 0x21);
  *(undefined4 *)(param_2 + 0x111) = 0;
  return;
}



void FUN_0047243c(int *param_1)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int local_38;
  int *local_34;
  int local_30 [4];
  int local_20 [4];
  
  iVar2 = *(int *)((int)param_1 + 0x161);
  FUN_0045ef60();
  FUN_0045ef60();
  local_34 = (int *)((int)param_1 + 0xed);
  for (local_38 = 0; local_38 < *(int *)((int)param_1 + 0xe9); local_38 = local_38 + 1) {
    iVar5 = *(int *)(*local_34 + 0x14);
    iVar3 = *(int *)(*local_34 + 0x18);
    if (local_30[iVar5] == 0) {
      piVar1 = param_1 + iVar5 + 0x14;
      if (*piVar1 == 0) {
        iVar4 = FUN_0046be98((int)param_1);
        *piVar1 = iVar4;
      }
      FUN_00472258(param_1,*piVar1,*(int **)(iVar2 + 0x4c + iVar5 * 4));
      local_30[iVar5] = 1;
    }
    if (local_20[iVar3] == 0) {
      piVar1 = param_1 + iVar3 + 0x18;
      if (*piVar1 == 0) {
        iVar5 = FUN_0046be98((int)param_1);
        *piVar1 = iVar5;
      }
      FUN_00472258(param_1,*piVar1,*(int **)(iVar2 + 0x5c + iVar3 * 4));
      local_20[iVar3] = 1;
    }
    local_34 = local_34 + 1;
  }
  return;
}



void FUN_00472514(int param_1)

{
  undefined4 *puVar1;
  int iVar2;
  
  puVar1 = (undefined4 *)(*(code *)**(undefined4 **)(param_1 + 4))(param_1,1,0x6c);
  *(undefined4 **)(param_1 + 0x161) = puVar1;
  *puVar1 = &LAB_004719d4;
  iVar2 = 0;
  puVar1 = puVar1 + 0xf;
  do {
    *puVar1 = 0;
    puVar1[-4] = 0;
    puVar1[8] = 0;
    puVar1[4] = 0;
    iVar2 = iVar2 + 1;
    puVar1 = puVar1 + 1;
  } while (iVar2 < 4);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00472834(void)

{
  undefined4 uVar1;
  undefined4 *in_FS_OFFSET;
  undefined1 auStack_10 [12];
  
  uVar1 = *in_FS_OFFSET;
  *in_FS_OFFSET = auStack_10;
  _DAT_004768e0 = _DAT_004768e0 + 1;
  *in_FS_OFFSET = uVar1;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00472d40(void)

{
  int *piVar1;
  float10 *pfVar2;
  uint uVar3;
  int iVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  byte bVar5;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  byte bVar6;
  short sVar7;
  uint uVar8;
  ushort uVar9;
  undefined4 *in_FS_OFFSET;
  undefined4 *puStackY_10f68;
  byte abStackY_10f64 [256];
  int iStackY_10e64;
  uint uStackY_10e60;
  int iStackY_10e5c;
  int iStackY_10e58;
  float10 afStackY_10e54 [224];
  byte abStackY_10045 [57525];
  undefined4 uStackY_1f90;
  undefined4 uStack_1f80;
  undefined1 *puStack_1f7c;
  undefined1 *puStack_1f78;
  byte local_45;
  byte local_44;
  undefined4 *local_40;
  int local_3c;
  uint local_38;
  HANDLE local_34;
  int local_30;
  int local_2c;
  uint local_28;
  float10 local_24;
  float10 local_14;
  int *local_8;
  
  puStack_1f78 = &stack0xfffffffc;
  piVar1 = (int *)0x10;
  do {
    local_8 = piVar1;
    piVar1 = (int *)((int)local_8 + -1);
  } while ((int *)((int)local_8 + -1) != (int *)0x0);
  puStackY_10f68 = (undefined4 *)0x0;
  iStackY_10e5c = 0;
  iStackY_10e58 = 0;
  local_3c = 0;
  local_40 = (undefined4 *)0x0;
  puStack_1f7c = &LAB_00473222;
  uStack_1f80 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack_1f80;
  FUN_004489d8(*(int *)PTR_DAT_004757c0,(uint *)&DAT_00473238);
  sVar7 = 0x168;
  pfVar2 = afStackY_10e54;
  do {
    *(undefined4 *)pfVar2 = 0;
    *(undefined4 *)((int)pfVar2 + 4) = 0;
    *(undefined2 *)((int)pfVar2 + 8) = 0;
    pfVar2 = (float10 *)((int)pfVar2 + 10);
    sVar7 = sVar7 + -1;
  } while (sVar7 != 0);
  local_34 = (HANDLE)FUN_0040855c(DAT_004768e8,0);
  if (0 < (int)local_34) {
    local_30 = FUN_004086a4(local_34);
  }
  FUN_00408624(local_34);
  local_34 = (HANDLE)FUN_004086f4(DAT_004768e8);
  local_30 = local_30 + (int)local_34;
  FUN_00408708(DAT_004768e8,0x20);
  FUN_00405816((undefined4 *)&DAT_00476ac0,DAT_004768e8);
  FUN_00405ae9((undefined4 *)&DAT_00476ac0,1);
  local_28 = FUN_00405958((undefined4 *)&DAT_00476ac0);
  local_30 = local_30 + local_28;
  FUN_00408a00(DAT_004768e8,&iStackY_10e58);
  uVar3 = FUN_00403e5c(iStackY_10e58);
  if ((short)uVar3 != 0) {
    uVar8 = 1;
    do {
      FUN_00408a00(DAT_004768e8,&iStackY_10e5c);
      local_30 = local_30 + (uint)*(byte *)(iStackY_10e5c + -1 + (uVar8 & 0xffff));
      uVar8 = uVar8 + 1;
      uVar9 = (short)uVar3 - 1;
      uVar3 = (uint)uVar9;
    } while (uVar9 != 0);
  }
  iVar4 = FUN_00402908();
  if (iVar4 == 0) {
    local_2c = FUN_00402a60();
    FUN_0042acd8(*(int **)(DAT_004768e4 + 0x2f4),CONCAT31((int3)((uint)extraout_EDX >> 8),1),
                 extraout_ECX);
    iVar4 = 0;
    do {
      FUN_004058b8((undefined4 *)&DAT_00476ac0,abStackY_10045 + 1,0xffff,&local_38);
      uVar3 = 0;
      if (local_38 != 0) {
        while ((int)(uVar3 & 0xffff) < (int)local_38) {
          iVar4 = iVar4 + 1;
          uVar3 = uVar3 + 1;
          bVar6 = abStackY_10045[uVar3 & 0xffff];
          uStackY_10e60 = iVar4 * 0x50;
          uVar8 = FUN_00402a60();
          FUN_0045ed30(*(int **)(DAT_004768e4 + 0x2f4),uVar8 & 0xff);
          if (local_2c < iVar4) {
            iStackY_10e64 = (local_28 - local_2c) + 1;
            local_14 = (_DAT_00473250 * (float10)(int)((local_28 - iVar4) + 1)) /
                       (float10)iStackY_10e64;
          }
          else {
            local_14 = (_DAT_00473250 * (float10)iVar4) / (float10)local_2c;
          }
          uStackY_10e60 = (uint)bVar6;
          local_24 = _DAT_0047325c * (float10)uStackY_10e60;
          uVar8 = FUN_00402a60();
          *(float10 *)((int)afStackY_10e54 + (uVar8 & 0xffff) * 10) =
               local_14 + *(float10 *)((int)afStackY_10e54 + (uVar8 & 0xffff) * 10);
        }
      }
    } while (local_38 != 0);
  }
  FUN_0040591c(&DAT_00476ac0);
  FUN_00408708(DAT_004768e8,(DWORD)local_34);
  local_24 = (float10)(unkuint10)0;
  FUN_00403bdc(&local_3c);
  iVar4 = FUN_00402908();
  if (iVar4 == 0) {
    uVar9 = 0;
    pfVar2 = afStackY_10e54;
    do {
      uStackY_10e60 = (uint)uVar9 * 2 + 1;
      local_24 = local_24 + *pfVar2 * (float10)uStackY_10e60;
      *(undefined4 *)pfVar2 = 0;
      *(undefined4 *)((int)pfVar2 + 4) = 0;
      *(undefined2 *)((int)pfVar2 + 8) = 0;
      uVar9 = uVar9 + 1;
      pfVar2 = (float10 *)((int)pfVar2 + 10);
    } while (uVar9 != 0x168);
    FUN_0045ed30(*(int **)(DAT_004768e4 + 0x2f4),0x59);
    local_24 = local_24 + (float10)local_30;
    uStackY_1f90 = 0x473087;
    FUN_00405cb8(abStackY_10f64,extraout_EDX_00,extraout_ECX_00,local_24);
    FUN_00403e00(&local_3c,abStackY_10f64);
    FUN_00404064(local_3c,8,10,&local_3c);
    bVar6 = 1;
    FUN_00403bdc((int *)&local_40);
    local_44 = 0;
    while( true ) {
      iVar4 = FUN_00403e5c(local_3c);
      uVar3 = (uint)bVar6;
      if (iVar4 < (int)uVar3) break;
      if (local_44 == 0) {
        bVar6 = bVar6 + 1;
        local_45 = (*(char *)(local_3c + -1 + uVar3) + -0x30) * '\x02';
        local_44 = 4;
      }
      bVar5 = *(char *)(local_3c + -1 + (uint)bVar6) - 0x30;
      bVar6 = bVar6 + 1;
      local_44 = 4 - ('\x05' - local_44);
      FUN_00403d84((int *)&puStackY_10f68,
                   (uint)(byte)PTR_s_0123456789ABCDEFGHKLMNPRSTUVWXYZ_0047553c
                               [(byte)(local_45 | bVar5 >> (local_44 & 0x1f))]);
      FUN_00403e64((int *)&local_40,puStackY_10f68);
      local_45 = (byte)(bVar5 << (8 - local_44 & 0x1f)) >> 3;
      iVar4 = FUN_00403e5c((int)local_40);
      local_34 = (HANDLE)(iVar4 + 0x59);
      FUN_0045ed30(*(int **)(DAT_004768e4 + 0x2f4),(int)local_34);
    }
    FUN_004040ec((undefined4 *)&DAT_0047327c,(int *)&local_40,5);
    FUN_00403ea8(local_8,(undefined4 *)s__00473288,local_40);
    FUN_0045ed30(*(int **)(DAT_004768e4 + 0x2f4),100);
    FUN_0042acd8(*(int **)(DAT_004768e4 + 0x2f4),0,extraout_ECX_01);
  }
  else {
    FUN_00403bdc(local_8);
  }
  FUN_004489d8(*(int *)PTR_DAT_004757c0,(uint *)&DAT_00473298);
  *in_FS_OFFSET = uStack_1f80;
  puStack_1f78 = &LAB_00473229;
  puStack_1f7c = (undefined1 *)0x473204;
  FUN_00403bdc((int *)&puStackY_10f68);
  puStack_1f7c = (undefined1 *)0x473214;
  FUN_00403c00(&iStackY_10e5c,2);
  puStack_1f7c = (undefined1 *)0x473221;
  FUN_00403c00((int *)&local_40,2);
  return;
}



void entry(void)

{
  FUN_00406700(&LAB_00473988);
  FUN_00448dd4();
  FUN_004489d8(*(int *)PTR_DAT_004757c0,(uint *)&DAT_00473ba8);
  FUN_00448dec(*(int *)PTR_DAT_004757c0,(int)PTR_PTR_0047286c,(undefined4 *)PTR_DAT_0047589c);
  FUN_00448dec(*(int *)PTR_DAT_004757c0,(int)PTR_PTR_00472648,(undefined4 *)PTR_DAT_00475624);
  FUN_00448e6c(*(int *)PTR_DAT_004757c0);
                    // WARNING: Subroutine does not return
  FUN_00403aa4();
}